include "basics/pts.ma".
include "bool.ma".
include "connectives.ma".
include "div_mod.ma".
include "leibniz.ma".
include "logic.ma".
include "nat.ma".
include "primes.ma".
axiom gcd_aux : ((nat) ) -> ((nat) ) -> ((nat) ) -> (nat) .
axiom gcd_aux_body : ((nat) ) -> ((nat) ) -> ((nat) ) -> (nat) .
axiom axiom_gcd_aux : \forall (p:(nat) ). (((equal) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux) ) (p))) ((((filter_nat_type) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p)).
definition eq_gcd_aux : \forall (p:(nat) ). (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux) ) (p))) ((((filter_nat_type) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p)) := \lambda p : (nat) . ((((equal_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux) ) (p))) ((((filter_nat_type) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p))) ((axiom_gcd_aux) (p)).
definition sym_eq_gcd_aux : \forall (p:(nat) ). (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) ((((filter_nat_type) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p))) (((gcd_aux) ) (p)) := \lambda p : (nat) . ((((sym_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux) ) (p))) ((((filter_nat_type) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p))) ((eq_gcd_aux) (p)).
axiom axiom_gcd_aux_body_O : (((equal) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) ((O) ))) (\lambda m : (nat) . \lambda n : (nat) . m).
definition eq_gcd_aux_body_O : (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) ((O) ))) (\lambda m : (nat) . \lambda n : (nat) . m) := ((((equal_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) ((O) ))) (\lambda m : (nat) . \lambda n : (nat) . m)) (axiom_gcd_aux_body_O).
definition sym_eq_gcd_aux_body_O : (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (\lambda m : (nat) . \lambda n : (nat) . m)) (((gcd_aux_body) ) ((O) )) := ((((sym_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) ((O) ))) (\lambda m : (nat) . \lambda n : (nat) . m)) (eq_gcd_aux_body_O).
axiom axiom_gcd_aux_body_S : \forall (p:(nat) ). (((equal) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) (((S) ) (p)))) (\lambda m : (nat) . \lambda n : (nat) . ((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) ((((dividesb) ) (n)) (m))).
definition eq_gcd_aux_body_S : \forall (p:(nat) ). (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) (((S) ) (p)))) (\lambda m : (nat) . \lambda n : (nat) . ((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) ((((dividesb) ) (n)) (m))) := \lambda p : (nat) . ((((equal_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) (((S) ) (p)))) (\lambda m : (nat) . \lambda n : (nat) . ((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) ((((dividesb) ) (n)) (m)))) ((axiom_gcd_aux_body_S) (p)).
definition sym_eq_gcd_aux_body_S : \forall (p:(nat) ). (((leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (\lambda m : (nat) . \lambda n : (nat) . ((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) ((((dividesb) ) (n)) (m)))) (((gcd_aux_body) ) (((S) ) (p))) := \lambda p : (nat) . ((((sym_leibniz) (((nat) ) -> ((nat) ) -> (nat) )) (((gcd_aux_body) ) (((S) ) (p)))) (\lambda m : (nat) . \lambda n : (nat) . ((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) ((((dividesb) ) (n)) (m)))) ((eq_gcd_aux_body_S) (p)).
definition gcd : ((nat) ) -> ((nat) ) -> (nat)  := \lambda n : (nat) . \lambda m : (nat) . ((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((((leb) ) (n)) (m)).
definition commutative_gcd : \forall (n:(nat) ). \forall (m:(nat) ). (((eq) ((nat) )) ((((gcd) ) (n)) (m))) ((((gcd) ) (m)) (n)) := \lambda n : (nat) . \lambda m : (nat) . (((((leb_elim) (n)) (m)) (\lambda j__ : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (j__))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) ((((leb) ) (m)) (n))))) (\lambda lenm : (((le) ) (n)) (m). (((((((match_Or_prop) ((((lt) ) (n)) (m))) ((((eq) ((nat) )) (n)) (m))) ((((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) ))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) ((((leb) ) (m)) (n))))) (\lambda ltnm : (((lt) ) (n)) (m). (((((((eq_ind_r) ((bool) )) ((false) )) (\lambda x : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) ))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) (x)))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) (\lambda y : (nat) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) ))) (y))) ((((((eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) ))) (y))) (((refl) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) )))))) ((((leb) ) (m)) (n))) ((((not_le_to_leb_false) (m)) (n)) ((((lt_to_not_le) (n)) (m)) (ltnm)))))) (\lambda eqnm : (((eq) ((nat) )) (n)) (m). (((((((eq_ind_r) ((nat) )) (m)) (\lambda x : (nat) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (x)) (m)) (x))) (((((gcd_aux) ) (m)) (x)) (m))) ((true) ))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (x)) (m))) (((((gcd_aux) ) (x)) (m)) (x))) ((((leb) ) (m)) (x))))) (((((match_bool_prop) (\lambda j__ : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) ((true) ))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) (j__)))) (((refl) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) ((true) )))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) ((true) ))) (y))) ((((((eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) ((true) ))) (y))) (((refl) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (m)) (m))) (((((gcd_aux) ) (m)) (m)) (m))) ((true) )))))) ((((leb) ) (m)) (m)))) (n)) (eqnm)))) ((((le_to_or_lt_eq) (n)) (m)) (lenm))))) (\lambda notlenm : ((Not) ) ((((le) ) (n)) (m)). (((((((eq_ind_r) ((bool) )) ((true) )) (\lambda x : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((false) ))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) (x)))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (y)) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) ((true) )))) ((((((sym_eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (((((gcd_aux) ) (n)) (m)) (n))) (\lambda y : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (y))) ((((((eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (y))) ((((((eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((eq) ((nat) )) (y)) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((false) )))) (((refl) ((nat) )) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((false) )))))))) ((((leb) ) (m)) (n))) ((((le_to_leb_true) (m)) (n)) ((((((transitive_le) (m)) (((S) ) (m))) (n)) ((le_n_Sn) (m))) ((((not_le_to_lt) (n)) (m)) (notlenm)))))).
definition gcd_O_l : \forall (m:(nat) ). (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (m) := \lambda m : (nat) . (((((eq_match_bool_type_true) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) (\lambda y : (nat) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (y))) (((eq_leb_body_O) (\lambda y : ((nat) ) -> (bool) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) (((((eq_filter_nat_type_O) (((nat) ) -> (bool) )) ((leb_body) )) (\lambda y : ((nat) ) -> (bool) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) ((((eq_leb) ((O) )) (\lambda y : ((nat) ) -> (bool) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) (((eq_gcd_aux_body_O) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) (((((eq_filter_nat_type_O) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) ((((eq_gcd_aux) ((O) )) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((eq) ((nat) )) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) (((refl) ((nat) )) ((((gcd) ) ((O) )) (m))))))))).
definition divides_mod_to_divides : \forall (p:(nat) ). \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((divides) ) (p)) ((((mod) ) (m)) (n))) -> ((((divides) ) (p)) (n)) -> (((divides) ) (p)) (m) := \lambda p : (nat) . \lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda j_clearme : (((divides) ) (p)) ((((mod) ) (m)) (n)). ((((((match_divides_prop) (p)) ((((mod) ) (m)) (n))) (((((divides) ) (p)) (n)) -> (((divides) ) (p)) (m))) (\lambda q1 : (nat) . \lambda eq1 : (((eq) ((nat) )) ((((mod) ) (m)) (n))) ((((times) ) (p)) (q1)). (\lambda j_clearme0 : (((divides) ) (p)) (n). ((((((match_divides_prop) (p)) (n)) ((((divides) ) (p)) (m))) (\lambda q2 : (nat) . \lambda eq2 : (((eq) ((nat) )) (n)) ((((times) ) (p)) (q2)). (((((quotient) (p)) (m)) ((((plus) ) ((((times) ) (q2)) ((((div) ) (m)) (n)))) (q1))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((times) ) (q2)) ((((div) ) (m)) (n))))) ((((times) ) (p)) (q1)))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) (x))) (((((((eq_ind) ((nat) )) ((((mod) ) (m)) (n))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) ((((times) ) (p)) ((((times) ) (q2)) ((((div) ) (m)) (n))))) (x_1)))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (p)) (q2))) ((((div) ) (m)) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) (x_1)) ((((mod) ) (m)) (n))))) (((((((eq_ind) ((nat) )) (n)) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) ((((times) ) (x_1)) ((((div) ) (m)) (n)))) ((((mod) ) (m)) (n))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (m)) (n))) ((((times) ) (n)) ((((div) ) (m)) (n))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((refl) ((nat) )) (m))) ((((plus) ) ((((mod) ) (m)) (n))) ((((times) ) (n)) ((((div) ) (m)) (n))))) (((((((rewrite_l) ((nat) )) ((((plus) ) ((((times) ) (n)) ((((div) ) (m)) (n)))) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((((div) ) (m)) (n))) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) (j__)) ((((mod) ) (m)) (n))))) (((div_mod) (m)) (n))) ((((times) ) (n)) ((((div) ) (m)) (n)))) (((commutative_times) ((((div) ) (m)) (n))) (n)))) ((((plus) ) ((((mod) ) (m)) (n))) ((((times) ) (n)) ((((div) ) (m)) (n))))) (((commutative_plus) ((((times) ) (n)) ((((div) ) (m)) (n)))) ((((mod) ) (m)) (n)))))) ((((plus) ) ((((times) ) (n)) ((((div) ) (m)) (n)))) ((((mod) ) (m)) (n)))) (((commutative_plus) ((((times) ) (n)) ((((div) ) (m)) (n)))) ((((mod) ) (m)) (n))))) ((((times) ) (p)) (q2))) (eq2))) ((((times) ) (p)) ((((times) ) (q2)) ((((div) ) (m)) (n))))) ((((associative_times) (p)) (q2)) ((((div) ) (m)) (n))))) ((((times) ) (p)) (q1))) (eq1))) ((((times) ) (p)) ((((plus) ) ((((times) ) (q2)) ((((div) ) (m)) (n)))) (q1)))) ((((distributive_times_plus) (p)) ((((times) ) (q2)) ((((div) ) (m)) (n)))) (q1)))))) (j_clearme0))))) (j_clearme))).
definition divides_to_gcd_aux : \forall (p:(nat) ). \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (p)) -> ((((lt) ) ((O) )) (n)) -> ((((divides) ) (n)) (m)) -> (((eq) ((nat) )) (((((gcd_aux) ) (p)) (m)) (n))) (n) := \lambda p : (nat) . \lambda m : (nat) . \lambda n : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (((((lt_O_n_elim) (p)) (posp)) (\lambda j__ : (nat) . ((((lt) ) ((O) )) (n)) -> ((((divides) ) (n)) (m)) -> (((eq) ((nat) )) (((((gcd_aux) ) (j__)) (m)) (n))) (n))) (\lambda l : (nat) . (((sym_eq_gcd_aux) (((S) ) (l))) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> ((((divides) ) (n)) (m)) -> (((eq) ((nat) )) (((y) (m)) (n))) (n))) ((((((sym_eq_filter_nat_type_S) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (l)) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> ((((divides) ) (n)) (m)) -> (((eq) ((nat) )) (((y) (m)) (n))) (n))) ((((sym_eq_gcd_aux_body_S) (l)) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> ((((divides) ) (n)) (m)) -> (((eq) ((nat) )) (((y) (m)) (n))) (n))) (\lambda posn : (((lt) ) ((O) )) (n). (\lambda divnm : (((divides) ) (n)) (m). (((((((eq_ind_r) ((bool) )) ((true) )) (\lambda x : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (l)) (n)) ((((mod) ) (m)) (n)))) (x))) (n))) ((((((sym_eq_match_bool_type_true) ((nat) )) (n)) (((((gcd_aux) ) (l)) (n)) (((((match_nat_type) ((nat) )) (m)) (\lambda p0 : (nat) . ((((mod_aux) ) (m)) (m)) (p0))) (n)))) (\lambda y : (nat) . (((eq) ((nat) )) (y)) (n))) (((refl) ((nat) )) (n)))) ((((dividesb) ) (n)) (m))) (((((divides_to_dividesb_true) (n)) (m)) (posn)) (divnm))))))))).
definition not_divides_to_gcd_aux : \forall (p:(nat) ). \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> (((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) (((((gcd_aux) ) (((S) ) (p))) (m)) (n))) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n))) := \lambda p : (nat) . \lambda m : (nat) . \lambda n : (nat) . (((sym_eq_gcd_aux) (((S) ) (p))) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> (((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) (((y) (m)) (n))) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n))))) ((((((sym_eq_filter_nat_type_S) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (p)) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> (((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) (((y) (m)) (n))) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n))))) ((((sym_eq_gcd_aux_body_S) (p)) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . ((((lt) ) ((O) )) (n)) -> (((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) (((y) (m)) (n))) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n))))) (\lambda lenm : (((lt) ) ((O) )) (n). (\lambda divnm : ((Not) ) ((((divides) ) (n)) (m)). (((((((eq_ind_r) ((bool) )) ((false) )) (\lambda x : (bool) . (((eq) ((nat) )) (((((match_bool_type) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n)))) (x))) (((((gcd_aux) ) (p)) (n)) ((((mod) ) (m)) (n))))) ((((((sym_eq_match_bool_type_false) ((nat) )) (n)) (((((gcd_aux) ) (p)) (n)) (((((match_nat_type) ((nat) )) (m)) (\lambda p0 : (nat) . ((((mod_aux) ) (m)) (m)) (p0))) (n)))) (\lambda y : (nat) . (((eq) ((nat) )) (y)) (((((gcd_aux) ) (p)) (n)) (((((match_nat_type) ((nat) )) (m)) (\lambda p0 : (nat) . ((((mod_aux) ) (m)) (m)) (p0))) (n))))) (((refl) ((nat) )) (((((gcd_aux) ) (p)) (n)) (((((match_nat_type) ((nat) )) (m)) (\lambda p0 : (nat) . ((((mod_aux) ) (m)) (m)) (p0))) (n)))))) ((((dividesb) ) (n)) (m))) (((((not_divides_to_dividesb_false) (n)) (m)) (lenm)) (divnm))))))).
definition divides_gcd_aux_mn : \forall (p:(nat) ). \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (p)) -> (((And) ) ((((divides) ) (((((gcd_aux) ) (p)) (m)) (n))) (m))) ((((divides) ) (((((gcd_aux) ) (p)) (m)) (n))) (n)) := \lambda p : (nat) . ((((nat_ind) (\lambda j_x_365 : (nat) . \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (j_x_365)) -> (((And) ) ((((divides) ) (((((gcd_aux) ) (j_x_365)) (m)) (n))) (m))) ((((divides) ) (((((gcd_aux) ) (j_x_365)) (m)) (n))) (n)))) (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenO : (((le) ) (n)) ((O) ). (((falsity) ((((And) ) ((((divides) ) (((((gcd_aux) ) ((O) )) (m)) (n))) (m))) ((((divides) ) (((((gcd_aux) ) ((O) )) (m)) (n))) (n)))) ((((absurd) ((((lt) ) ((O) )) (n))) (posn)) ((((le_to_not_lt) (n)) ((O) )) (lenO)))))))) (\lambda q : (nat) . \lambda Hind : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> (((And) ) ((((divides) ) (((((gcd_aux) ) (q)) (m)) (n))) (m))) ((((divides) ) (((((gcd_aux) ) (q)) (m)) (n))) (n)). (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenS : (((le) ) (n)) (((S) ) (q)). (((((((match_Or_prop) ((((divides) ) (n)) (m))) (((Not) ) ((((divides) ) (n)) (m)))) ((((And) ) ((((divides) ) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) (m))) ((((divides) ) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) (n)))) (\lambda divnm : (((divides) ) (n)) (m). (((((((eq_ind_r) ((nat) )) (n)) (\lambda x : (nat) . (((And) ) ((((divides) ) (x)) (m))) ((((divides) ) (x)) (n)))) (((((conj) ((((divides) ) (n)) (m))) ((((divides) ) (n)) (n))) (divnm)) ((divides_n_n) (n)))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) (((((((divides_to_gcd_aux) (((S) ) (q))) (m)) (n)) ((lt_O_S) (q))) (posn)) (divnm))))) (\lambda ndivnm : ((Not) ) ((((divides) ) (n)) (m)). (((((((eq_ind_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda x : (nat) . (((And) ) ((((divides) ) (x)) (m))) ((((divides) ) (x)) (n)))) ((((((match_And_prop) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (n))) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) ((((mod) ) (m)) (n)))) ((((And) ) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (m))) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (n)))) (\lambda H : (((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (n). (\lambda H1 : (((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) ((((mod) ) (m)) (n)). (((((conj) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (m))) ((((divides) ) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (n))) (((((((divides_mod_to_divides) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (m)) (n)) (posn)) (H1)) (H))) (H))))) ((((((Hind) (n)) ((((mod) ) (m)) (n))) (((((((match_Or_prop) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) ((((eq) ((nat) )) ((O) )) ((((mod) ) (m)) (n)))) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) (\lambda auto : (((lt) ) ((O) )) ((((mod) ) (m)) (n)). (auto))) (\lambda modO : (((eq) ((nat) )) ((O) )) ((((mod) ) (m)) (n)). (((falsity) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) ((((absurd) ((((divides) ) (n)) (m))) (((((mod_O_to_divides) (n)) (m)) (posn)) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((O) ))) (((refl) ((nat) )) ((O) ))) ((((mod) ) (m)) (n))) (modO)))) (ndivnm))))) ((((le_to_or_lt_eq) ((O) )) ((((mod) ) (m)) (n))) ((le_O_n) ((((mod) ) (m)) (n)))))) ((((lt_to_le) ((((mod) ) (m)) (n))) (n)) ((((lt_mod_m_m) (m)) (n)) (posn)))) ((((le_S_S_to_le) ((((mod) ) (m)) (n))) (q)) ((((((transitive_le) (((S) ) ((((mod) ) (m)) (n)))) (n)) (((S) ) (q))) ((((lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) ((((((not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (((decidable_divides) (n)) (m)))))))) (p).
definition divides_gcd_nm : \forall (n:(nat) ). \forall (m:(nat) ). (((And) ) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) ((((gcd) ) (n)) (m))) (n)) := \lambda n : (nat) . \lambda m : (nat) . ((((((match_Or_prop) ((((lt) ) ((O) )) (n))) ((((eq) ((nat) )) ((O) )) (n))) ((((And) ) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) ((((gcd) ) (n)) (m))) (n)))) (\lambda posn : (((lt) ) ((O) )) (n). (((((((match_Or_prop) ((((lt) ) ((O) )) (m))) ((((eq) ((nat) )) ((O) )) (m))) ((((And) ) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) ((((gcd) ) (n)) (m))) (n)))) (\lambda posm : (((lt) ) ((O) )) (m). ((((((leb_elim) (n)) (m)) (\lambda j__ : (bool) . (((And) ) ((((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (j__))) (m))) ((((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (j__))) (n)))) ((((((sym_eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . ((((le) ) (n)) (m)) -> (((And) ) ((((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) ))) (m))) ((((divides) ) (y)) (n)))) ((((((sym_eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . ((((le) ) (n)) (m)) -> (((And) ) ((((divides) ) (y)) (m))) ((((divides) ) (((((gcd_aux) ) (n)) (m)) (n))) (n)))) (\lambda lenm : (((le) ) (n)) (m). (((((((divides_gcd_aux_mn) (n)) (m)) (n)) (posn)) (lenm)) ((le_n) (n))))))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((Not) ) ((((le) ) (n)) (m))) -> (((And) ) ((((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((false) ))) (m))) ((((divides) ) (y)) (n)))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((Not) ) ((((le) ) (n)) (m))) -> (((And) ) ((((divides) ) (y)) (m))) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (n)))) (\lambda notlt : ((Not) ) ((((le) ) (n)) (m)). ((((((match_And_prop) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (n))) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (m))) ((((And) ) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (m))) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (n)))) (\lambda auto : (((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (n). (\lambda auto' : (((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (m). (((((conj) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (m))) ((((divides) ) (((((gcd_aux) ) (m)) (n)) (m))) (n))) (auto')) (auto))))) (((((((divides_gcd_aux_mn) (m)) (n)) (m)) (posm)) ((((((transitive_le) (m)) (((S) ) (m))) (n)) ((le_n_Sn) (m))) ((((not_le_to_lt) (n)) (m)) (notlt)))) ((le_n) (m)))))))))) (\lambda eqmO : (((eq) ((nat) )) ((O) )) (m). (((((((eq_ind) ((nat) )) ((O) )) (\lambda x_1 : (nat) . (((And) ) ((((divides) ) ((((gcd) ) (n)) (x_1))) (x_1))) ((((divides) ) ((((gcd) ) (n)) (x_1))) (n)))) (((((conj) ((((divides) ) ((((gcd) ) (n)) ((O) ))) ((O) ))) ((((divides) ) ((((gcd) ) (n)) ((O) ))) (n))) ((divides_n_O) ((((gcd) ) (n)) ((O) )))) (((((eq_coerc) ((((divides) ) ((((gcd) ) (n)) ((O) ))) ((((gcd) ) (n)) ((O) )))) ((((divides) ) ((((gcd) ) (n)) ((O) ))) (n))) ((divides_n_n) ((((gcd) ) (n)) ((O) )))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((divides) ) ((((gcd) ) (n)) ((O) ))) (j__))) ((((divides) ) ((((gcd) ) (n)) ((O) ))) (n)))) (((refl) (Prop)) ((((divides) ) ((((gcd) ) (n)) ((O) ))) (n)))) ((((gcd) ) (n)) ((O) ))) (((((((rewrite_l) ((nat) )) ((((gcd) ) ((O) )) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((gcd) ) (n)) ((O) ))) (j__))) (((commutative_gcd) (n)) ((O) ))) (n)) ((gcd_O_l) (n))))))) (m)) (eqmO)))) ((((le_to_or_lt_eq) ((O) )) (m)) ((le_O_n) (m)))))) (\lambda eqnO : (((eq) ((nat) )) ((O) )) (n). (((((((eq_ind) ((nat) )) ((O) )) (\lambda x_1 : (nat) . (((And) ) ((((divides) ) ((((gcd) ) (x_1)) (m))) (m))) ((((divides) ) ((((gcd) ) (x_1)) (m))) (x_1)))) (((((conj) ((((divides) ) ((((gcd) ) ((O) )) (m))) (m))) ((((divides) ) ((((gcd) ) ((O) )) (m))) ((O) ))) ((((((eq_match_bool_type_true) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) (\lambda y : (nat) . (((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) ((O) )) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m)))) (y))) (((eq_leb_body_O) (\lambda y : ((nat) ) -> (bool) . (((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) ((O) )) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m)))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) (((((eq_filter_nat_type_O) (((nat) ) -> (bool) )) ((leb_body) )) (\lambda y : ((nat) ) -> (bool) . (((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) ((O) )) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m)))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) ((((eq_leb) ((O) )) (\lambda y : ((nat) ) -> (bool) . (((divides) ) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) ((O) )) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m)))) (((((match_bool_type) ((nat) )) (m)) (((((gcd_aux) ) (m)) ((O) )) (m))) ((y) (m))))) (((eq_gcd_aux_body_O) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((divides) ) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) (((((eq_filter_nat_type_O) (((nat) ) -> ((nat) ) -> (nat) )) ((gcd_aux_body) )) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((divides) ) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) ((((eq_gcd_aux) ((O) )) (\lambda y : ((nat) ) -> ((nat) ) -> (nat) . (((divides) ) ((((gcd) ) ((O) )) (m))) (((((match_bool_type) ((nat) )) (((y) (m)) ((O) ))) (((((gcd_aux) ) (m)) ((O) )) (m))) ((((leb) ) ((O) )) (m))))) ((divides_n_n) ((((gcd) ) ((O) )) (m))))))))))) ((divides_n_O) ((((gcd) ) ((O) )) (m))))) (n)) (eqnO)))) ((((le_to_or_lt_eq) ((O) )) (n)) ((le_O_n) (n))).
definition divides_gcd_l : \forall (n:(nat) ). \forall (m:(nat) ). (((divides) ) ((((gcd) ) (n)) (m))) (n) := \lambda n : (nat) . \lambda m : (nat) . (((proj2) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) ((((gcd) ) (n)) (m))) (n))) (((divides_gcd_nm) (n)) (m)).
definition divides_gcd_r : \forall (n:(nat) ). \forall (m:(nat) ). (((divides) ) ((((gcd) ) (n)) (m))) (m) := \lambda n : (nat) . \lambda m : (nat) . (((proj1) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) ((((gcd) ) (n)) (m))) (n))) (((divides_gcd_nm) (n)) (m)).
definition let_clause_1544 : \forall (p:(nat) ). \forall (q:(nat) ). (\forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (m)) (n)))))) -> \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (((S) ) (q))) -> (((Not) ) ((((divides) ) (n)) (m))) -> \forall (a:(nat) ). (((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))) -> \forall (b:(nat) ). ((((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) -> ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) -> (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (n)) (b)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))) := \lambda p : (nat) . \lambda q : (nat) . \lambda Hind : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (m)) (n))))). (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenS : (((le) ) (n)) (((S) ) (q)). (\lambda ndivnm : ((Not) ) ((((divides) ) (n)) (m)). (\lambda a : (nat) . \lambda j_clearme : ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))). (\lambda b : (nat) . \lambda j_clearme0 : (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))). (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))). (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) (j__))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) (H)) ((((times) ) (n)) (b))) (((commutative_times) (b)) (n)))))))))).
definition let_clause_15441 : \forall (p:(nat) ). \forall (q:(nat) ). (\forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (m)) (n)))))) -> \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (((S) ) (q))) -> (((Not) ) ((((divides) ) (n)) (m))) -> \forall (a:(nat) ). (((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))) -> \forall (b:(nat) ). ((((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) -> ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) -> (((eq) ((nat) )) ((((minus) ) ((((times) ) (n)) (b))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))) := \lambda p : (nat) . \lambda q : (nat) . \lambda Hind : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (m)) (n))))). (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenS : (((le) ) (n)) (((S) ) (q)). (\lambda ndivnm : ((Not) ) ((((divides) ) (n)) (m)). (\lambda a : (nat) . \lambda j_clearme : ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))). (\lambda b : (nat) . \lambda j_clearme0 : (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))). (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))). (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) (H)) ((((times) ) (n)) (b))) (((commutative_times) (b)) (n)))))))))).
definition eq_minus_gcd_aux : \forall (p:(nat) ). \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (p)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (p)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (p)) (m)) (n))))) := \lambda p : (nat) . ((((nat_ind) (\lambda j_x_365 : (nat) . \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (j_x_365)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (j_x_365)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (j_x_365)) (m)) (n))))))) (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenO : (((le) ) (n)) ((O) ). (((falsity) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) ((O) )) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) ((O) )) (m)) (n))))))) ((((absurd) ((((lt) ) ((O) )) (n))) (posn)) ((((le_to_not_lt) (n)) ((O) )) (lenO)))))))) (\lambda q : (nat) . \lambda Hind : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((le) ) (n)) (m)) -> ((((le) ) (n)) (q)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (m)) (n))))). (\lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda lenm : (((le) ) (n)) (m). (\lambda lenS : (((le) ) (n)) (((S) ) (q)). (((((((match_Or_prop) ((((divides) ) (n)) (m))) (((Not) ) ((((divides) ) (n)) (m)))) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))))))) (\lambda divnm : (((divides) ) (n)) (m). (((((((eq_ind_r) ((nat) )) (n)) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (x))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (x)))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b)) (m)))) (n))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (x)) (n)))) (n))))) (((S) ) ((O) ))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) (x)) (m)))) (n))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) (((S) ) ((O) ))) (n)))) (n)))) ((O) )) ((((or_introl) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) ((O) )) (m)))) (n))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((O) )) (m))) ((((times) ) (((S) ) ((O) ))) (n)))) (n))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (((S) ) ((O) )))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) (n))) (((((((rewrite_l) ((nat) )) ((((plus) ) (n)) ((((times) ) (n)) ((O) )))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) (n)) (j__))) ((((times) ) ((O) )) (m)))) (n))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) (n))) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) (j__))) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) (j__))) (n))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) (n))) (((refl) ((nat) )) (n))) ((((minus) ) (n)) ((O) ))) ((minus_n_O) (n)))) ((((times) ) (m)) ((O) ))) ((times_n_O) (m)))) ((((times) ) ((O) )) (m))) (((commutative_times) ((O) )) (m)))) ((((plus) ) (n)) ((O) ))) ((plus_n_O) (n)))) ((((times) ) (n)) ((O) ))) ((times_n_O) (n)))) ((((times) ) (n)) (((S) ) ((O) )))) (((times_n_Sm) (n)) ((O) )))) ((((times) ) (((S) ) ((O) ))) (n))) (((commutative_times) (((S) ) ((O) ))) (n))))))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) (((((((divides_to_gcd_aux) (((S) ) (q))) (m)) (n)) ((lt_O_S) (q))) (posn)) (divnm))))) (\lambda ndivnm : ((Not) ) ((((divides) ) (n)) (m)). (((((((eq_ind_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (x))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (x)))))) ((((((match_ex_prop) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))))) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))))) (\lambda a : (nat) . \lambda j_clearme : ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))). ((((((match_ex_prop) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))) (((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a0)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))))) (\lambda b : (nat) . \lambda j_clearme0 : (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))). (((((((match_Or_prop) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) (((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b0)) (m)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (a0)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))))))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))). (((((((eq_ind) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))) (\lambda x_1 : (nat) . ((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b0)) (m)))) (x_1))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (a0)) (n)))) (x_1)))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b0)) (m)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (x)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))))) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n))) ((((times) ) (x)) (m)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n)))))) (a)) ((((or_intror) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n))) ((((times) ) (a)) (m)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (b))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (x_1)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n))) ((((times) ) (b)) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) (x))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (x))) ((((plus) ) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n))) ((((times) ) (b)) (n))))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((plus) ) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n))))) ((((plus) ) (x)) ((((times) ) (b)) (n))))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((mod) ) (m)) (n))) ((((times) ) ((((div) ) (m)) (n))) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (x_1))) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) (x)) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind) ((nat) )) ((((minus) ) ((((minus) ) ((((plus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (b)) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (x_1)) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) ((((minus) ) (x_1)) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((minus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) (x_1)) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((div) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (a)) (j__))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) (j__)) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((div) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) ((((times) ) (a)) (j__)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (j__))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) (j__)) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_l) ((nat) )) ((((times) ) (a)) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) (j__))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (b)) (n))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) (j__)))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (j__))) (((refl) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (n)) (b)))) (((((((((((((((let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (j_clearme)) (b)) (j_clearme0)) (H)))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))) ((((minus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (n)) (b)))) (((((((((((((((let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (j_clearme)) (b)) (j_clearme0)) (H)))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))) ((((plus) ) ((O) )) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((plus_O_n) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n)))))) ((minus_n_n) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))))) ((((times) ) (a)) ((((times) ) (n)) ((((div) ) (m)) (n))))) ((((times_times) (a)) (n)) ((((div) ) (m)) (n))))) ((((times) ) ((((div) ) (m)) (n))) (n))) (((commutative_times) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) (n)) ((((div) ) (m)) (n))))) ((((times_times) (a)) (n)) ((((div) ) (m)) (n))))) ((((times) ) ((((div) ) (m)) (n))) (n))) (((commutative_times) ((((div) ) (m)) (n))) (n)))) ((((minus) ) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) (((((plus_minus) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((le_n) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))))) ((((plus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) (((commutative_plus) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((minus) ) ((((plus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))))) ((((minus_plus) ((((plus) ) ((((times) ) (a)) ((((mod) ) (m)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))))) ((((times) ) (a)) ((((plus) ) ((((mod) ) (m)) (n))) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((distributive_times_plus) (a)) ((((mod) ) (m)) (n))) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n)))) (((commutative_plus) ((((mod) ) (m)) (n))) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n))) ((((associative_times) (a)) ((((div) ) (m)) (n))) (n)))) (m)) (((div_mod) (m)) (n)))) ((((times) ) ((((plus) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (b))) (n))) ((((distributive_times_plus_r) (n)) ((((times) ) (a)) ((((div) ) (m)) (n)))) (b)))) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (((commutative_plus) ((((times) ) (a)) ((((div) ) (m)) (n)))) (b))))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (H)))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))). (((((((eq_ind) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (\lambda x_1 : (nat) . ((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b0)) (m)))) (x_1))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (a0)) (n)))) (x_1)))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b0)) (m)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (x)) (n)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))))) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n))) ((((times) ) (x)) (m)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n))))))) (a)) ((((or_introl) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n))) ((((times) ) (a)) (m)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) (x)) ((((times) ) (a)) (m)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n)))) ((((times) ) (a)) (x)))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n)))) (x))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((times) ) (b)) (n))) (x))) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind) ((nat) )) ((((minus) ) ((((minus) ) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (x_1)) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) ((((minus) ) (x_1)) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((eq_ind) ((nat) )) ((((plus) ) ((((minus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (b)) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((minus) ) (x_1)) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((div) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (a)) (j__))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) (j__)) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((div) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) ((((times) ) (a)) (j__)))) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (j__))) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) (j__)) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((O) )) (j__))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_l) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (a)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) ((((minus) ) (j__)) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (j__))) (((refl) ((nat) )) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n))))) ((((minus) ) ((((times) ) (n)) (b))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((((((((((((let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (j_clearme)) (b)) (j_clearme0)) (H)))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))) ((((minus) ) ((((times) ) (n)) (b))) ((((times) ) (a)) ((((mod) ) (m)) (n))))) (((((((((((((((let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (j_clearme)) (b)) (j_clearme0)) (H)))) ((((plus) ) ((O) )) ((((times) ) (n)) (b)))) ((plus_O_n) ((((times) ) (n)) (b))))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))) ((((minus) ) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n)))))) ((minus_n_n) ((((times) ) (n)) ((((times) ) (a)) ((((div) ) (m)) (n))))))) ((((times) ) (a)) ((((times) ) (n)) ((((div) ) (m)) (n))))) ((((times_times) (a)) (n)) ((((div) ) (m)) (n))))) ((((times) ) ((((div) ) (m)) (n))) (n))) (((commutative_times) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) (n)) ((((div) ) (m)) (n))))) ((((times_times) (a)) (n)) ((((div) ) (m)) (n))))) ((((times) ) ((((div) ) (m)) (n))) (n))) (((commutative_times) ((((div) ) (m)) (n))) (n)))) ((((minus) ) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) (((((plus_minus) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))) ((le_n) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))))) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) (((commutative_plus) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (b)) (n))))) ((((minus) ) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((plus) ) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((minus_plus) ((((plus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))))) ((((times) ) (a)) ((((times) ) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((mod) ) (m)) (n)))))) ((((times) ) ((((times) ) (a)) ((((div) ) (m)) (n)))) (n))) ((((associative_times) (a)) ((((div) ) (m)) (n))) (n)))) ((((times) ) (a)) ((((plus) ) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n))))) ((((distributive_times_plus) (a)) ((((times) ) ((((div) ) (m)) (n))) (n))) ((((mod) ) (m)) (n))))) (m)) (((div_mod) (m)) (n)))) ((((times) ) ((((plus) ) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))) (n))) ((((distributive_times_plus_r) (n)) (b)) ((((times) ) (a)) ((((div) ) (m)) (n))))))))) (((((gcd_aux) ) (q)) (n)) ((((mod) ) (m)) (n)))) (H)))) (j_clearme0)))) (j_clearme)))) ((((((Hind) (n)) ((((mod) ) (m)) (n))) (((((((match_Or_prop) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) ((((eq) ((nat) )) ((O) )) ((((mod) ) (m)) (n)))) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) (\lambda auto : (((lt) ) ((O) )) ((((mod) ) (m)) (n)). (auto))) (\lambda modO : (((eq) ((nat) )) ((O) )) ((((mod) ) (m)) (n)). (((falsity) ((((lt) ) ((O) )) ((((mod) ) (m)) (n)))) ((((absurd) ((((divides) ) (n)) (m))) (((((mod_O_to_divides) (n)) (m)) (posn)) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((O) ))) (((refl) ((nat) )) ((O) ))) ((((mod) ) (m)) (n))) (modO)))) (ndivnm))))) ((((le_to_or_lt_eq) ((O) )) ((((mod) ) (m)) (n))) ((le_O_n) ((((mod) ) (m)) (n)))))) ((((lt_to_le) ((((mod) ) (m)) (n))) (n)) ((((lt_mod_m_m) (m)) (n)) (posn)))) ((((le_S_S_to_le) ((((mod) ) (m)) (n))) (q)) ((((((transitive_le) (((S) ) ((((mod) ) (m)) (n)))) (n)) (((S) ) (q))) ((((lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) (((((gcd_aux) ) (((S) ) (q))) (m)) (n))) ((((((not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (((decidable_divides) (n)) (m)))))))) (p).
definition let_clause_1549 : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((eq) ((nat) )) ((O) )) (m)) -> \forall (x1106:(nat) ). (((eq) ((nat) )) (x1106)) ((((minus) ) (x1106)) (m)) := \lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda eqm0 : (((eq) ((nat) )) ((O) )) (m). (\lambda x1106 : (nat) . ((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (x1106)) ((((minus) ) (x1106)) (j__)))) ((minus_n_O) (x1106))) (m)) (eqm0))).
definition let_clause_15491 : \forall (m:(nat) ). \forall (n:(nat) ). ((((eq) ((nat) )) ((O) )) (n)) -> \forall (x1106:(nat) ). (((eq) ((nat) )) (x1106)) ((((minus) ) (x1106)) (n)) := \lambda m : (nat) . \lambda n : (nat) . \lambda eqn0 : (((eq) ((nat) )) ((O) )) (n). (\lambda x1106 : (nat) . ((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (x1106)) ((((minus) ) (x1106)) (j__)))) ((minus_n_O) (x1106))) (n)) (eqn0)).
definition let_clause_1551 : \forall (m:(nat) ). \forall (n:(nat) ). ((((eq) ((nat) )) ((O) )) (n)) -> \forall (x347:(nat) ). (((eq) ((nat) )) (n)) ((((times) ) (x347)) (n)) := \lambda m : (nat) . \lambda n : (nat) . \lambda eqn0 : (((eq) ((nat) )) ((O) )) (n). (\lambda x347 : (nat) . ((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((times) ) (x347)) (j__)))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) (x347)) ((O) )))) ((times_n_O) (x347))) (n)) (eqn0))) (n)) (eqn0)).
definition eq_minus_gcd : \forall (m:(nat) ). \forall (n:(nat) ). ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) ((((gcd) ) (n)) (m))))) := \lambda m : (nat) . \lambda n : (nat) . ((((((match_Or_prop) ((((lt) ) ((O) )) (n))) ((((eq) ((nat) )) ((O) )) (n))) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) ((((gcd) ) (n)) (m))))))) (\lambda posn : (((lt) ) ((O) )) (n). (((((((match_Or_prop) ((((lt) ) ((O) )) (m))) ((((eq) ((nat) )) ((O) )) (m))) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) ((((gcd) ) (n)) (m))))))) (\lambda posm : (((lt) ) ((O) )) (m). ((((((leb_elim) (n)) (m)) (\lambda j__ : (bool) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (j__)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (j__))))))) ((((((sym_eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . ((((le) ) (n)) (m)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((true) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (y)))))) ((((((sym_eq_match_bool_type_true) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . ((((le) ) (n)) (m)) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (y))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (n)) (m)) (n))))))) (\lambda lenm : (((le) ) (n)) (m). (((((((eq_minus_gcd_aux) (n)) (m)) (n)) (posn)) (lenm)) ((le_n) (n))))))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((Not) ) ((((le) ) (n)) (m))) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((match_bool_type) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) ((false) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (y)))))) ((((((sym_eq_match_bool_type_false) ((nat) )) (((((gcd_aux) ) (n)) (m)) (n))) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda y : (nat) . (((Not) ) ((((le) ) (n)) (m))) -> ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (y))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))))) (\lambda nlenm : ((Not) ) ((((le) ) (n)) (m)). ((((((match_ex_prop) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))))) (((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))))) (\lambda a : (nat) . \lambda j_clearme : ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))). ((((((match_ex_prop) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m))))) (((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a0)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))))) (\lambda b : (nat) . \lambda j_clearme0 : (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m))). (((((((match_Or_prop) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) (((ex) ((nat) )) (\lambda a0 : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a0)) (n))) ((((times) ) (b0)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (a0)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)). (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b0)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (x)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))))) (b)) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (x)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))) (a)) ((((or_intror) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) (a))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (m)) (a))) (j__))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) (((((gcd_aux) ) (m)) (n)) (m)))) (((refl) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m)))) ((((minus) ) ((((times) ) (m)) (a))) ((((times) ) (n)) (b)))) (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (m)) (a))) (j__))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_l) ((nat) )) ((((times) ) (a)) (m))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) (H)) ((((times) ) (m)) (a))) (((commutative_times) (a)) (m)))) ((((times) ) (n)) (b))) (((commutative_times) (b)) (n))))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))) ((((times) ) (a)) (m))) (((commutative_times) (a)) (m)))))))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)). (((((ex_intro) ((nat) )) (\lambda y : (nat) . ((ex) ((nat) )) (\lambda b0 : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (y)) (n))) ((((times) ) (b0)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b0)) (m))) ((((times) ) (y)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))))) (b)) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (x)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m))))) (a)) ((((or_introl) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (n))) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (m))) ((((times) ) (b)) (n)))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (b))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) (a))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (n)) (b))) (j__))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_r) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) (((((gcd_aux) ) (m)) (n)) (m)))) (((refl) ((nat) )) (((((gcd_aux) ) (m)) (n)) (m)))) ((((minus) ) ((((times) ) (n)) (b))) ((((times) ) (m)) (a)))) (((((((rewrite_l) ((nat) )) ((((times) ) (a)) (m))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (n)) (b))) (j__))) (((((gcd_aux) ) (m)) (n)) (m)))) (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (a)) (m)))) (((((gcd_aux) ) (m)) (n)) (m)))) (H)) ((((times) ) (n)) (b))) (((commutative_times) (b)) (n)))) ((((times) ) (m)) (a))) (((commutative_times) (a)) (m))))) ((((times) ) (a)) (m))) (((commutative_times) (a)) (m)))) ((((times) ) (b)) (n))) (((commutative_times) (b)) (n)))))))) (j_clearme0)))) (j_clearme)))) (((((((eq_minus_gcd_aux) (m)) (n)) (m)) (posm)) ((((((transitive_le) (m)) (((S) ) (m))) (n)) ((le_n_Sn) (m))) ((((not_le_to_lt) (n)) (m)) (nlenm)))) ((le_n) (m)))))))))) (\lambda eqm0 : (((eq) ((nat) )) ((O) )) (m). (((((((eq_ind_r) ((nat) )) (m)) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) ((((gcd) ) (n)) (m))))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (x)) (n)))) ((((gcd) ) (n)) (m)))))) (((S) ) ((O) ))) (((((ex_intro) ((nat) )) (\lambda y : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) (y)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (y)) (m))) ((((times) ) (((S) ) ((O) ))) (n)))) ((((gcd) ) (n)) (m))))) ((O) )) ((((or_introl) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((O) )) (m))) ((((times) ) (((S) ) ((O) ))) (n)))) ((((gcd) ) (n)) (m)))) (((((eq_coerc) ((((eq) ((nat) )) (n)) ((((minus) ) (n)) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m)))) ((minus_n_O) (n))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) ((((minus) ) (n)) (j__)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (j__))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (n))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) (j__))) (n))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (((S) ) (m)))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) ((((plus) ) (n)) ((((times) ) (n)) (m)))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) (n))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) ((((plus) ) (n)) (j__))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) ((((plus) ) (n)) (j__))) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) ((((plus) ) (m)) (n))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (n)) ((((times) ) (j__)) (m)))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) ((((minus) ) (n)) (j__))) ((((gcd) ) (n)) (m))))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) (j__)) ((((gcd) ) (n)) (m))))) (((((((rewrite_r) ((nat) )) ((((gcd) ) (m)) (n))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) (n)) (j__)))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (n)) (n))) ((((eq) ((nat) )) (n)) (j__)))) (((refl) (Prop)) ((((eq) ((nat) )) (n)) (n)))) ((((gcd) ) (m)) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((gcd) ) (j__)) (n))) (n))) ((gcd_O_l) (n))) (m)) (eqm0)))) ((((gcd) ) (n)) (m))) (((commutative_gcd) (n)) (m)))) ((((minus) ) (n)) (m))) ((((((let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) ((((times) ) (m)) (m))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (m)) (j__)))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) (m)) ((O) )))) ((times_n_O) (m))) (m)) (eqm0))) (m)) (eqm0)))) ((O) )) (eqm0))) ((((plus) ) (m)) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (j__)) (n)))) ((plus_O_n) (n))) (m)) (eqm0)))) ((((plus) ) (n)) (m))) (((commutative_plus) (n)) (m)))) ((((times) ) (m)) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (j__)) (n)))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((O) )) (n)))) ((times_O_n) (n))) (m)) (eqm0))) (m)) (eqm0)))) ((((times) ) (n)) (m))) (((commutative_times) (n)) (m)))) ((((times) ) (n)) (((S) ) (m)))) (((times_n_Sm) (n)) (m)))) ((((times) ) (((S) ) (m))) (n))) (((commutative_times) (((S) ) (m))) (n)))) ((O) )) (eqm0))) ((((minus) ) (n)) (m))) ((((((let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) ((O) )) (eqm0))))))) ((O) )) (eqm0)))) ((((le_to_or_lt_eq) ((O) )) (m)) ((le_O_n) (m)))))) (\lambda eqn0 : (((eq) ((nat) )) ((O) )) (n). (((((((eq_ind_r) ((nat) )) (n)) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (n)))) ((((gcd) ) (n)) (m))))))) (((((ex_intro) ((nat) )) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (n))) ((((times) ) (b)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (x)) (n)))) ((((gcd) ) (n)) (m)))))) ((O) )) (((((ex_intro) ((nat) )) (\lambda x : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((O) )) (n))) ((((times) ) (x)) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (x)) (m))) ((((times) ) ((O) )) (n)))) ((((gcd) ) (n)) (m))))) (((S) ) ((O) ))) ((((or_intror) ((((eq) ((nat) )) ((((minus) ) ((((times) ) ((O) )) (n))) ((((times) ) (((S) ) ((O) ))) (m)))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (m))) ((((times) ) ((O) )) (n)))) ((((gcd) ) (n)) (m)))) (((((eq_coerc) ((((eq) ((nat) )) (m)) ((((minus) ) (m)) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (m))) ((((times) ) ((O) )) (n)))) ((((gcd) ) (n)) (m)))) ((minus_n_O) (m))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) ((((minus) ) (m)) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (m))) ((((times) ) ((O) )) (n)))) (j__)))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) ((((minus) ) (m)) (j__)))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (m))) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (j__))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) ((O) ))) (m))) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (((S) ) (j__))) (m))) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) (((S) ) (n)))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_l) ((nat) )) ((((plus) ) (m)) ((((times) ) (m)) (n)))) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) ((((plus) ) (m)) (j__))) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) ((O) )) (n)))) (m)))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) (m)) ((((times) ) (j__)) (n)))) (m)))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) ((((minus) ) (m)) (j__))) (m)))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((eq) ((nat) )) (m)) (m))) ((((eq) ((nat) )) (j__)) (m)))) (((refl) (Prop)) ((((eq) ((nat) )) (m)) (m)))) ((((minus) ) (m)) (n))) (((((let_clause_15491) (m)) (n)) (eqn0)) (m)))) ((((times) ) (n)) (n))) (((((let_clause_1551) (m)) (n)) (eqn0)) (n)))) ((O) )) (eqn0))) ((((plus) ) (m)) (n))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) (m)) (j__)))) ((plus_n_O) (m))) (n)) (eqn0)))) ((((times) ) (m)) (n))) (((((let_clause_1551) (m)) (n)) (eqn0)) (m)))) ((((times) ) (m)) (((S) ) (n)))) (((times_n_Sm) (m)) (n)))) ((((times) ) (((S) ) (n))) (m))) (((commutative_times) (((S) ) (n))) (m)))) ((O) )) (eqn0))) ((((minus) ) (m)) (n))) (((((let_clause_15491) (m)) (n)) (eqn0)) (m)))) ((O) )) (eqn0))) ((((gcd) ) (n)) (m))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((gcd) ) (j__)) (m))) (m))) ((gcd_O_l) (m))) (n)) (eqn0)))))))) ((O) )) (eqn0)))) ((((le_to_or_lt_eq) ((O) )) (n)) ((le_O_n) (n))).
definition let_clause_1545 : \forall (m:(nat) ). \forall (n:(nat) ). ((((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) )) -> ((((divides) ) ((O) )) (n)) -> \forall (q1:(nat) ). ((((eq) ((nat) )) (n)) ((((times) ) ((O) )) (q1))) -> ((((divides) ) ((O) )) (m)) -> \forall (q2:(nat) ). ((((eq) ((nat) )) (m)) ((((times) ) ((O) )) (q2))) -> (((eq) ((nat) )) (m)) ((O) ) := \lambda m : (nat) . \lambda n : (nat) . \lambda H : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) ). (\lambda j_clearme : (((divides) ) ((O) )) (n). (\lambda q1 : (nat) . \lambda H1 : (((eq) ((nat) )) (n)) ((((times) ) ((O) )) (q1)). (\lambda j_clearme0 : (((divides) ) ((O) )) (m). (\lambda q2 : (nat) . \lambda H2 : (((eq) ((nat) )) (m)) ((((times) ) ((O) )) (q2)). (((((((rewrite_r) ((nat) )) ((((times) ) (q2)) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((O) )) (q2))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (H2)) ((((times) ) (q2)) ((O) ))) (((commutative_times) ((O) )) (q2)))) ((O) )) ((times_n_O) (q2))))))).
definition gcd_O_to_eq_O : \forall (m:(nat) ). \forall (n:(nat) ). ((((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) )) -> (((And) ) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) )) := \lambda m : (nat) . \lambda n : (nat) . \lambda H : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) ). ((((((match_And_prop) ((((divides) ) ((O) )) (n))) ((((divides) ) ((O) )) (m))) ((((And) ) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) )))) (\lambda j_clearme : (((divides) ) ((O) )) (n). ((((((match_divides_prop) ((O) )) (n)) (((((divides) ) ((O) )) (m)) -> (((And) ) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) )))) (\lambda q1 : (nat) . \lambda H1 : (((eq) ((nat) )) (n)) ((((times) ) ((O) )) (q1)). (\lambda j_clearme0 : (((divides) ) ((O) )) (m). ((((((match_divides_prop) ((O) )) (m)) ((((And) ) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) )))) (\lambda q2 : (nat) . \lambda H2 : (((eq) ((nat) )) (m)) ((((times) ) ((O) )) (q2)). (((((conj) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) ))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((refl) ((nat) )) (m))) ((O) )) (((((((rewrite_r) ((nat) )) ((((times) ) (q2)) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((O) )) (q2))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (H2)) ((((times) ) (q2)) ((O) ))) (((commutative_times) ((O) )) (q2)))) ((O) )) ((times_n_O) (q2))))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((O) ))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((refl) ((nat) )) (m))) ((O) )) ((((((((((let_clause_1545) (m)) (n)) (H)) (j_clearme)) (q1)) (H1)) (j_clearme0)) (q2)) (H2)))) (n)) (((((((rewrite_r) ((nat) )) ((((times) ) (m)) (q1))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) (j__))) (((((((rewrite_r) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((times) ) (j__)) (q1)))) (H1)) (m)) ((((((((((let_clause_1545) (m)) (n)) (H)) (j_clearme)) (q1)) (H1)) (j_clearme0)) (q2)) (H2)))) (m)) (((((((rewrite_r) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (j__)) (q1)))) (((((((rewrite_r) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((O) )) (q1)))) ((times_O_n) (q1))) (m)) ((((((((((let_clause_1545) (m)) (n)) (H)) (j_clearme)) (q1)) (H1)) (j_clearme0)) (q2)) (H2)))) (m)) ((((((((((let_clause_1545) (m)) (n)) (H)) (j_clearme)) (q1)) (H1)) (j_clearme0)) (q2)) (H2)))))))) (j_clearme0))))) (j_clearme)))) (((((((eq_ind) ((nat) )) ((((gcd) ) (m)) (n))) (\lambda x_1 : (nat) . (((And) ) ((((divides) ) (x_1)) (n))) ((((divides) ) (x_1)) (m)))) (((divides_gcd_nm) (m)) (n))) ((O) )) (H))).
definition let_clause_1571 : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) )) -> ((((eq) ((nat) )) (m)) ((O) )) -> ((((eq) ((nat) )) (n)) ((O) )) -> (((eq) ((nat) )) (m)) (n) := \lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda H : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) ). (\lambda auto : (((eq) ((nat) )) (m)) ((O) ). (\lambda auto' : (((eq) ((nat) )) (n)) ((O) ). (((((((rewrite_r) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (auto)) (n)) (auto'))))).
definition let_clause_1572 : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> ((((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) )) -> ((((eq) ((nat) )) (m)) ((O) )) -> ((((eq) ((nat) )) (n)) ((O) )) -> (((eq) ((nat) )) (m)) ((O) ) := \lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (\lambda H : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) ). (\lambda auto : (((eq) ((nat) )) (m)) ((O) ). (\lambda auto' : (((eq) ((nat) )) (n)) ((O) ). (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((O) ))) (auto')) (m)) (((((((let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto')))))).
definition lt_O_gcd : \forall (m:(nat) ). \forall (n:(nat) ). ((((lt) ) ((O) )) (n)) -> (((lt) ) ((O) )) ((((gcd) ) (m)) (n)) := \lambda m : (nat) . \lambda n : (nat) . \lambda posn : (((lt) ) ((O) )) (n). (((((nat_case) ((((gcd) ) (m)) (n))) (((lt) ) ((O) ))) (\lambda H : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) ((O) ). ((((((match_And_prop) ((((eq) ((nat) )) (m)) ((O) ))) ((((eq) ((nat) )) (n)) ((O) ))) ((((lt) ) ((O) )) ((O) ))) (\lambda auto : (((eq) ((nat) )) (m)) ((O) ). (\lambda auto' : (((eq) ((nat) )) (n)) ((O) ). (((((eq_coerc) ((((lt) ) ((O) )) (n))) ((((lt) ) ((O) )) ((O) ))) (posn)) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((lt) ) (j__)) (n))) ((((lt) ) ((O) )) ((O) )))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((lt) ) (m)) (j__))) ((((lt) ) ((O) )) ((O) )))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((lt) ) (m)) (m))) ((((lt) ) (j__)) ((O) )))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((lt) ) (m)) (m))) ((((lt) ) (m)) (j__)))) (((refl) (Prop)) ((((lt) ) (m)) (m)))) ((O) )) (((((((let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) ((O) )) (((((((let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) (n)) (((((((let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto')))) ((O) )) (((((((let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto'))))))) ((((gcd_O_to_eq_O) (m)) (n)) (H))))) (\lambda m0 : (nat) . \lambda auto : (((eq) ((nat) )) ((((gcd) ) (m)) (n))) (((S) ) (m0)). ((lt_O_S) (m0)))).
definition prime_to_gcd_1 : \forall (n:(nat) ). \forall (m:(nat) ). (((prime) ) (n)) -> (((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) ((((gcd) ) (n)) (m))) (((S) ) ((O) )) := \lambda n : (nat) . \lambda m : (nat) . \lambda j_clearme : ((prime) ) (n). ((((((match_And_prop) ((((lt) ) (((S) ) ((O) ))) (n))) (\forall (m1:(nat) ). ((((divides) ) (m1)) (n)) -> ((((lt) ) (((S) ) ((O) ))) (m1)) -> (((eq) ((nat) )) (m1)) (n))) ((((Not) ) ((((divides) ) (n)) (m))) -> (((eq) ((nat) )) ((((gcd) ) (n)) (m))) (((S) ) ((O) )))) (\lambda lt1n : (((lt) ) (((S) ) ((O) ))) (n). (\lambda primen : \forall (m0:(nat) ). ((((divides) ) (m0)) (n)) -> ((((lt) ) (((S) ) ((O) ))) (m0)) -> (((eq) ((nat) )) (m0)) (n). (\lambda ndivnm : ((Not) ) ((((divides) ) (n)) (m)). (((((le_to_le_to_eq) ((((gcd) ) (n)) (m))) (((S) ) ((O) ))) ((((not_lt_to_le) (((S) ) ((O) ))) ((((gcd) ) (n)) (m))) (((((not_to_not) ((((lt) ) (((S) ) ((O) ))) ((((gcd) ) (n)) (m)))) ((((eq) ((nat) )) ((((gcd) ) (n)) (m))) (n))) (((primen) ((((gcd) ) (n)) (m))) (((divides_gcd_l) (n)) (m)))) (((((not_to_not) ((((eq) ((nat) )) ((((gcd) ) (n)) (m))) (n))) ((((divides) ) (n)) (m))) (\lambda auto : (((eq) ((nat) )) ((((gcd) ) (n)) (m))) (n). (((((eq_coerc) ((((divides) ) ((((gcd) ) (n)) (m))) (m))) ((((divides) ) (n)) (m))) (((divides_gcd_r) (n)) (m))) (((((((rewrite_r) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((divides) ) (j__)) (m))) ((((divides) ) (n)) (m)))) (((refl) (Prop)) ((((divides) ) (n)) (m)))) ((((gcd) ) (n)) (m))) (auto))))) (ndivnm))))) ((((lt_O_gcd) (n)) (m)) (((((not_eq_to_le_to_lt) ((O) )) (m)) (((((not_to_not) ((((eq) ((nat) )) ((O) )) (m))) ((((divides) ) (n)) (m))) (\lambda auto : (((eq) ((nat) )) ((O) )) (m). (((((eq_coerc) ((((divides) ) (n)) ((O) ))) ((((divides) ) (n)) (m))) ((divides_n_O) (n))) (((((((rewrite_r) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) (Prop)) ((((divides) ) (n)) (j__))) ((((divides) ) (n)) (m)))) (((refl) (Prop)) ((((divides) ) (n)) (m)))) ((O) )) (auto))))) (ndivnm))) ((le_O_n) (m))))))))) (j_clearme)).
definition divides_times_to_divides : \forall (p:(nat) ). \forall (n:(nat) ). \forall (m:(nat) ). (((prime) ) (p)) -> ((((divides) ) (p)) ((((times) ) (n)) (m))) -> (((Or) ) ((((divides) ) (p)) (n))) ((((divides) ) (p)) (m)) := \lambda p : (nat) . \lambda n : (nat) . \lambda m : (nat) . \lambda primp : ((prime) ) (p). (\lambda j_clearme : (((divides) ) (p)) ((((times) ) (n)) (m)). ((((((match_divides_prop) (p)) ((((times) ) (n)) (m))) ((((Or) ) ((((divides) ) (p)) (n))) ((((divides) ) (p)) (m)))) (\lambda c : (nat) . \lambda nm : (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (p)) (c)). (((((((match_Or_prop) ((((divides) ) (p)) (n))) (((Not) ) ((((divides) ) (p)) (n)))) ((((Or) ) ((((divides) ) (p)) (n))) ((((divides) ) (p)) (m)))) (\lambda auto : (((divides) ) (p)) (n). ((((or_introl) ((((divides) ) (p)) (n))) ((((divides) ) (p)) (m))) (auto)))) (\lambda ndivpn : ((Not) ) ((((divides) ) (p)) (n)). ((((or_intror) ((((divides) ) (p)) (n))) ((((divides) ) (p)) (m))) ((((((match_ex_prop) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) )))))) ((((divides) ) (p)) (m))) (\lambda a : (nat) . \lambda j_clearme0 : ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) )))). ((((((match_ex_prop) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) ))))) ((((divides) ) (p)) (m))) (\lambda b : (nat) . \lambda j_clearme1 : (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) ))). (((((((match_Or_prop) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) )))) ((((divides) ) (p)) (m))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (((S) ) ((O) )). (((((quotient) (p)) (m)) ((((minus) ) ((((times) ) (a)) (c))) ((((times) ) (b)) (m)))) (((((((eq_ind_r) ((nat) )) ((((minus) ) ((((times) ) (p)) ((((times) ) (a)) (c)))) ((((times) ) (p)) ((((times) ) (b)) (m))))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) (x))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (p)) (a))) (c))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x_1)) ((((times) ) (p)) ((((times) ) (b)) (m)))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (a)) (p))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) (x)) (c))) ((((times) ) (p)) ((((times) ) (b)) (m)))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (a)) ((((times) ) (p)) (c)))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x)) ((((times) ) (p)) ((((times) ) (b)) (m)))))) (((((((eq_ind) ((nat) )) ((((times) ) (n)) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) (a)) (x_1))) ((((times) ) (p)) ((((times) ) (b)) (m)))))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (a)) (n))) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x_1)) ((((times) ) (p)) ((((times) ) (b)) (m)))))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (p)) (b))) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (a)) (n))) (m))) (x_1)))) (((((((eq_ind) ((nat) )) ((((times) ) (m)) ((((times) ) (a)) (n)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x_1)) ((((times) ) ((((times) ) (p)) (b))) (m))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (m)) ((((times) ) (p)) (b)))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) (m)) ((((times) ) (a)) (n)))) (x)))) (((((((eq_ind) ((nat) )) ((((times) ) (m)) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (p)) (b))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) (x_1))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (a))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (m)) ((((minus) ) (j__)) ((((times) ) (p)) (b)))))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((refl) ((nat) )) (m))) ((((times) ) (m)) ((((minus) ) ((((times) ) (n)) (a))) ((((times) ) (p)) (b))))) (((((((rewrite_r) ((nat) )) (((S) ) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (m)) (j__)))) ((times_n_1) (m))) ((((minus) ) ((((times) ) (n)) (a))) ((((times) ) (p)) (b)))) (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (n)) (a))) (j__))) (((S) ) ((O) )))) (((((((rewrite_l) ((nat) )) ((((times) ) (a)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (b)) (p)))) (((S) ) ((O) )))) (H)) ((((times) ) (n)) (a))) (((commutative_times) (a)) (n)))) ((((times) ) (p)) (b))) (((commutative_times) (b)) (p)))))) ((((times) ) (a)) (n))) (((commutative_times) (a)) (n)))) ((((minus) ) ((((times) ) (m)) ((((times) ) (a)) (n)))) ((((times) ) (m)) ((((times) ) (p)) (b))))) ((((distributive_times_minus) (m)) ((((times) ) (a)) (n))) ((((times) ) (p)) (b))))) ((((times) ) ((((times) ) (p)) (b))) (m))) (((commutative_times) ((((times) ) (p)) (b))) (m)))) ((((times) ) ((((times) ) (a)) (n))) (m))) (((commutative_times) (m)) ((((times) ) (a)) (n))))) ((((times) ) (p)) ((((times) ) (b)) (m)))) ((((associative_times) (p)) (b)) (m)))) ((((times) ) (a)) ((((times) ) (n)) (m)))) ((((associative_times) (a)) (n)) (m)))) ((((times) ) (p)) (c))) (nm))) ((((times) ) ((((times) ) (a)) (p))) (c))) ((((associative_times) (a)) (p)) (c)))) ((((times) ) (p)) (a))) (((commutative_times) (p)) (a)))) ((((times) ) (p)) ((((times) ) (a)) (c)))) ((((associative_times) (p)) (a)) (c)))) ((((times) ) (p)) ((((minus) ) ((((times) ) (a)) (c))) ((((times) ) (b)) (m))))) ((((distributive_times_minus) (p)) ((((times) ) (a)) (c))) ((((times) ) (b)) (m))))))) (\lambda H : (((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (((S) ) ((O) )). (((((quotient) (p)) (m)) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (c)))) (((((((eq_ind_r) ((nat) )) ((((minus) ) ((((times) ) (p)) ((((times) ) (b)) (m)))) ((((times) ) (p)) ((((times) ) (a)) (c))))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) (x))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (p)) (b))) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x_1)) ((((times) ) (p)) ((((times) ) (a)) (c)))))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (p)) (a))) (c))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (p)) (b))) (m))) (x_1)))) (((((((eq_ind) ((nat) )) ((((times) ) (a)) (p))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (p)) (b))) (m))) ((((times) ) (x_1)) (c))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (a)) ((((times) ) (p)) (c)))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (p)) (b))) (m))) (x)))) (((((((eq_ind) ((nat) )) ((((times) ) (n)) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (p)) (b))) (m))) ((((times) ) (a)) (x_1))))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) (a)) (n))) (m))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) ((((times) ) (p)) (b))) (m))) (x_1)))) (((((((eq_ind) ((nat) )) ((((times) ) (m)) ((((times) ) (p)) (b)))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) (x_1)) ((((times) ) ((((times) ) (a)) (n))) (m))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (m)) ((((times) ) (a)) (n)))) (\lambda x : (nat) . (((eq) ((nat) )) (m)) ((((minus) ) ((((times) ) (m)) ((((times) ) (p)) (b)))) (x)))) (((((((eq_ind) ((nat) )) ((((times) ) (m)) ((((minus) ) ((((times) ) (p)) (b))) ((((times) ) (a)) (n))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (m)) (x_1))) (((((((rewrite_r) ((nat) )) ((((times) ) (n)) (a))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (m)) ((((minus) ) ((((times) ) (p)) (b))) (j__))))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((refl) ((nat) )) (m))) ((((times) ) (m)) ((((minus) ) ((((times) ) (p)) (b))) ((((times) ) (n)) (a))))) (((((((rewrite_r) ((nat) )) (((S) ) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((times) ) (m)) (j__)))) ((times_n_1) (m))) ((((minus) ) ((((times) ) (p)) (b))) ((((times) ) (n)) (a)))) (((((((rewrite_l) ((nat) )) ((((times) ) (a)) (n))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((times) ) (p)) (b))) (j__))) (((S) ) ((O) )))) (((((((rewrite_l) ((nat) )) ((((times) ) (b)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (a)) (n)))) (((S) ) ((O) )))) (H)) ((((times) ) (p)) (b))) (((commutative_times) (b)) (p)))) ((((times) ) (n)) (a))) (((commutative_times) (a)) (n)))))) ((((times) ) (a)) (n))) (((commutative_times) (a)) (n)))) ((((minus) ) ((((times) ) (m)) ((((times) ) (p)) (b)))) ((((times) ) (m)) ((((times) ) (a)) (n))))) ((((distributive_times_minus) (m)) ((((times) ) (p)) (b))) ((((times) ) (a)) (n))))) ((((times) ) ((((times) ) (a)) (n))) (m))) (((commutative_times) ((((times) ) (a)) (n))) (m)))) ((((times) ) ((((times) ) (p)) (b))) (m))) (((commutative_times) (m)) ((((times) ) (p)) (b))))) ((((times) ) (a)) ((((times) ) (n)) (m)))) ((((associative_times) (a)) (n)) (m)))) ((((times) ) (p)) (c))) (nm))) ((((times) ) ((((times) ) (a)) (p))) (c))) ((((associative_times) (a)) (p)) (c)))) ((((times) ) (p)) (a))) (((commutative_times) (a)) (p)))) ((((times) ) (p)) ((((times) ) (a)) (c)))) ((((associative_times) (p)) (a)) (c)))) ((((times) ) (p)) ((((times) ) (b)) (m)))) ((((associative_times) (p)) (b)) (m)))) ((((times) ) (p)) ((((minus) ) ((((times) ) (b)) (m))) ((((times) ) (a)) (c))))) ((((distributive_times_minus) (p)) ((((times) ) (b)) (m))) ((((times) ) (a)) (c))))))) (j_clearme1)))) (j_clearme0)))) (((((((eq_ind) ((nat) )) ((((gcd) ) (p)) (n))) (\lambda x_1 : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (x_1))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (x_1)))))) (((((((eq_ind_r) ((nat) )) ((((gcd) ) (n)) (p))) (\lambda x : (nat) . ((ex) ((nat) )) (\lambda a : (nat) . ((ex) ((nat) )) (\lambda b : (nat) . (((Or) ) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (a)) (n))) ((((times) ) (b)) (p)))) (x))) ((((eq) ((nat) )) ((((minus) ) ((((times) ) (b)) (p))) ((((times) ) (a)) (n)))) (x)))))) (((eq_minus_gcd) (p)) (n))) ((((gcd) ) (p)) (n))) (((commutative_gcd) (p)) (n)))) (((S) ) ((O) ))) (((((prime_to_gcd_1) (p)) (n)) (primp)) (ndivpn))))))) (((decidable_divides) (p)) (n))))) (j_clearme))).

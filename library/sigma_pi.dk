#NAME sigma_pi.

def exp_pi_l :
  sttfa.eps 
    (sttfa.forall nat.nat 
       (n:(sttfa.etap (sttfa.p nat.nat)) =>
        sttfa.forall nat.nat 
          (a:(sttfa.etap (sttfa.p nat.nat)) =>
           sttfa.forall (sttfa.arrow nat.nat nat.nat) 
             (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
              logic.eq nat.nat 
                (nat.times (exp.exp a n) 
                   (bigops.bigop nat.nat n 
                      (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                (bigops.bigop nat.nat n 
                   (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                   (nat.S nat.O) nat.times 
                   (i:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i)))))))
  :=
  n:(sttfa.etap (sttfa.p nat.nat)) =>
  a:(sttfa.etap (sttfa.p nat.nat)) =>
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
  nat.nat_ind 
    (_x_365:(sttfa.etap (sttfa.p nat.nat)) =>
     logic.eq nat.nat 
       (nat.times (exp.exp a _x_365) 
          (bigops.bigop nat.nat _x_365 
             (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
       (bigops.bigop nat.nat _x_365 
          (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
          nat.times (i:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i)))) 
    (bigops.sym_eq_bigop_O nat.nat 
       (y:
        (sttfa.etap 
           (sttfa.p 
              (sttfa.arrow (sttfa.arrow nat.nat bool.bool) 
                 (sttfa.arrow nat.nat 
                    (sttfa.arrow 
                       (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) 
                       (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) =>
        logic.eq nat.nat 
          (nat.times (exp.exp a nat.O) 
             (bigops.bigop nat.nat nat.O 
                (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                (nat.S nat.O) nat.times 
                (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
          (y (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times 
             (i:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i)))) 
       (bigops.sym_eq_bigop_body_O nat.nat 
          (y:
           (sttfa.etap 
              (sttfa.p 
                 (sttfa.arrow (sttfa.arrow nat.nat bool.bool) 
                    (sttfa.arrow nat.nat 
                       (sttfa.arrow 
                          (sttfa.arrow nat.nat (sttfa.arrow nat.nat nat.nat)) 
                          (sttfa.arrow (sttfa.arrow nat.nat nat.nat) nat.nat)))))) =>
           logic.eq nat.nat 
             (nat.times (exp.exp a nat.O) 
                (bigops.bigop nat.nat nat.O 
                   (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                   (nat.S nat.O) nat.times 
                   (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
             (y (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                (nat.S nat.O) nat.times 
                (i:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i)))) 
          (nat.eq_times_body_O 
             (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
              logic.eq nat.nat 
                (nat.times (exp.exp a nat.O) 
                   (bigops.bigop nat.nat nat.O 
                      (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                (nat.S (y (nat.S nat.O)))) 
             (nat.eq_filter_nat_type_O (sttfa.arrow nat.nat nat.nat) 
                nat.times_body 
                (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                 logic.eq nat.nat 
                   (nat.times (exp.exp a nat.O) 
                      (bigops.bigop nat.nat nat.O 
                         (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                   (nat.S (y (nat.S nat.O)))) 
                (nat.eq_times nat.O 
                   (y:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                    logic.eq nat.nat 
                      (nat.times (exp.exp a nat.O) 
                         (bigops.bigop nat.nat nat.O 
                            (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                            (nat.S nat.O) nat.times 
                            (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                      (nat.S (y (nat.S nat.O)))) 
                   (nat.eq_plus_body_O 
                      (y:
                       (sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                       logic.eq nat.nat 
                         (nat.times (exp.exp a nat.O) 
                            (bigops.bigop nat.nat nat.O 
                               (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                               (nat.S nat.O) nat.times 
                               (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                         (nat.S (y (nat.times nat.O (nat.S nat.O))))) 
                      (nat.eq_filter_nat_type_O 
                         (sttfa.arrow nat.nat nat.nat) nat.plus_body 
                         (y:
                          (sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                          logic.eq nat.nat 
                            (nat.times (exp.exp a nat.O) 
                               (bigops.bigop nat.nat nat.O 
                                  (i:(sttfa.etap (sttfa.p nat.nat)) =>
                                   bool.true) (nat.S nat.O) nat.times 
                                  (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                            (nat.S (y (nat.times nat.O (nat.S nat.O))))) 
                         (nat.eq_plus nat.O 
                            (y:
                             (sttfa.etap 
                                (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                             logic.eq nat.nat 
                               (nat.times (exp.exp a nat.O) 
                                  (bigops.bigop nat.nat nat.O 
                                     (i:(sttfa.etap (sttfa.p nat.nat)) =>
                                      bool.true) (nat.S nat.O) nat.times 
                                     (i:(sttfa.etap (sttfa.p nat.nat)) => f i))) 
                               (nat.S (y (nat.times nat.O (nat.S nat.O))))) 
                            (nat.eq_plus_body_S nat.O 
                               (y:
                                (sttfa.etap 
                                   (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                                logic.eq nat.nat 
                                  (nat.times (exp.exp a nat.O) 
                                     (bigops.bigop nat.nat nat.O 
                                        (i:(sttfa.etap (sttfa.p nat.nat)) =>
                                         bool.true) (nat.S nat.O) nat.times 
                                        (i:(sttfa.etap (sttfa.p nat.nat)) =>
                                         f i))) 
                                  (y (nat.times nat.O (nat.S nat.O)))) 
                               (nat.eq_filter_nat_type_S 
                                  (sttfa.arrow nat.nat nat.nat) 
                                  nat.plus_body nat.O 
                                  (y:
                                   (sttfa.etap 
                                      (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                                   logic.eq nat.nat 
                                     (nat.times (exp.exp a nat.O) 
                                        (bigops.bigop nat.nat nat.O 
                                           (i:
                                            (sttfa.etap (sttfa.p nat.nat)) =>
                                            bool.true) (nat.S nat.O) 
                                           nat.times 
                                           (i:
                                            (sttfa.etap (sttfa.p nat.nat)) =>
                                            f i))) 
                                     (y (nat.times nat.O (nat.S nat.O)))) 
                                  (nat.eq_plus (nat.S nat.O) 
                                     (y:
                                      (sttfa.etap 
                                         (sttfa.p 
                                            (sttfa.arrow nat.nat nat.nat))) =>
                                      logic.eq nat.nat 
                                        (nat.times (exp.exp a nat.O) 
                                           (bigops.bigop nat.nat nat.O 
                                              (i:
                                               (sttfa.etap (sttfa.p nat.nat)) =>
                                               bool.true) (nat.S nat.O) 
                                              nat.times 
                                              (i:
                                               (sttfa.etap (sttfa.p nat.nat)) =>
                                               f i))) 
                                        (y (nat.times nat.O (nat.S nat.O)))) 
                                     (nat.eq_times_body_S nat.O 
                                        (y:
                                         (sttfa.etap 
                                            (sttfa.p 
                                               (sttfa.arrow nat.nat nat.nat))) =>
                                         logic.eq nat.nat 
                                           (nat.times (exp.exp a nat.O) 
                                              (bigops.bigop nat.nat nat.O 
                                                 (i:
                                                  (sttfa.etap 
                                                     (sttfa.p nat.nat)) =>
                                                  bool.true) (nat.S nat.O) 
                                                 nat.times 
                                                 (i:
                                                  (sttfa.etap 
                                                     (sttfa.p nat.nat)) =>
                                                  f i))) (y (nat.S nat.O))) 
                                        (nat.eq_filter_nat_type_S 
                                           (sttfa.arrow nat.nat nat.nat) 
                                           nat.times_body nat.O 
                                           (y:
                                            (sttfa.etap 
                                               (sttfa.p 
                                                  (sttfa.arrow nat.nat 
                                                     nat.nat))) =>
                                            logic.eq nat.nat 
                                              (nat.times (exp.exp a nat.O) 
                                                 (bigops.bigop nat.nat nat.O 
                                                    (i:
                                                     (sttfa.etap 
                                                        (sttfa.p nat.nat)) =>
                                                     bool.true) 
                                                    (nat.S nat.O) nat.times 
                                                    (i:
                                                     (sttfa.etap 
                                                        (sttfa.p nat.nat)) =>
                                                     f i))) (y (nat.S nat.O))) 
                                           (nat.eq_times (nat.S nat.O) 
                                              (y:
                                               (sttfa.etap 
                                                  (sttfa.p 
                                                     (sttfa.arrow nat.nat 
                                                        nat.nat))) =>
                                               logic.eq nat.nat 
                                                 (nat.times 
                                                    (exp.exp a nat.O) 
                                                    (bigops.bigop nat.nat 
                                                       nat.O 
                                                       (i:
                                                        (sttfa.etap 
                                                           (sttfa.p nat.nat)) =>
                                                        bool.true) 
                                                       (nat.S nat.O) 
                                                       nat.times 
                                                       (i:
                                                        (sttfa.etap 
                                                           (sttfa.p nat.nat)) =>
                                                        f i))) 
                                                 (y (nat.S nat.O))) 
                                              (nat.eq_match_nat_type_O 
                                                 nat.nat (nat.S nat.O) 
                                                 (k:
                                                  (sttfa.etap 
                                                     (sttfa.p nat.nat)) =>
                                                  bool.match_bool_type 
                                                    nat.nat 
                                                    (nat.times 
                                                       (nat.times a (f k)) 
                                                       (bigops.bigop nat.nat 
                                                          k 
                                                          (i:
                                                           (sttfa.etap 
                                                              (sttfa.p 
                                                                 nat.nat)) =>
                                                           bool.true) 
                                                          (nat.S nat.O) 
                                                          nat.times 
                                                          (i:
                                                           (sttfa.etap 
                                                              (sttfa.p 
                                                                 nat.nat)) =>
                                                           nat.times a (f i)))) 
                                                    (bigops.bigop nat.nat k 
                                                       (i:
                                                        (sttfa.etap 
                                                           (sttfa.p nat.nat)) =>
                                                        bool.true) 
                                                       (nat.S nat.O) 
                                                       nat.times 
                                                       (i:
                                                        (sttfa.etap 
                                                           (sttfa.p nat.nat)) =>
                                                        nat.times a (f i))) 
                                                    bool.true) 
                                                 (y:
                                                  (sttfa.etap 
                                                     (sttfa.p nat.nat)) =>
                                                  logic.eq nat.nat 
                                                    (nat.times 
                                                       (exp.exp a nat.O) 
                                                       (bigops.bigop nat.nat 
                                                          nat.O 
                                                          (i:
                                                           (sttfa.etap 
                                                              (sttfa.p 
                                                                 nat.nat)) =>
                                                           bool.true) 
                                                          (nat.S nat.O) 
                                                          nat.times 
                                                          (i:
                                                           (sttfa.etap 
                                                              (sttfa.p 
                                                                 nat.nat)) =>
                                                           f i))) 
                                                    (nat.times (nat.S nat.O) 
                                                       y)) 
                                                 (exp.eq_exp_body_O a 
                                                    (y:
                                                     (sttfa.etap 
                                                        (sttfa.p nat.nat)) =>
                                                     logic.eq nat.nat 
                                                       (nat.times 
                                                          (exp.exp a nat.O) 
                                                          (bigops.bigop 
                                                             nat.nat nat.O 
                                                             (i:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              bool.true) 
                                                             (nat.S nat.O) 
                                                             nat.times 
                                                             (i:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              f i))) 
                                                       (nat.times y 
                                                          ((p:
                                                            (sttfa.etap 
                                                               (sttfa.p 
                                                                  (sttfa.arrow 
                                                                    nat.nat 
                                                                    bool.bool))) =>
                                                            nil:
                                                            (sttfa.etap 
                                                               (sttfa.p 
                                                                  nat.nat)) =>
                                                            op:
                                                            (sttfa.etap 
                                                               (sttfa.p 
                                                                  (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat)))) =>
                                                            f0:
                                                            (sttfa.etap 
                                                               (sttfa.p 
                                                                  (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat))) =>
                                                            nat.match_nat_type 
                                                              nat.nat nil 
                                                              (k:
                                                               (sttfa.etap 
                                                                  (sttfa.p 
                                                                    nat.nat)) =>
                                                               bool.match_bool_type 
                                                                 nat.nat 
                                                                 (op (
                                                                    f0 k) 
                                                                    (
                                                                    bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0)) 
                                                                 (bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0) 
                                                                 (p k)) nat.O) 
                                                             (i:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              bool.true) 
                                                             (nat.S nat.O) 
                                                             nat.times 
                                                             (i:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              nat.times a 
                                                                (f i))))) 
                                                    (nat.eq_filter_nat_type_O 
                                                       nat.nat 
                                                       (exp.exp_body a) 
                                                       (y:
                                                        (sttfa.etap 
                                                           (sttfa.p nat.nat)) =>
                                                        logic.eq nat.nat 
                                                          (nat.times 
                                                             (exp.exp a nat.O) 
                                                             (bigops.bigop 
                                                                nat.nat 
                                                                nat.O 
                                                                (i:
                                                                 (sttfa.etap 
                                                                    (
                                                                    sttfa.p 
                                                                    nat.nat)) =>
                                                                 bool.true) 
                                                                (nat.S nat.O) 
                                                                nat.times 
                                                                (i:
                                                                 (sttfa.etap 
                                                                    (
                                                                    sttfa.p 
                                                                    nat.nat)) =>
                                                                 f i))) 
                                                          (nat.times y 
                                                             ((p:
                                                               (sttfa.etap 
                                                                  (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    bool.bool))) =>
                                                               nil:
                                                               (sttfa.etap 
                                                                  (sttfa.p 
                                                                    nat.nat)) =>
                                                               op:
                                                               (sttfa.etap 
                                                                  (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat)))) =>
                                                               f0:
                                                               (sttfa.etap 
                                                                  (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat))) =>
                                                               nat.match_nat_type 
                                                                 nat.nat nil 
                                                                 (k:
                                                                  (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                  bool.match_bool_type 
                                                                    nat.nat 
                                                                    (
                                                                    op 
                                                                    (f0 k) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0)) 
                                                                    (
                                                                    bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0) 
                                                                    (
                                                                    p k)) 
                                                                 nat.O) 
                                                                (i:
                                                                 (sttfa.etap 
                                                                    (
                                                                    sttfa.p 
                                                                    nat.nat)) =>
                                                                 bool.true) 
                                                                (nat.S nat.O) 
                                                                nat.times 
                                                                (i:
                                                                 (sttfa.etap 
                                                                    (
                                                                    sttfa.p 
                                                                    nat.nat)) =>
                                                                 nat.times a 
                                                                   (f i))))) 
                                                       (exp.eq_exp a nat.O 
                                                          (y:
                                                           (sttfa.etap 
                                                              (sttfa.p 
                                                                 nat.nat)) =>
                                                           logic.eq nat.nat 
                                                             (nat.times 
                                                                (exp.exp a 
                                                                   nat.O) 
                                                                (bigops.bigop 
                                                                   nat.nat 
                                                                   nat.O 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                   (nat.S 
                                                                    nat.O) 
                                                                   nat.times 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i))) 
                                                             (nat.times y 
                                                                ((p:
                                                                  (sttfa.etap 
                                                                    (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    bool.bool))) =>
                                                                  nil:
                                                                  (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                  op:
                                                                  (sttfa.etap 
                                                                    (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat)))) =>
                                                                  f0:
                                                                  (sttfa.etap 
                                                                    (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat))) =>
                                                                  nat.match_nat_type 
                                                                    nat.nat 
                                                                    nil 
                                                                    (
                                                                    k:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.match_bool_type 
                                                                    nat.nat 
                                                                    (op 
                                                                    (f0 k) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0)) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    k p nil 
                                                                    op f0) 
                                                                    (p k)) 
                                                                    nat.O) 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                   (nat.S 
                                                                    nat.O) 
                                                                   nat.times 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    nat.times 
                                                                    a (
                                                                    f i))))) 
                                                          (nat.sym_eq_match_nat_type_O 
                                                             nat.nat 
                                                             (nat.S nat.O) 
                                                             (k:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              bool.match_bool_type 
                                                                nat.nat 
                                                                (nat.times 
                                                                   (nat.times 
                                                                    a (
                                                                    f k)) 
                                                                   (bigops.bigop 
                                                                    nat.nat 
                                                                    k 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    nat.times 
                                                                    a (
                                                                    f i)))) 
                                                                (bigops.bigop 
                                                                   nat.nat k 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                   (nat.S 
                                                                    nat.O) 
                                                                   nat.times 
                                                                   (i:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    nat.times 
                                                                    a (
                                                                    f i))) 
                                                                bool.true) 
                                                             (y:
                                                              (sttfa.etap 
                                                                 (sttfa.p 
                                                                    nat.nat)) =>
                                                              logic.eq 
                                                                nat.nat 
                                                                (nat.times 
                                                                   (exp.exp 
                                                                    a nat.O) 
                                                                   (bigops.bigop 
                                                                    nat.nat 
                                                                    nat.O 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i))) 
                                                                (nat.times 
                                                                   (exp.exp 
                                                                    a nat.O) 
                                                                   y)) 
                                                             (bigops.eq_bigop_body_O 
                                                                nat.nat 
                                                                (y:
                                                                 (sttfa.etap 
                                                                    (
                                                                    sttfa.p 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    bool.bool) 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat)) 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat) 
                                                                    nat.nat)))))) =>
                                                                 logic.eq 
                                                                   nat.nat 
                                                                   (nat.times 
                                                                    (exp.exp 
                                                                    a nat.O) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    nat.O 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i))) 
                                                                   (nat.times 
                                                                    (exp.exp 
                                                                    a nat.O) 
                                                                    (y 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i)))) 
                                                                (bigops.eq_bigop_O 
                                                                   nat.nat 
                                                                   (y:
                                                                    (
                                                                    sttfa.etap 
                                                                    (sttfa.p 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    bool.bool) 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat)) 
                                                                    (sttfa.arrow 
                                                                    (sttfa.arrow 
                                                                    nat.nat 
                                                                    nat.nat) 
                                                                    nat.nat)))))) =>
                                                                    logic.eq 
                                                                    nat.nat 
                                                                    (nat.times 
                                                                    (exp.exp 
                                                                    a nat.O) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    nat.O 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i))) 
                                                                    (nat.times 
                                                                    (exp.exp 
                                                                    a nat.O) 
                                                                    (y 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i)))) 
                                                                   (logic.refl 
                                                                    nat.nat 
                                                                    (nat.times 
                                                                    (exp.exp 
                                                                    a nat.O) 
                                                                    (bigops.bigop 
                                                                    nat.nat 
                                                                    nat.O 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    bool.true) 
                                                                    (nat.S 
                                                                    nat.O) 
                                                                    nat.times 
                                                                    (i:
                                                                    (sttfa.etap 
                                                                    (sttfa.p 
                                                                    nat.nat)) =>
                                                                    f i))))))))))))))))))))))))) 
    (i:(sttfa.etap (sttfa.p nat.nat)) =>
     Hind:
     (sttfa.eps 
        (logic.eq nat.nat 
           (nat.times (exp.exp a i) 
              (bigops.bigop nat.nat i 
                 (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                 (nat.S nat.O) nat.times 
                 (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) 
           (bigops.bigop nat.nat i 
              (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
              nat.times 
              (i0:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i0))))) =>
     logic.eq_ind_r nat.nat 
       (nat.times (f i) 
          (bigops.bigop nat.nat i 
             (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) 
       (x:(sttfa.etap (sttfa.p nat.nat)) =>
        logic.eq nat.nat (nat.times (exp.exp a (nat.S i)) x) 
          (bigops.bigop nat.nat (nat.S i) 
             (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times 
             (i0:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i0)))) 
       (logic.eq_ind_r nat.nat 
          (nat.times (nat.times a (f i)) 
             (bigops.bigop nat.nat i 
                (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                (nat.S nat.O) nat.times 
                (i0:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i0)))) 
          (x:(sttfa.etap (sttfa.p nat.nat)) =>
           logic.eq nat.nat 
             (nat.times (exp.exp a (nat.S i)) 
                (nat.times (f i) 
                   (bigops.bigop nat.nat i 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) x) 
          (logic.eq_ind nat.nat 
             (nat.times (exp.exp a i) 
                (bigops.bigop nat.nat i 
                   (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                   (nat.S nat.O) nat.times 
                   (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) 
             (x_1:(sttfa.etap (sttfa.p nat.nat)) =>
              logic.eq nat.nat 
                (nat.times (exp.exp a (nat.S i)) 
                   (nat.times (f i) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
                (nat.times (nat.times a (f i)) x_1)) 
             (logic.eq_ind nat.nat 
                (nat.times (nat.times (exp.exp a (nat.S i)) (f i)) 
                   (bigops.bigop nat.nat i 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) 
                (x_1:(sttfa.etap (sttfa.p nat.nat)) =>
                 logic.eq nat.nat x_1 
                   (nat.times (nat.times a (f i)) 
                      (nat.times (exp.exp a i) 
                         (bigops.bigop nat.nat i 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                            (nat.S nat.O) nat.times 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))))) 
                (logic.eq_ind nat.nat 
                   (nat.times (nat.times (nat.times a (f i)) (exp.exp a i)) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) 
                   (x_1:(sttfa.etap (sttfa.p nat.nat)) =>
                    logic.eq nat.nat 
                      (nat.times (nat.times (exp.exp a (nat.S i)) (f i)) 
                         (bigops.bigop nat.nat i 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                            (nat.S nat.O) nat.times 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0))) x_1) 
                   (logic.eq_f2 nat.nat nat.nat nat.nat nat.times 
                      (nat.times (exp.exp a (nat.S i)) (f i)) 
                      (nat.times (nat.times a (f i)) (exp.exp a i)) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) 
                      (exp.sym_eq_exp a (nat.S i) 
                         (y:(sttfa.etap (sttfa.p nat.nat)) =>
                          logic.eq nat.nat (nat.times y (f i)) 
                            (nat.times (nat.times a (f i)) (exp.exp a i))) 
                         (nat.sym_eq_filter_nat_type_S nat.nat 
                            (exp.exp_body a) i 
                            (y:(sttfa.etap (sttfa.p nat.nat)) =>
                             logic.eq nat.nat (nat.times y (f i)) 
                               (nat.times (nat.times a (f i)) (exp.exp a i))) 
                            (exp.sym_eq_exp_body_S a i 
                               (y:(sttfa.etap (sttfa.p nat.nat)) =>
                                logic.eq nat.nat (nat.times y (f i)) 
                                  (nat.times (nat.times a (f i)) 
                                     (exp.exp a i))) 
                               (logic.rewrite_r nat.nat 
                                  (nat.times a (exp.exp a i)) 
                                  (__:(sttfa.etap (sttfa.p nat.nat)) =>
                                   logic.eq nat.nat (nat.times __ (f i)) 
                                     (nat.times (nat.times a (f i)) 
                                        (exp.exp a i))) 
                                  (logic.rewrite_r nat.nat 
                                     (nat.times (f i) 
                                        (nat.times a (exp.exp a i))) 
                                     (__:(sttfa.etap (sttfa.p nat.nat)) =>
                                      logic.eq nat.nat __ 
                                        (nat.times (nat.times a (f i)) 
                                           (exp.exp a i))) 
                                     (logic.rewrite_r nat.nat 
                                        (nat.times a 
                                           (nat.times (f i) (exp.exp a i))) 
                                        (__:(sttfa.etap (sttfa.p nat.nat)) =>
                                         logic.eq nat.nat __ 
                                           (nat.times (nat.times a (f i)) 
                                              (exp.exp a i))) 
                                        (logic.rewrite_r nat.nat 
                                           (nat.times (exp.exp a i) 
                                              (nat.times a (f i))) 
                                           (__:
                                            (sttfa.etap (sttfa.p nat.nat)) =>
                                            logic.eq nat.nat 
                                              (nat.times a 
                                                 (nat.times (f i) 
                                                    (exp.exp a i))) __) 
                                           (logic.rewrite_r nat.nat 
                                              (nat.times a 
                                                 (nat.times (exp.exp a i) 
                                                    (f i))) 
                                              (__:
                                               (sttfa.etap (sttfa.p nat.nat)) =>
                                               logic.eq nat.nat 
                                                 (nat.times a 
                                                    (nat.times (f i) 
                                                       (exp.exp a i))) __) 
                                              (logic.rewrite_r nat.nat 
                                                 (nat.times (f i) 
                                                    (exp.exp a i)) 
                                                 (__:
                                                  (sttfa.etap 
                                                     (sttfa.p nat.nat)) =>
                                                  logic.eq nat.nat 
                                                    (nat.times a 
                                                       (nat.times (f i) 
                                                          (exp.exp a i))) 
                                                    (nat.times a __)) 
                                                 (logic.refl nat.nat 
                                                    (nat.times a 
                                                       (nat.times (f i) 
                                                          (exp.exp a i)))) 
                                                 (nat.times (exp.exp a i) 
                                                    (f i)) 
                                                 (nat.commutative_times 
                                                    (exp.exp a i) (f i))) 
                                              (nat.times (exp.exp a i) 
                                                 (nat.times a (f i))) 
                                              (nat.times_times (exp.exp a i) 
                                                 a (f i))) 
                                           (nat.times (nat.times a (f i)) 
                                              (exp.exp a i)) 
                                           (nat.commutative_times 
                                              (nat.times a (f i)) 
                                              (exp.exp a i))) 
                                        (nat.times (f i) 
                                           (nat.times a (exp.exp a i))) 
                                        (nat.times_times (f i) a 
                                           (exp.exp a i))) 
                                     (nat.times (nat.times a (exp.exp a i)) 
                                        (f i)) 
                                     (nat.commutative_times 
                                        (nat.times a (exp.exp a i)) (
                                        f i))) (nat.times (exp.exp a i) a) 
                                  (nat.commutative_times (exp.exp a i) a))))) 
                      (logic.refl nat.nat 
                         (bigops.bigop nat.nat i 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                            (nat.S nat.O) nat.times 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
                   (nat.times (nat.times a (f i)) 
                      (nat.times (exp.exp a i) 
                         (bigops.bigop nat.nat i 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                            (nat.S nat.O) nat.times 
                            (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
                   (nat.associative_times (nat.times a (f i)) (exp.exp a i) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
                (nat.times (exp.exp a (nat.S i)) 
                   (nat.times (f i) 
                      (bigops.bigop nat.nat i 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
                (nat.associative_times (exp.exp a (nat.S i)) (f i) 
                   (bigops.bigop nat.nat i 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)))) 
             (bigops.bigop nat.nat i 
                (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                (nat.S nat.O) nat.times 
                (i0:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i0))) 
             Hind) 
          (bigops.bigop nat.nat (nat.S i) 
             (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times 
             (i0:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f i0))) 
          (bigops.bigop_Strue nat.nat i 
             (__:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
             nat.times 
             (__:(sttfa.etap (sttfa.p nat.nat)) => nat.times a (f __)) 
             (logic.refl bool.bool bool.true))) 
       (bigops.bigop nat.nat (nat.S i) 
          (i0:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
          nat.times (i0:(sttfa.etap (sttfa.p nat.nat)) => f i0)) 
       (bigops.bigop_Strue nat.nat i 
          (__:(sttfa.etap (sttfa.p nat.nat)) => bool.true) (nat.S nat.O) 
          nat.times f (logic.refl bool.bool bool.true))) n.

def exp_pi_bc :
  sttfa.eps 
    (sttfa.forall nat.nat 
       (a:(sttfa.etap (sttfa.p nat.nat)) =>
        sttfa.forall nat.nat 
          (b:(sttfa.etap (sttfa.p nat.nat)) =>
           sttfa.forall nat.nat 
             (c:(sttfa.etap (sttfa.p nat.nat)) =>
              sttfa.forall (sttfa.arrow nat.nat nat.nat) 
                (f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
                 logic.eq nat.nat 
                   (nat.times (exp.exp a (nat.minus c b)) 
                      (bigops.bigop nat.nat (nat.minus c b) 
                         (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                         (nat.S nat.O) nat.times 
                         (i:(sttfa.etap (sttfa.p nat.nat)) =>
                          f (nat.plus i b)))) 
                   (bigops.bigop nat.nat (nat.minus c b) 
                      (i:(sttfa.etap (sttfa.p nat.nat)) => bool.true) 
                      (nat.S nat.O) nat.times 
                      (i:(sttfa.etap (sttfa.p nat.nat)) =>
                       nat.times a (f (nat.plus i b)))))))))
  :=
  a:(sttfa.etap (sttfa.p nat.nat)) =>
  b:(sttfa.etap (sttfa.p nat.nat)) =>
  c:(sttfa.etap (sttfa.p nat.nat)) =>
  f:(sttfa.etap (sttfa.p (sttfa.arrow nat.nat nat.nat))) =>
  sigma_pi.exp_pi_l (nat.minus c b) a 
    (__:(sttfa.etap (sttfa.p nat.nat)) => f (nat.plus __ b)).


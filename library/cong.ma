include "basics/pts.ma".
include "div_mod.ma".
include "logic.ma".
include "nat.ma".
include "primes.ma".
include "relations.ma".
definition congruent : ((nat) ) -> ((nat) ) -> ((nat) ) -> Prop := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . (((eq) ((nat) )) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)).
definition congruent_n_n : \forall (n:(nat) ). \forall (p:(nat) ). ((((congruent) ) (n)) (n)) (p) := \lambda n : (nat) . \lambda p : (nat) . ((refl) ((nat) )) ((((mod) ) (n)) (p)).
definition transitive_congruent : \forall (p:(nat) ). ((transitive) ((nat) )) (\lambda n : (nat) . \lambda m : (nat) . ((((congruent) ) (n)) (m)) (p)) := \lambda p : (nat) . \lambda x : (nat) . \lambda y : (nat) . \lambda z : (nat) . \lambda auto : ((((congruent) ) (x)) (y)) (p). (\lambda auto' : ((((congruent) ) (y)) (z)) (p). (((((((rewrite_l) ((nat) )) ((((mod) ) (x)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((mod) ) (x)) (p))) (j__))) (((refl) ((nat) )) ((((mod) ) (x)) (p)))) ((((mod) ) (z)) (p))) (((((((rewrite_r) ((nat) )) ((((mod) ) (y)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((mod) ) (z)) (p)))) (auto')) ((((mod) ) (x)) (p))) (auto)))).
definition mod_mod : \forall (n:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> (((eq) ((nat) )) ((((mod) ) (n)) (p))) ((((mod) ) ((((mod) ) (n)) (p))) (p)) := \lambda n : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) ((((mod) ) (n)) (p))) (p))) (p))) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (\lambda x : (nat) . (((eq) ((nat) )) (x)) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (((((((eq_ind_r) ((nat) )) ((O) )) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) ((((times) ) (x)) (p))) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((O) ))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) (j__)) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (((((((rewrite_l) ((nat) )) ((O) )) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) (j__)) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (((((((rewrite_l) ((nat) )) ((((mod) ) ((((mod) ) (n)) (p))) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) (((refl) ((nat) )) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) ((((plus) ) ((O) )) ((((mod) ) ((((mod) ) (n)) (p))) (p)))) ((plus_O_n) ((((mod) ) ((((mod) ) (n)) (p))) (p))))) ((((times) ) (p)) ((O) ))) ((times_n_O) (p)))) ((((times) ) ((O) )) (p))) (((commutative_times) ((O) )) (p)))) ((((div) ) ((((mod) ) (n)) (p))) (p))) ((((eq_div_O) ((((mod) ) (n)) (p))) (p)) ((((lt_mod_m_m) (n)) (p)) (posp))))) ((((mod) ) (n)) (p))) (((div_mod) ((((mod) ) (n)) (p))) (p))).
definition congruent_n_mod_n : \forall (n:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> ((((congruent) ) (n)) ((((mod) ) (n)) (p))) (p) := \lambda n : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). ((((mod_mod) (n)) (p)) (posp)).
definition eq_times_plus_to_congruent : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). \forall (r:(nat) ). ((((lt) ) ((O) )) (p)) -> ((((eq) ((nat) )) (n)) ((((plus) ) ((((times) ) (r)) (p))) (m))) -> ((((congruent) ) (n)) (m)) (p) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda r : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda Hn : (((eq) ((nat) )) (n)) ((((plus) ) ((((times) ) (r)) (p))) (m)). (((((((((div_mod_spec_to_eq2) (n)) (p)) ((((div) ) (n)) (p))) ((((mod) ) (n)) (p))) ((((plus) ) (r)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p))) ((((div_mod_spec_div_mod) (n)) (p)) (posp))) (((((((div_mod_spec_intro) (n)) (p)) ((((plus) ) (r)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p))) ((((lt_mod_m_m) (m)) (p)) (posp))) (((((((eq_ind_r) ((nat) )) ((((times) ) (p)) ((((plus) ) (r)) ((((div) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (x)) ((((mod) ) (m)) (p))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (p)) (r))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (x)) ((((mod) ) (m)) (p))))) (((((((eq_ind_r) ((nat) )) ((((times) ) (r)) (p))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) ((((plus) ) (x)) ((((times) ) (p)) ((((div) ) (m)) (p))))) ((((mod) ) (m)) (p))))) (((((((eq_ind_r) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) (p))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) ((((plus) ) ((((times) ) (r)) (p))) (x))) ((((mod) ) (m)) (p))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) (r)) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) (x))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) (r))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (j__)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) ((((times) ) (p)) (r))) ((((plus) ) (j__)) ((((mod) ) (m)) (p)))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) ((((times) ) (p)) (r))) (j__)))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) ((((times) ) (p)) (r))) (j__)))) (((((((rewrite_r) ((nat) )) ((((plus) ) (m)) ((((times) ) (p)) (r)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) (j__))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) (j__))) (((refl) ((nat) )) (n))) ((((plus) ) (m)) ((((times) ) (p)) (r)))) (((((((rewrite_l) ((nat) )) ((((plus) ) ((((times) ) (p)) (r))) (m))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) (r)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (j__)) (m)))) (Hn)) ((((times) ) (p)) (r))) (((commutative_times) (r)) (p)))) ((((plus) ) (m)) ((((times) ) (p)) (r)))) (((commutative_plus) ((((times) ) (p)) (r))) (m))))) ((((plus) ) ((((times) ) (p)) (r))) (m))) (((commutative_plus) ((((times) ) (p)) (r))) (m)))) ((((plus) ) ((((mod) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (((((((rewrite_l) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (m)) ((((plus) ) (j__)) ((((mod) ) (m)) (p))))) (((div_mod) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p)))) (((commutative_times) ((((div) ) (m)) (p))) (p)))) ((((plus) ) ((((mod) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p)))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p))))) ((((times) ) ((((div) ) (m)) (p))) (p))) (((commutative_times) ((((div) ) (m)) (p))) (p)))) ((((times) ) (r)) (p))) (((commutative_times) (r)) (p)))) ((((plus) ) ((((plus) ) ((((times) ) (r)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((mod) ) (m)) (p)))) ((((associative_plus) ((((times) ) (r)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) (p)) ((((div) ) (m)) (p)))) (((commutative_times) (p)) ((((div) ) (m)) (p))))) ((((times) ) (p)) (r))) (((commutative_times) (p)) (r)))) ((((times) ) (p)) ((((plus) ) (r)) ((((div) ) (m)) (p))))) ((((distributive_times_plus) (p)) (r)) ((((div) ) (m)) (p))))) ((((times) ) ((((plus) ) (r)) ((((div) ) (m)) (p)))) (p))) (((commutative_times) ((((plus) ) (r)) ((((div) ) (m)) (p)))) (p)))))).
definition divides_to_congruent : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> ((((le) ) (m)) (n)) -> ((((divides) ) (p)) ((((minus) ) (n)) (m))) -> ((((congruent) ) (n)) (m)) (p) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda lemn : (((le) ) (m)) (n). (\lambda j_clearme : (((divides) ) (p)) ((((minus) ) (n)) (m)). ((((((match_divides_prop) (p)) ((((minus) ) (n)) (m))) (((((congruent) ) (n)) (m)) (p))) (\lambda q : (nat) . \lambda Hdiv : (((eq) ((nat) )) ((((minus) ) (n)) (m))) ((((times) ) (p)) (q)). (((((((eq_times_plus_to_congruent) (n)) (m)) (p)) (q)) (posp)) (((((((eq_ind_r) ((nat) )) ((((plus) ) (m)) ((((times) ) (q)) (p)))) (\lambda x : (nat) . (((eq) ((nat) )) (n)) (x))) ((((((minus_to_plus) (n)) (m)) ((((times) ) (q)) (p))) (lemn)) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) (q))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) (q)) (p)))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) (q))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) (q))) (j__))) (((refl) ((nat) )) ((((times) ) (p)) (q)))) ((((times) ) (q)) (p))) (((commutative_times) (q)) (p)))) ((((minus) ) (n)) (m))) (Hdiv)))) ((((plus) ) ((((times) ) (q)) (p))) (m))) (((commutative_plus) ((((times) ) (q)) (p))) (m)))))) (j_clearme)))).
definition congruent_to_divides : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> (((((congruent) ) (n)) (m)) (p)) -> (((divides) ) (p)) ((((minus) ) (n)) (m)) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda Hcong : ((((congruent) ) (n)) (m)) (p). (((((quotient) (p)) ((((minus) ) (n)) (m))) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (((((((eq_ind_r) ((nat) )) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) (m))) (x))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) (x)) (m))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p)))) (x))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) ((((plus) ) (j__)) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) ((((plus) ) (j__)) ((((mod) ) (m)) (p))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_l) ((nat) )) ((((mod) ) (n)) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) ((((plus) ) ((((times) ) (p)) ((((div) ) (m)) (p)))) (j__)))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (n)) (j__))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_l) ((nat) )) ((((minus) ) ((((minus) ) (n)) ((((mod) ) (n)) (p)))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_l) ((nat) )) ((((times) ) (p)) ((((div) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((minus) ) (j__)) ((((times) ) (p)) ((((div) ) (m)) (p))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_l) ((nat) )) ((((times) ) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (j__))) (((refl) ((nat) )) ((((times) ) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))))) ((((times) ) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))) (((commutative_times) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) ((((minus) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((times) ) (p)) ((((div) ) (m)) (p))))) ((((distributive_times_minus) (p)) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((minus) ) (n)) ((((mod) ) (n)) (p)))) (((((((rewrite_l) ((nat) )) ((((times) ) ((((div) ) (n)) (p))) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((minus) ) (n)) ((((mod) ) (n)) (p))))) (((eq_times_div_minus_mod) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p)))) (((commutative_times) ((((div) ) (n)) (p))) (p))))) ((((minus) ) (n)) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p)))))) ((((minus_plus) (n)) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p)))))) ((((plus) ) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (n)) (p)))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (n)) (p))))) ((((mod) ) (m)) (p))) (Hcong))) ((((times) ) ((((div) ) (m)) (p))) (p))) (((commutative_times) ((((div) ) (m)) (p))) (p)))) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (((((((rewrite_l) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((((div) ) (n)) (p))) (p))) (\lambda j__ : (nat) . (((eq) ((nat) )) (n)) ((((plus) ) (j__)) ((((mod) ) (n)) (p))))) (((div_mod) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p)))) (((commutative_times) ((((div) ) (n)) (p))) (p)))) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p)))))) ((((plus) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p)))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p))))) ((((times) ) ((((div) ) (n)) (p))) (p))) (((commutative_times) ((((div) ) (n)) (p))) (p)))) (m)) (((div_mod) (m)) (p)))) (n)) (((div_mod) (n)) (p)))) ((((times) ) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (((commutative_times) (p)) ((((minus) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))))).
definition let_clause_1034 : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> \forall (x2515:(nat) ). \forall (x2516:(nat) ). (((eq) ((nat) )) (x2515)) ((((plus) ) ((((mod) ) (x2515)) (x2516))) ((((times) ) (x2516)) ((((div) ) (x2515)) (x2516)))) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda x2515 : (nat) . \lambda x2516 : (nat) . ((((((rewrite_l) ((nat) )) ((((plus) ) ((((times) ) (x2516)) ((((div) ) (x2515)) (x2516)))) ((((mod) ) (x2515)) (x2516)))) (\lambda j__ : (nat) . (((eq) ((nat) )) (x2515)) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) ((((div) ) (x2515)) (x2516))) (x2516))) (\lambda j__ : (nat) . (((eq) ((nat) )) (x2515)) ((((plus) ) (j__)) ((((mod) ) (x2515)) (x2516))))) (((div_mod) (x2515)) (x2516))) ((((times) ) (x2516)) ((((div) ) (x2515)) (x2516)))) (((commutative_times) ((((div) ) (x2515)) (x2516))) (x2516)))) ((((plus) ) ((((mod) ) (x2515)) (x2516))) ((((times) ) (x2516)) ((((div) ) (x2515)) (x2516))))) (((commutative_plus) ((((times) ) (x2516)) ((((div) ) (x2515)) (x2516)))) ((((mod) ) (x2515)) (x2516)))).
definition let_clause_73 : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> \forall (x134:(nat) ). \forall (x135:(nat) ). \forall (x136:(nat) ). (((eq) ((nat) )) ((((plus) ) (x134)) ((((plus) ) (x135)) (x136)))) ((((plus) ) (x135)) ((((plus) ) (x134)) (x136))) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda x134 : (nat) . \lambda x135 : (nat) . \lambda x136 : (nat) . ((((((rewrite_l) ((nat) )) ((((plus) ) ((((plus) ) (x135)) (x134))) (x136))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) (x134)) ((((plus) ) (x135)) (x136)))) (j__))) ((((assoc_plus1) (x136)) (x135)) (x134))) ((((plus) ) (x135)) ((((plus) ) (x134)) (x136)))) ((((associative_plus) (x135)) (x134)) (x136))).
definition mod_times : \forall (n:(nat) ). \forall (m:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> (((eq) ((nat) )) ((((mod) ) ((((times) ) (n)) (m))) (p))) ((((mod) ) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)) := \lambda n : (nat) . \lambda m : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (((((((eq_times_plus_to_congruent) ((((times) ) (n)) (m))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (posp)) (((((((trans_eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) ((((plus) ) (j__)) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (j__)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) (((((((rewrite_l) ((nat) )) (n)) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (j__)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (n)) ((((plus) ) (j__)) ((((mod) ) (m)) (p)))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((mod) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (n)) (j__)))) (((((((rewrite_l) ((nat) )) (m)) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (n)) (m))) ((((times) ) (n)) (j__)))) (((refl) ((nat) )) ((((times) ) (n)) (m)))) ((((plus) ) ((((mod) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) (((((((let_clause_1034) (n)) (m)) (p)) (posp)) (m)) (p)))) ((((plus) ) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p)))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (m)) (p)))) ((((mod) ) (m)) (p))))) ((((times) ) ((((div) ) (m)) (p))) (p))) (((commutative_times) ((((div) ) (m)) (p))) (p)))) ((((plus) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (((((((let_clause_1034) (n)) (m)) (p)) (posp)) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p)))) (((commutative_plus) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((mod) ) (n)) (p))))) ((((times) ) ((((div) ) (n)) (p))) (p))) (((commutative_times) ((((div) ) (n)) (p))) (p)))) (((((((trans_eq) ((nat) )) ((((times) ) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) (\lambda x : (nat) . (((eq) ((nat) )) (x)) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) (x)) ((((times) ) ((((mod) ) (n)) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) (x))) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (((((((rewrite_l) ((nat) )) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (((refl) ((nat) )) ((((plus) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((associative_plus) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) ((((mod) ) (n)) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((distributive_times_plus) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((distributive_times_plus) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((distributive_times_plus_r) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (n)) (p))))) (((((((((((eq_f2) ((nat) )) ((nat) )) ((nat) )) ((plus) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) (p))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) (x_1)) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p)))) (((((((eq_ind_r) ((nat) )) ((((times) ) ((((div) ) (n)) (p))) ((((times) ) (p)) ((((mod) ) (m)) (p))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) (p))) (x))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p)))) (((((((eq_ind_r) ((nat) )) ((((times) ) ((((mod) ) (m)) (p))) (p))) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) (p))) ((((times) ) ((((div) ) (n)) (p))) (x)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p)))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) (p))) (x_1))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p)))) (((((((eq_ind_r) ((nat) )) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p)))) (\lambda x : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) (p))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) (x))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) (j__)) ((((div) ) (m)) (p)))) (p))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) (j__)) (p))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) (j__)) (p))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) (p)) (j__))) (p))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) (j__)) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((plus) ) ((((times) ) (p)) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))))) (j__))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_l) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) (j__)) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) ((((div) ) (m)) (p))) (p))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) ((((mod) ) (n)) (p))) (j__)))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (j__))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (p)) (j__)))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_l) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) (j__))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (j__)))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((div) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) (j__)) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) ((((plus) ) (j__)) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((div) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) ((((plus) ) (j__)) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) ((((plus) ) ((((times) ) (p)) (j__))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) (j__)) ((((times) ) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (j__)) (p))))) (((((((rewrite_r) ((nat) )) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (j__)))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) (j__))) (((((((rewrite_l) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) (j__))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((times) ) (p)) (j__)))) (((((((rewrite_r) ((nat) )) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (j__))))) (((refl) ((nat) )) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((plus) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (((commutative_plus) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((((((let_clause_73) (n)) (m)) (p)) (posp)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) ((((distributive_times_plus) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))))) (((commutative_plus) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((times) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) (p))) (((commutative_times) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) (p)))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (((commutative_times) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p))) (((commutative_times) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((div) ) (n)) (p)))) (((commutative_times) ((((div) ) (m)) (p))) ((((div) ) (n)) (p))))) ((((times) ) ((((div) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) ((((times_times) ((((div) ) (m)) (p))) (p)) ((((div) ) (n)) (p))))) ((((times) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((div) ) (m)) (p)))) (((commutative_times) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) (p))) (((commutative_times) ((((div) ) (n)) (p))) (p)))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) (((commutative_plus) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((((((let_clause_73) (n)) (m)) (p)) (posp)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) ((((distributive_times_plus) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))))) ((((plus) ) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p)))))) (((commutative_plus) ((((times) ) (p)) ((((plus) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) (p)) ((((times) ) ((((div) ) (m)) (p))) ((((mod) ) (n)) (p))))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))) (((commutative_times) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((times) ) (p)) ((((div) ) (m)) (p))))) ((((times_times) ((((mod) ) (n)) (p))) (p)) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (m)) (p))) (p))) (((commutative_times) ((((div) ) (m)) (p))) (p)))) ((((plus) ) ((((times) ) (p)) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p)))))) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((distributive_times_plus) (p)) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p))) (((commutative_times) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p)))) ((((times) ) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (p))) (((commutative_times) ((((times) ) (p)) ((((times) ) ((((div) ) (n)) (p))) ((((div) ) (m)) (p))))) (p)))) ((((times) ) ((((div) ) (m)) (p))) ((((div) ) (n)) (p)))) (((commutative_times) ((((div) ) (m)) (p))) ((((div) ) (n)) (p))))) ((((times) ) ((((div) ) (m)) (p))) ((((times) ) (p)) ((((div) ) (n)) (p))))) ((((times_times) ((((div) ) (m)) (p))) (p)) ((((div) ) (n)) (p))))) ((((times) ) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((div) ) (m)) (p)))) (((commutative_times) ((((times) ) (p)) ((((div) ) (n)) (p)))) ((((div) ) (m)) (p))))) ((((times) ) ((((div) ) (n)) (p))) (p))) (((commutative_times) ((((div) ) (n)) (p))) (p)))) ((((times) ) ((((plus) ) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p))))) (p))) ((((distributive_times_plus_r) (p)) ((((plus) ) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p)))) ((((times) ) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))))) ((((times) ) ((((mod) ) (n)) (p))) ((((div) ) (m)) (p)))))) ((((times) ) ((((div) ) (n)) (p))) ((((times) ) ((((mod) ) (m)) (p))) (p)))) ((((associative_times) ((((div) ) (n)) (p))) ((((mod) ) (m)) (p))) (p)))) ((((times) ) (p)) ((((mod) ) (m)) (p)))) (((commutative_times) (p)) ((((mod) ) (m)) (p))))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((mod) ) (m)) (p)))) ((((associative_times) ((((div) ) (n)) (p))) (p)) ((((mod) ) (m)) (p))))) ((((times) ) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((times) ) ((((div) ) (m)) (p))) (p)))) ((((associative_times) ((((times) ) ((((div) ) (n)) (p))) (p))) ((((div) ) (m)) (p))) (p)))) (((refl) ((nat) )) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))))))).
definition congruent_times : \forall (n:(nat) ). \forall (m:(nat) ). \forall (n1:(nat) ). \forall (m1:(nat) ). \forall (p:(nat) ). ((((lt) ) ((O) )) (p)) -> (((((congruent) ) (n)) (n1)) (p)) -> (((((congruent) ) (m)) (m1)) (p)) -> ((((congruent) ) ((((times) ) (n)) (m))) ((((times) ) (n1)) (m1))) (p) := \lambda n : (nat) . \lambda m : (nat) . \lambda n1 : (nat) . \lambda m1 : (nat) . \lambda p : (nat) . \lambda posp : (((lt) ) ((O) )) (p). (\lambda Hcongn : ((((congruent) ) (n)) (n1)) (p). (\lambda Hcongm : ((((congruent) ) (m)) (m1)) (p). (((((((eq_ind_r) ((nat) )) ((((mod) ) ((((times) ) ((((mod) ) (n)) (p))) ((((mod) ) (m)) (p)))) (p))) (\lambda x : (nat) . (((eq) ((nat) )) (x)) ((((mod) ) ((((times) ) (n1)) (m1))) (p)))) (((((((eq_ind_r) ((nat) )) ((((mod) ) (n1)) (p))) (\lambda x : (nat) . (((eq) ((nat) )) ((((mod) ) ((((times) ) (x)) ((((mod) ) (m)) (p)))) (p))) ((((mod) ) ((((times) ) (n1)) (m1))) (p)))) (((((((eq_ind_r) ((nat) )) ((((mod) ) (m1)) (p))) (\lambda x : (nat) . (((eq) ((nat) )) ((((mod) ) ((((times) ) ((((mod) ) (n1)) (p))) (x))) (p))) ((((mod) ) ((((times) ) (n1)) (m1))) (p)))) (((((sym_eq) ((nat) )) ((((mod) ) ((((times) ) (n1)) (m1))) (p))) ((((mod) ) ((((times) ) ((((mod) ) (n1)) (p))) ((((mod) ) (m1)) (p)))) (p))) (((((mod_times) (n1)) (m1)) (p)) (posp)))) ((((mod) ) (m)) (p))) (Hcongm))) ((((mod) ) (n)) (p))) (Hcongn))) ((((mod) ) ((((times) ) (n)) (m))) (p))) (((((mod_times) (n)) (m)) (p)) (posp))))).

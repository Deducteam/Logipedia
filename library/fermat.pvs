fermat_sttfa : THEORY
BEGIN
IMPORTING bigops_sttfa,bool_sttfa,cong_sttfa,connectives_sttfa,div_mod_sttfa,exp_sttfa,fact_sttfa,gcd_sttfa,logic_sttfa,nat_sttfa,permutation_sttfa,primes_sttfa,sigma_pi_sttfa

prime_to_not_divides_fact  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n)))))))

%|- prime_to_not_divides_fact : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "primes_sttfa.prime(p)" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n)))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(x)))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(x)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(x)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(x))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(x))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(x))))))" "(FORALL(n1:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))))))"
%|- (then@ (sttfa-forall-i "n1")
%|- (sttfa-impl-e "(((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))))) => ((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))))))" "((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))))))"
%|- (sttfa-impl-e "(((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))))) => ((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))))))" "((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))))))"
%|- (sttfa-impl-e "(((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))))) => ((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))))))" "((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))))))"
%|- (sttfa-impl-i "(nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))))" "(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))))"
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(m)))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n0)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n0))(primes_sttfa.sttfa_divides(p)(m))))))" "fact_sttfa.sttfa_fact(n1)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n0)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n0))(primes_sttfa.sttfa_divides(p)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.divides_times_to_divides")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => connectives_sttfa.sttfa_False) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))))" "nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(nat_sttfa.sttfa_S(n1)))))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n1)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n1))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "n1"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n1)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(n)(m) => nat_sttfa.le(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.divides_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(p)(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => connectives_sttfa.sttfa_False) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => connectives_sttfa.sttfa_False) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False)))" "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n1))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(n1))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(n1))(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(y) => nat_sttfa.le(nat_sttfa.sttfa_S(n1))(y)))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(y) => nat_sttfa.le(nat_sttfa.sttfa_S(n1))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))))" ("nat_sttfa.lt") ()
%|- (propax)))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => connectives_sttfa.sttfa_False) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => connectives_sttfa.sttfa_False) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => return))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(B) => return)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-lemma "connectives_sttfa.nmk"))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => P(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))))" "n1"
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](return)(nat_sttfa.sttfa_S(n0)))))" "fact_sttfa.fact_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => P(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):((nat_sttfa.lt(n1)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n1)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n1))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => P(y))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(x)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(x)))) => (nat_sttfa.lt(nat_sttfa.sttfa_S(x))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(x))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(x)))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p) => connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_SO"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p) => connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(n)(m) => nat_sttfa.le(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.divides_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "connectives_sttfa.nmk")))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(fact_sttfa.fact_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](return)(nat_sttfa.sttfa_O)))" "fact_sttfa.fact_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => P(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(y))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => P(y))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(sttfa__x_365)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(sttfa__x_365)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(sttfa__x_365)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(sttfa__x_365)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(sttfa__x_365)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(sttfa__x_365)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(sttfa__x_365)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(sttfa__x_365)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(sttfa__x_365)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(sttfa__x_365)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))
%|- QED

permut_mod  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))))

%|- permut_mod : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))))))" () ("permutation_sttfa.permut")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "primes_sttfa.prime(p)" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))" "connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(j)(nat_sttfa.pred(p)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(j)(nat_sttfa.pred(p)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(nat_sttfa.pred(p))" "(nat_sttfa.le(j)(nat_sttfa.pred(p)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(nat_sttfa.pred(p))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(logic_sttfa.decidable(nat_sttfa.lt(i)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "logic_sttfa.decidable(nat_sttfa.lt(i)(j))"
%|- (sttfa-conv "logic_sttfa.decidable(nat_sttfa.lt(i)(j))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(i)(m)))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.decidable_lt")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(i) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)))" "nat_sttfa.le(j)(i)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => nat_sttfa.le(j)(i))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => nat_sttfa.le(j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(m)) => nat_sttfa.le(m)(i)))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(m)) => nat_sttfa.le(m)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => nat_sttfa.le(m)(n))))" "i"
%|- (sttfa-lemma "nat_sttfa.not_lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.le(j)(i) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "j"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y)))" "j"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(nat_sttfa.lt(j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "nat_sttfa.lt(j)(i)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.minus(i)(j)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)))" "nat_sttfa.le(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => nat_sttfa.le(p)(nat_sttfa.minus(i)(j)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(j)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(j)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(j)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(z))))" "j"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "i"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(i)(j)))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => primes_sttfa.sttfa_divides(p)(x)))" "nat_sttfa.times(a)(nat_sttfa.minus(i)(j))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => primes_sttfa.sttfa_divides(p)(x))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y)))" "div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(sttfa___))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))))))" "p"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(i))(m))))))" "nat_sttfa.times(a)(j)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(i))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(n)(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(n)(m)))))))" "nat_sttfa.times(a)(i)"
%|- (sttfa-lemma "primes_sttfa.eq_mod_to_divides")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.times(a)(i))(nat_sttfa.times(a)(j))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(i)(j))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" "nat_sttfa.minus(i)(j)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" "a"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.divides_times_to_divides")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (propax))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))))" "(primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(a)" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(a) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(a) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => return))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => nat_sttfa.le(p)(nat_sttfa.minus(i)(j))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(j)))(i) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(j)))(i)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(j)))(i) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(j)))(i))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(j)))(i)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(j)))(i) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(j)))(i))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(j)))(i)"
%|- (sttfa-impl-e "(nat_sttfa.lt(j)(i) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(j)))(i))" "nat_sttfa.lt(j)(i)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(j))(i) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(j)))(i))" () ("nat_sttfa.lt")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(j)))(i))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(j))(i) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(j))(i) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(j))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(j))))" "i"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(j))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b)))))" "j"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.lt(a)(nat_sttfa.minus(c)(b))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_plus_to_minus_r")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(i)(j)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(i)(j)) => nat_sttfa.le(p)(nat_sttfa.minus(i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" "nat_sttfa.minus(i)(j)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(n)(m) => nat_sttfa.le(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.divides_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(p)(nat_sttfa.minus(i)(j)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(p))))" "nat_sttfa.minus(i)(j)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))" "p"
%|- (sttfa-lemma "nat_sttfa.le_to_not_lt"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(nat_sttfa.minus(i)(j))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(nat_sttfa.minus(i)(j))(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(i)(j))(y)))" "p"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(i)(j))(y))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(i)(j))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "nat_sttfa.le(nat_sttfa.minus(i)(j))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j)) => nat_sttfa.le(nat_sttfa.minus(i)(j))(nat_sttfa.pred(p)))" "nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(j)) => nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j)))" "nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(j))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(j))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(j)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(j)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "j"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(j)) => nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j))))" "nat_sttfa.le(i)(nat_sttfa.pred(p))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(j)) => nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(z) => nat_sttfa.le(i)(z))))" "nat_sttfa.plus(nat_sttfa.pred(p))(j)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(z) => nat_sttfa.le(i)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(i)(z)))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(i)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "i"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.plus(nat_sttfa.pred(p))(j)) => nat_sttfa.le(nat_sttfa.minus(i)(j))(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.plus(p0)(j)) => nat_sttfa.le(nat_sttfa.minus(i)(j))(p0)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.plus(p0)(j)) => nat_sttfa.le(nat_sttfa.minus(i)(j))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(i)(m))(p0))))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(i)(m))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_minus"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(i)(j))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(i)(j))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(i)(j))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(i)(j)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.minus(i)(j)"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.minus(i)(j))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(i)(j))(y))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(i)(j))(x_1))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(i)(j))(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(i)(j))(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.lt(nat_sttfa.minus(i)(j))(p)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((nat_sttfa.lt(j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(j)(i) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(j)(i) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(j)(i) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(j)(i) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(j)(i))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(j)(i)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(i)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(nat_sttfa.lt(i)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "nat_sttfa.lt(i)(j)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.minus(j)(i)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)))" "nat_sttfa.le(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => nat_sttfa.le(p)(nat_sttfa.minus(j)(i)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(i)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(i)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(i)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(z))))" "i"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "j"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(j)(i)))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => primes_sttfa.sttfa_divides(p)(x)))" "nat_sttfa.times(a)(nat_sttfa.minus(j)(i))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => primes_sttfa.sttfa_divides(p)(x))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))))))" "p"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(j))(m))))))" "nat_sttfa.times(a)(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(j))(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(nat_sttfa.times(a)(j))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(n)(q))(div_mod_sttfa.mod(m)(q)) => primes_sttfa.sttfa_divides(q)(nat_sttfa.minus(n)(m)))))))" "nat_sttfa.times(a)(j)"
%|- (sttfa-lemma "primes_sttfa.eq_mod_to_divides")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.times(a)(j))(nat_sttfa.times(a)(i))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(nat_sttfa.minus(j)(i))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" "nat_sttfa.minus(j)(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" "a"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.divides_times_to_divides")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (propax))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))))" "(primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(a)" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(a) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(a) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => return))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => nat_sttfa.le(p)(nat_sttfa.minus(j)(i))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(i)))(j) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(i)))(j)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(i)))(j) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(i)))(j))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(i)))(j)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(i)))(j) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(i)))(j))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(i)))(j)"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(j) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(i)))(j))" "nat_sttfa.lt(i)(j)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(j) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(i)))(j))" () ("nat_sttfa.lt")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(i)))(j))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(i))(j) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(i))(j) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(i))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(i))))" "j"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(i))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b)))))" "i"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.lt(a)(nat_sttfa.minus(c)(b))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_plus_to_minus_r")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(j)(i)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(j)(i)) => nat_sttfa.le(p)(nat_sttfa.minus(j)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" "nat_sttfa.minus(j)(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(n)(m) => nat_sttfa.le(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.divides_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(p)(nat_sttfa.minus(j)(i)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(p))))" "nat_sttfa.minus(j)(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))" "p"
%|- (sttfa-lemma "nat_sttfa.le_to_not_lt"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(nat_sttfa.minus(j)(i))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(nat_sttfa.minus(j)(i))(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(j)(i))(y)))" "p"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(j)(i))(y))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(j)(i))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "nat_sttfa.le(nat_sttfa.minus(j)(i))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i)) => nat_sttfa.le(nat_sttfa.minus(j)(i))(nat_sttfa.pred(p)))" "nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(i)) => nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i)))" "nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(i))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(i)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-impl-e "(nat_sttfa.le(j)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(i)) => nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i))))" "nat_sttfa.le(j)(nat_sttfa.pred(p))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(j)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(nat_sttfa.plus(nat_sttfa.pred(p))(i)) => nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(z) => nat_sttfa.le(j)(z))))" "nat_sttfa.plus(nat_sttfa.pred(p))(i)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.pred(p)) => (nat_sttfa.le(nat_sttfa.pred(p))(z) => nat_sttfa.le(j)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(j)(z)))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(j)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "j"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(j)(nat_sttfa.plus(nat_sttfa.pred(p))(i)) => nat_sttfa.le(nat_sttfa.minus(j)(i))(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.plus(p0)(i)) => nat_sttfa.le(nat_sttfa.minus(j)(i))(p0)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.plus(p0)(i)) => nat_sttfa.le(nat_sttfa.minus(j)(i))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(j)(m))(p0))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(j)(m))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "j"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_minus"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(j)(i))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(j)(i))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(j)(i))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.minus(j)(i)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.minus(j)(i)"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.minus(j)(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => nat_sttfa.lt(nat_sttfa.minus(j)(i))(y))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(j)(i))(x_1))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(j)(i))(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.minus(j)(i))(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.lt(nat_sttfa.minus(j)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((nat_sttfa.lt(i)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(i)(j) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(i)(j) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(j) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(B) => return)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(j))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(j) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(j))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(i)(j)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))
%|- (sttfa-conv "(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" ("permutation_sttfa.injn") ()
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.pred(p))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(nat_sttfa.pred(p))" "nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.pred(p)))" "nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(p)(x)))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(p)(x))))" "nat_sttfa.le(p)(p)"
%|- (sttfa-conv "nat_sttfa.le(p)(p)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "p"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(p)(x))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(p)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(p)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "p"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p) => (nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))))" "nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(m))(m)))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "nat_sttfa.times(a)(i)"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(p) => (nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(p) => (nat_sttfa.le(p)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(p) => (nat_sttfa.le(p)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(z))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(p) => (nat_sttfa.le(p)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(z)))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(m)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(B))))" "permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p)))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(nat_sttfa.pred(p))))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))))))
%|- QED

eq_fact_pi_p  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))

%|- eq_fact_pi_p : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(x)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "(FORALL(n1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (then@ (sttfa-forall-i "n1")
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(y))(nat_sttfa.times(y)(fact_sttfa.sttfa_fact(n1))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(y))(nat_sttfa.times(y)(fact_sttfa.sttfa_fact(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "fact_sttfa.sttfa_fact(n1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(i))))(nat_sttfa.times((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(m)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(m)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "n1"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n1"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(y))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(y))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(n1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "n1"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(n1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n1)))" "nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(n1)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(n1)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n1"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n1))(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n1"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n1))(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n1))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n1)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n1"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "n1"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(y))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(y)))))" "fact_sttfa.sttfa_fact(n1)"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y))))))" "nat_sttfa.times(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n1"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(nat_sttfa.times(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(n1)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(x))(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(nat_sttfa.plus(n1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.sttfa_S(n1)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n1)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n1)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n1)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n1"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(nat_sttfa.sttfa_S(n1))(fact_sttfa.sttfa_fact(n1))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1))) => P(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n1))(nat_sttfa.sttfa_S(n1)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))))" "n1"
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](return)(nat_sttfa.sttfa_S(n0)))))" "fact_sttfa.fact_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => P(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n1))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(n1)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1))) => P(y))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_S(n1)))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "fact_sttfa.sym_eq_fact"))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_S(x)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "fact_sttfa.eq_fact")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => P(fact_sttfa.fact_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O)) => P(y))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "fact_sttfa.fact_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "fact_sttfa.eq_fact_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(sttfa__x_365))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(sttfa__x_365))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(sttfa__x_365))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(sttfa__x_365))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(sttfa__x_365))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(sttfa__x_365))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(sttfa__x_365))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(sttfa__x_365))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(sttfa__x_365))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(sttfa__x_365))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

congruent_pi  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))))

%|- congruent_pi : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))))" "(FORALL(n1:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))))"
%|- (then@ (sttfa-forall-i "n1")
%|- (sttfa-impl-i "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))"
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n1))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => cong_sttfa.congruent(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => cong_sttfa.congruent(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))" "cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)"
%|- (sttfa-impl-e "(cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" "cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)"
%|- (sttfa-impl-e "(cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" "cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))(p)"
%|- (sttfa-impl-e "(cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))(p))" "cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p)"
%|- (sttfa-impl-e "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p))" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" "p"
%|- (propax))))
%|- (sttfa-impl-e "(cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p)))" "cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p0))(p0)))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p0))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(n)(div_mod_sttfa.mod(n)(p))(p))))" "f(n1)"
%|- (sttfa-lemma "cong_sttfa.congruent_n_mod_n"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p0)))))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(m1))(p0))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(div_mod_sttfa.mod(f(n1))(p))(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(m1))(p0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(n10)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(n10)(m1))(p0)))))))" "div_mod_sttfa.mod(f(n1))(p)"
%|- (sttfa-conv "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(n10)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.times(n10)(m1))(p0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(n10)(p0) => (cong_sttfa.congruent(m)(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(m))(nat_sttfa.times(n10)(m1))(p0))))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(f(n1))(n10)(p0) => (cong_sttfa.congruent(m)(m1)(p0) => cong_sttfa.congruent(nat_sttfa.times(f(n1))(m))(nat_sttfa.times(n10)(m1))(p0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(n)(n1)(p) => (cong_sttfa.congruent(m)(m1)(p) => cong_sttfa.congruent(nat_sttfa.times(n)(m))(nat_sttfa.times(n1)(m1))(p)))))))))" "f(n1)"
%|- (sttfa-lemma "cong_sttfa.congruent_times"))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y)(p))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))) => (LAMBDA(y:nat_sttfa.sttfa_nat):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y)(p))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y)(p))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(case_false)(bool_sttfa.sttfa_true)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p)))))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "nat_sttfa.times(div_mod_sttfa.mod(f(n1))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1))))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1))))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)(p0)(nil)(op)(f0))(p0(n1)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)(p0)(nil)(op)(f0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)(p0)(nil)(op)(f0))(p0(n0)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_S[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):cong_sttfa.congruent(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_S[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(n1))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-impl-e "((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))))" "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))"
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)"
%|- (sttfa-conv "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p0))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p0))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(n)(p)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "cong_sttfa.congruent_n_n"))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

congruent_exp_pred_SO  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)))))

%|- congruent_exp_pred_SO : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "primes_sttfa.prime(p)" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))" "cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))(nat_sttfa.times(y)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))(nat_sttfa.times(y)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(x)))" "nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(x))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(z)))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(z))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(z)))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(z)))))" "exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(x)))" "nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => primes_sttfa.sttfa_divides(p)(x))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-lemma "nat_sttfa.times_n_1")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(y))))" "nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(y)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "fermat_sttfa.eq_fact_pi_p")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(x)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(x)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y))(nat_sttfa.times(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y))(nat_sttfa.times(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.times(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.pred(p))(m)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.pred(p))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "nat_sttfa.minus_S_S")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y)))" "nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y)))" "nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.pred(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.pred(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.pred(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))(nat_sttfa.pred(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(nat_sttfa.pred(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.pred(p))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.pred(p)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(c)(b)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(b))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(b)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(c)(b)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(b))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(b)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(c)(b)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(b))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(c)(b))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(f(nat_sttfa.plus(i)(b))))))))))" "a"
%|- (sttfa-lemma "sigma_pi_sttfa.exp_pi_bc")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-impl-e "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)"
%|- (sttfa-impl-e "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "bigops_sttfa.bigop_I_gen")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.pred(p)"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(p0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "bigops_sttfa.bigop_I_gen")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))))" "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))))" "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))" "bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))"
%|- (sttfa-impl-e "(permutation_sttfa.permut(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(nat_sttfa.pred(p)) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))" "permutation_sttfa.permut(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.permut(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(nat_sttfa.pred(p)))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" "a"
%|- (sttfa-conv "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))))" "p"
%|- (sttfa-lemma "fermat_sttfa.permut_mod")))))))
%|- (sttfa-conv "(permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.permut(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p)))(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(n)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p)))(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)((LAMBDA(n0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n0))(p))))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n))))" "(LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))"
%|- (sttfa-lemma "permutation_sttfa.permut_invert_permut"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p))))" "(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))))))"
%|- (sttfa-impl-i "permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(i)))(p))(i)"
%|- (sttfa-impl-e "(permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(i)))(p))(i))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" "a"
%|- (sttfa-conv "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))))" "p"
%|- (sttfa-lemma "fermat_sttfa.permut_mod")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(i)))(p))(i)))" "nat_sttfa.le(i)(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(i)))(p))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(m)))(p))(m))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(m)))(p))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(m)))(p))(m)))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))(permutation_sttfa.invert_permut(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))"
%|- (sttfa-lemma "permutation_sttfa.f_invert_permut")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(y))(p))))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(y))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(y))(p)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(x))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y))))))" "(LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(y)(p))(nat_sttfa.sttfa_O)))" "nat_sttfa.times(a)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(y)(p))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" "p"
%|- (sttfa-lemma "div_mod_sttfa.mod_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(x_1)(p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(x_1)(p))(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(x_1)(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False)))" "div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.sttfa_O))(p)"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)"
%|- (sttfa-impl-e "(permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" "a"
%|- (sttfa-conv "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))))" "p"
%|- (sttfa-lemma "fermat_sttfa.permut_mod")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))" "nat_sttfa.le(i)(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(m)))(p))(m))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(m)))(p))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(n)((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(m)))(p))(m)))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(permutation_sttfa.invert_permut(n)((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))))))" "(LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))"
%|- (sttfa-lemma "permutation_sttfa.f_invert_permut")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x) => connectives_sttfa.sttfa_False)))" "div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i) => connectives_sttfa.sttfa_False) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x) => connectives_sttfa.sttfa_False))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(i) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "i"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_False"
%|- (sttfa-conv "connectives_sttfa.sttfa_False" () ()
%|- (sttfa-forall-e "(FORALL(P:bool):P)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true) => (FORALL(P:bool):P))" "bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false) => bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))" "bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(y) => bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(y))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(y))(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(y) => bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(y))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(y))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(y))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(y))(x))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.bool_discr"))))))
%|- (sttfa-conv "((LAMBDA(y:bool):y)(bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool):y)(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):(P0 => P0)))((FORALL(P0:bool):P0))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):P0))((FORALL(P0:bool):(P0 => P0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):P0))((FORALL(P0:bool):(P0 => P0)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):(P0 => P0)))((FORALL(P0:bool):P0))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):P0))((FORALL(P0:bool):(P0 => P0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true))(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool):(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.match_bool_type[bool]((FORALL(P:bool):(P => P)))((FORALL(P:bool):P))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool):y)(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool):y)((FORALL(P:bool):P)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):P0))((FORALL(P0:bool):(P0 => P0)))(bool_sttfa.sttfa_true)) => P((FORALL(P0:bool):P0))))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(bool_sttfa.match_bool_type[bool]((FORALL(P0:bool):P0))((FORALL(P0:bool):(P0 => P0)))(bool_sttfa.sttfa_true)) => P(y))))((FORALL(P:bool):P))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))((FORALL(P:bool):P))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))((FORALL(P:bool):P))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))((FORALL(P:bool):(P => P)))(bool_sttfa.sttfa_true))((FORALL(P:bool):P))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))(case_false)(bool_sttfa.sttfa_true))((FORALL(P:bool):P)))" "(FORALL(P:bool):(P => P))"
%|- (sttfa-conv "(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool]((FORALL(P:bool):P))(case_false)(bool_sttfa.sttfa_true))((FORALL(P:bool):P)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool):(FORALL(case_false:bool):leibniz_sttfa.leibniz[bool](bool_sttfa.match_bool_type[bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "(FORALL(P:bool):P)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool]"))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" ("bool_sttfa.andb") ()
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_O)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_O))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m))) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m))) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(nat_sttfa.sttfa_O)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x_1))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x_1))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x_1))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x) => connectives_sttfa.sttfa_False))(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (LAMBDA(x0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x0) => connectives_sttfa.sttfa_False))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "i"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (LAMBDA(x0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p)) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => return))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true)))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.le_to_leb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ("bool_sttfa.andb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x0)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))" "nat_sttfa.le(i)(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p))))" "i"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.pred(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(p))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(i)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))" ("bigops_sttfa.sub_hk") ()
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => return)))" "bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(B) => return))))" "permutation_sttfa.injn(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p))))(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p)))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.pred(p)) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(i))(nat_sttfa.pred(p))))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))) => (bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))" "connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)))"
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i))))) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)"
%|- (sttfa-impl-e "(permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i))" "permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" "a"
%|- (sttfa-conv "(FORALL(a0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a0)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a0)(n))(p)))(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))))" "p"
%|- (sttfa-lemma "fermat_sttfa.permut_mod")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)))) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p))))" "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))))"
%|- (sttfa-impl-i "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(nat_sttfa.pred(p))))" "(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)))"
%|- (sttfa-impl-i "permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))" "permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (propax)))
%|- (sttfa-conv "(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)))) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))) => permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))) => return)))" "permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(B) => return))))" "permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(n))(p)))(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p)))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(nat_sttfa.pred(p)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.times(a)(i1))(p))(nat_sttfa.pred(p))))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)))" "nat_sttfa.le(i)(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => nat_sttfa.le(i)(nat_sttfa.pred(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.pred(p)) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(m))(p)))(m))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.pred(p)) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(nat_sttfa.pred(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(m))(p)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(m))(p)))(m)))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))))" "(LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))"
%|- (sttfa-lemma "permutation_sttfa.invert_permut_f")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => primes_sttfa.sttfa_divides(p)(a)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => primes_sttfa.sttfa_divides(p)(a))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => primes_sttfa.sttfa_divides(p)(a))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" "a"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.divides_times_to_divides")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(i) => primes_sttfa.sttfa_divides(p)(a)) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => primes_sttfa.sttfa_divides(p)(a)))" "(primes_sttfa.sttfa_divides(p)(i) => primes_sttfa.sttfa_divides(p)(a))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(i)" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(a))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(i) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(x)(i)))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(x)(i))))" "nat_sttfa.le(p)(i)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(i) => nat_sttfa.le(p)(i))" "primes_sttfa.sttfa_divides(p)(i)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i) => (primes_sttfa.sttfa_divides(p)(i) => nat_sttfa.le(p)(i)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(b1:bool_sttfa.sttfa_bool):(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(b1)(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](b1)(bool_sttfa.sttfa_true))))" "nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i)"
%|- (sttfa-lemma "bool_sttfa.andb_true_l"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.leb_true_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(i) => (primes_sttfa.sttfa_divides(p)(i) => nat_sttfa.le(p)(i)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(i) => (primes_sttfa.sttfa_divides(p)(i) => nat_sttfa.le(p)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(p)(m) => nat_sttfa.le(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (primes_sttfa.sttfa_divides(n)(m) => nat_sttfa.le(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.divides_to_le"))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(i))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(x0)(i))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "p"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(i) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-lemma "nat_sttfa.le_to_not_lt"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(a))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(a)) => ((primes_sttfa.sttfa_divides(p)(i) => primes_sttfa.sttfa_divides(p)(a)) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => primes_sttfa.sttfa_divides(p)(a))))" "(primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(a))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(a)" "primes_sttfa.sttfa_divides(p)(a)"
%|- (propax))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(a) => primes_sttfa.sttfa_divides(p)(a)) => ((primes_sttfa.sttfa_divides(p)(i) => primes_sttfa.sttfa_divides(p)(a)) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => primes_sttfa.sttfa_divides(p)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(i) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => return))))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((primes_sttfa.sttfa_divides(p)(i) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(primes_sttfa.sttfa_divides(p)(i)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" "primes_sttfa.sttfa_divides(p)(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(a) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(a))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => primes_sttfa.sttfa_divides(p)(a)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))))))" "primes_sttfa.sttfa_divides(p)(a)"
%|- (sttfa-conv "(FORALL(B:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(p))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(p)(m))))" "nat_sttfa.times(a)(i)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(p))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.mod_O_to_divides")))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(a)(i))"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => return))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true)))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.le_to_leb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ("bool_sttfa.andb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x0)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x)))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x))))" "nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(p))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(m))(m)))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "nat_sttfa.times(a)(i)"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "p"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p)))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))" ("bigops_sttfa.sub_hk") ()
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))) => (bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))) => (bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(B))))" "bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))"
%|- (sttfa-conv "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(x))(p)))))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))) => (bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(B))))" "bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0)))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(x)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))))" "permutation_sttfa.invert_permut(nat_sttfa.pred(p))((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-conv "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))(x) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(P(x) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](P))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(y)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(y)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))((LAMBDA(i0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i0))(p))(i))))))(bigops_sttfa.sub_hk((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x(i))))))(bigops_sttfa.sub_hk(x)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))))))" "(LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))"
%|- (sttfa-conv "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))(x) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x0(i))))))(bigops_sttfa.sub_hk(x0)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x0)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(P(x) => connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](P))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(nat_sttfa.pred(p))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))(x(i))))))(bigops_sttfa.sub_hk(x)(k)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))))(bigops_sttfa.sub_hk(k)(x)(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa__0))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):sttfa__0))((LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa__0))(p)))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))
%|- (sttfa-conv "(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))))" ("bigops_sttfa.iso") ()
%|- (sttfa-conv "(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):sttfa___)"
%|- (sttfa-conv "(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p)))(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(sttfa___))(p))"
%|- (sttfa-conv "(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true))(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true)))(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true))(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(n2)(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(n2)(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-lemma "bigops_sttfa.bigop_iso")))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i)))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(i))(p)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(i))(bool_sttfa.sttfa_true)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):i))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y) => cong_sttfa.congruent(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))"
%|- (sttfa-impl-e "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y) => cong_sttfa.congruent(y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))))" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)"
%|- (sttfa-conv "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p0))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p0))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(n)(p)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-lemma "cong_sttfa.congruent_n_n")))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):cong_sttfa.congruent(x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)))" "cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p0))))(p0)))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p0))))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p0))))(p0))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(i))(p0))))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(f(i))(p))))(p)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-lemma "fermat_sttfa.congruent_pi"))))))))
%|- (sttfa-conv "(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(z)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(z)(p))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p))))(z)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(z)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(y)(p) => (cong_sttfa.congruent(y)(z)(p) => cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(z)(p)))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):div_mod_sttfa.mod(nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(p)))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(y) => ((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(y)(z) => (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(x)(y) => ((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(y)(z) => (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))(x)(z))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p))))" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat]((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p))))" ("relations_sttfa.transitive") ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat]((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):relations_sttfa.transitive[nat_sttfa.sttfa_nat]((LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):cong_sttfa.congruent(n)(m)(p)))))" "p"
%|- (sttfa-lemma "cong_sttfa.transitive_congruent")))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p0) => primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))(p0) => primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(m)(p0) => primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(m))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (cong_sttfa.congruent(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(m)(p0) => primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (cong_sttfa.congruent(n)(m)(p) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(n)(m)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-lemma "cong_sttfa.congruent_to_divides")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(x0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(x)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(x0)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(x)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):nat_sttfa.plus(i)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x_1)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(p)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(m)))))" "fact_sttfa.sttfa_fact(nat_sttfa.pred(p))"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" "nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.divides_times_to_divides")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "p"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(p))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(p)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(p))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(p))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(p)))(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(x0))(nat_sttfa.sttfa_S(p)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(p) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "p"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(m)))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.pred(p))))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.pred(p)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "nat_sttfa.sttfa_S(nat_sttfa.pred(p))"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.pred(p))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.pred(p))(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n)))))" "nat_sttfa.pred(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n))))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(p) => connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(n)))))))" "p"
%|- (sttfa-lemma "fermat_sttfa.prime_to_not_divides_fact"))))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => ((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (propax))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => ((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return) => ((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => return))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return) => ((primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p))) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => return)))))" "primes_sttfa.sttfa_divides(p)(fact_sttfa.sttfa_fact(nat_sttfa.pred(p)))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(a) => nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(a)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(a))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(a)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(a))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(z)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(z)))" "a"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))) => (FORALL(z:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(z)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(z))))" "(FORALL(auto:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(auto))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(auto)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "auto"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_S(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))) => (FORALL(z:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(z)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(z)))))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-impl-e "(((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "p"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.times(p)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => primes_sttfa.sttfa_divides(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.quotient"))))))))
%|- (propax))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "(((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(Q:bool):(((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => Q) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => Q)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(Q:bool):(((primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => Q) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)) => Q)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(Q:bool):(((A => connectives_sttfa.sttfa_False) => Q) => (connectives_sttfa.sttfa_Not(A) => Q))))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.Not_ind"))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(sttfa___)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(sttfa___)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(sttfa___)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(sttfa___)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(a) => nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(a) => nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(m))))" "nat_sttfa.pred(p)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(a) => nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(nat_sttfa.sttfa_O)(exp_sttfa.sttfa_exp(n)(m)))))" "a"
%|- (sttfa-lemma "exp_sttfa.lt_O_exp"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p)))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))" "p"
%|- (sttfa-lemma "primes_sttfa.prime_to_lt_O"))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p0)))))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (nat_sttfa.le(m)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(m)) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(m)(p0))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p0) => (nat_sttfa.le(m)(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))) => (primes_sttfa.sttfa_divides(p0)(nat_sttfa.minus(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(m)) => cong_sttfa.congruent(exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p)))(m)(p0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.le(m)(n) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.minus(n)(m)) => cong_sttfa.congruent(n)(m)(p)))))))" "exp_sttfa.sttfa_exp(a)(nat_sttfa.pred(p))"
%|- (sttfa-lemma "cong_sttfa.divides_to_congruent")))))))))))))))
%|- QED

END fermat_sttfa

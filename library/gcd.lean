import .bool
import .connectives
import .div_mod
import .leibniz
import .logic
import .nat
import .primes
constant gcd.gcd_aux : ((nat.nat) ) -> ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) .
constant gcd.gcd_aux_body : ((nat.nat) ) -> ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) .
axiom gcd.axiom_gcd_aux : forall (p:(nat.nat) ) , (((connectives.equal) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux) ) (p))) ((((nat.filter_nat_type) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p)).
theorem gcd.eq_gcd_aux : forall (p:(nat.nat) ) , (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux) ) (p))) ((((nat.filter_nat_type) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p)) := fun (p : (nat.nat) ) , ((((@connectives.equal_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux) ) (p))) ((((nat.filter_nat_type) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p))) ((@gcd.axiom_gcd_aux) (p)).
theorem gcd.sym_eq_gcd_aux : forall (p:(nat.nat) ) , (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((((nat.filter_nat_type) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p))) (((gcd.gcd_aux) ) (p)) := fun (p : (nat.nat) ) , ((((@leibniz.sym_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux) ) (p))) ((((nat.filter_nat_type) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p))) ((@gcd.eq_gcd_aux) (p)).
axiom gcd.axiom_gcd_aux_body_O : (((connectives.equal) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) ((nat.O) ))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , m).
theorem gcd.eq_gcd_aux_body_O : (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) ((nat.O) ))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , m) := ((((@connectives.equal_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) ((nat.O) ))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , m)) (@gcd.axiom_gcd_aux_body_O).
theorem gcd.sym_eq_gcd_aux_body_O : (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , m)) (((gcd.gcd_aux_body) ) ((nat.O) )) := ((((@leibniz.sym_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) ((nat.O) ))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , m)) (@gcd.eq_gcd_aux_body_O).
axiom gcd.axiom_gcd_aux_body_S : forall (p:(nat.nat) ) , (((connectives.equal) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) (((nat.S) ) (p)))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((primes.dividesb) ) (n)) (m))).
theorem gcd.eq_gcd_aux_body_S : forall (p:(nat.nat) ) , (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) (((nat.S) ) (p)))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((primes.dividesb) ) (n)) (m))) := fun (p : (nat.nat) ) , ((((@connectives.equal_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) (((nat.S) ) (p)))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((primes.dividesb) ) (n)) (m)))) ((@gcd.axiom_gcd_aux_body_S) (p)).
theorem gcd.sym_eq_gcd_aux_body_S : forall (p:(nat.nat) ) , (((leibniz.leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((primes.dividesb) ) (n)) (m)))) (((gcd.gcd_aux_body) ) (((nat.S) ) (p))) := fun (p : (nat.nat) ) , ((((@leibniz.sym_leibniz) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) (((gcd.gcd_aux_body) ) (((nat.S) ) (p)))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((primes.dividesb) ) (n)) (m)))) ((@gcd.eq_gcd_aux_body_S) (p)).
noncomputable def gcd.gcd : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat)  := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((((nat.leb) ) (n)) (m)).
theorem gcd.commutative_gcd : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) ((((gcd.gcd) ) (m)) (n)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , (((((@nat.leb_elim) (n)) (m)) (fun (__ : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (__))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) ((((nat.leb) ) (m)) (n))))) (fun (lenm : (((nat.le_) ) (n)) (m)) , (((((((@connectives.match_Or_prop) ((((nat.lt_) ) (n)) (m))) ((((logic.eq_) ((nat.nat) )) (n)) (m))) ((((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) ))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) ((((nat.leb) ) (m)) (n))))) (fun (ltnm : (((nat.lt_) ) (n)) (m)) , (((((((@logic.eq_ind_r) ((bool.bool) )) ((bool.false) )) (fun (x : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) ))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (x)))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) ))) (y))) ((((((@bool.eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) ))) (y))) (((@logic.refl_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) )))))) ((((nat.leb) ) (m)) (n))) ((((@nat.not_le_to_leb_false) (m)) (n)) ((((@nat.lt_to_not_le) (n)) (m)) (ltnm)))))) (fun (eqnm : (((logic.eq_) ((nat.nat) )) (n)) (m)) , (((((((@logic.eq_ind_r) ((nat.nat) )) (m)) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (x)) (m)) (x))) (((((gcd.gcd_aux) ) (m)) (x)) (m))) ((bool.true) ))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (x)) (m))) (((((gcd.gcd_aux) ) (x)) (m)) (x))) ((((nat.leb) ) (m)) (x))))) (((((@bool.match_bool_prop) (fun (__ : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) ((bool.true) ))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (__)))) (((@logic.refl_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) ((bool.true) )))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) ((bool.true) ))) (y))) ((((((@bool.eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) ((bool.true) ))) (y))) (((@logic.refl_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (m)) (m))) (((((gcd.gcd_aux) ) (m)) (m)) (m))) ((bool.true) )))))) ((((nat.leb) ) (m)) (m)))) (n)) (eqnm)))) ((((@nat.le_to_or_lt_eq) (n)) (m)) (lenm))))) (fun (notlenm : ((connectives.Not) ) ((((nat.le_) ) (n)) (m))) , (((((((@logic.eq_ind_r) ((bool.bool) )) ((bool.true) )) (fun (x : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.false) ))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (x)))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (y)) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) ((bool.true) )))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (y))) ((((((@bool.eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (y))) ((((((@bool.eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (y)) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.false) )))) (((@logic.refl_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.false) )))))))) ((((nat.leb) ) (m)) (n))) ((((@nat.le_to_leb_true) (m)) (n)) ((((((@nat.transitive_le) (m)) (((nat.S) ) (m))) (n)) ((@nat.le_n_Sn) (m))) ((((@nat.not_le_to_lt) (n)) (m)) (notlenm)))))).
theorem gcd.gcd_O_l : forall (m:(nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (m) := fun (m : (nat.nat) ) , (((((@bool.eq_match_bool_type_true) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (y))) (((@nat.eq_leb_body_O) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> (bool.bool) )) ((nat.leb_body) )) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) ((((@nat.eq_leb) ((nat.O) )) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) (((@gcd.eq_gcd_aux_body_O) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) ((((@gcd.eq_gcd_aux) ((nat.O) )) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) (((@logic.refl_) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (m))))))))).
theorem gcd.divides_mod_to_divides : forall (p:(nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (p)) ((((div_mod.mod) ) (m)) (n))) -> ((((primes.divides) ) (p)) (n)) -> (((primes.divides) ) (p)) (m) := fun (p : (nat.nat) ) , fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (_clearme : (((primes.divides) ) (p)) ((((div_mod.mod) ) (m)) (n))) , ((((((@primes.match_divides_prop) (p)) ((((div_mod.mod) ) (m)) (n))) (((((primes.divides) ) (p)) (n)) -> (((primes.divides) ) (p)) (m))) (fun (q1 : (nat.nat) ) , fun (eq1 : (((logic.eq_) ((nat.nat) )) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) (p)) (q1))) , (fun (_clearme0 : (((primes.divides) ) (p)) (n)) , ((((((@primes.match_divides_prop) (p)) (n)) ((((primes.divides) ) (p)) (m))) (fun (q2 : (nat.nat) ) , fun (eq2 : (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) (p)) (q2))) , (((((@primes.quotient) (p)) (m)) ((((nat.plus) ) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n)))) (q1))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (p)) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (p)) (q1)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (x))) (((((((@logic.eq_ind) ((nat.nat) )) ((((div_mod.mod) ) (m)) (n))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.plus) ) ((((nat.times) ) (p)) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n))))) (x_1)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (p)) (q2))) ((((div_mod.div) ) (m)) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.plus) ) (x_1)) ((((div_mod.mod) ) (m)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) (n)) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.plus) ) ((((nat.times) ) (x_1)) ((((div_mod.div) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.plus) ) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((@logic.refl_) ((nat.nat) )) (m))) ((((nat.plus) ) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.plus) ) (__)) ((((div_mod.mod) ) (m)) (n))))) (((@div_mod.div_mod) (m)) (n))) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) (((@nat.commutative_times) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.plus) ) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) (((@nat.commutative_plus) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n)))))) ((((nat.plus) ) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n)))) (((@nat.commutative_plus) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (p)) (q2))) (eq2))) ((((nat.times) ) (p)) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n))))) ((((@nat.associative_times) (p)) (q2)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (p)) (q1))) (eq1))) ((((nat.times) ) (p)) ((((nat.plus) ) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n)))) (q1)))) ((((@nat.distributive_times_plus) (p)) ((((nat.times) ) (q2)) ((((div_mod.div) ) (m)) (n)))) (q1)))))) (_clearme0))))) (_clearme))).
theorem gcd.divides_to_gcd_aux : forall (p:(nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (p)) -> ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (n)) (m)) -> (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (p)) (m)) (n))) (n) := fun (p : (nat.nat) ) , fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posp : (((nat.lt_) ) ((nat.O) )) (p)) , (((((@nat.lt_O_n_elim) (p)) (posp)) (fun (__ : (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (n)) (m)) -> (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (__)) (m)) (n))) (n))) (fun (l : (nat.nat) ) , (((@gcd.sym_eq_gcd_aux) (((nat.S) ) (l))) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (n)) (m)) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (n))) ((((((@nat.sym_eq_filter_nat_type_S) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (l)) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (n)) (m)) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (n))) ((((@gcd.sym_eq_gcd_aux_body_S) (l)) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((primes.divides) ) (n)) (m)) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (n))) (fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (divnm : (((primes.divides) ) (n)) (m)) , (((((((@logic.eq_ind_r) ((bool.bool) )) ((bool.true) )) (fun (x : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (l)) (n)) ((((div_mod.mod) ) (m)) (n)))) (x))) (n))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (l)) (n)) (((((nat.match_nat_type) ((nat.nat) )) (m)) (fun (p0 : (nat.nat) ) , ((((div_mod.mod_aux) ) (m)) (m)) (p0))) (n)))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (y)) (n))) (((@logic.refl_) ((nat.nat) )) (n)))) ((((primes.dividesb) ) (n)) (m))) (((((@primes.divides_to_dividesb_true) (n)) (m)) (posn)) (divnm))))))))).
theorem gcd.not_divides_to_gcd_aux : forall (p:(nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (((nat.S) ) (p))) (m)) (n))) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n))) := fun (p : (nat.nat) ) , fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , (((@gcd.sym_eq_gcd_aux) (((nat.S) ) (p))) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((((@nat.sym_eq_filter_nat_type_S) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (p)) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((@gcd.sym_eq_gcd_aux_body_S) (p)) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) (((y) (m)) (n))) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n))))) (fun (lenm : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (divnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (((((((@logic.eq_ind_r) ((bool.bool) )) ((bool.false) )) (fun (x : (bool.bool) ) , (((logic.eq_) ((nat.nat) )) (((((bool.match_bool_type) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n)))) (x))) (((((gcd.gcd_aux) ) (p)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (n)) (((((gcd.gcd_aux) ) (p)) (n)) (((((nat.match_nat_type) ((nat.nat) )) (m)) (fun (p0 : (nat.nat) ) , ((((div_mod.mod_aux) ) (m)) (m)) (p0))) (n)))) (fun (y : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (y)) (((((gcd.gcd_aux) ) (p)) (n)) (((((nat.match_nat_type) ((nat.nat) )) (m)) (fun (p0 : (nat.nat) ) , ((((div_mod.mod_aux) ) (m)) (m)) (p0))) (n))))) (((@logic.refl_) ((nat.nat) )) (((((gcd.gcd_aux) ) (p)) (n)) (((((nat.match_nat_type) ((nat.nat) )) (m)) (fun (p0 : (nat.nat) ) , ((((div_mod.mod_aux) ) (m)) (m)) (p0))) (n)))))) ((((primes.dividesb) ) (n)) (m))) (((((@primes.not_divides_to_dividesb_false) (n)) (m)) (lenm)) (divnm))))))).
theorem gcd.divides_gcd_aux_mn : forall (p:(nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (p)) -> (((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (p)) (m)) (n))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (p)) (m)) (n))) (n)) := fun (p : (nat.nat) ) , ((((@nat.nat_ind) (fun (_x_365 : (nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (_x_365)) -> (((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (_x_365)) (m)) (n))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (_x_365)) (m)) (n))) (n)))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenO : (((nat.le_) ) (n)) ((nat.O) )) , (((@connectives.falsity) ((((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) (n))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) (n))) (n)))) ((((@logic.absurd) ((((nat.lt_) ) ((nat.O) )) (n))) (posn)) ((((@nat.le_to_not_lt) (n)) ((nat.O) )) (lenO)))))))) (fun (q : (nat.nat) ) , fun (Hind : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> (((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (m)) (n))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (m)) (n))) (n))) , (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenS : (((nat.le_) ) (n)) (((nat.S) ) (q))) , (((((((@connectives.match_Or_prop) ((((primes.divides) ) (n)) (m))) (((connectives.Not) ) ((((primes.divides) ) (n)) (m)))) ((((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) (n)))) (fun (divnm : (((primes.divides) ) (n)) (m)) , (((((((@logic.eq_ind_r) ((nat.nat) )) (n)) (fun (x : (nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) (x)) (m))) ((((primes.divides) ) (x)) (n)))) (((((@connectives.conj) ((((primes.divides) ) (n)) (m))) ((((primes.divides) ) (n)) (n))) (divnm)) ((@primes.divides_n_n) (n)))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) (((((((@gcd.divides_to_gcd_aux) (((nat.S) ) (q))) (m)) (n)) ((@nat.lt_O_S) (q))) (posn)) (divnm))))) (fun (ndivnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (((((((@logic.eq_ind_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (x : (nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) (x)) (m))) ((((primes.divides) ) (x)) (n)))) ((((((@connectives.match_And_prop) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (n))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n)))) ((((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (n)))) (fun (H : (((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (n)) , (fun (H1 : (((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((div_mod.mod) ) (m)) (n))) , (((((@connectives.conj) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (n))) (((((((@gcd.divides_mod_to_divides) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (m)) (n)) (posn)) (H1)) (H))) (H))))) ((((((Hind) (n)) ((((div_mod.mod) ) (m)) (n))) (((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) (fun (auto : (((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) , (auto))) (fun (modO : (((logic.eq_) ((nat.nat) )) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) , (((@connectives.falsity) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((@logic.absurd) ((((primes.divides) ) (n)) (m))) (((((@primes.mod_O_to_divides) (n)) (m)) (posn)) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((nat.O) ))) (((@logic.refl_) ((nat.nat) )) ((nat.O) ))) ((((div_mod.mod) ) (m)) (n))) (modO)))) (ndivnm))))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) ((@nat.le_O_n) ((((div_mod.mod) ) (m)) (n)))))) ((((@nat.lt_to_le) ((((div_mod.mod) ) (m)) (n))) (n)) ((((@div_mod.lt_mod_m_m) (m)) (n)) (posn)))) ((((@nat.le_S_S_to_le) ((((div_mod.mod) ) (m)) (n))) (q)) ((((((@nat.transitive_le) (((nat.S) ) ((((div_mod.mod) ) (m)) (n)))) (n)) (((nat.S) ) (q))) ((((@div_mod.lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) ((((((@gcd.not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (((@primes.decidable_divides) (n)) (m)))))))) (p).
theorem gcd.divides_gcd_nm : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) (n))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (n))) ((((connectives.And) ) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n)))) (fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) (m))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (m))) ((((connectives.And) ) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n)))) (fun (posm : (((nat.lt_) ) ((nat.O) )) (m)) , ((((((@nat.leb_elim) (n)) (m)) (fun (__ : (bool.bool) ) , (((connectives.And) ) ((((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (__))) (m))) ((((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (__))) (n)))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , ((((nat.le_) ) (n)) (m)) -> (((connectives.And) ) ((((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) ))) (m))) ((((primes.divides) ) (y)) (n)))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , ((((nat.le_) ) (n)) (m)) -> (((connectives.And) ) ((((primes.divides) ) (y)) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (n)))) (fun (lenm : (((nat.le_) ) (n)) (m)) , (((((((@gcd.divides_gcd_aux_mn) (n)) (m)) (n)) (posn)) (lenm)) ((@nat.le_n) (n))))))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((connectives.Not) ) ((((nat.le_) ) (n)) (m))) -> (((connectives.And) ) ((((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.false) ))) (m))) ((((primes.divides) ) (y)) (n)))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((connectives.Not) ) ((((nat.le_) ) (n)) (m))) -> (((connectives.And) ) ((((primes.divides) ) (y)) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (n)))) (fun (notlt : ((connectives.Not) ) ((((nat.le_) ) (n)) (m))) , ((((((@connectives.match_And_prop) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (n))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (m))) ((((connectives.And) ) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (n)))) (fun (auto : (((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (n)) , (fun (auto' : (((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (m)) , (((((@connectives.conj) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (m))) ((((primes.divides) ) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (n))) (auto')) (auto))))) (((((((@gcd.divides_gcd_aux_mn) (m)) (n)) (m)) (posm)) ((((((@nat.transitive_le) (m)) (((nat.S) ) (m))) (n)) ((@nat.le_n_Sn) (m))) ((((@nat.not_le_to_lt) (n)) (m)) (notlt)))) ((@nat.le_n) (m)))))))))) (fun (eqmO : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (m)) , (((((((@logic.eq_ind) ((nat.nat) )) ((nat.O) )) (fun (x_1 : (nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (x_1))) (x_1))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (x_1))) (n)))) (((((@connectives.conj) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) ((nat.O) ))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) (n))) ((@primes.divides_n_O) ((((gcd.gcd) ) (n)) ((nat.O) )))) (((((@logic.eq_coerc) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) ((((gcd.gcd) ) (n)) ((nat.O) )))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) (n))) ((@primes.divides_n_n) ((((gcd.gcd) ) (n)) ((nat.O) )))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) (__))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) (n)))) (((@logic.refl_) (Prop)) ((((primes.divides) ) ((((gcd.gcd) ) (n)) ((nat.O) ))) (n)))) ((((gcd.gcd) ) (n)) ((nat.O) ))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((gcd.gcd) ) ((nat.O) )) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) ((nat.O) ))) (__))) (((@gcd.commutative_gcd) (n)) ((nat.O) ))) (n)) ((@gcd.gcd_O_l) (n))))))) (m)) (eqmO)))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) (m)) ((@nat.le_O_n) (m)))))) (fun (eqnO : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) , (((((((@logic.eq_ind) ((nat.nat) )) ((nat.O) )) (fun (x_1 : (nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) ((((gcd.gcd) ) (x_1)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (x_1)) (m))) (x_1)))) (((((@connectives.conj) ((((primes.divides) ) ((((gcd.gcd) ) ((nat.O) )) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) ((nat.O) )) (m))) ((nat.O) ))) ((((((@bool.eq_match_bool_type_true) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) (fun (y : (nat.nat) ) , (((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m)))) (y))) (((@nat.eq_leb_body_O) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> (bool.bool) )) ((nat.leb_body) )) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) ((((@nat.eq_leb) ((nat.O) )) (fun (y : ((nat.nat) ) -> (bool.bool) ) , (((primes.divides) ) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (m)) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((y) (m))))) (((@gcd.eq_gcd_aux_body_O) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((primes.divides) ) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) )) ((gcd.gcd_aux_body) )) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((primes.divides) ) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) ((((@gcd.eq_gcd_aux) ((nat.O) )) (fun (y : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) ) , (((primes.divides) ) ((((gcd.gcd) ) ((nat.O) )) (m))) (((((bool.match_bool_type) ((nat.nat) )) (((y) (m)) ((nat.O) ))) (((((gcd.gcd_aux) ) (m)) ((nat.O) )) (m))) ((((nat.leb) ) ((nat.O) )) (m))))) ((@primes.divides_n_n) ((((gcd.gcd) ) ((nat.O) )) (m))))))))))) ((@primes.divides_n_O) ((((gcd.gcd) ) ((nat.O) )) (m))))) (n)) (eqnO)))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) (n)) ((@nat.le_O_n) (n))).
theorem gcd.divides_gcd_l : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , (((@logic.proj2) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n))) (((@gcd.divides_gcd_nm) (n)) (m)).
theorem gcd.divides_gcd_r : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , (((@logic.proj1) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (n))) (((@gcd.divides_gcd_nm) (n)) (m)).
theorem gcd.let_clause_1544 : forall (p:(nat.nat) ) , forall (q:(nat.nat) ) , (forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))))) -> forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (((nat.S) ) (q))) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> forall (a:(nat.nat) ) , (((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) -> forall (b:(nat.nat) ) , ((((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) -> ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) -> (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (n)) (b)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))) := fun (p : (nat.nat) ) , fun (q : (nat.nat) ) , fun (Hind : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))))) , (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenS : (((nat.le_) ) (n)) (((nat.S) ) (q))) , (fun (ndivnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (fun (a : (nat.nat) ) , fun (_clearme : ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) , (fun (b : (nat.nat) ) , fun (_clearme0 : (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) , (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) , (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) (__))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) (H)) ((((nat.times) ) (n)) (b))) (((@nat.commutative_times) (b)) (n)))))))))).
theorem gcd.let_clause_15441 : forall (p:(nat.nat) ) , forall (q:(nat.nat) ) , (forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))))) -> forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (((nat.S) ) (q))) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> forall (a:(nat.nat) ) , (((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) -> forall (b:(nat.nat) ) , ((((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) -> ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) -> (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))) := fun (p : (nat.nat) ) , fun (q : (nat.nat) ) , fun (Hind : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))))) , (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenS : (((nat.le_) ) (n)) (((nat.S) ) (q))) , (fun (ndivnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (fun (a : (nat.nat) ) , fun (_clearme : ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) , (fun (b : (nat.nat) ) , fun (_clearme0 : (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) , (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) , (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) (H)) ((((nat.times) ) (n)) (b))) (((@nat.commutative_times) (b)) (n)))))))))).
theorem gcd.eq_minus_gcd_aux : forall (p:(nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (p)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (p)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (p)) (m)) (n))))) := fun (p : (nat.nat) ) , ((((@nat.nat_ind) (fun (_x_365 : (nat.nat) ) , forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (_x_365)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (_x_365)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (_x_365)) (m)) (n))))))) (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenO : (((nat.le_) ) (n)) ((nat.O) )) , (((@connectives.falsity) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) ((nat.O) )) (m)) (n))))))) ((((@logic.absurd) ((((nat.lt_) ) ((nat.O) )) (n))) (posn)) ((((@nat.le_to_not_lt) (n)) ((nat.O) )) (lenO)))))))) (fun (q : (nat.nat) ) , fun (Hind : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((nat.le_) ) (n)) (m)) -> ((((nat.le_) ) (n)) (q)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (m)) (n)))))) , (fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (lenm : (((nat.le_) ) (n)) (m)) , (fun (lenS : (((nat.le_) ) (n)) (((nat.S) ) (q))) , (((((((@connectives.match_Or_prop) ((((primes.divides) ) (n)) (m))) (((connectives.Not) ) ((((primes.divides) ) (n)) (m)))) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))))))) (fun (divnm : (((primes.divides) ) (n)) (m)) , (((((((@logic.eq_ind_r) ((nat.nat) )) (n)) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (x))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (x)))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b)) (m)))) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (x)) (n)))) (n))))) (((nat.S) ) ((nat.O) ))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) (x)) (m)))) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n)))) (n)))) ((nat.O) )) ((((@connectives.or_introl) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((nat.O) )) (m))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n)))) (n))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (((nat.S) ) ((nat.O) )))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.plus) ) (n)) ((((nat.times) ) (n)) ((nat.O) )))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (n)) (__))) ((((nat.times) ) ((nat.O) )) (m)))) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) (n))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) ((nat.O) ))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (n)) (__))) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (n)) (__))) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) (n))) (((@logic.refl_) ((nat.nat) )) (n))) ((((nat.minus) ) (n)) ((nat.O) ))) ((@nat.minus_n_O) (n)))) ((((nat.times) ) (m)) ((nat.O) ))) ((@nat.times_n_O) (m)))) ((((nat.times) ) ((nat.O) )) (m))) (((@nat.commutative_times) ((nat.O) )) (m)))) ((((nat.plus) ) (n)) ((nat.O) ))) ((@nat.plus_n_O) (n)))) ((((nat.times) ) (n)) ((nat.O) ))) ((@nat.times_n_O) (n)))) ((((nat.times) ) (n)) (((nat.S) ) ((nat.O) )))) (((@nat.times_n_Sm) (n)) ((nat.O) )))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) (((@nat.commutative_times) (((nat.S) ) ((nat.O) ))) (n))))))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) (((((((@gcd.divides_to_gcd_aux) (((nat.S) ) (q))) (m)) (n)) ((@nat.lt_O_S) (q))) (posn)) (divnm))))) (fun (ndivnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (((((((@logic.eq_ind_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (x))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (x)))))) ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))))) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))))) (fun (a : (nat.nat) ) , fun (_clearme : ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) , ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))) (((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a0)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))))) (fun (b : (nat.nat) ) , fun (_clearme0 : (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) , (((((((@connectives.match_Or_prop) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) (((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b0)) (m)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (a0)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))))))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) , (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))) (fun (x_1 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b0)) (m)))) (x_1))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (a0)) (n)))) (x_1)))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b0)) (m)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (x)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))))) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n))) ((((nat.times) ) (x)) (m)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n)))))) (a)) ((((@connectives.or_intror) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n))) ((((nat.times) ) (a)) (m)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (b))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (x_1)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n))) ((((nat.times) ) (b)) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) (x))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (x))) ((((nat.plus) ) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n))) ((((nat.times) ) (b)) (n))))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((nat.plus) ) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n))))) ((((nat.plus) ) (x)) ((((nat.times) ) (b)) (n))))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (x_1))) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (x)) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.minus) ) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (b)) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x_1)) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.minus) ) (x_1)) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (x_1)) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (a)) (__))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (a)) (__)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (__))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (__)) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) (__))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (b)) (n))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) (__)))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (__))) (((@logic.refl_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (n)) (b)))) (((((((((((((((@gcd.let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (n)) (b)))) (((((((((((((((@gcd.let_clause_1544) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))) ((((nat.plus) ) ((nat.O) )) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((@nat.plus_O_n) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))))) ((@nat.minus_n_n) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) ((((@nat.times_times) (a)) (n)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) (((@nat.commutative_times) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) ((((@nat.times_times) (a)) (n)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) (((@nat.commutative_times) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) (((((@nat.plus_minus) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((@nat.le_n) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))))) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) (((@nat.commutative_plus) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))))) ((((@nat.minus_plus) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))))) ((((nat.times) ) (a)) ((((nat.plus) ) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((@nat.distributive_times_plus) (a)) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.plus) ) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n)))) (((@nat.commutative_plus) ((((div_mod.mod) ) (m)) (n))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n))) ((((@nat.associative_times) (a)) ((((div_mod.div) ) (m)) (n))) (n)))) (m)) (((@div_mod.div_mod) (m)) (n)))) ((((nat.times) ) ((((nat.plus) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (b))) (n))) ((((@nat.distributive_times_plus_r) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (b)))) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (((@nat.commutative_plus) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (b))))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (H)))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) , (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (fun (x_1 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b0)) (m)))) (x_1))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (a0)) (n)))) (x_1)))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b0)) (m)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (x)) (n)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))))) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n))) ((((nat.times) ) (x)) (m)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))))) (a)) ((((@connectives.or_introl) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n))) ((((nat.times) ) (a)) (m)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (x)) ((((nat.times) ) (a)) (m)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n)))) ((((nat.times) ) (a)) (x)))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n)))) (x))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) (x))) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.minus) ) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x_1)) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.minus) ) (x_1)) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (b)) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (x_1)) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (a)) (__))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (a)) (__)))) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (__))) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (__)) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) ((nat.O) )) (__))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (__))) (((@logic.refl_) ((nat.nat) )) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n))))) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((((((((((((@gcd.let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n))))) (((((((((((((((@gcd.let_clause_15441) (p)) (q)) (Hind)) (m)) (n)) (posn)) (lenm)) (lenS)) (ndivnm)) (a)) (_clearme)) (b)) (_clearme0)) (H)))) ((((nat.plus) ) ((nat.O) )) ((((nat.times) ) (n)) (b)))) ((@nat.plus_O_n) ((((nat.times) ) (n)) (b))))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))) ((((nat.minus) ) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))))) ((@nat.minus_n_n) ((((nat.times) ) (n)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) ((((@nat.times_times) (a)) (n)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) (((@nat.commutative_times) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) ((((div_mod.div) ) (m)) (n))))) ((((@nat.times_times) (a)) (n)) ((((div_mod.div) ) (m)) (n))))) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) (((@nat.commutative_times) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) (((((@nat.plus_minus) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))) ((@nat.le_n) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))))) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) (((@nat.commutative_plus) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (b)) (n))))) ((((nat.minus) ) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.plus) ) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((@nat.minus_plus) ((((nat.plus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))))) ((((nat.times) ) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((div_mod.mod) ) (m)) (n)))))) ((((nat.times) ) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n)))) (n))) ((((@nat.associative_times) (a)) ((((div_mod.div) ) (m)) (n))) (n)))) ((((nat.times) ) (a)) ((((nat.plus) ) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n))))) ((((@nat.distributive_times_plus) (a)) ((((nat.times) ) ((((div_mod.div) ) (m)) (n))) (n))) ((((div_mod.mod) ) (m)) (n))))) (m)) (((@div_mod.div_mod) (m)) (n)))) ((((nat.times) ) ((((nat.plus) ) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))) (n))) ((((@nat.distributive_times_plus_r) (n)) (b)) ((((nat.times) ) (a)) ((((div_mod.div) ) (m)) (n))))))))) (((((gcd.gcd_aux) ) (q)) (n)) ((((div_mod.mod) ) (m)) (n)))) (H)))) (_clearme0)))) (_clearme)))) ((((((Hind) (n)) ((((div_mod.mod) ) (m)) (n))) (((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) (fun (auto : (((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) , (auto))) (fun (modO : (((logic.eq_) ((nat.nat) )) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) , (((@connectives.falsity) ((((nat.lt_) ) ((nat.O) )) ((((div_mod.mod) ) (m)) (n)))) ((((@logic.absurd) ((((primes.divides) ) (n)) (m))) (((((@primes.mod_O_to_divides) (n)) (m)) (posn)) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((nat.O) ))) (((@logic.refl_) ((nat.nat) )) ((nat.O) ))) ((((div_mod.mod) ) (m)) (n))) (modO)))) (ndivnm))))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) ((((div_mod.mod) ) (m)) (n))) ((@nat.le_O_n) ((((div_mod.mod) ) (m)) (n)))))) ((((@nat.lt_to_le) ((((div_mod.mod) ) (m)) (n))) (n)) ((((@div_mod.lt_mod_m_m) (m)) (n)) (posn)))) ((((@nat.le_S_S_to_le) ((((div_mod.mod) ) (m)) (n))) (q)) ((((((@nat.transitive_le) (((nat.S) ) ((((div_mod.mod) ) (m)) (n)))) (n)) (((nat.S) ) (q))) ((((@div_mod.lt_mod_m_m) (m)) (n)) (posn))) (lenS)))))) (((((gcd.gcd_aux) ) (((nat.S) ) (q))) (m)) (n))) ((((((@gcd.not_divides_to_gcd_aux) (q)) (m)) (n)) (posn)) (ndivnm))))) (((@primes.decidable_divides) (n)) (m)))))))) (p).
theorem gcd.let_clause_1549 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (m)) -> forall (x1106:(nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x1106)) ((((nat.minus) ) (x1106)) (m)) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (eqm0 : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (m)) , (fun (x1106 : (nat.nat) ) , ((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x1106)) ((((nat.minus) ) (x1106)) (__)))) ((@nat.minus_n_O) (x1106))) (m)) (eqm0))).
theorem gcd.let_clause_15491 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) -> forall (x1106:(nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x1106)) ((((nat.minus) ) (x1106)) (n)) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (eqn0 : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) , (fun (x1106 : (nat.nat) ) , ((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (x1106)) ((((nat.minus) ) (x1106)) (__)))) ((@nat.minus_n_O) (x1106))) (n)) (eqn0)).
theorem gcd.let_clause_1551 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) -> forall (x347:(nat.nat) ) , (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) (x347)) (n)) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (eqn0 : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) , (fun (x347 : (nat.nat) ) , ((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) (x347)) (__)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.times) ) (x347)) ((nat.O) )))) ((@nat.times_n_O) (x347))) (n)) (eqn0))) (n)) (eqn0)).
theorem gcd.eq_minus_gcd : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) ((((gcd.gcd) ) (n)) (m))))) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , ((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) (n))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (n))) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) ((((gcd.gcd) ) (n)) (m))))))) (fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (((((((@connectives.match_Or_prop) ((((nat.lt_) ) ((nat.O) )) (m))) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (m))) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) ((((gcd.gcd) ) (n)) (m))))))) (fun (posm : (((nat.lt_) ) ((nat.O) )) (m)) , ((((((@nat.leb_elim) (n)) (m)) (fun (__ : (bool.bool) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (__)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (__))))))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , ((((nat.le_) ) (n)) (m)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.true) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (y)))))) ((((((@bool.sym_eq_match_bool_type_true) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , ((((nat.le_) ) (n)) (m)) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (y))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (n)) (m)) (n))))))) (fun (lenm : (((nat.le_) ) (n)) (m)) , (((((((@gcd.eq_minus_gcd_aux) (n)) (m)) (n)) (posn)) (lenm)) ((@nat.le_n) (n))))))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((connectives.Not) ) ((((nat.le_) ) (n)) (m))) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((bool.match_bool_type) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) ((bool.false) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (y)))))) ((((((@bool.sym_eq_match_bool_type_false) ((nat.nat) )) (((((gcd.gcd_aux) ) (n)) (m)) (n))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (y : (nat.nat) ) , (((connectives.Not) ) ((((nat.le_) ) (n)) (m))) -> ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (y))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))))) (fun (nlenm : ((connectives.Not) ) ((((nat.le_) ) (n)) (m))) , ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))))) (((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))))) (fun (a : (nat.nat) ) , fun (_clearme : ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))) , ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))) (((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a0)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))))) (fun (b : (nat.nat) ) , fun (_clearme0 : (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) , (((((((@connectives.match_Or_prop) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((connectives.ex) ((nat.nat) )) (fun (a0 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a0)) (n))) ((((nat.times) ) (b0)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (a0)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) , (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b0)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (x)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))))) (b)) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (x)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))) (a)) ((((@connectives.or_intror) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) (a))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (m)) (a))) (__))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((@logic.refl_) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((nat.minus) ) ((((nat.times) ) (m)) (a))) ((((nat.times) ) (n)) (b)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (m)) (a))) (__))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (a)) (m))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (H)) ((((nat.times) ) (m)) (a))) (((@nat.commutative_times) (a)) (m)))) ((((nat.times) ) (n)) (b))) (((@nat.commutative_times) (b)) (n))))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))) ((((nat.times) ) (a)) (m))) (((@nat.commutative_times) (a)) (m)))))))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))) , (((((@connectives.ex_intro) ((nat.nat) )) (fun (y : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b0 : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (y)) (n))) ((((nat.times) ) (b0)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b0)) (m))) ((((nat.times) ) (y)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))))) (b)) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (x)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m))))) (a)) ((((@connectives.or_introl) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (n))) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (m))) ((((nat.times) ) (b)) (n)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (b))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) (a))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) (__))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((@logic.refl_) ((nat.nat) )) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) ((((nat.times) ) (m)) (a)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (a)) (m))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (n)) (b))) (__))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) (m)))) (((((gcd.gcd_aux) ) (m)) (n)) (m)))) (H)) ((((nat.times) ) (n)) (b))) (((@nat.commutative_times) (b)) (n)))) ((((nat.times) ) (m)) (a))) (((@nat.commutative_times) (a)) (m))))) ((((nat.times) ) (a)) (m))) (((@nat.commutative_times) (a)) (m)))) ((((nat.times) ) (b)) (n))) (((@nat.commutative_times) (b)) (n)))))))) (_clearme0)))) (_clearme)))) (((((((@gcd.eq_minus_gcd_aux) (m)) (n)) (m)) (posm)) ((((((@nat.transitive_le) (m)) (((nat.S) ) (m))) (n)) ((@nat.le_n_Sn) (m))) ((((@nat.not_le_to_lt) (n)) (m)) (nlenm)))) ((@nat.le_n) (m)))))))))) (fun (eqm0 : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (m)) , (((((((@logic.eq_ind_r) ((nat.nat) )) (m)) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) ((((gcd.gcd) ) (n)) (m))))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (x)) (n)))) ((((gcd.gcd) ) (n)) (m)))))) (((nat.S) ) ((nat.O) ))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (y : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) (y)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (y)) (m))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n)))) ((((gcd.gcd) ) (n)) (m))))) ((nat.O) )) ((((@connectives.or_introl) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((nat.O) )) (m))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n)))) ((((gcd.gcd) ) (n)) (m)))) (((((@logic.eq_coerc) ((((logic.eq_) ((nat.nat) )) (n)) ((((nat.minus) ) (n)) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((@nat.minus_n_O) (n))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) ((((nat.minus) ) (n)) (__)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (__))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) (__))) (n))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (((nat.S) ) (m)))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.plus) ) (n)) ((((nat.times) ) (n)) (m)))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (n)) (__))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (n)) (__))) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.plus) ) (m)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (n)) ((((nat.times) ) (__)) (m)))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (n)) (__))) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) (__)) ((((gcd.gcd) ) (n)) (m))))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) (n)) (__)))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n))) ((((logic.eq_) ((nat.nat) )) (n)) (__)))) (((@logic.refl_) (Prop)) ((((logic.eq_) ((nat.nat) )) (n)) (n)))) ((((gcd.gcd) ) (m)) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (__)) (n))) (n))) ((@gcd.gcd_O_l) (n))) (m)) (eqm0)))) ((((gcd.gcd) ) (n)) (m))) (((@gcd.commutative_gcd) (n)) (m)))) ((((nat.minus) ) (n)) (m))) ((((((@gcd.let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) ((((nat.times) ) (m)) (m))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (m)) (__)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.times) ) (m)) ((nat.O) )))) ((@nat.times_n_O) (m))) (m)) (eqm0))) (m)) (eqm0)))) ((nat.O) )) (eqm0))) ((((nat.plus) ) (m)) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (n)) ((((nat.plus) ) (__)) (n)))) ((@nat.plus_O_n) (n))) (m)) (eqm0)))) ((((nat.plus) ) (n)) (m))) (((@nat.commutative_plus) (n)) (m)))) ((((nat.times) ) (m)) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (__)) (n)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.times) ) ((nat.O) )) (n)))) ((@nat.times_O_n) (n))) (m)) (eqm0))) (m)) (eqm0)))) ((((nat.times) ) (n)) (m))) (((@nat.commutative_times) (n)) (m)))) ((((nat.times) ) (n)) (((nat.S) ) (m)))) (((@nat.times_n_Sm) (n)) (m)))) ((((nat.times) ) (((nat.S) ) (m))) (n))) (((@nat.commutative_times) (((nat.S) ) (m))) (n)))) ((nat.O) )) (eqm0))) ((((nat.minus) ) (n)) (m))) ((((((@gcd.let_clause_1549) (m)) (n)) (posn)) (eqm0)) (n)))) ((nat.O) )) (eqm0))))))) ((nat.O) )) (eqm0)))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) (m)) ((@nat.le_O_n) (m)))))) (fun (eqn0 : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (n)) , (((((((@logic.eq_ind_r) ((nat.nat) )) (n)) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (n)))) ((((gcd.gcd) ) (n)) (m))))))) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (n))) ((((nat.times) ) (b)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (x)) (n)))) ((((gcd.gcd) ) (n)) (m)))))) ((nat.O) )) (((((@connectives.ex_intro) ((nat.nat) )) (fun (x : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((nat.O) )) (n))) ((((nat.times) ) (x)) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (x)) (m))) ((((nat.times) ) ((nat.O) )) (n)))) ((((gcd.gcd) ) (n)) (m))))) (((nat.S) ) ((nat.O) ))) ((((@connectives.or_intror) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) ((nat.O) )) (n))) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m)))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) ((((gcd.gcd) ) (n)) (m)))) (((((@logic.eq_coerc) ((((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (m)) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) ((((gcd.gcd) ) (n)) (m)))) ((@nat.minus_n_O) (m))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (m)) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) (__)))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (m)) (__)))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (__))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) ((nat.O) ))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (((nat.S) ) (__))) (m))) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) (((nat.S) ) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.plus) ) (m)) ((((nat.times) ) (m)) (n)))) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.plus) ) (m)) (__))) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) ((nat.O) )) (n)))) (m)))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (m)) ((((nat.times) ) (__)) (n)))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (m)) (__))) (m)))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m))) ((((logic.eq_) ((nat.nat) )) (__)) (m)))) (((@logic.refl_) (Prop)) ((((logic.eq_) ((nat.nat) )) (m)) (m)))) ((((nat.minus) ) (m)) (n))) (((((@gcd.let_clause_15491) (m)) (n)) (eqn0)) (m)))) ((((nat.times) ) (n)) (n))) (((((@gcd.let_clause_1551) (m)) (n)) (eqn0)) (n)))) ((nat.O) )) (eqn0))) ((((nat.plus) ) (m)) (n))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.plus) ) (m)) (__)))) ((@nat.plus_n_O) (m))) (n)) (eqn0)))) ((((nat.times) ) (m)) (n))) (((((@gcd.let_clause_1551) (m)) (n)) (eqn0)) (m)))) ((((nat.times) ) (m)) (((nat.S) ) (n)))) (((@nat.times_n_Sm) (m)) (n)))) ((((nat.times) ) (((nat.S) ) (n))) (m))) (((@nat.commutative_times) (((nat.S) ) (n))) (m)))) ((nat.O) )) (eqn0))) ((((nat.minus) ) (m)) (n))) (((((@gcd.let_clause_15491) (m)) (n)) (eqn0)) (m)))) ((nat.O) )) (eqn0))) ((((gcd.gcd) ) (n)) (m))) (((((((@logic.rewrite_l) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (__)) (m))) (m))) ((@gcd.gcd_O_l) (m))) (n)) (eqn0)))))))) ((nat.O) )) (eqn0)))) ((((@nat.le_to_or_lt_eq) ((nat.O) )) (n)) ((@nat.le_O_n) (n))).
theorem gcd.let_clause_1545 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) -> ((((primes.divides) ) ((nat.O) )) (n)) -> forall (q1:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) ((nat.O) )) (q1))) -> ((((primes.divides) ) ((nat.O) )) (m)) -> forall (q2:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) ((nat.O) )) (q2))) -> (((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (H : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) , (fun (_clearme : (((primes.divides) ) ((nat.O) )) (n)) , (fun (q1 : (nat.nat) ) , fun (H1 : (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) ((nat.O) )) (q1))) , (fun (_clearme0 : (((primes.divides) ) ((nat.O) )) (m)) , (fun (q2 : (nat.nat) ) , fun (H2 : (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) ((nat.O) )) (q2))) , (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (q2)) ((nat.O) ))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) ((nat.O) )) (q2))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (H2)) ((((nat.times) ) (q2)) ((nat.O) ))) (((@nat.commutative_times) ((nat.O) )) (q2)))) ((nat.O) )) ((@nat.times_n_O) (q2))))))).
theorem gcd.gcd_O_to_eq_O : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) -> (((connectives.And) ) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (H : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) , ((((((@connectives.match_And_prop) ((((primes.divides) ) ((nat.O) )) (n))) ((((primes.divides) ) ((nat.O) )) (m))) ((((connectives.And) ) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )))) (fun (_clearme : (((primes.divides) ) ((nat.O) )) (n)) , ((((((@primes.match_divides_prop) ((nat.O) )) (n)) (((((primes.divides) ) ((nat.O) )) (m)) -> (((connectives.And) ) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )))) (fun (q1 : (nat.nat) ) , fun (H1 : (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) ((nat.O) )) (q1))) , (fun (_clearme0 : (((primes.divides) ) ((nat.O) )) (m)) , ((((((@primes.match_divides_prop) ((nat.O) )) (m)) ((((connectives.And) ) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )))) (fun (q2 : (nat.nat) ) , fun (H2 : (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) ((nat.O) )) (q2))) , (((((@connectives.conj) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) ))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((@logic.refl_) ((nat.nat) )) (m))) ((nat.O) )) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (q2)) ((nat.O) ))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) ((nat.O) )) (q2))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (H2)) ((((nat.times) ) (q2)) ((nat.O) ))) (((@nat.commutative_times) ((nat.O) )) (q2)))) ((nat.O) )) ((@nat.times_n_O) (q2))))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((nat.O) ))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((@logic.refl_) ((nat.nat) )) (m))) ((nat.O) )) ((((((((((@gcd.let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (n)) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (m)) (q1))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (n)) (__))) (((((((@logic.rewrite_r) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (n)) ((((nat.times) ) (__)) (q1)))) (H1)) (m)) ((((((((((@gcd.let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (m)) (((((((@logic.rewrite_r) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (__)) (q1)))) (((((((@logic.rewrite_r) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((((nat.times) ) ((nat.O) )) (q1)))) ((@nat.times_O_n) (q1))) (m)) ((((((((((@gcd.let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))) (m)) ((((((((((@gcd.let_clause_1545) (m)) (n)) (H)) (_clearme)) (q1)) (H1)) (_clearme0)) (q2)) (H2)))))))) (_clearme0))))) (_clearme)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) (fun (x_1 : (nat.nat) ) , (((connectives.And) ) ((((primes.divides) ) (x_1)) (n))) ((((primes.divides) ) (x_1)) (m)))) (((@gcd.divides_gcd_nm) (m)) (n))) ((nat.O) )) (H))).
theorem gcd.let_clause_1571 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) -> ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) )) -> ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) -> (((logic.eq_) ((nat.nat) )) (m)) (n) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (H : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) , (fun (auto : (((logic.eq_) ((nat.nat) )) (m)) ((nat.O) )) , (fun (auto' : (((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) , (((((((@logic.rewrite_r) ((nat.nat) )) ((nat.O) )) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (auto)) (n)) (auto'))))).
theorem gcd.let_clause_1572 : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) -> ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) )) -> ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) -> (((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (fun (H : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) , (fun (auto : (((logic.eq_) ((nat.nat) )) (m)) ((nat.O) )) , (fun (auto' : (((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) , (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (__)) ((nat.O) ))) (auto')) (m)) (((((((@gcd.let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto')))))).
theorem gcd.lt_O_gcd : forall (m:(nat.nat) ) , forall (n:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((gcd.gcd) ) (m)) (n)) := fun (m : (nat.nat) ) , fun (n : (nat.nat) ) , fun (posn : (((nat.lt_) ) ((nat.O) )) (n)) , (((((@nat.nat_case) ((((gcd.gcd) ) (m)) (n))) (((nat.lt_) ) ((nat.O) ))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) ((nat.O) )) , ((((((@connectives.match_And_prop) ((((logic.eq_) ((nat.nat) )) (m)) ((nat.O) ))) ((((logic.eq_) ((nat.nat) )) (n)) ((nat.O) ))) ((((nat.lt_) ) ((nat.O) )) ((nat.O) ))) (fun (auto : (((logic.eq_) ((nat.nat) )) (m)) ((nat.O) )) , (fun (auto' : (((logic.eq_) ((nat.nat) )) (n)) ((nat.O) )) , (((((@logic.eq_coerc) ((((nat.lt_) ) ((nat.O) )) (n))) ((((nat.lt_) ) ((nat.O) )) ((nat.O) ))) (posn)) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((nat.lt_) ) (__)) (n))) ((((nat.lt_) ) ((nat.O) )) ((nat.O) )))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((nat.lt_) ) (m)) (__))) ((((nat.lt_) ) ((nat.O) )) ((nat.O) )))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((nat.lt_) ) (m)) (m))) ((((nat.lt_) ) (__)) ((nat.O) )))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((nat.lt_) ) (m)) (m))) ((((nat.lt_) ) (m)) (__)))) (((@logic.refl_) (Prop)) ((((nat.lt_) ) (m)) (m)))) ((nat.O) )) (((((((@gcd.let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) ((nat.O) )) (((((((@gcd.let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto')))) (n)) (((((((@gcd.let_clause_1571) (m)) (n)) (posn)) (H)) (auto)) (auto')))) ((nat.O) )) (((((((@gcd.let_clause_1572) (m)) (n)) (posn)) (H)) (auto)) (auto'))))))) ((((@gcd.gcd_O_to_eq_O) (m)) (n)) (H))))) (fun (m0 : (nat.nat) ) , fun (auto : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (m)) (n))) (((nat.S) ) (m0))) , ((@nat.lt_O_S) (m0)))).
theorem gcd.prime_to_gcd_1 : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((primes.prime) ) (n)) -> (((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) (((nat.S) ) ((nat.O) )) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , fun (_clearme : ((primes.prime) ) (n)) , ((((((@connectives.match_And_prop) ((((nat.lt_) ) (((nat.S) ) ((nat.O) ))) (n))) (forall (m1:(nat.nat) ) , ((((primes.divides) ) (m1)) (n)) -> ((((nat.lt_) ) (((nat.S) ) ((nat.O) ))) (m1)) -> (((logic.eq_) ((nat.nat) )) (m1)) (n))) ((((connectives.Not) ) ((((primes.divides) ) (n)) (m))) -> (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) (((nat.S) ) ((nat.O) )))) (fun (lt1n : (((nat.lt_) ) (((nat.S) ) ((nat.O) ))) (n)) , (fun (primen : forall (m0:(nat.nat) ) , ((((primes.divides) ) (m0)) (n)) -> ((((nat.lt_) ) (((nat.S) ) ((nat.O) ))) (m0)) -> (((logic.eq_) ((nat.nat) )) (m0)) (n)) , (fun (ndivnm : ((connectives.Not) ) ((((primes.divides) ) (n)) (m))) , (((((@nat.le_to_le_to_eq) ((((gcd.gcd) ) (n)) (m))) (((nat.S) ) ((nat.O) ))) ((((@nat.not_lt_to_le) (((nat.S) ) ((nat.O) ))) ((((gcd.gcd) ) (n)) (m))) (((((@logic.not_to_not) ((((nat.lt_) ) (((nat.S) ) ((nat.O) ))) ((((gcd.gcd) ) (n)) (m)))) ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) (n))) (((primen) ((((gcd.gcd) ) (n)) (m))) (((@gcd.divides_gcd_l) (n)) (m)))) (((((@logic.not_to_not) ((((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) (n))) ((((primes.divides) ) (n)) (m))) (fun (auto : (((logic.eq_) ((nat.nat) )) ((((gcd.gcd) ) (n)) (m))) (n)) , (((((@logic.eq_coerc) ((((primes.divides) ) ((((gcd.gcd) ) (n)) (m))) (m))) ((((primes.divides) ) (n)) (m))) (((@gcd.divides_gcd_r) (n)) (m))) (((((((@logic.rewrite_r) ((nat.nat) )) (n)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((primes.divides) ) (__)) (m))) ((((primes.divides) ) (n)) (m)))) (((@logic.refl_) (Prop)) ((((primes.divides) ) (n)) (m)))) ((((gcd.gcd) ) (n)) (m))) (auto))))) (ndivnm))))) ((((@gcd.lt_O_gcd) (n)) (m)) (((((@nat.not_eq_to_le_to_lt) ((nat.O) )) (m)) (((((@logic.not_to_not) ((((logic.eq_) ((nat.nat) )) ((nat.O) )) (m))) ((((primes.divides) ) (n)) (m))) (fun (auto : (((logic.eq_) ((nat.nat) )) ((nat.O) )) (m)) , (((((@logic.eq_coerc) ((((primes.divides) ) (n)) ((nat.O) ))) ((((primes.divides) ) (n)) (m))) ((@primes.divides_n_O) (n))) (((((((@logic.rewrite_r) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) (Prop)) ((((primes.divides) ) (n)) (__))) ((((primes.divides) ) (n)) (m)))) (((@logic.refl_) (Prop)) ((((primes.divides) ) (n)) (m)))) ((nat.O) )) (auto))))) (ndivnm))) ((@nat.le_O_n) (m))))))))) (_clearme)).
theorem gcd.divides_times_to_divides : forall (p:(nat.nat) ) , forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((primes.prime) ) (p)) -> ((((primes.divides) ) (p)) ((((nat.times) ) (n)) (m))) -> (((connectives.Or) ) ((((primes.divides) ) (p)) (n))) ((((primes.divides) ) (p)) (m)) := fun (p : (nat.nat) ) , fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , fun (primp : ((primes.prime) ) (p)) , (fun (_clearme : (((primes.divides) ) (p)) ((((nat.times) ) (n)) (m))) , ((((((@primes.match_divides_prop) (p)) ((((nat.times) ) (n)) (m))) ((((connectives.Or) ) ((((primes.divides) ) (p)) (n))) ((((primes.divides) ) (p)) (m)))) (fun (c : (nat.nat) ) , fun (nm : (((logic.eq_) ((nat.nat) )) ((((nat.times) ) (n)) (m))) ((((nat.times) ) (p)) (c))) , (((((((@connectives.match_Or_prop) ((((primes.divides) ) (p)) (n))) (((connectives.Not) ) ((((primes.divides) ) (p)) (n)))) ((((connectives.Or) ) ((((primes.divides) ) (p)) (n))) ((((primes.divides) ) (p)) (m)))) (fun (auto : (((primes.divides) ) (p)) (n)) , ((((@connectives.or_introl) ((((primes.divides) ) (p)) (n))) ((((primes.divides) ) (p)) (m))) (auto)))) (fun (ndivpn : ((connectives.Not) ) ((((primes.divides) ) (p)) (n))) , ((((@connectives.or_intror) ((((primes.divides) ) (p)) (n))) ((((primes.divides) ) (p)) (m))) ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) )))))) ((((primes.divides) ) (p)) (m))) (fun (a : (nat.nat) ) , fun (_clearme0 : ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) ))))) , ((((((@connectives.match_ex_prop) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) ))))) ((((primes.divides) ) (p)) (m))) (fun (b : (nat.nat) ) , fun (_clearme1 : (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) )))) , (((((((@connectives.match_Or_prop) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) )))) ((((primes.divides) ) (p)) (m))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) ))) , (((((@primes.quotient) (p)) (m)) ((((nat.minus) ) ((((nat.times) ) (a)) (c))) ((((nat.times) ) (b)) (m)))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (p)) ((((nat.times) ) (a)) (c)))) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m))))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (x))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (p)) (a))) (c))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x_1)) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (a)) (p))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) (x)) (c))) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (a)) ((((nat.times) ) (p)) (c)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x)) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (n)) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) (a)) (x_1))) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x_1)) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))) (x_1)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.times) ) (a)) (n)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x_1)) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.times) ) (p)) (b)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) (m)) ((((nat.times) ) (a)) (n)))) (x)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (p)) (b))))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (x_1))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (a))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (m)) ((((nat.minus) ) (__)) ((((nat.times) ) (p)) (b)))))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((@logic.refl_) ((nat.nat) )) (m))) ((((nat.times) ) (m)) ((((nat.minus) ) ((((nat.times) ) (n)) (a))) ((((nat.times) ) (p)) (b))))) (((((((@logic.rewrite_r) ((nat.nat) )) (((nat.S) ) ((nat.O) ))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (m)) (__)))) ((@nat.times_n_1) (m))) ((((nat.minus) ) ((((nat.times) ) (n)) (a))) ((((nat.times) ) (p)) (b)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (p))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (n)) (a))) (__))) (((nat.S) ) ((nat.O) )))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (a)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (b)) (p)))) (((nat.S) ) ((nat.O) )))) (H)) ((((nat.times) ) (n)) (a))) (((@nat.commutative_times) (a)) (n)))) ((((nat.times) ) (p)) (b))) (((@nat.commutative_times) (b)) (p)))))) ((((nat.times) ) (a)) (n))) (((@nat.commutative_times) (a)) (n)))) ((((nat.minus) ) ((((nat.times) ) (m)) ((((nat.times) ) (a)) (n)))) ((((nat.times) ) (m)) ((((nat.times) ) (p)) (b))))) ((((@nat.distributive_times_minus) (m)) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (p)) (b))))) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (((@nat.commutative_times) ((((nat.times) ) (p)) (b))) (m)))) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))) (((@nat.commutative_times) (m)) ((((nat.times) ) (a)) (n))))) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))) ((((@nat.associative_times) (p)) (b)) (m)))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) (m)))) ((((@nat.associative_times) (a)) (n)) (m)))) ((((nat.times) ) (p)) (c))) (nm))) ((((nat.times) ) ((((nat.times) ) (a)) (p))) (c))) ((((@nat.associative_times) (a)) (p)) (c)))) ((((nat.times) ) (p)) (a))) (((@nat.commutative_times) (p)) (a)))) ((((nat.times) ) (p)) ((((nat.times) ) (a)) (c)))) ((((@nat.associative_times) (p)) (a)) (c)))) ((((nat.times) ) (p)) ((((nat.minus) ) ((((nat.times) ) (a)) (c))) ((((nat.times) ) (b)) (m))))) ((((@nat.distributive_times_minus) (p)) ((((nat.times) ) (a)) (c))) ((((nat.times) ) (b)) (m))))))) (fun (H : (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) ))) , (((((@primes.quotient) (p)) (m)) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (c)))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))) ((((nat.times) ) (p)) ((((nat.times) ) (a)) (c))))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (x))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x_1)) ((((nat.times) ) (p)) ((((nat.times) ) (a)) (c)))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (p)) (a))) (c))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (x_1)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (a)) (p))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) ((((nat.times) ) (x_1)) (c))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (a)) ((((nat.times) ) (p)) (c)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (x)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (n)) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) ((((nat.times) ) (a)) (x_1))))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (x_1)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.times) ) (p)) (b)))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) (x_1)) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.times) ) (a)) (n)))) (fun (x : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.minus) ) ((((nat.times) ) (m)) ((((nat.times) ) (p)) (b)))) (x)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((nat.times) ) (m)) ((((nat.minus) ) ((((nat.times) ) (p)) (b))) ((((nat.times) ) (a)) (n))))) (fun (x_1 : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (x_1))) (((((((@logic.rewrite_r) ((nat.nat) )) ((((nat.times) ) (n)) (a))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (m)) ((((nat.minus) ) ((((nat.times) ) (p)) (b))) (__))))) (((((((@logic.rewrite_l) ((nat.nat) )) (m)) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) (__))) (((@logic.refl_) ((nat.nat) )) (m))) ((((nat.times) ) (m)) ((((nat.minus) ) ((((nat.times) ) (p)) (b))) ((((nat.times) ) (n)) (a))))) (((((((@logic.rewrite_r) ((nat.nat) )) (((nat.S) ) ((nat.O) ))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) (m)) ((((nat.times) ) (m)) (__)))) ((@nat.times_n_1) (m))) ((((nat.minus) ) ((((nat.times) ) (p)) (b))) ((((nat.times) ) (n)) (a)))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (a)) (n))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (p)) (b))) (__))) (((nat.S) ) ((nat.O) )))) (((((((@logic.rewrite_l) ((nat.nat) )) ((((nat.times) ) (b)) (p))) (fun (__ : (nat.nat) ) , (((logic.eq_) ((nat.nat) )) ((((nat.minus) ) (__)) ((((nat.times) ) (a)) (n)))) (((nat.S) ) ((nat.O) )))) (H)) ((((nat.times) ) (p)) (b))) (((@nat.commutative_times) (b)) (p)))) ((((nat.times) ) (n)) (a))) (((@nat.commutative_times) (a)) (n)))))) ((((nat.times) ) (a)) (n))) (((@nat.commutative_times) (a)) (n)))) ((((nat.minus) ) ((((nat.times) ) (m)) ((((nat.times) ) (p)) (b)))) ((((nat.times) ) (m)) ((((nat.times) ) (a)) (n))))) ((((@nat.distributive_times_minus) (m)) ((((nat.times) ) (p)) (b))) ((((nat.times) ) (a)) (n))))) ((((nat.times) ) ((((nat.times) ) (a)) (n))) (m))) (((@nat.commutative_times) ((((nat.times) ) (a)) (n))) (m)))) ((((nat.times) ) ((((nat.times) ) (p)) (b))) (m))) (((@nat.commutative_times) (m)) ((((nat.times) ) (p)) (b))))) ((((nat.times) ) (a)) ((((nat.times) ) (n)) (m)))) ((((@nat.associative_times) (a)) (n)) (m)))) ((((nat.times) ) (p)) (c))) (nm))) ((((nat.times) ) ((((nat.times) ) (a)) (p))) (c))) ((((@nat.associative_times) (a)) (p)) (c)))) ((((nat.times) ) (p)) (a))) (((@nat.commutative_times) (a)) (p)))) ((((nat.times) ) (p)) ((((nat.times) ) (a)) (c)))) ((((@nat.associative_times) (p)) (a)) (c)))) ((((nat.times) ) (p)) ((((nat.times) ) (b)) (m)))) ((((@nat.associative_times) (p)) (b)) (m)))) ((((nat.times) ) (p)) ((((nat.minus) ) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (c))))) ((((@nat.distributive_times_minus) (p)) ((((nat.times) ) (b)) (m))) ((((nat.times) ) (a)) (c))))))) (_clearme1)))) (_clearme0)))) (((((((@logic.eq_ind) ((nat.nat) )) ((((gcd.gcd) ) (p)) (n))) (fun (x_1 : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (x_1))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (x_1)))))) (((((((@logic.eq_ind_r) ((nat.nat) )) ((((gcd.gcd) ) (n)) (p))) (fun (x : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (a : (nat.nat) ) , ((connectives.ex) ((nat.nat) )) (fun (b : (nat.nat) ) , (((connectives.Or) ) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (a)) (n))) ((((nat.times) ) (b)) (p)))) (x))) ((((logic.eq_) ((nat.nat) )) ((((nat.minus) ) ((((nat.times) ) (b)) (p))) ((((nat.times) ) (a)) (n)))) (x)))))) (((@gcd.eq_minus_gcd) (p)) (n))) ((((gcd.gcd) ) (p)) (n))) (((@gcd.commutative_gcd) (p)) (n)))) (((nat.S) ) ((nat.O) ))) (((((@gcd.prime_to_gcd_1) (p)) (n)) (primp)) (ndivpn))))))) (((@primes.decidable_divides) (p)) (n))))) (_clearme))).

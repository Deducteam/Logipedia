nat_sttfa : THEORY
BEGIN
IMPORTING bool_sttfa,connectives_sttfa,leibniz_sttfa,logic_sttfa,relations_sttfa

sttfa_nat : TYPE+

sttfa_O : nat_sttfa.sttfa_nat

sttfa_S : [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]

match_nat_prop  : AXIOM (FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))

match_nat_type [return:TYPE+]: [return -> [[nat_sttfa.sttfa_nat -> return] -> [nat_sttfa.sttfa_nat -> return]]]

axiom_match_nat_type_O [return_type:TYPE+] : AXIOM (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))

eq_match_nat_type_O [return_type:TYPE+] : LEMMA (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))

%|- eq_match_nat_type_O : PROOF
%|- (sttfa-conv "(FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)) => P(case_O)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "case_O")
%|- (then@ (sttfa-forall-i "case_S")
%|- (sttfa-impl-e "(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)) => P(case_O))))" "connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)"
%|- (sttfa-conv "connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_O))(case_O))" "case_S"
%|- (sttfa-conv "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_O))(case_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_O0:return_type):(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O0)(case_S0)(nat_sttfa.sttfa_O))(case_O0)))" "case_O"
%|- (sttfa-lemma "nat_sttfa.axiom_match_nat_type_O[return_type]")))))
%|- (sttfa-conv "(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)) => P(case_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)) => P(y)))))" "case_O"
%|- (sttfa-conv "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(connectives_sttfa.equal[return_type](x)(y) => (FORALL(P:[return_type -> bool]):(P(x) => P(y))))))" "nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[return_type]")))))))))
%|- QED

sym_eq_match_nat_type_O [return_type:TYPE+] : LEMMA (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](case_O)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))))

%|- sym_eq_match_nat_type_O : PROOF
%|- (then@ (sttfa-forall-i "case_O")
%|- (then@ (sttfa-forall-i "case_S")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O) => leibniz_sttfa.leibniz[return_type](case_O)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)"
%|- (sttfa-conv "leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_O))(case_O))" "case_S"
%|- (sttfa-conv "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_O))(case_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_O0:return_type):(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O0)(case_S0)(nat_sttfa.sttfa_O))(case_O0)))" "case_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_O[return_type]")))))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O) => leibniz_sttfa.leibniz[return_type](case_O)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))))" "case_O"
%|- (sttfa-conv "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](x)(y) => leibniz_sttfa.leibniz[return_type](y)(x))))" "nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[return_type]"))))))))
%|- QED

axiom_match_nat_type_S [return_type:TYPE+] : AXIOM (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)))))

eq_match_nat_type_S [return_type:TYPE+] : LEMMA (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)))))

%|- eq_match_nat_type_S : PROOF
%|- (sttfa-conv "(FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))) => P(case_S(n)))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "case_O")
%|- (then@ (sttfa-forall-i "case_S")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))) => P(case_S(n)))))" "connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n))"
%|- (sttfa-conv "connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0))))" "case_S"
%|- (sttfa-conv "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O0:return_type):(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O0)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0)))))" "case_O"
%|- (sttfa-lemma "nat_sttfa.axiom_match_nat_type_S[return_type]")))))))
%|- (sttfa-conv "(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))) => P(case_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))) => P(y)))))" "case_S(n)"
%|- (sttfa-conv "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(connectives_sttfa.equal[return_type](x)(y) => (FORALL(P:[return_type -> bool]):(P(x) => P(y))))))" "nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[return_type]"))))))))))
%|- QED

sym_eq_match_nat_type_S [return_type:TYPE+] : LEMMA (FORALL(case_O:return_type):(FORALL(case_S:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](case_S(n))(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))))))

%|- sym_eq_match_nat_type_S : PROOF
%|- (then@ (sttfa-forall-i "case_O")
%|- (then@ (sttfa-forall-i "case_S")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)) => leibniz_sttfa.leibniz[return_type](case_S(n))(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0))))" "case_S"
%|- (sttfa-conv "(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O0:return_type):(FORALL(case_S0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O0)(case_S0)(nat_sttfa.sttfa_S(n0)))(case_S0(n0)))))" "case_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[return_type]")))))))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(case_S(n)) => leibniz_sttfa.leibniz[return_type](case_S(n))(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))))" "case_S(n)"
%|- (sttfa-conv "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](x)(y) => leibniz_sttfa.leibniz[return_type](y)(x))))" "nat_sttfa.match_nat_type[return_type](case_O)(case_S)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[return_type]")))))))))
%|- QED

filter_nat_type [return:TYPE+]: [[nat_sttfa.sttfa_nat -> return] -> [nat_sttfa.sttfa_nat -> return]]

axiom_filter_nat_type_O [return_type:TYPE+] : AXIOM (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))

eq_filter_nat_type_O [return_type:TYPE+] : LEMMA (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))

%|- eq_filter_nat_type_O : PROOF
%|- (sttfa-conv "(FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)) => P(return(nat_sttfa.sttfa_O)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "return")
%|- (sttfa-impl-e "(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)) => P(return(nat_sttfa.sttfa_O)))))" "connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return0:[nat_sttfa.sttfa_nat -> return_type]):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return0)(nat_sttfa.sttfa_O))(return0(nat_sttfa.sttfa_O)))" "return"
%|- (sttfa-lemma "nat_sttfa.axiom_filter_nat_type_O[return_type]")))
%|- (sttfa-conv "(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)) => P(return(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)) => P(y)))))" "return(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(connectives_sttfa.equal[return_type](x)(y) => (FORALL(P:[return_type -> bool]):(P(x) => P(y))))))" "nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[return_type]"))))))))
%|- QED

sym_eq_filter_nat_type_O [return_type:TYPE+] : LEMMA (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)))

%|- sym_eq_filter_nat_type_O : PROOF
%|- (then@ (sttfa-forall-i "return")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return0:[nat_sttfa.sttfa_nat -> return_type]):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return0)(nat_sttfa.sttfa_O))(return0(nat_sttfa.sttfa_O)))" "return"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[return_type]")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))))" "return(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](x)(y) => leibniz_sttfa.leibniz[return_type](y)(x))))" "nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[return_type]")))))))
%|- QED

axiom_filter_nat_type_S [return_type:TYPE+] : AXIOM (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))))

eq_filter_nat_type_S [return_type:TYPE+] : LEMMA (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))))

%|- eq_filter_nat_type_S : PROOF
%|- (sttfa-conv "(FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))) => P(return(nat_sttfa.sttfa_S(n)))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "return")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n))) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))) => P(return(nat_sttfa.sttfa_S(n))))))" "connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return0)(nat_sttfa.sttfa_S(n0)))(return0(nat_sttfa.sttfa_S(n0)))))" "return"
%|- (sttfa-lemma "nat_sttfa.axiom_filter_nat_type_S[return_type]")))))
%|- (sttfa-conv "(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n))) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))) => P(return(nat_sttfa.sttfa_S(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))) => P(y)))))" "return(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:return_type):(connectives_sttfa.equal[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[return_type -> bool]):(P(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(connectives_sttfa.equal[return_type](x)(y) => (FORALL(P:[return_type -> bool]):(P(x) => P(y))))))" "nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[return_type]")))))))))
%|- QED

sym_eq_filter_nat_type_S [return_type:TYPE+] : LEMMA (FORALL(return:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))))

%|- sym_eq_filter_nat_type_S : PROOF
%|- (then@ (sttfa-forall-i "return")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return0:[nat_sttfa.sttfa_nat -> return_type]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return0)(nat_sttfa.sttfa_S(n0)))(return0(nat_sttfa.sttfa_S(n0)))))" "return"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_S[return_type]")))))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(return(nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[return_type](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))))" "return(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[return_type](y)(nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:return_type):(FORALL(y:return_type):(leibniz_sttfa.leibniz[return_type](x)(y) => leibniz_sttfa.leibniz[return_type](y)(x))))" "nat_sttfa.filter_nat_type[return_type](return)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[return_type]"))))))))
%|- QED

nat_ind  : AXIOM (FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))

pred  : [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] = (LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(n))

not_zero  : [nat_sttfa.sttfa_nat -> bool] = (LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(n))

le : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]

le_n  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))

le_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))

match_le_prop  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(n) => ((FORALL(m:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => return(m)))))))

le_ind  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))

lt  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]] = (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)))

plus : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

plus_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

axiom_plus  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))

eq_plus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))

%|- eq_plus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_plus")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.plus(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_plus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))

%|- sym_eq_plus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_plus")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus(n))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.plus(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

axiom_plus_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))

eq_plus_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))

%|- eq_plus_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):m))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):m)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-lemma "nat_sttfa.axiom_plus_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):m)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.plus_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

sym_eq_plus_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))

%|- sym_eq_plus_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-lemma "nat_sttfa.eq_plus_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):m)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.plus_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))
%|- QED

axiom_plus_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))

eq_plus_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))

%|- eq_plus_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_plus_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_plus_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_plus_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_plus_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

times : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

times_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

axiom_times  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))

eq_times  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))

%|- eq_times : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_times")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.times(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_times  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))

%|- sym_eq_times : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_times")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times(n))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.times(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

axiom_times_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))

eq_times_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))

%|- eq_times_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "nat_sttfa.axiom_times_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.times_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

sym_eq_times_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))

%|- sym_eq_times_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "nat_sttfa.eq_times_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.times_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))
%|- QED

axiom_times_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))

eq_times_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))

%|- eq_times_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_times_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.times_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_times_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_times_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_times_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.times_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

minus : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

minus_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]

axiom_minus  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))

eq_minus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))

%|- eq_minus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_minus")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.minus(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_minus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))

%|- sym_eq_minus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus(n))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.minus(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

axiom_minus_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))

eq_minus_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))

%|- eq_minus_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "nat_sttfa.axiom_minus_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.minus_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

sym_eq_minus_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))

%|- sym_eq_minus_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.minus_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))
%|- QED

axiom_minus_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))

eq_minus_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))

%|- eq_minus_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_minus_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y))))))" "nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]"))))))))
%|- QED

sym_eq_minus_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_minus_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](y)(x))))" "nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))
%|- QED

nat_case  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(n)))))

%|- nat_case : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(((logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x)))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(((logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x_366))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_S(x_366))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "((logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x_366)))" "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O))" "((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m))))" "P(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)) => P(nat_sttfa.sttfa_S(x_366)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)) => P(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m))))" "x_366"
%|- (propax))))))))
%|- (sttfa-impl-e "(((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_O))) => ((FORALL(x:nat_sttfa.sttfa_nat):(((logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(x))))))" "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O))" "((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m))))" "P(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (propax))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(sttfa__x_365))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(sttfa__x_365))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(sttfa__x_365))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(sttfa__x_365))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(sttfa__x_365))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

nat_elim2  : LEMMA (FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))

%|- nat_elim2 : PROOF
%|- (then@ (sttfa-forall-i "R")
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n))" "((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))"
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m))))"
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(x)(m)))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):R(x)(m)) => (FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(x))(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(x)(m))))" "(FORALL(n0:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):R(n0)(m)) => (FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(m))))"
%|- (then@ (sttfa-forall-i "n0")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):R(n0)(m))" "(FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(m))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "R(nat_sttfa.sttfa_S(n0))(m)" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(z))" "m"
%|- (sttfa-impl-e "((FORALL(n1:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(n1))) => (FORALL(z:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(z)))" "(FORALL(auto:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(auto)))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-impl-e "(R(n0)(auto) => R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(auto)))" "R(n0)(auto)"
%|- (sttfa-conv "R(n0)(auto)" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):R(n0)(m))" "auto"
%|- (propax)))
%|- (sttfa-conv "(R(n0)(auto) => R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(R(n0)(m0) => R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(m0))))" "auto"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(R(n0)(m0) => R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "n0"
%|- (propax)))))))
%|- (sttfa-impl-e "(R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O) => ((FORALL(n1:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_S(n1))) => (FORALL(z:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(z))))" "R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "R(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" "n0"
%|- (propax)))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(sttfa___))(nat_sttfa.sttfa_O) => ((FORALL(n1:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(sttfa___))(nat_sttfa.sttfa_S(n1))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(sttfa___))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n0))(sttfa___))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(m)) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):R(x)(m)) => (FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(x))(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(x)(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(m))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "R(nat_sttfa.sttfa_O)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n))" "m"
%|- (propax))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(sttfa__x_365)(m)))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(sttfa__x_365)(m)))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(sttfa__x_365)(m)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(sttfa__x_365)(m)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(sttfa__x_365)(m)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))))
%|- QED

le_gen  : LEMMA (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => P(i))) => P(n))))

%|- le_gen : PROOF
%|- (then@ (sttfa-forall-i "P")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => P(i)))" "P(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n) => P(n))" "nat_sttfa.le(n)(n)"
%|- (sttfa-conv "nat_sttfa.le(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(n)(n) => P(n))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => P(i)))" "n"
%|- (propax)))))))
%|- QED

pred_Sn  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))

%|- pred_Sn : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))))" () ("nat_sttfa.pred")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):p)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

injective_S  : LEMMA relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S)

%|- injective_S : PROOF
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))" () ("relations_sttfa.injective")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "x"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0)))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(y0))))" "nat_sttfa.sttfa_S(x)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(y0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(y)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "y"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(sttfa___)))(nat_sttfa.sttfa_S(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.sttfa_S(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.pred(nat_sttfa.sttfa_S(x))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y)))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "y"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "y"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))
%|- QED

S_pred  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))

%|- S_pred : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(m)))(m)))" "n"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(m)))(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(m)))(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(sttfa___)))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(sttfa___)))(sttfa___))(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(sttfa___)))(sttfa___))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => return(m))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(sttfa___)))(sttfa___))"
%|- (sttfa-conv "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m) => return(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(n) => ((FORALL(m:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(m))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => return(m)))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.match_le_prop")))))))))))))
%|- QED

plus_O_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))

%|- plus_O_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))
%|- QED

plus_n_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))

%|- plus_n_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(y))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(sttfa___)))(x_366) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x_366) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x_366) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x_366)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "x_366"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_366))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_O)))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_O)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa__x_365)(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

plus_n_Sm  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))

%|- plus_n_Sm : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "m"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_S(m)"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_S(m)"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(y)))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(sttfa___))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(y(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m)))))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(sttfa__x_365)(m)))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(sttfa__x_365)(m)))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(sttfa__x_365)(m)))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(sttfa__x_365)(m)))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(sttfa__x_365)(m)))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

commutative_plus  : LEMMA relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)

%|- commutative_plus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n))))" () ("relations_sttfa.commutative")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x)))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366)))" "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366)))" "y"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.plus(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))))" "nat_sttfa.plus(x_366)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(y)(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(y)(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(y)(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(y)(m)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(m))))" "x_366"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(y)(m)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "y"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus(y)(x_366)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(x_366)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(x_366)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(x_366)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(x_366)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(x_366)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(y)(x_366)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))))
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))))" "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "y"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0)))" "nat_sttfa.plus(y)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "y"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "y"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(y))(nat_sttfa.plus(y)(sttfa__x_365))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(y))(nat_sttfa.plus(y)(sttfa__x_365))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(y))(nat_sttfa.plus(y)(sttfa__x_365))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(y))(nat_sttfa.plus(y)(sttfa__x_365))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(y))(nat_sttfa.plus(y)(sttfa__x_365))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

associative_plus  : LEMMA relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)

%|- associative_plus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(n)(y))(z))(nat_sttfa.plus(n)(nat_sttfa.plus(y)(z))))))" () ("relations_sttfa.associative")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(n)(y))(z))(nat_sttfa.plus(n)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(y)(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z)))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))))"
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "z")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z0))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z0))))" "z"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z0))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "y"
%|- (propax)))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))))" "nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m)))) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.plus(x_366)(y)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.plus(x_366)(y)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))))
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(y)(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))))"
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "z")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(y)(z)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(y)(z))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(z))(nat_sttfa.plus(y)(z)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.plus(y)(z)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(z))(nat_sttfa.plus(y)(z))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(z))(nat_sttfa.plus(y)(z))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(y)(z)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.plus(y)(z)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.plus(y)(z)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.plus(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(sttfa__x_365)(y))(z))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.plus(y)(z))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(sttfa__x_365)(y))(z))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.plus(y)(z))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(sttfa__x_365)(y))(z))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.plus(y)(z))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(sttfa__x_365)(y))(z))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.plus(y)(z))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(sttfa__x_365)(y))(z))(nat_sttfa.plus(sttfa__x_365)(nat_sttfa.plus(y)(z))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

assoc_plus1  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))))

%|- assoc_plus1 : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(a))(nat_sttfa.plus(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(a))(nat_sttfa.plus(a)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(a))(nat_sttfa.plus(a)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(y))(nat_sttfa.plus(y)(b)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(y))(nat_sttfa.plus(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(a))(nat_sttfa.plus(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))))" "nat_sttfa.plus(b)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.plus(b)(c))))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.plus(b)(c)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(y)))" "nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(y)))" "nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(y)(c)))" "nat_sttfa.plus(a)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(y)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "c"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(b))(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))))" "nat_sttfa.plus(c)(nat_sttfa.plus(a)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(b)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))(nat_sttfa.plus(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(a)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

injective_plus_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))

%|- injective_plus_r : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m))))" "n"
%|- (sttfa-impl-e "((FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m)))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)))"
%|- (sttfa-impl-e "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)))"
%|- (sttfa-impl-e "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)))"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m))))" "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))"
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "x"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0)))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0)))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "x"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0)))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(y))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(y))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(y0)))" "nat_sttfa.plus(x_366)(y)"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(x)))(nat_sttfa.sttfa_S(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(y0)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x0))(nat_sttfa.sttfa_S(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0))))" "nat_sttfa.plus(x_366)(x)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(f(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0)))))(nat_sttfa.sttfa_S)" () ()
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S)" ("relations_sttfa.injective") ()
%|- (sttfa-lemma "nat_sttfa.injective_S"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0)))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(x))(nat_sttfa.plus(x_366)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))" "x"
%|- (propax)))))))))
%|- (sttfa-conv "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m))))" ("relations_sttfa.injective") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m)))))" ("relations_sttfa.injective") ()
%|- (sttfa-impl-e "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_O)(m))) => ((FORALL(x:nat_sttfa.sttfa_nat):(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(x)(m))))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.sttfa_O)(m))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m))))" "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m))))" "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))"
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0)))" "y"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x)" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "x"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(sttfa___))(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "x"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m))))" ("relations_sttfa.injective") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa__x_365)(m))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa__x_365)(m))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa__x_365)(m))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa__x_365)(m))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(sttfa__x_365)(m))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

times_Sn_m  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))))

%|- times_Sn_m : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.plus(m)(nat_sttfa.times(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(m)(nat_sttfa.times(n)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(y(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))))
%|- QED

times_O_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))

%|- times_O_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))
%|- QED

times_n_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))

%|- times_n_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x)(nat_sttfa.sttfa_O))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.times_Sn_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))))" "nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.times_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_O)))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_O)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

times_n_Sm  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))

%|- times_n_Sm : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(nat_sttfa.times(x)(m)))(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(nat_sttfa.times(x)(m)))(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(nat_sttfa.times(x)(m)))(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.times(x_366)(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(y))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))" "m"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y)))))" "nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(z))))" "nat_sttfa.times(x_366)(m)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(y))(z))(nat_sttfa.plus(x_366)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "x_366"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(y)))" "nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(x_366)(c))(nat_sttfa.times(x_366)(m))))" "m"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(x_366)(c))(nat_sttfa.times(x_366)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(nat_sttfa.times(x_366)(m)))))" "x_366"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(nat_sttfa.times(x_366)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))))" "nat_sttfa.times(x_366)(m)"
%|- (sttfa-lemma "nat_sttfa.assoc_plus1")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(x_366)(m))(nat_sttfa.times(x_366)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(y))))" "nat_sttfa.plus(m)(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(y)))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.times(x_366)(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(y))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(sttfa___)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.plus(x_366)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(sttfa___))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(sttfa___)))(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___))))(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.times(x_366)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x_366)(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.times(x_366)(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))))(y(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(x_366)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(nat_sttfa.times(x)(m)))(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_S(x))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(m)))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(nat_sttfa.times(x)(m)))(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.sttfa_O)) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(nat_sttfa.sttfa_O)))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "(FORALL(sttfa__m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (then@ (sttfa-forall-i "sttfa__m")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.sttfa_O)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(y(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(nat_sttfa.times(sttfa__x_365)(m)))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(nat_sttfa.times(sttfa__x_365)(m)))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(nat_sttfa.times(sttfa__x_365)(m)))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(nat_sttfa.times(sttfa__x_365)(m)))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa__x_365)(nat_sttfa.times(sttfa__x_365)(m)))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

commutative_times  : LEMMA relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)

%|- commutative_times : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(y))(nat_sttfa.times(y)(n))))" () ("relations_sttfa.commutative")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(y))(nat_sttfa.times(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x)))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366)))" "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(m)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m))))" "x_366"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(m)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "y"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(y0)))" "nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366)))" "y"
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(nat_sttfa.times(y)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(y0))))" "nat_sttfa.times(y)(x_366)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(y0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(sttfa___)))(nat_sttfa.times(x_366)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(x_366)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(y)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(x_366)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(y))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.times(x_366)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(sttfa___))(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.plus(y)(nat_sttfa.times(y)(x_366))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](z(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))))
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))))" "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))" "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))" "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(z)(nat_sttfa.sttfa_O))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))" "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "y"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0)))" "nat_sttfa.times(y)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(z))(nat_sttfa.times(z)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(y)(sttfa__x_365))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(y)(sttfa__x_365))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(y)(sttfa__x_365))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(y)(sttfa__x_365))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(y)(sttfa__x_365))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

distributive_times_plus  : LEMMA relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)

%|- distributive_times_plus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(n)(y))(nat_sttfa.times(n)(z))))))" () ("relations_sttfa.distributive")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(n)(y))(nat_sttfa.times(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(z)))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(z)))))"
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "z")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(z0))))" "nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(y0))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(y0)(z0)))))" "z"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(y0))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(y0)(z0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y0))(z0))(nat_sttfa.plus(x)(nat_sttfa.plus(y0)(z0))))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y0))(z0))(f(x)(f(y0)(z0)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))))" "nat_sttfa.plus(nat_sttfa.plus(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(z0))))" "nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(y0))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(y0)(z0)))))" "nat_sttfa.times(x_366)(y)"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(y0))(z0))(nat_sttfa.plus(y)(nat_sttfa.plus(y0)(z0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y0))(z0))(nat_sttfa.plus(x)(nat_sttfa.plus(y0)(z0))))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y0))(z0))(f(x)(f(y0)(z0)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(y0)))" "nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(z0))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(z0))))" "nat_sttfa.times(x_366)(z)"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(z0))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(y0))(z0))(nat_sttfa.plus(z)(nat_sttfa.plus(y0)(z0)))))" "nat_sttfa.times(x_366)(y)"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(y0))(z0))(nat_sttfa.plus(z)(nat_sttfa.plus(y0)(z0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y0))(z0))(nat_sttfa.plus(x)(nat_sttfa.plus(y0)(z0))))))" "z"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y0))(z0))(f(x)(f(y0)(z0)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(y0)))" "nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(y0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(z)(c))(nat_sttfa.times(x_366)(z))))" "nat_sttfa.times(x_366)(y)"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(z)(c))(nat_sttfa.times(x_366)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(nat_sttfa.times(x_366)(z)))))" "z"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(nat_sttfa.times(x_366)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))))" "nat_sttfa.times(x_366)(z)"
%|- (sttfa-lemma "nat_sttfa.assoc_plus1")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.plus(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(y)))(nat_sttfa.times(x_366)(z))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(y0))))" "nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(y0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z0)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z0))))" "z"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z0)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))))" "y"
%|- (propax)))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(y0)))))" "nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(y0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(sttfa___))))(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(sttfa___))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(sttfa___))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(sttfa___)))(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(nat_sttfa.plus(y)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(z)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.times(x_366)(z)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(sttfa___))(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(sttfa___))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z)))))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(y)(nat_sttfa.plus(nat_sttfa.times(x_366)(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(y)(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(nat_sttfa.plus(y)(z))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.plus(z)(nat_sttfa.times(x_366)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(x(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(x(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(x(z))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(x(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))))))
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(z))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(nat_sttfa.sttfa_O)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "(FORALL(sttfa__y:nat_sttfa.sttfa_nat):(FORALL(sttfa__z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "sttfa__y")
%|- (then@ (sttfa-forall-i "sttfa__z")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(x(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.sttfa_O)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.sttfa_O)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(x(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(x(y))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(x(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(x(z))))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(x(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(sttfa__x_365)(z))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(sttfa__x_365)(z))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(sttfa__x_365)(z))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(sttfa__x_365)(z))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa__x_365)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(sttfa__x_365)(y))(nat_sttfa.times(sttfa__x_365)(z))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

distributive_times_plus_r  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))))

%|- distributive_times_plus_r : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(y))(nat_sttfa.times(y)(nat_sttfa.plus(b)(c))))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(y))(nat_sttfa.times(y)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.plus(b)(c)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a)))))" "nat_sttfa.times(nat_sttfa.plus(b)(c))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(a))(nat_sttfa.times(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(a))(nat_sttfa.times(a)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(a))(nat_sttfa.times(a)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(a))(nat_sttfa.times(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(y)(nat_sttfa.times(c)(a)))))" "nat_sttfa.times(b)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(y)(nat_sttfa.times(c)(a))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(c)(a)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(a))(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(c)(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(a))(nat_sttfa.times(a)(c))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(a))(nat_sttfa.times(a)(c))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(y))(nat_sttfa.times(y)(c)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(y))(nat_sttfa.times(y)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "c"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(c)(a))(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(c)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(y))))" "nat_sttfa.times(c)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y)))" "nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.times(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(sttfa___))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(sttfa___)))(nat_sttfa.times(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(c)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(c)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(nat_sttfa.times(a)(b))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(c)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(a)(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(sttfa___)(nat_sttfa.times(c)(a))))(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(sttfa___)(nat_sttfa.times(c)(a))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(b)(c)))(nat_sttfa.plus(sttfa___)(nat_sttfa.times(c)(a))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(a)(nat_sttfa.plus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

associative_times  : LEMMA relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)

%|- associative_times : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(n)(y))(z))(nat_sttfa.times(n)(nat_sttfa.times(y)(z))))))" () ("relations_sttfa.associative")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(n)(y))(z))(nat_sttfa.times(n)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.times(y)(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z)))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))))"
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "z")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z0))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z0))))" "z"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z0))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" "y"
%|- (propax)))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(y0))))" "nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(y0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(c))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(c)(z))))" "nat_sttfa.times(x_366)(y)"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(c))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(c)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(z))(nat_sttfa.plus(nat_sttfa.times(b)(z))(nat_sttfa.times(c)(z)))))" "y"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(z))(nat_sttfa.plus(nat_sttfa.times(b)(z))(nat_sttfa.times(c)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))))" "z"
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus_r")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(sttfa___)))(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x_366)(y))(z))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0))))))" "nat_sttfa.times(nat_sttfa.times(x_366)(y))(z)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))))" "nat_sttfa.times(nat_sttfa.plus(y)(nat_sttfa.times(x_366)(y)))(z)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x) => P(y0))))))" "nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.plus(nat_sttfa.times(y)(z))(nat_sttfa.times(x_366)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(x_366)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x_366))(y))(z))(x(nat_sttfa.times(y)(z))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.times(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))))))
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_S(x))(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_S(x))(nat_sttfa.times(y)(z))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z)))))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(nat_sttfa.sttfa_O))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))))" "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))))" "(FORALL(sttfa__y:nat_sttfa.sttfa_nat):(FORALL(sttfa__z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "sttfa__y")
%|- (then@ (sttfa-forall-i "sttfa__z")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x(z))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x(y))(z))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(y)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(nat_sttfa.sttfa_O)(y))(z))(x(nat_sttfa.times(y)(z))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(sttfa__x_365)(y))(z))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.times(y)(z))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(sttfa__x_365)(y))(z))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.times(y)(z))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(sttfa__x_365)(y))(z))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.times(y)(z))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(sttfa__x_365)(y))(z))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.times(y)(z))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(sttfa__x_365)(y))(z))(nat_sttfa.times(sttfa__x_365)(nat_sttfa.times(y)(z))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

times_times  : LEMMA (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))

%|- times_times : PROOF
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "z")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z0))(nat_sttfa.times(x)(nat_sttfa.times(y)(z0))))" "z"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z0))(nat_sttfa.times(x)(nat_sttfa.times(y)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y0))(z0))(nat_sttfa.times(x)(nat_sttfa.times(y0)(z0)))))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y0))(z0))(nat_sttfa.times(x)(nat_sttfa.times(y0)(z0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x0)(y0))(z0))(nat_sttfa.times(x0)(nat_sttfa.times(y0)(z0))))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x0)(y0))(z0))(f(x0)(f(y0)(z0)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))))" "nat_sttfa.times(x)(nat_sttfa.times(y)(z))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(nat_sttfa.times(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(nat_sttfa.times(x)(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(nat_sttfa.times(x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(y0))(nat_sttfa.times(y0)(y)))" "x"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(y0))(nat_sttfa.times(y0)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x0)(y0))(nat_sttfa.times(y0)(x0))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(nat_sttfa.times(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y0)(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))))" "nat_sttfa.times(x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(x))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y0)(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(x))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(x))(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(x))(z0))(nat_sttfa.times(y)(nat_sttfa.times(x)(z0))))" "z"
%|- (sttfa-conv "(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(x))(z0))(nat_sttfa.times(y)(nat_sttfa.times(x)(z0))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(y0))(z0))(nat_sttfa.times(y)(nat_sttfa.times(y0)(z0)))))" "x"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(y)(y0))(z0))(nat_sttfa.times(y)(nat_sttfa.times(y0)(z0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x0)(y0))(z0))(nat_sttfa.times(x0)(nat_sttfa.times(y0)(z0))))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(FORALL(z0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x0)(y0))(z0))(f(x0)(f(y0)(z0)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa___)(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(nat_sttfa.times(y)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa___)(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(y)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(sttfa___)(z))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(y)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(x))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.times(y)(x)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(nat_sttfa.times(nat_sttfa.times(x)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(x)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(x)(y))(z)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.times(nat_sttfa.times(x)(y))(z)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))))" "nat_sttfa.times(x)(nat_sttfa.times(y)(z))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(nat_sttfa.times(x)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(nat_sttfa.times(x)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(nat_sttfa.times(x)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "nat_sttfa.times(y)(nat_sttfa.times(x)(z))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(y)(nat_sttfa.times(x)(z))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.times(y)(nat_sttfa.times(x)(z))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

times_n_1  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))

%|- times_n_1 : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(y))))" "nat_sttfa.times(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- QED

minus_S_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))))

%|- minus_S_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y))(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.minus(n)(m))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.minus(n)(m))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.minus(n)(n0)))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

minus_O_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(n)))

%|- minus_O_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(z)))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(z))))" "(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))))" "(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))))" "(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))))" "(FORALL(auto:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_S(n0)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- QED

minus_n_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))

%|- minus_n_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](z)(nat_sttfa.minus(z)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](z)(nat_sttfa.minus(z)(nat_sttfa.sttfa_O))))" "(FORALL(auto:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_S(auto)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_S(auto))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.sttfa_S(auto))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(auto)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y))(nat_sttfa.sttfa_S(auto)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(auto)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(auto)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(auto)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(auto)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "auto"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(auto)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "auto"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(auto))(y(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.minus(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(auto)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus"))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](z)(nat_sttfa.minus(z)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.minus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_O)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- QED

minus_n_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))

%|- minus_n_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x)(x)))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x)(x)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x)(x))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.minus(x_366)(x_366))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.minus(x_366)(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(x_366)(m)))" "x_366"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(x_366)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(n)(m))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.minus_S_S")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.minus(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x_366)(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.minus(x_366)(x_366)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.minus(x_366)(x_366)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(x_366)(x_366)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(x_366)(x_366)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(x_366)(x_366)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(x_366)(x_366)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(x_366)(x_366)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(x_366)(x_366)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x)(x)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(x)(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.minus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(sttfa__x_365)(sttfa__x_365)))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(sttfa__x_365)(sttfa__x_365)))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(sttfa__x_365)(sttfa__x_365)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(sttfa__x_365)(sttfa__x_365)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(sttfa__x_365)(sttfa__x_365)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

eq_minus_S_pred  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))

%|- eq_minus_S_pred : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.minus(n)(m)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))" ("nat_sttfa.pred") ()
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y))))(nat_sttfa.minus(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(m)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(m)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(n)(m))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))" ("nat_sttfa.pred") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(y(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(y))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):q)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):q))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):q)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y)))(nat_sttfa.sttfa_S(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))" ("nat_sttfa.pred") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.minus(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus"))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_O)(n)))) => ((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m))))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))))" "(FORALL(sttfa__n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa__n))))"
%|- (then@ (sttfa-forall-i "sttfa__n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus(nat_sttfa.sttfa_O)(sttfa__n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(sttfa__n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(sttfa__n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(sttfa__n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))(nat_sttfa.sttfa_O) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(sttfa__n))))" ("nat_sttfa.pred") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(sttfa__n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(sttfa__n)))(nat_sttfa.pred(y(sttfa__n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus"))))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.sttfa_S(sttfa__0)))(nat_sttfa.pred(nat_sttfa.minus(sttfa___)(sttfa__0)))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2"))))))
%|- QED

not_eq_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))

%|- not_eq_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(sttfa___)))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))))
%|- QED

not_eq_O_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))

%|- not_eq_O_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(nat_sttfa.not_zero(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" "nat_sttfa.not_zero(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => nat_sttfa.not_zero(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => nat_sttfa.not_zero(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => nat_sttfa.not_zero(x)))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => nat_sttfa.not_zero(x))))" "nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_True => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" "connectives_sttfa.sttfa_True"
%|- (sttfa-lemma "connectives_sttfa.I")
%|- (sttfa-conv "((LAMBDA(y:bool):y)(connectives_sttfa.sttfa_True) => (LAMBDA(y:bool):y)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(y))))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool]")))))))))))))
%|- (sttfa-conv "(nat_sttfa.not_zero(nat_sttfa.sttfa_S(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => nat_sttfa.not_zero(x))))" ("nat_sttfa.not_zero") ()
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x))(nat_sttfa.sttfa_S(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(n)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" () ("nat_sttfa.not_zero")
%|- (sttfa-conv "((LAMBDA(y:bool):y)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => (LAMBDA(y:bool):y)(connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => P(connectives_sttfa.sttfa_False)))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => P(y))))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_O[bool]")))))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.nmk")))))
%|- QED

lt_to_not_zero  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.not_zero(m))))

%|- lt_to_not_zero : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "nat_sttfa.not_zero(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => nat_sttfa.not_zero(m))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.not_zero(m))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.not_zero(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.not_zero(m0)))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.not_zero(m0) => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.not_zero(m0))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.not_zero(m0) => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)" "(nat_sttfa.not_zero(m0) => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-i "nat_sttfa.not_zero(m0)" "nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_True => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))" "connectives_sttfa.sttfa_True"
%|- (sttfa-lemma "connectives_sttfa.I")
%|- (sttfa-conv "((LAMBDA(y:bool):y)(connectives_sttfa.sttfa_True) => (LAMBDA(y:bool):y)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(y))))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" "m0"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool]"))))))))))))))))
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.not_zero(m0) => nat_sttfa.not_zero(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.not_zero(m0))))" ("nat_sttfa.not_zero") ()
%|- (sttfa-impl-e "(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.not_zero(m0) => nat_sttfa.not_zero(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.not_zero(m0)))))" "nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_True => nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" "connectives_sttfa.sttfa_True"
%|- (sttfa-lemma "connectives_sttfa.I")
%|- (sttfa-conv "((LAMBDA(y:bool):y)(connectives_sttfa.sttfa_True) => (LAMBDA(y:bool):y)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(connectives_sttfa.sttfa_True) => P(y))))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](connectives_sttfa.sttfa_True)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool](case_S(n0))(nat_sttfa.match_nat_type[bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool]")))))))))))))
%|- (sttfa-conv "(nat_sttfa.not_zero(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.not_zero(m0) => nat_sttfa.not_zero(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.not_zero(m0)))))" ("nat_sttfa.not_zero") ()
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x_417))(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x_417))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x_417))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x_417))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.not_zero(x_417))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))))
%|- QED

le_S_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))

%|- le_S_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0))))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m0)" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m1) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m1))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m1) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_S")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(x_417)))(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(x_417)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(x_417)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(x_417)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(x_417)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_ind")))))))))))))
%|- QED

le_O_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))

%|- le_O_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(x))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(x) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(x)))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(x_366) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(x_366)" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(x_366) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(x_366)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(x_366) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" "x_366"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(x) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(x))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(x) => nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "nat_sttfa.le(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

le_n_Sn  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))

%|- le_n_Sn : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(n)(n)"
%|- (sttfa-conv "nat_sttfa.le(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(n)(n) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_S")))))))
%|- QED

transitive_le  : LEMMA relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)

%|- transitive_le : PROOF
%|- (sttfa-conv "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => (nat_sttfa.le(b)(c) => nat_sttfa.le(a)(c))))))" () ("relations_sttfa.transitive")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.le(a)(b)" "(nat_sttfa.le(b)(c) => nat_sttfa.le(a)(c))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(c)" "nat_sttfa.le(a)(c)"
%|- (sttfa-impl-e "(nat_sttfa.le(b)(c) => nat_sttfa.le(a)(c))" "nat_sttfa.le(b)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(b)(c) => nat_sttfa.le(a)(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => nat_sttfa.le(a)(m)))" "c"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => nat_sttfa.le(a)(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(b)(m)" "(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(m)" "nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(a)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => nat_sttfa.le(a)(m)))))" "nat_sttfa.le(a)(b)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(x_417))(b) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(x_417))(m) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(x_417))(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(x_417))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(b) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => Q(m))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(x_417))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(b) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => Q(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "b"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))))
%|- QED

le_pred_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(n))

%|- le_pred_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(n))(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(x))(x))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(x))(x) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(x))(x)))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(x_366))(x_366) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.pred(x_366))(x_366)" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366))))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.pred(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366)))) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366)))" () ("nat_sttfa.pred")
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(y)))(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366))) => P(x_366)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366))) => P(y))))(x_366)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366)))(x_366)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366)))(x_366)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(x_366)))(x_366)" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))(n0))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))((LAMBDA(p:nat_sttfa.sttfa_nat):p)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(x))(x) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(x))(x))))" "nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_O))(nat_sttfa.pred(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_O))(nat_sttfa.pred(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_O))(nat_sttfa.pred(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.pred(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ("nat_sttfa.pred" "nat_sttfa.pred")
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(y))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_O)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_O[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(x))(x) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(x))(x))))" ("nat_sttfa.pred") ()
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(sttfa__x_365))(sttfa__x_365))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(sttfa__x_365))(sttfa__x_365))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(sttfa__x_365))(sttfa__x_365))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(sttfa__x_365))(sttfa__x_365))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(sttfa__x_365))(sttfa__x_365))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

monotonic_pred  : LEMMA relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)

%|- monotonic_pred : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m)))))" () ("relations_sttfa.monotonic")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0)) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0)) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m0)" "(nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0)) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0))" "nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m0) => nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(n)(m0)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))(m0) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m0) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m0) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(m0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](m0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](m0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n0)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0))))" "m0"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):p)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))))" ("nat_sttfa.pred") ()
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(n))(n) => (nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0)))))" "nat_sttfa.le(nat_sttfa.pred(n))(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(n))(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_pred_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(n))(n) => (nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(n))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.pred(n))(z))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(n))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.pred(n))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(n))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.pred(n))(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.pred(n))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.pred(n))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.pred(n)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0)) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(m0))))))" "nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.pred(n)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(x_417)))(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(x_417)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(x_417)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(x_417)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(nat_sttfa.pred(x_417)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))
%|- QED

le_S_S_to_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))

%|- le_S_S_to_le : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(m))" "nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))))" () ("nat_sttfa.pred" "nat_sttfa.pred")
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))))(n))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))) => P(n)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n))) => P(y))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))(n)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))(n)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n)))(n)" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))(n0))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))((LAMBDA(p:nat_sttfa.sttfa_nat):p)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))(m))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))) => P(m)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m))) => P(y))))(m)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m)))(m)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m)))(m)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(m)))(m)" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))(n0))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(p:nat_sttfa.sttfa_nat):p))(nat_sttfa.sttfa_S(n0)))((LAMBDA(p:nat_sttfa.sttfa_nat):p)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):p)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))))
%|- QED

monotonic_le_plus_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))

%|- monotonic_le_plus_r : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(n)(b))))))" () ("relations_sttfa.monotonic")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-conv "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(n)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(x)(a))(nat_sttfa.plus(x)(b))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(x)(a))(nat_sttfa.plus(x)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(b))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(x)(a))(nat_sttfa.plus(x)(b)))))" "(FORALL(m:nat_sttfa.sttfa_nat):((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(b)))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b)))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(b)))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(b)" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(b)))" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))" "nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))" "nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(b)) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))" "nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(b)))" "nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))" "nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b)))" "nat_sttfa.le(a)(b)"
%|- (propax)
%|- (propax))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(m)(a))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(m)(a))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.plus(m)(b)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(m)(a))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(a)))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(m)(a)"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(a))(y(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(y(b)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(y(b)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(a))(y(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus"))))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))) => ((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(x)(a))(nat_sttfa.plus(x)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(b))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(x)(a))(nat_sttfa.plus(x)(b))))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus(nat_sttfa.sttfa_O)(b)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus(nat_sttfa.sttfa_O)(b))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(b))) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(b)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(b)) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(b))))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(b))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(b) => nat_sttfa.le(a)(b)) => (nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(b)))" "(nat_sttfa.le(a)(b) => nat_sttfa.le(a)(b))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(b)" "nat_sttfa.le(a)(b)"
%|- (propax))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(b)))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(b)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(b)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a))(y(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(y(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(y(b))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(y(b))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(a))(y(b))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(a))(nat_sttfa.plus(sttfa__x_365)(b))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(a))(nat_sttfa.plus(sttfa__x_365)(b))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(a))(nat_sttfa.plus(sttfa__x_365)(b))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(a))(nat_sttfa.plus(sttfa__x_365)(b))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(b) => nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(a))(nat_sttfa.plus(sttfa__x_365)(b))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))))
%|- QED

monotonic_le_plus_l  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))

%|- monotonic_le_plus_l : PROOF
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))))))" () ("relations_sttfa.monotonic")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.le(x)(y)" "nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))) => nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(m))(nat_sttfa.plus(m)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(m))(nat_sttfa.plus(m)(x))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(m))(nat_sttfa.plus(m)(x))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y0))(nat_sttfa.plus(y0)(x)))" "m"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y0))(nat_sttfa.plus(y0)(x)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y0))(nat_sttfa.plus(y0)(x0))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(m))(nat_sttfa.plus(m)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(y)(m)))))" "nat_sttfa.plus(x)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(y)(m))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(y)(m))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(y)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(m))(nat_sttfa.plus(m)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(y)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(m))(nat_sttfa.plus(m)(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(m))(nat_sttfa.plus(m)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(y0))(nat_sttfa.plus(y0)(y)))" "m"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(y0))(nat_sttfa.plus(y0)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y0))(nat_sttfa.plus(y0)(x0))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(m))(nat_sttfa.plus(m)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(y)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(y0))))" "nat_sttfa.plus(y)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(y0)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(sttfa___)))(nat_sttfa.plus(m)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(m)(x))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(m)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(m))))(nat_sttfa.plus(m)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(x)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(m))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(x)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(m)(x)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(m)(x)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))) => nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))))" "nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))" "nat_sttfa.le(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y0) => nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y0))))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y0) => nat_sttfa.le((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0))(x))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0))(x0))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0))(y0)))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le(f(x0))(f(y0))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(R(x0)(y0) => R(f(x0))(f(y0)))))))(nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "m"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))) => nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(B) => B)))" "nat_sttfa.le(nat_sttfa.plus(x)(m))(nat_sttfa.plus(y)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.plus(m)(x))(nat_sttfa.plus(m)(y))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))))))
%|- QED

le_plus  : LEMMA (FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(n2) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2))))))))

%|- le_plus : PROOF
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "m1")
%|- (then@ (sttfa-forall-i "m2")
%|- (sttfa-impl-i "nat_sttfa.le(n1)(n2)" "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2)))"
%|- (sttfa-impl-i "nat_sttfa.le(m1)(m2)" "nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2)) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2)))" "nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2))"
%|- (sttfa-impl-e "(nat_sttfa.le(n1)(n2) => nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2)))" "nat_sttfa.le(n1)(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n1)(n2) => nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(y) => nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(y)(m2))))" "n2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(y) => nat_sttfa.le((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2))(n1))((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2))(x))((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2))(y)))))" "n1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "m2"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_l")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)) => (nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2)) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2))))" "nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2))"
%|- (sttfa-impl-e "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)))" "nat_sttfa.le(m1)(m2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(m1)(y) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(y))))" "m2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(m1)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m))(m1))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m))(y)))))" "m1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n1)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "n1"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)) => (nat_sttfa.le(nat_sttfa.plus(n1)(m2))(nat_sttfa.plus(n2)(m2)) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)) => (nat_sttfa.le(nat_sttfa.plus(n1)(m2))(z) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(z))))" "nat_sttfa.plus(n2)(m2)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n1)(m2)) => (nat_sttfa.le(nat_sttfa.plus(n1)(m2))(z) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(z)))))" "nat_sttfa.plus(n1)(m2)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n1)(m1))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.plus(n1)(m1)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))))))))
%|- QED

le_plus_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))

%|- le_plus_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))) => nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))))" "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))) => nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(y) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(y)(m))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(y) => nat_sttfa.le((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m))(nat_sttfa.sttfa_O))((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m))(x))((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m))(y)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.plus(n0)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "m"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_l")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))) => nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(B) => B)))" "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))(nat_sttfa.plus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- QED

le_plus_b  : LEMMA (FORALL(b:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(b))(m) => nat_sttfa.le(n)(m)))))

%|- le_plus_b : PROOF
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.plus(n)(b))(m)" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n)(b))(m) => nat_sttfa.le(n)(m))" "nat_sttfa.le(nat_sttfa.plus(n)(b))(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(n)(b)) => (nat_sttfa.le(nat_sttfa.plus(n)(b))(m) => nat_sttfa.le(n)(m)))" "nat_sttfa.le(n)(nat_sttfa.plus(n)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b))) => nat_sttfa.le(n)(nat_sttfa.plus(n)(b)))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(b))(nat_sttfa.plus(b)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(b))(nat_sttfa.plus(b)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(b))(nat_sttfa.plus(b)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(b))(nat_sttfa.plus(b)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(y))))" "nat_sttfa.plus(n)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(nat_sttfa.plus(b)(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(sttfa___)))(nat_sttfa.plus(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(b)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b))) => nat_sttfa.le(n)(nat_sttfa.plus(n)(b))))" "nat_sttfa.le(n)(nat_sttfa.plus(b)(n))"
%|- (sttfa-conv "nat_sttfa.le(n)(nat_sttfa.plus(b)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(b)(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(b)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "b"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(nat_sttfa.le(n)(nat_sttfa.plus(n)(b))) => nat_sttfa.le(n)(nat_sttfa.plus(n)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(B) => B)))" "nat_sttfa.le(n)(nat_sttfa.plus(n)(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(n)(nat_sttfa.plus(b)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(b)(n)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(n)(nat_sttfa.plus(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(n)(b)) => (nat_sttfa.le(nat_sttfa.plus(n)(b))(m) => nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(n)(b)) => (nat_sttfa.le(nat_sttfa.plus(n)(b))(z) => nat_sttfa.le(n)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(n)(b)) => (nat_sttfa.le(nat_sttfa.plus(n)(b))(z) => nat_sttfa.le(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" "nat_sttfa.plus(n)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))))))
%|- QED

le_plus_n_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))

%|- le_plus_n_r : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n))) => nat_sttfa.le(m)(nat_sttfa.plus(m)(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(y))))" "nat_sttfa.plus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(sttfa___)))(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(n)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n))) => nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))"
%|- (sttfa-conv "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(n)(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(nat_sttfa.le(m)(nat_sttfa.plus(m)(n))) => nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(B) => B)))" "nat_sttfa.le(m)(nat_sttfa.plus(m)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(m)(nat_sttfa.plus(n)(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(m)(nat_sttfa.plus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- QED

le_plus_to_le  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)) => nat_sttfa.le(n)(m)))))

%|- le_plus_to_le : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)) => nat_sttfa.le(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(n))(nat_sttfa.plus(x)(m)) => nat_sttfa.le(n)(m)))))" "a"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(n))(nat_sttfa.plus(x)(m)) => nat_sttfa.le(n)(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(n))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m)) => nat_sttfa.le(n)(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(n))(nat_sttfa.plus(x)(m)) => nat_sttfa.le(n)(m))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x_366)(n))(nat_sttfa.plus(x_366)(m)) => nat_sttfa.le(n)(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x_366)(n))(nat_sttfa.plus(x_366)(m)) => nat_sttfa.le(n)(m))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(y))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(y))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(B) => B)))" "nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(n)))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x_366)(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(x_366)(m0)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x_366)(n))(nat_sttfa.plus(x_366)(m)) => nat_sttfa.le(n)(m))))" "nat_sttfa.sttfa_S(n)"
%|- (propax))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m))) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(x_366)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366))(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.plus(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(n))(nat_sttfa.plus(x)(m)) => nat_sttfa.le(n)(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(n))(nat_sttfa.plus(nat_sttfa.sttfa_S(x))(m)) => nat_sttfa.le(n)(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(n))(nat_sttfa.plus(x)(m)) => nat_sttfa.le(n)(m)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(m) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(m) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(m) => nat_sttfa.le(n)(m)))" "(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.le(n)(m)"
%|- (propax))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(m) => nat_sttfa.le(n)(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(m) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(m) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(y(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(y(m)) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(n))(nat_sttfa.plus(sttfa__x_365)(m)) => nat_sttfa.le(n)(m)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(n))(nat_sttfa.plus(sttfa__x_365)(m)) => nat_sttfa.le(n)(m)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(n))(nat_sttfa.plus(sttfa__x_365)(m)) => nat_sttfa.le(n)(m)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(n))(nat_sttfa.plus(sttfa__x_365)(m)) => nat_sttfa.le(n)(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(sttfa__x_365)(n))(nat_sttfa.plus(sttfa__x_365)(m)) => nat_sttfa.le(n)(m)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

le_plus_to_le_r  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => nat_sttfa.le(n)(m)))))

%|- le_plus_to_le_r : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)) => nat_sttfa.le(n)(m))" "nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))) => nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(a))(nat_sttfa.plus(a)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(a))(nat_sttfa.plus(a)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(a))(nat_sttfa.plus(a)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(a))(nat_sttfa.plus(a)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))))" "nat_sttfa.plus(n)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(a))(nat_sttfa.plus(a)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(a))(nat_sttfa.plus(a)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(a))(nat_sttfa.plus(a)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(a))(nat_sttfa.plus(a)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(y))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))))" "nat_sttfa.plus(m)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(y))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))(nat_sttfa.plus(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(a)(n))(sttfa___))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(a)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))(nat_sttfa.plus(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(a)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))) => nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" "nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))) => nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(B) => B)))" "nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)) => nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m0)) => nat_sttfa.le(n)(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m0)) => nat_sttfa.le(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n0))(nat_sttfa.plus(a)(m0)) => nat_sttfa.le(n0)(m0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n0))(nat_sttfa.plus(a)(m0)) => nat_sttfa.le(n0)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(n))(nat_sttfa.plus(a)(m)) => nat_sttfa.le(n)(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_le"))))))))))))
%|- QED

monotonic_le_times_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))

%|- monotonic_le_times_r : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.times(n)(x))(nat_sttfa.times(n)(y))))))" () ("relations_sttfa.monotonic")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.le(x)(y)" "nat_sttfa.le(nat_sttfa.times(n)(x))(nat_sttfa.times(n)(y))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(n)(x))(nat_sttfa.times(n)(y))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(x0)(x))(nat_sttfa.times(x0)(y)))" "n"
%|- (sttfa-impl-e "((FORALL(x0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(x0)(x))(nat_sttfa.times(x0)(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(x0))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(x0))(y)))) => (FORALL(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(x0)(x))(nat_sttfa.times(x0)(y))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(a))(y))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(a))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(a))(y)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))" "nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(y)) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))))" "nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))))" "nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(x)(y) => (nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y)))))" "nat_sttfa.le(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(x)(y) => (nat_sttfa.le(nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(nat_sttfa.times(a)(x))(m2) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(m2)))))" "nat_sttfa.times(a)(y)"
%|- (sttfa-conv "(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(nat_sttfa.times(a)(x))(m2) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.times(a)(x)))(nat_sttfa.plus(y)(m2)))))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(x)(m1))(nat_sttfa.plus(y)(m2))))))" "nat_sttfa.times(a)(x)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(x)(m1))(nat_sttfa.plus(y)(m2))))))" () ()
%|- (sttfa-forall-e "(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n2) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(x)(m1))(nat_sttfa.plus(n2)(m2)))))))" "y"
%|- (sttfa-conv "(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n2) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(x)(m1))(nat_sttfa.plus(n2)(m2)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(n2) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.plus(n1)(m1))(nat_sttfa.plus(n2)(m2))))))))" "x"
%|- (sttfa-lemma "nat_sttfa.le_plus")))))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.plus(y)(nat_sttfa.times(a)(y))))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m)))) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(a)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(a))) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))(nat_sttfa.times(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(z(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(z(y)))(nat_sttfa.times(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(a))(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a))) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.times(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.times(nat_sttfa.sttfa_O)(y)) => ((FORALL(x0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(x0)(x))(nat_sttfa.times(x0)(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(x0))(x))(nat_sttfa.times(nat_sttfa.sttfa_S(x0))(y)))) => (FORALL(x0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(x0)(x))(nat_sttfa.times(x0)(y)))))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.times(nat_sttfa.sttfa_O)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.times(nat_sttfa.sttfa_O)(y)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))" "nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y)) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.times_body(nat_sttfa.sttfa_O)(y)))" "nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times_body(nat_sttfa.sttfa_O)(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(z(x))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(z(y)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(z(y)))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(z:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_O)(x))(z(y)))"
%|- (sttfa-conv "(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y0))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x0) => P(y0)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(sttfa__x_365)(x))(nat_sttfa.times(sttfa__x_365)(y)))(nat_sttfa.sttfa_O) => ((FORALL(x0:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(sttfa__x_365)(x))(nat_sttfa.times(sttfa__x_365)(y)))(x0) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(sttfa__x_365)(x))(nat_sttfa.times(sttfa__x_365)(y)))(nat_sttfa.sttfa_S(x0)))) => (FORALL(x0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(sttfa__x_365)(x))(nat_sttfa.times(sttfa__x_365)(y)))(x0))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.times(sttfa__x_365)(x))(nat_sttfa.times(sttfa__x_365)(y)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))))
%|- QED

le_times  : LEMMA (FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(m2:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(n2) => (nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2))))))))

%|- le_times : PROOF
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "m1")
%|- (then@ (sttfa-forall-i "m2")
%|- (sttfa-impl-i "nat_sttfa.le(n1)(n2)" "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2)))"
%|- (sttfa-impl-i "nat_sttfa.le(m1)(m2)" "nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2)))" "nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))) => nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n1))(nat_sttfa.times(n1)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n1))(nat_sttfa.times(n1)(m2))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n1))(nat_sttfa.times(n1)(m2))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(y))(nat_sttfa.times(y)(m2)))" "n1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(y))(nat_sttfa.times(y)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "m2"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n1))(nat_sttfa.times(n1)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n1)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))))" "nat_sttfa.times(m2)(n1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n1)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n2))(nat_sttfa.times(n2)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n2))(nat_sttfa.times(n2)(m2))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n2))(nat_sttfa.times(n2)(m2))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(y))(nat_sttfa.times(y)(m2)))" "n2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(y))(nat_sttfa.times(y)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "m2"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m2)(n2))(nat_sttfa.times(n2)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n2)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(y))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))))" "nat_sttfa.times(m2)(n2)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n2)(m2)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(y))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(sttfa___))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))(nat_sttfa.times(n2)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n2)(m2)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(sttfa___))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n2)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n2)(m2)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(n1)(m2))(sttfa___))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n2)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n2)(m2)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n2)(m2)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))(nat_sttfa.times(n1)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n1)(m2)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n1)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n1)(m2)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n1)(m2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n1)(m2)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n1)(m2)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))) => nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" "nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2))"
%|- (sttfa-impl-e "(nat_sttfa.le(n1)(n2) => nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))" "nat_sttfa.le(n1)(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n1)(n2) => nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(y) => nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(y))))" "n2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n1)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m))(n1))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m))(y)))))" "n1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(m2)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "m2"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))) => nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(m2)(n1))(nat_sttfa.times(m2)(n2))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)) => (nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2))))" "nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2))"
%|- (sttfa-impl-e "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)))" "nat_sttfa.le(m1)(m2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m1)(m2) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(m1)(y) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(y))))" "m2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(m1)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m))(m1))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m))(y)))))" "m1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n1)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "n1"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)) => (nat_sttfa.le(nat_sttfa.times(n1)(m2))(nat_sttfa.times(n2)(m2)) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n2)(m2))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)) => (nat_sttfa.le(nat_sttfa.times(n1)(m2))(z) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(z))))" "nat_sttfa.times(n2)(m2)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n1)(m1))(nat_sttfa.times(n1)(m2)) => (nat_sttfa.le(nat_sttfa.times(n1)(m2))(z) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n1)(m1))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(z)))))" "nat_sttfa.times(n1)(m2)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n1)(m1))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(n1)(m1))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.times(n1)(m1)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))))))))
%|- QED

le_plus_minus_m_m  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))

%|- le_plus_minus_m_m : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(nat_sttfa.plus(nat_sttfa.minus(x)(m))(m))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(nat_sttfa.plus(nat_sttfa.minus(x)(m))(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(x))(m))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(nat_sttfa.plus(nat_sttfa.minus(x)(m))(m)))))" "(FORALL(a:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(m))(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(m))(m)))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(m))(m)))" "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(m))(m)))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(z))(z)))" "m"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(z))(z))))" "(FORALL(n0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))"
%|- (then@ (sttfa-forall-i "n0")
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(m0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(m0))))" "n0"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(m0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.minus(a)(n0)"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))" "nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))"
%|- (sttfa-conv "nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(m))(m)))" "n0"
%|- (propax)))
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(nat_sttfa.sttfa_S(n0)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.minus(a)(n0))(n0)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(n0))))(nat_sttfa.minus(a)(n0)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(n0))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(n0)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(n0)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(a)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n1))))" "n0"
%|- (sttfa-conv "(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q))(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_S)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_S)(nat_sttfa.sttfa_S(n1)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n1))))))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))))" "a"
%|- (sttfa-conv "(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n1:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n1)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))(nat_sttfa.minus(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(z))(z)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_S(a)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(a)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(a)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(a)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(sttfa___))(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(sttfa___))(sttfa___)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(sttfa___))(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(a))(sttfa___))(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(m))(m))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(nat_sttfa.plus(nat_sttfa.minus(x)(m))(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(x))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(x))(m))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(x)(nat_sttfa.plus(nat_sttfa.minus(x)(m))(m))))))" "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(m))(m)))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(m))(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(m))(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(m))(m)))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(m))(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(m))(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(m))(m)))"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))) => (FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(m))(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(m)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r"))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))(nat_sttfa.minus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(y(m))(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa__x_365)(nat_sttfa.plus(nat_sttfa.minus(sttfa__x_365)(m))(m))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa__x_365)(nat_sttfa.plus(nat_sttfa.minus(sttfa__x_365)(m))(m))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa__x_365)(nat_sttfa.plus(nat_sttfa.minus(sttfa__x_365)(m))(m))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa__x_365)(nat_sttfa.plus(nat_sttfa.minus(sttfa__x_365)(m))(m))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa__x_365)(nat_sttfa.plus(nat_sttfa.minus(sttfa__x_365)(m))(m))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

le_plus_to_minus_r  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => nat_sttfa.le(a)(nat_sttfa.minus(c)(b))))))

%|- le_plus_to_minus_r : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.plus(a)(b))(c)" "nat_sttfa.le(a)(nat_sttfa.minus(c)(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)) => nat_sttfa.le(a)(nat_sttfa.minus(c)(b)))" "nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)) => nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)))" "nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b))"
%|- (sttfa-conv "nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(m))(m)))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "c"
%|- (sttfa-lemma "nat_sttfa.le_plus_minus_m_m")))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => (nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)) => nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b))))" "nat_sttfa.le(nat_sttfa.plus(a)(b))(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => (nat_sttfa.le(c)(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)) => nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => (nat_sttfa.le(c)(z) => nat_sttfa.le(nat_sttfa.plus(a)(b))(z))))" "nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => (nat_sttfa.le(c)(z) => nat_sttfa.le(nat_sttfa.plus(a)(b))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.plus(a)(b))(z)))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.plus(a)(b))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.plus(a)(b)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(c)(b))(b)) => nat_sttfa.le(a)(nat_sttfa.minus(c)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(a)(m)))" "nat_sttfa.minus(c)(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(b))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(b))(nat_sttfa.plus(m)(b)) => nat_sttfa.le(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(a))(nat_sttfa.plus(m)(a)) => nat_sttfa.le(n)(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_le_r"))))))))))))
%|- QED

lt_to_le  : LEMMA (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))

%|- lt_to_le : PROOF
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.lt(x)(y)" "nat_sttfa.le(x)(y)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => nat_sttfa.le(x)(y))" "nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "x"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(x)(m)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "x"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_O)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(x)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(y0)(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" "nat_sttfa.sttfa_S(x)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(y0)(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(x)(y) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))" "nat_sttfa.lt(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)) => nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(B) => B)))" "nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(x))(y))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(x))(y)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y) => nat_sttfa.le(x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m) => nat_sttfa.le(x)(m)))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m) => nat_sttfa.le(x)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m) => nat_sttfa.le(n)(m))))" "x"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(m) => nat_sttfa.le(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(n)(b))(m) => nat_sttfa.le(n)(m)))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.le_plus_b")))))))))))
%|- QED

transitive_lt  : LEMMA relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.lt)

%|- transitive_lt : PROOF
%|- (sttfa-conv "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(b) => (nat_sttfa.lt(b)(c) => nat_sttfa.lt(a)(c))))))" () ("relations_sttfa.transitive")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.lt(a)(b)" "(nat_sttfa.lt(b)(c) => nat_sttfa.lt(a)(c))"
%|- (sttfa-impl-i "nat_sttfa.lt(b)(c)" "nat_sttfa.lt(a)(c)"
%|- (sttfa-impl-e "(nat_sttfa.lt(b)(c) => nat_sttfa.lt(a)(c))" "nat_sttfa.lt(b)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(b))(c) => nat_sttfa.lt(a)(c))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(b))(c) => nat_sttfa.lt(a)(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => nat_sttfa.lt(a)(m)))" "c"
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (nat_sttfa.lt(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => nat_sttfa.lt(a)(m))))" "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (nat_sttfa.lt(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(b))(m)" "(nat_sttfa.lt(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-i "nat_sttfa.lt(a)(m)" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.lt(a)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))))))
%|- (sttfa-conv "((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (nat_sttfa.lt(a)(m) => nat_sttfa.lt(a)(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => nat_sttfa.lt(a)(m))))" ("nat_sttfa.lt") ()
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b)) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (nat_sttfa.lt(a)(m) => nat_sttfa.lt(a)(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => nat_sttfa.lt(a)(m)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b))"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(b) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b)))" "nat_sttfa.lt(a)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(b) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(b) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.le_S")))))))
%|- (sttfa-conv "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b)) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (nat_sttfa.lt(a)(m) => nat_sttfa.lt(a)(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => nat_sttfa.lt(a)(m)))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(x_417))(nat_sttfa.sttfa_S(b)) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(x_417))(m) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(x_417))(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(x_417))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(b)) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => Q(m))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(x_417))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(b)) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(b))(m) => Q(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "nat_sttfa.sttfa_S(b)"
%|- (sttfa-lemma "nat_sttfa.le_ind")))))))))))))))))))
%|- QED

lt_to_le_to_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))

%|- lt_to_le_to_lt : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "(nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))"
%|- (sttfa-impl-i "nat_sttfa.le(m)(p)" "nat_sttfa.lt(n)(p)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))" "nat_sttfa.le(m)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => nat_sttfa.lt(n)(m0)))" "p"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (nat_sttfa.lt(n)(m0) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => nat_sttfa.lt(n)(m0))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (nat_sttfa.lt(n)(m0) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(m)(m0)" "(nat_sttfa.lt(n)(m0) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m0)" "nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))" ("nat_sttfa.lt") ()
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m0) => (nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.lt(n)(m0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m0) => (nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => (nat_sttfa.lt(m0)(z) => nat_sttfa.lt(n)(z))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => (nat_sttfa.lt(m0)(z) => nat_sttfa.lt(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(n)(z)))))" "m0"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.lt)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.lt)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_lt")))))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (nat_sttfa.lt(n)(m0) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => nat_sttfa.lt(n)(m0)))))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(n)(x_417))(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(n)(x_417))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(n)(x_417))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(n)(x_417))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(n)(x_417))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_ind")))))))))))))))
%|- QED

le_to_lt_to_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))))

%|- le_to_lt_to_lt : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(n)(p))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(n)(p)))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m0)" "((nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(n)(p)))"
%|- (sttfa-impl-i "(nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))" "(nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(n)(p))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p)" "nat_sttfa.lt(n)(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))" "nat_sttfa.lt(m0)(p)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(m0)(p))" "nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(m0)(p)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(m0)(p)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(m0)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(z) => nat_sttfa.lt(m0)(z))))" "p"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(z) => nat_sttfa.lt(m0)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(m0)(z)))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(m0)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(x)(z))))))" "m0"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.lt)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.lt)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_lt"))))))))))))
%|- (propax))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(n)(p) => nat_sttfa.lt(n)(p)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(m0))(p) => nat_sttfa.lt(n)(p))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))))))" "(nat_sttfa.lt(n)(p) => nat_sttfa.lt(n)(p))"
%|- (sttfa-impl-i "nat_sttfa.lt(n)(p)" "nat_sttfa.lt(n)(p)"
%|- (propax))
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x_417)(p) => nat_sttfa.lt(n)(p)))(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x_417)(p) => nat_sttfa.lt(n)(p)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x_417)(p) => nat_sttfa.lt(n)(p)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x_417)(p) => nat_sttfa.lt(n)(p)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x_417)(p) => nat_sttfa.lt(n)(p)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))
%|- QED

lt_S_to_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m))))

%|- lt_S_to_lt : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m)" "nat_sttfa.lt(n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m))" "nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.lt(n)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.lt(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.lt(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(n)(z)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => (nat_sttfa.lt(y)(z) => nat_sttfa.lt(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.lt)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.lt)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_lt")))))))))))))))
%|- QED

ltn_to_ltO  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))))

%|- ltn_to_ltO : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m0)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m0)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(n)(m0)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))))" "m"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(nat_sttfa.sttfa_O)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt"))))))))))))))
%|- QED

lt_O_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))

%|- lt_O_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.ltn_to_ltO"))))))))
%|- QED

monotonic_lt_plus_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))

%|- monotonic_lt_plus_r : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))))))" () ("relations_sttfa.monotonic" "nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.lt(x)(y)" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m))))" "x"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(n)(y)))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(n)(y))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(y))))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(y))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(n)(y))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-impl-e "(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" "nat_sttfa.lt(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y0) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y0))))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y0) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(nat_sttfa.sttfa_S(x)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(x0))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(y0)))))" "nat_sttfa.sttfa_S(x)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le(f(x0))(f(y0))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(R(x0)(y0) => R(f(x0))(f(y0)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_r"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))))))
%|- QED

monotonic_lt_plus_l  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(n))))

%|- monotonic_lt_plus_l : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))))))" () ("relations_sttfa.monotonic" "nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.lt(x)(y)" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(n))(nat_sttfa.plus(n)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(n))(nat_sttfa.plus(n)(x))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(n))(nat_sttfa.plus(n)(x))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y0))(nat_sttfa.plus(y0)(x)))" "n"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y0))(nat_sttfa.plus(y0)(x)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y0))(nat_sttfa.plus(y0)(x0))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(n))(nat_sttfa.plus(n)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(y)(n)))))" "nat_sttfa.plus(x)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(y)(n))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(y0))(nat_sttfa.plus(y)(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(y)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m))))" "x"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x)))(nat_sttfa.plus(y)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(y)(n)))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(n)(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(y)(n))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(y0)(nat_sttfa.plus(y)(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(y)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.plus(n)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.plus(n)(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.plus(n)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(y0))(nat_sttfa.plus(y0)(y)))" "n"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(y0))(nat_sttfa.plus(y0)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y0))(nat_sttfa.plus(y0)(x0))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.plus(n)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(y)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(y0))))" "nat_sttfa.plus(y)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(y0)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(sttfa___)))(nat_sttfa.plus(n)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(n)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(n))))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(n))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(sttfa___)(nat_sttfa.plus(y)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(n))))(nat_sttfa.plus(n)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(x)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(n))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(x)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(y)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.plus(n)(x)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.plus(n)(x)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-impl-e "(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" "nat_sttfa.lt(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y0) => nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y0))))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(y0) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(nat_sttfa.sttfa_S(x)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(x0))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))(y0)))))" "nat_sttfa.sttfa_S(x)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.le(x0)(y0) => nat_sttfa.le(f(x0))(f(y0))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(R(x0)(y0) => R(f(x0))(f(y0)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_r"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(x)(n)))(nat_sttfa.plus(y)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(n)(y))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))))))
%|- QED

monotonic_lt_times_r  : LEMMA (FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t)))))

%|- monotonic_lt_times_r : PROOF
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m)))))))" () ("relations_sttfa.monotonic")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(c)" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m)))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0))))" "m"
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(a) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0)))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(a) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(a)" "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))))" "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))) => nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(m0)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0))))" "a"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(m0)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "c"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(y))))" "nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(c))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(c))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(c))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(y))(nat_sttfa.plus(y)(nat_sttfa.times(c)(a))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(y))(nat_sttfa.plus(y)(nat_sttfa.times(c)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(c)(a)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(c)(a))(c))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(y))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))))" "nat_sttfa.plus(nat_sttfa.times(c)(a))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(y))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.times(c)(a))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(sttfa___1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(a))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(a)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.times(c)(a))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))) => nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(c)))" "nat_sttfa.times(c)(a)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "c"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))) => nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.plus(nat_sttfa.times(c)(a))(c))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => (nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => (nat_sttfa.le(nat_sttfa.times(c)(a))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => (nat_sttfa.le(nat_sttfa.times(c)(a))(z) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(z))))" "nat_sttfa.times(c)(nat_sttfa.sttfa_S(a))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(a)) => (nat_sttfa.le(nat_sttfa.times(c)(a))(z) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(z)))))" "nat_sttfa.times(c)(a)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))))
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0)) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0)))))" ("nat_sttfa.lt" "nat_sttfa.lt") ()
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0)) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0))))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.times(c)(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(m0)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(m0)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "c"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y))))" "nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(sttfa___)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.times(c)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(y) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n)))(nat_sttfa.plus(y)(nat_sttfa.times(c)(n)))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(y) => nat_sttfa.lt((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n)))(nat_sttfa.sttfa_O))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n)))(x))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n)))(y)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt(f(x))(f(y))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.lt)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n))))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(n))))" "nat_sttfa.times(c)(n)"
%|- (sttfa-lemma "nat_sttfa.monotonic_lt_plus_l")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(n)))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(c)(n))))(nat_sttfa.plus(c)(nat_sttfa.times(c)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(n))) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0)) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(m0))))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(x_417)))(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(x_417)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(x_417)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(x_417)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.times(c)(n))(nat_sttfa.times(c)(x_417)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_ind")))))))))))))))))))
%|- QED

monotonic_lt_times_l  : LEMMA (FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(c)))))

%|- monotonic_lt_times_l : PROOF
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c)))))))" () ("relations_sttfa.monotonic" "nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(c)" "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c)))))"
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "nat_sttfa.lt(x)(y)" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(c))(nat_sttfa.times(c)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(c))(nat_sttfa.times(c)(x))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(c))(nat_sttfa.times(c)(x))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y0))(nat_sttfa.times(y0)(x)))" "c"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y0))(nat_sttfa.times(y0)(x)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x0)(y0))(nat_sttfa.times(y0)(x0))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(c))(nat_sttfa.times(c)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(y0))(nat_sttfa.times(y)(c)))))" "nat_sttfa.times(x)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(y)(c))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(x)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(y0))(nat_sttfa.times(y)(c))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(y)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(c))(nat_sttfa.times(c)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(y)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(c))(nat_sttfa.times(c)(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(c))(nat_sttfa.times(c)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(y0))(nat_sttfa.times(y0)(y)))" "c"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(y0))(nat_sttfa.times(y0)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x0)(y0))(nat_sttfa.times(y0)(x0))))" "y"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y0))(f(y0)(x0)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(y)(c))(nat_sttfa.times(c)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(y)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(y0))))" "nat_sttfa.times(y)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(y0)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(sttfa___)))(nat_sttfa.times(c)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(sttfa___)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(c)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(c)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.times(c)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.times(y)(c))))(nat_sttfa.times(c)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(x)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.times(y)(c))))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(c)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(x)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.times(y)(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(c)(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.times(c)(x)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.times(c)(x)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.times(c)(x))(nat_sttfa.times(c)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))))" "nat_sttfa.lt(nat_sttfa.times(c)(x))(nat_sttfa.times(c)(y))"
%|- (sttfa-impl-e "(nat_sttfa.lt(x)(y) => nat_sttfa.lt(nat_sttfa.times(c)(x))(nat_sttfa.times(c)(y)))" "nat_sttfa.lt(x)(y)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(x)(y) => nat_sttfa.lt(nat_sttfa.times(c)(x))(nat_sttfa.times(c)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y0) => nat_sttfa.lt(nat_sttfa.times(c)(x))(nat_sttfa.times(c)(y0))))" "y"
%|- (sttfa-conv "(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y0) => nat_sttfa.lt((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))(x))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x0)(y0) => nat_sttfa.lt((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))(x0))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))(y0)))))" "x"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x0)(y0) => nat_sttfa.lt(f(x0))(f(y0))))))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y0:nat_sttfa.sttfa_nat):(R(x0)(y0) => R(f(x0))(f(y0)))))))(nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t))))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(c)(t)))))" "c"
%|- (sttfa-lemma "nat_sttfa.monotonic_lt_times_r"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(x)(c)))(nat_sttfa.times(y)(c))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.times(c)(x)))(nat_sttfa.times(c)(y))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))))))))
%|- QED

lt_to_le_to_lt_times  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))))))))

%|- lt_to_le_to_lt_times : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "(nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))))"
%|- (sttfa-impl-i "nat_sttfa.le(p)(q)" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(q)" "nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q)) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))" "nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(y)(q))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.lt((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))(n))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))(x))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))(y)))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt(f(x))(f(y))))))((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(q)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(c) => relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(t:nat_sttfa.sttfa_nat):nat_sttfa.times(t)(c)))))" "q"
%|- (sttfa-lemma "nat_sttfa.monotonic_lt_times_l"))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)) => (nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q)) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))))" "nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(q) => nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)))" "nat_sttfa.le(p)(q)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(p)(q) => nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(y) => nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(y))))" "q"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(y) => nat_sttfa.le((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0))(p))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0))(x))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0))(y)))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)) => (nat_sttfa.lt(nat_sttfa.times(n)(q))(nat_sttfa.times(m)(q)) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)) => (nat_sttfa.lt(nat_sttfa.times(n)(q))(p0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(p0))))" "nat_sttfa.times(m)(q)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n)(p))(nat_sttfa.times(n)(q)) => (nat_sttfa.lt(nat_sttfa.times(n)(q))(p0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n)(p))(m0) => (nat_sttfa.lt(m0)(p0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(p0)))))" "nat_sttfa.times(n)(q)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(n)(p))(m0) => (nat_sttfa.lt(m0)(p0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))))" "nat_sttfa.times(n)(p)"
%|- (sttfa-lemma "nat_sttfa.le_to_lt_to_lt"))))))))))))))))
%|- QED

lt_times  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.lt(p)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))))))))

%|- lt_times : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "(nat_sttfa.lt(p)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))"
%|- (sttfa-impl-i "nat_sttfa.lt(p)(q)" "nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(q)"
%|- (sttfa-impl-e "(nat_sttfa.lt(p)(q) => nat_sttfa.lt(nat_sttfa.sttfa_O)(q))" "nat_sttfa.lt(p)(q)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(p)(q) => nat_sttfa.lt(nat_sttfa.sttfa_O)(q))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(p)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0)))" "q"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(p)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))))" "p"
%|- (sttfa-lemma "nat_sttfa.ltn_to_ltO"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q))))" "nat_sttfa.le(p)(q)"
%|- (sttfa-impl-e "(nat_sttfa.lt(p)(q) => nat_sttfa.le(p)(q))" "nat_sttfa.lt(p)(q)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(p)(q) => nat_sttfa.le(p)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(p)(y) => nat_sttfa.le(p)(y)))" "q"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(p)(y) => nat_sttfa.le(p)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "p"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q0))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q0))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p0)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p0))(nat_sttfa.times(m)(q0)))))))" "p"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p0)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p0))(nat_sttfa.times(m)(q0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => (nat_sttfa.le(p0)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p0))(nat_sttfa.times(m0)(q0))))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => (nat_sttfa.le(p0)(q0) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q0) => nat_sttfa.lt(nat_sttfa.times(n)(p0))(nat_sttfa.times(m0)(q0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(p)(q) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(q) => nat_sttfa.lt(nat_sttfa.times(n)(p))(nat_sttfa.times(m)(q)))))))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt_times"))))))))))))))))))
%|- QED

lt_plus_to_minus_r  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.lt(a)(nat_sttfa.minus(c)(b))))))

%|- lt_plus_to_minus_r : PROOF
%|- (sttfa-conv "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c)(b))))))" () ("nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.plus(a)(b))(c)" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c)(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c)(b)))" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))(b))(c) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c))" "nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))(b))(c)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))(b))(c) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))(b))(c))" "nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))(b))(c)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))(b))(c))" "nat_sttfa.lt(nat_sttfa.plus(a)(b))(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(a)(b)))(c) => nat_sttfa.le(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))(b))(c))" () ("nat_sttfa.lt")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(a)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))(nat_sttfa.plus(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(y(b))(c))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.plus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.plus(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(a)))(nat_sttfa.plus(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(c0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c0)(b))))" "c"
%|- (sttfa-conv "(FORALL(c0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b))(c0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c0)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b0))(c0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c0)(b0)))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.sttfa_S(a))(b0))(c0) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.minus(c0)(b0)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(a)(b))(c) => nat_sttfa.le(a)(nat_sttfa.minus(c)(b))))))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_minus_r")))))))))))))
%|- QED

lt_plus_Sn_r  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))))

%|- lt_plus_Sn_r : PROOF
%|- (sttfa-conv "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))))" () ("nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(z))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" "x"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x0)(y))(z))(nat_sttfa.plus(x0)(nat_sttfa.plus(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x0)(y))(z))(f(x0)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))))" "nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(m)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(m)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(a)(x)"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(z))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" "x"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x0)(y))(z))(nat_sttfa.plus(x0)(nat_sttfa.plus(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x0)(y))(z))(f(x0)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))))" "nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___)))(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(a)(nat_sttfa.plus(x)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" "nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(y))(nat_sttfa.plus(y)(nat_sttfa.plus(a)(x))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(y))(nat_sttfa.plus(y)(nat_sttfa.plus(a)(x))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y))(nat_sttfa.plus(y)(x0))))" "nat_sttfa.plus(a)(x)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y))(f(y)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(y))))" "nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(z))))" "x"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(y))(z))(nat_sttfa.plus(a)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x0)(y))(z))(nat_sttfa.plus(x0)(nat_sttfa.plus(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x0)(y))(z))(f(x0)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(y)))" "nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(nat_sttfa.plus(a)(c))(x)))" "n"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(nat_sttfa.plus(a)(c))(x)))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(x)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(x))))" "a"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(x)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(nat_sttfa.plus(b)(a)))(nat_sttfa.plus(nat_sttfa.plus(b)(c))(a)))))" "x"
%|- (sttfa-lemma "nat_sttfa.assoc_plus1")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(sttfa___))(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(a)(n))(x)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(a)(n))(x))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(a)(n))(x)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(y))))" "nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(x))(nat_sttfa.plus(x)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(x))(nat_sttfa.plus(x)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(x))(nat_sttfa.plus(x)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" "x"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x0)(y))(nat_sttfa.plus(y)(x0))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0)(y))(f(y)(x0)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(x))(nat_sttfa.plus(x)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(y)))))" "nat_sttfa.plus(n)(x)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(y))))))" "logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(sttfa___))))(nat_sttfa.plus(x)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(sttfa___))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(a)(sttfa___))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(x)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(x)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(x)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(a)(nat_sttfa.plus(n)(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x0) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.plus(a)(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" "nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n)))"
%|- (sttfa-conv "nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(nat_sttfa.plus(x)(n))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(nat_sttfa.plus(x)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "nat_sttfa.plus(x)(n)"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(B) => B)))" "nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(a)(nat_sttfa.plus(a)(nat_sttfa.plus(x)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))) => nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(a)(x))(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))))
%|- QED

not_le_Sn_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))

%|- not_le_Sn_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(nat_sttfa.not_zero(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" "nat_sttfa.not_zero(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => nat_sttfa.not_zero(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_O) => nat_sttfa.not_zero(nat_sttfa.sttfa_O))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_O) => nat_sttfa.not_zero(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.not_zero(m)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.not_zero(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.not_zero(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_zero")))))))
%|- (sttfa-conv "(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False)" () ("nat_sttfa.not_zero")
%|- (sttfa-conv "((LAMBDA(y:bool):y)(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => (LAMBDA(y:bool):y)(connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool -> bool]):(P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => P(connectives_sttfa.sttfa_False)))" "(LAMBDA(y:bool):y)"
%|- (sttfa-conv "(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O)) => P(y))))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool):(LAMBDA(y:bool):(FORALL(P:[bool -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False)" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_True)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](connectives_sttfa.sttfa_False)(case_S)(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool]):leibniz_sttfa.leibniz[bool](nat_sttfa.match_nat_type[bool](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_O[bool]")))))))))))))
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.nmk")))))
%|- QED

not_le_to_not_le_S_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))

%|- not_le_to_not_le_S_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.le(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))))
%|- QED

not_le_S_S_to_not_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))))

%|- not_le_S_S_to_not_le : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))))" "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_S_S")))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.le(n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.le(n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))))
%|- QED

not_le_Sn_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))

%|- not_le_Sn_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x))(x)))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x))(x)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x))(x))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(x_366)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366)))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(x_366))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(x_366)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(x_366))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(x_366)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(m)))))" "x_366"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x_366))(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.not_le_to_not_le_S_S"))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => ((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x))(x)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(x)))(nat_sttfa.sttfa_S(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(x))(x)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa__x_365))(sttfa__x_365)))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa__x_365))(sttfa__x_365)))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa__x_365))(sttfa__x_365)))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa__x_365))(sttfa__x_365)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(sttfa__x_365))(sttfa__x_365)))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

lt_to_not_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))

%|- lt_to_not_le : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => nat_sttfa.le(m0)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => nat_sttfa.le(m0)(n))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)" "nat_sttfa.le(m0)(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => nat_sttfa.le(m0)(n))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(m0)(n) => nat_sttfa.le(m0)(n))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(m0)(n) => nat_sttfa.le(m0)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(y) => nat_sttfa.le(m0)(y)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m0)(y) => nat_sttfa.le(m0)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "m0"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))))
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => nat_sttfa.le(m0)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)))))" "nat_sttfa.le(m0)(n)"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n)"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(n))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_n")))
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(x_417)(n)))(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(x_417)(n)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(x_417)(n)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(x_417)(n)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(x_417)(n)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_S(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))
%|- QED

not_le_to_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))

%|- not_le_to_lt : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(n) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n)))" "nat_sttfa.lt(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_S_S_to_not_le"))))))
%|- (propax))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_S_S")))))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)))))" ("nat_sttfa.lt") ()
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_O))) => ((FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "nat_sttfa.lt(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(n)(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(y))(nat_sttfa.le(nat_sttfa.sttfa_O)(n))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(n))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(y))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(n))(nat_sttfa.le(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(n))(nat_sttfa.le(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => nat_sttfa.le(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => nat_sttfa.le(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => nat_sttfa.lt(sttfa__0)(sttfa___))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2")))))))
%|- QED

not_lt_to_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => nat_sttfa.le(m)(n))))

%|- not_lt_to_le : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m))" "nat_sttfa.le(m)(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(m)(n))" "nat_sttfa.lt(m)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)) => nat_sttfa.lt(m)(nat_sttfa.sttfa_S(n)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => nat_sttfa.lt(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)))))" "nat_sttfa.lt(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)) => nat_sttfa.lt(m)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(m)(n))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(m)(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(m)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))))))
%|- QED

le_to_not_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))

%|- le_to_not_lt : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n)))))" () ("nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n)))" "nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m)))" ("nat_sttfa.lt") ()
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_lt_to_lt"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le"))))))))))
%|- QED

decidable_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m))))

%|- decidable_le : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m)))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "logic_sttfa.decidable(nat_sttfa.le(n)(m))" "logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "logic_sttfa.decidable(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_not_le_S_S"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(B)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "connectives_sttfa.or_intror")))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" ("logic_sttfa.decidable") ()
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(B)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "connectives_sttfa.or_introl")))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" ("logic_sttfa.decidable") ()
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(n)(m) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => return))))" "logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(n)(m) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(B) => return)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(n)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m))))))" "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(B)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.or_intror")))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m))))))" ("logic_sttfa.decidable") ()
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)))) => ((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(B)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.sttfa_O)(n))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "connectives_sttfa.or_introl")))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_O)(n))) => ((FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.decidable(nat_sttfa.le(n)(m)) => logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m)))))))" ("logic_sttfa.decidable") ()
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(sttfa___)(sttfa__0))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2"))))))))
%|- QED

decidable_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(n)(m))))

%|- decidable_lt : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))))" ("logic_sttfa.decidable") ("logic_sttfa.decidable" "nat_sttfa.lt" "nat_sttfa.lt")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.decidable_le"))))))))
%|- QED

le_to_or_lt_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))

%|- le_to_or_lt_eq : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0))))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m0)" "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):nat_sttfa.le(m1)(nat_sttfa.plus(nat_sttfa.sttfa_O)(m1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_plus_n")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))) => nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))" ("nat_sttfa.lt") ()
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(n)(m0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (nat_sttfa.lt(m0)(p) => nat_sttfa.lt(n)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m1) => (nat_sttfa.lt(m1)(p) => nat_sttfa.lt(n)(p)))))" "m0"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m1) => (nat_sttfa.lt(m1)(p) => nat_sttfa.lt(n)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.lt(m)(p) => nat_sttfa.lt(n)(p))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_lt_to_lt"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-lemma "connectives_sttfa.or_introl")))))))))
%|- (sttfa-impl-e "(relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt)(n)(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))))" "relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt)(n)(n)"
%|- (sttfa-conv "relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt)(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt)(x)(x))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):R(x)(x)))(relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt))" () ()
%|- (sttfa-conv "relations_sttfa.reflexive[nat_sttfa.sttfa_nat](relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt))" ("relations_sttfa.reflexive") ()
%|- (sttfa-conv "relations_sttfa.reflexive[nat_sttfa.sttfa_nat](relations_sttfa.RC[nat_sttfa.sttfa_nat](nat_sttfa.lt))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):relations_sttfa.reflexive[nat_sttfa.sttfa_nat](relations_sttfa.RC[nat_sttfa.sttfa_nat](R)))" "nat_sttfa.lt"
%|- (sttfa-lemma "relations_sttfa.RC_reflexive[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(m0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m0)))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))))" () ("relations_sttfa.RC")
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(x_417))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_417)))(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(x_417))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_417)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(x_417))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_417)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(x_417))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_417)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(x_417))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_417)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))
%|- QED

lt_O_n_elim  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(n)))))

%|- lt_O_n_elim : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(x) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x)))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(nat_sttfa.sttfa_O)(x) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_S(x))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(x) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x))))))" "(FORALL(x_366:nat_sttfa.sttfa_nat):((nat_sttfa.lt(nat_sttfa.sttfa_O)(x_366) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x_366)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_S(x_366)))))))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-i "(nat_sttfa.lt(nat_sttfa.sttfa_O)(x_366) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x_366))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_S(x_366)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x_366))" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_S(x_366))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m)))" "P(nat_sttfa.sttfa_S(x_366))"
%|- (sttfa-conv "P(nat_sttfa.sttfa_S(x_366))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m)))" "x_366"
%|- (propax))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(nat_sttfa.sttfa_O)(x) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_S(x))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(x) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(x)))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa__x_365) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(sttfa__x_365)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa__x_365) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(sttfa__x_365)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa__x_365) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(sttfa__x_365)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa__x_365) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(sttfa__x_365)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa__x_365) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(sttfa__x_365)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

le_n_O_elim  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))))

%|- le_n_O_elim : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(z)))))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(n0)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(z))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(a))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(a)))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)))) => ((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_S(n0)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(z)))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "P(nat_sttfa.sttfa_O)" "P(nat_sttfa.sttfa_O)"
%|- (propax))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(sttfa___)))))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(sttfa___)))))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(sttfa___)))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(sttfa___)))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- QED

lt_to_not_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))

%|- lt_to_not_eq : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False))" "(connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_False" "connectives_sttfa.sttfa_False"
%|- (propax))
%|- (sttfa-conv "((connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-lemma "connectives_sttfa.nmk"))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => connectives_sttfa.sttfa_False) => (connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(m) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(n))(m))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => connectives_sttfa.sttfa_False) => (connectives_sttfa.sttfa_Not(connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-lemma "logic_sttfa.not_to_not"))))))))))
%|- QED

le_n_O_to_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))

%|- le_n_O_to_eq : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z)))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(a))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(a))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(a)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(a))"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n0))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- QED

le_to_le_to_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))

%|- le_to_le_to_eq : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))" "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "nat_sttfa.le(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)) => nat_sttfa.le(m)(n))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))))" "logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(m)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(m)(y))(nat_sttfa.le(m)(n))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(m)(n))(nat_sttfa.le(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(m)(y))(nat_sttfa.le(m)(n)))))" "logic_sttfa.eq[bool](nat_sttfa.le(m)(n))(nat_sttfa.le(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(m)(n))(nat_sttfa.le(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(m)(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(sttfa___))(nat_sttfa.le(m)(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(sttfa___))(nat_sttfa.le(m)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(m)(sttfa___))(nat_sttfa.le(m)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)) => nat_sttfa.le(m)(n)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(nat_sttfa.le(m)(n)) => nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(B) => B)))" "nat_sttfa.le(m)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(y))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y)))))" "n"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y))))))" "nat_sttfa.sttfa_S"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_n_O_to_eq"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" "nat_sttfa.le(n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n_O_to_eq"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "n"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => (nat_sttfa.le(sttfa__0)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2"))))))
%|- QED

plus_minus  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))))

%|- plus_minus : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))))))" () ()
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))) => ((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))" "((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "(((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))) => ((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))" "((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "(((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))) => ((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))" "((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-i "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))))" "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))"
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.le(n)(y))(nat_sttfa.le(n)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(m))(nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(sttfa___))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(n)(m)) => nat_sttfa.le(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.pred(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))))" "p"
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y)))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(p))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(nat_sttfa.plus(m)(p))(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))(return(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus_body(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p)))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(y(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))) => P(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(y(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))) => P(y))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.minus(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(m)(n)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(m)(n)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(m)(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(m)(q)))(m0)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.minus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(p))(nat_sttfa.sttfa_S(n)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))) => (FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)))(p))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(p))(nat_sttfa.sttfa_S(n)))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(n))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(n)))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus(n)(p)"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y)))" "nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.plus(n)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.plus(n)(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(nat_sttfa.plus(n)(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(n)(p)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(sttfa___))(nat_sttfa.plus(n)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(n)(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(sttfa__0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(sttfa__0)(sttfa___))(p))(nat_sttfa.minus(nat_sttfa.plus(sttfa__0)(p))(sttfa___))))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2")))))))
%|- QED

minus_plus_m_m  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))

%|- minus_plus_m_m : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(m)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(m)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(m)(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.minus_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(m)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))))" "nat_sttfa.minus(m)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(n))(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))))" "nat_sttfa.plus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(n)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___)(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))" "nat_sttfa.le(m)(m)"
%|- (sttfa-conv "nat_sttfa.le(m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(m)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m))))" "n"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n0)(p))(m)))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n0)(p))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(m)(m))(n))(nat_sttfa.minus(nat_sttfa.plus(m)(n))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- QED

plus_minus_m_m  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))

%|- plus_minus_m_m : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))))" "nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n)))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))" "m"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n0)(p))(m)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n0)(p))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- QED

minus_to_plus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))))))

%|- minus_to_plus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "p"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))))))
%|- QED

plus_to_minus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)))))

%|- plus_to_minus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(y))(nat_sttfa.plus(y)(p)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(y))(nat_sttfa.plus(y)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))))" "nat_sttfa.plus(p)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(m)(p))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(y)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(sttfa___)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "p"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p)))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "p"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))))))
%|- QED

monotonic_le_minus_l  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))

%|- monotonic_le_minus_l : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0))))))" () ()
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0)))) => (FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(n0))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0)))))))" "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(p)(n0)))) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(n))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(n)))))))"
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(p)(n0))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(n))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(n))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(n))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(z))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(z))))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(n0))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(z))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(z)))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))) => (FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))) => (FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))) => (FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(p)(a))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(p)(a)))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p))" "nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(p)(a))"
%|- (sttfa-impl-e "(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(p)(a)))" "nat_sttfa.le(q)(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)) => nat_sttfa.le(q)(p))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(nat_sttfa.pred(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "q"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(nat_sttfa.pred(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(q)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))))" "logic_sttfa.eq[bool](nat_sttfa.le(q)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => logic_sttfa.eq[bool](nat_sttfa.le(q)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.pred(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.pred(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "p"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => logic_sttfa.eq[bool](nat_sttfa.le(q)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(q)(y))(nat_sttfa.le(q)(p))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(q)(p))(nat_sttfa.le(q)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(q)(y))(nat_sttfa.le(q)(p)))))" "logic_sttfa.eq[bool](nat_sttfa.le(q)(p))(nat_sttfa.le(q)(p))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(q)(p))(nat_sttfa.le(q)(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(q)(p)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(q)(sttfa___))(nat_sttfa.le(q)(p)))(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(q)(sttfa___))(nat_sttfa.le(q)(p)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(q)(sttfa___))(nat_sttfa.le(q)(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "p"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "q"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)) => nat_sttfa.le(q)(p)))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(y))))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(y) => nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(nat_sttfa.pred(x))(nat_sttfa.pred(y)))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))(nat_sttfa.pred)" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)(nat_sttfa.pred)" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)(nat_sttfa.pred)" ("relations_sttfa.monotonic") ()
%|- (sttfa-lemma "nat_sttfa.monotonic_pred")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(nat_sttfa.le(q)(p)) => nat_sttfa.le(q)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(B) => B)))" "nat_sttfa.le(q)(p)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(q)))(nat_sttfa.pred(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(a))(nat_sttfa.minus(p)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(p)(n0))))" "a"
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y)))(nat_sttfa.minus(p)(a)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(p)(a)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(p)(a)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(p)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(p)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(p)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(p)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "p"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "p"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(q)(a))(y(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))(nat_sttfa.minus(q)(a)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(q)(a)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(q)(a)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(q)(a))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(q)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "q"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "q"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_S(a)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(a))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => ((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_S(n0))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(z))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(z))))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p))) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p))"
%|- (propax))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y)))(nat_sttfa.sttfa_S(p)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(p)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(p)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "p"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "p"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(y(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(q)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(q)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y)(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(q)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(z:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(z))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(q))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(q)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "q"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" "q"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))(nat_sttfa.minus(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(y(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(q)))(nat_sttfa.minus(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(sttfa___))))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(sttfa___))))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(sttfa___))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(sttfa___))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(n0))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0)))) => (FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(n0))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0))))))))" "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(q)))))"
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(q))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))(q))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(q)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(q))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))(q))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(q)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))(q))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus_body(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(m))(m)))" "nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "nat_sttfa.minus(nat_sttfa.sttfa_O)(q)"
%|- (sttfa-lemma "nat_sttfa.le_plus_minus_m_m"))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(nat_sttfa.minus(y(q))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.plus(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.plus(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):m))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(q)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(p))((LAMBDA(q0:nat_sttfa.sttfa_nat):nat_sttfa.minus(p)(q0)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "p"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" "p"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(y(q))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(p)))(nat_sttfa.minus(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.minus(n)(n0))(nat_sttfa.minus(nat_sttfa.sttfa_O)(n0))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(n0))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0)))) => (FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_S(m))(n0))(nat_sttfa.minus(nat_sttfa.sttfa_S(n))(n0))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => nat_sttfa.le(nat_sttfa.minus(m)(n0))(nat_sttfa.minus(n)(n0)))))))))" "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.minus(p)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))))"
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "nat_sttfa.le(p)(nat_sttfa.sttfa_O)" "nat_sttfa.le(nat_sttfa.minus(p)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)) => nat_sttfa.le(nat_sttfa.minus(p)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.minus(nat_sttfa.sttfa_O)(q)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(sttfa___)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(sttfa___)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))(p))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(p)))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(sttfa___)(q))(nat_sttfa.minus(nat_sttfa.sttfa_O)(q)))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(p))))" "nat_sttfa.le(p)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(p)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))))" "p"
%|- (sttfa-lemma "nat_sttfa.le_n_O_elim"))))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n0))(nat_sttfa.minus(sttfa___)(n0))))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n0))(nat_sttfa.minus(sttfa___)(n0))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n0))(nat_sttfa.minus(sttfa___)(n0))))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n0))(nat_sttfa.minus(sttfa___)(n0))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n0))(nat_sttfa.minus(sttfa___)(n0))))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa__0)(sttfa___) => nat_sttfa.le(nat_sttfa.minus(sttfa__0)(n))(nat_sttfa.minus(sttfa___)(n))))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2")))))))
%|- QED

le_plus_to_minus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))

%|- le_plus_to_minus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.plus(p)(m))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "p"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))))" "nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "p"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))" "nat_sttfa.le(n)(nat_sttfa.plus(p)(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0)))))" "n"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))" "nat_sttfa.plus(p)(m)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_l"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))))
%|- QED

monotonic_le_minus_r  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(n)(p))(nat_sttfa.minus(n)(q))))))

%|- monotonic_le_minus_r : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.le(q)(p)" "nat_sttfa.le(nat_sttfa.minus(n)(p))(nat_sttfa.minus(n)(q))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(p))(nat_sttfa.minus(n)(q)))" "nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)) => nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)))" "nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)))" "nat_sttfa.le(q)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(y) => nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(y))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m))(q))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m))(y)))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.minus(n)(q))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "nat_sttfa.minus(n)(q)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_plus_r")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)) => nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p))))" "nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))"
%|- (sttfa-conv "nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" "q"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_minus_m_m")))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)) => nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(z) => nat_sttfa.le(n)(z))))" "nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q)) => (nat_sttfa.le(nat_sttfa.plus(nat_sttfa.minus(n)(q))(q))(z) => nat_sttfa.le(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" "nat_sttfa.plus(nat_sttfa.minus(n)(q))(q)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(q))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(p))(nat_sttfa.minus(n)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(p)) => nat_sttfa.le(nat_sttfa.minus(n)(p))(p0)))" "nat_sttfa.minus(n)(q)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(p)) => nat_sttfa.le(nat_sttfa.minus(n)(p))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p0))))" "p"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_minus"))))))))))))
%|- QED

minus_le  : LEMMA (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))

%|- minus_le : PROOF
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)) => nat_sttfa.le(nat_sttfa.minus(x)(y))(x))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(m))(m)))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "x"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(y0))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x))))" "nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(x))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(y0))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(x))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(x))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x))" () ()
%|- (sttfa-forall-e "(FORALL(x0:bool):logic_sttfa.eq[bool](x0)(x0))" "nat_sttfa.le(nat_sttfa.minus(x)(y))(x)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "x"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)) => nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))" "nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y))"
%|- (sttfa-impl-e "(nat_sttfa.le(x)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))" "nat_sttfa.le(x)(nat_sttfa.plus(x)(y))"
%|- (sttfa-conv "nat_sttfa.le(x)(nat_sttfa.plus(x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(y)))" "x"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "y"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(x)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(x)(n))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(n))))" "y"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(x)(n))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(n)))))" "x"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(x)(y)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))" "nat_sttfa.plus(x)(y)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_l"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(nat_sttfa.le(nat_sttfa.minus(x)(y))(x)) => nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(x)(y))(x)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(x)(y))(nat_sttfa.minus(nat_sttfa.plus(x)(y))(y))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- QED

not_eq_to_le_to_lt  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(n)(m)))))

%|- not_eq_to_le_to_lt : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "(nat_sttfa.le(n)(m) => nat_sttfa.lt(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.lt(n)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => nat_sttfa.lt(n)(m))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => nat_sttfa.lt(n)(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => nat_sttfa.lt(n)(m)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => nat_sttfa.lt(n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "nat_sttfa.lt(n)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)) => nat_sttfa.lt(n)(m))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n))))" "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.le(m)(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.le(m)(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.le(m)(n)"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)) => nat_sttfa.lt(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(m0)) => nat_sttfa.lt(m0)(m)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(m0)) => nat_sttfa.lt(m0)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt")))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(n)(m) => nat_sttfa.lt(n)(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => nat_sttfa.lt(n)(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => nat_sttfa.lt(n)(m))))" "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "nat_sttfa.lt(n)(m)"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(n)(m) => nat_sttfa.lt(n)(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => nat_sttfa.lt(n)(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => nat_sttfa.lt(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => return))))" "nat_sttfa.lt(n)(m)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))
%|- QED

eq_minus_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))

%|- eq_minus_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.minus(n)(m))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.minus(n)(m)))))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))" "nat_sttfa.minus(n)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.minus(n0)(m))(nat_sttfa.minus(n0)(n))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.minus(n0)(m))(nat_sttfa.minus(n0)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(m) => nat_sttfa.le(nat_sttfa.minus(n0)(m))(nat_sttfa.minus(n0)(q)))))" "n"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(m) => nat_sttfa.le(nat_sttfa.minus(n0)(m))(nat_sttfa.minus(n0)(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(n)(p))(nat_sttfa.minus(n)(q))))))" "m"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_r"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(n)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.minus(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-lemma "nat_sttfa.le_n_O_elim"))))))))))
%|- QED

distributive_times_minus  : LEMMA relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)

%|- distributive_times_minus : PROOF
%|- (sttfa-conv "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))))" () ("relations_sttfa.distributive")
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.decidable(nat_sttfa.lt(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" "logic_sttfa.decidable(nat_sttfa.lt(b)(c))"
%|- (sttfa-conv "logic_sttfa.decidable(nat_sttfa.lt(b)(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(b)(m)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(b)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.lt(n)(m))))" "b"
%|- (sttfa-lemma "nat_sttfa.decidable_lt")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(z))))" "nat_sttfa.minus(b)(c)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y)))" "nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(b)(c))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(b)(c)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))))" "nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))"
%|- (sttfa-impl-e "(nat_sttfa.le(c)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))" "nat_sttfa.le(c)(b)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => nat_sttfa.le(c)(b))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => nat_sttfa.le(c)(b))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(m)) => nat_sttfa.le(m)(b)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(m)) => nat_sttfa.le(m)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => nat_sttfa.le(m)(n))))" "b"
%|- (sttfa-lemma "nat_sttfa.not_lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.le(c)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(m))(m))))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(y))))" "nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)))))" "b"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.times(a)(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y))))))" "nat_sttfa.times(a)"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(x_1))(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(p)))" "nat_sttfa.times(a)(nat_sttfa.minus(b)(c))"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(c))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(m))(p))))" "nat_sttfa.times(a)(c)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(m))(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "nat_sttfa.plus_to_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.times(a)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))))" "nat_sttfa.times(a)(nat_sttfa.minus(b)(c))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(b)(c) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))))" "(nat_sttfa.lt(b)(c) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))"
%|- (sttfa-impl-i "nat_sttfa.lt(b)(c)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(c))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(c))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(b)(c) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(c))(nat_sttfa.sttfa_O))" "nat_sttfa.le(b)(c)"
%|- (sttfa-impl-e "(nat_sttfa.lt(b)(c) => nat_sttfa.le(b)(c))" "nat_sttfa.lt(b)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(b)(c) => nat_sttfa.le(b)(c))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(b)(y) => nat_sttfa.le(b)(y)))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(b)(y) => nat_sttfa.le(b)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "b"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.le(b)(c) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(c))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(m))(nat_sttfa.sttfa_O)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(m))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))" "b"
%|- (sttfa-lemma "nat_sttfa.eq_minus_O"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(c))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))))" "nat_sttfa.minus(b)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))"
%|- (sttfa-impl-e "(nat_sttfa.le(b)(c) => nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))" "nat_sttfa.le(b)(c)"
%|- (sttfa-impl-e "(nat_sttfa.lt(b)(c) => nat_sttfa.le(b)(c))" "nat_sttfa.lt(b)(c)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(b)(c) => nat_sttfa.le(b)(c))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(b)(y) => nat_sttfa.le(b)(y)))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(b)(y) => nat_sttfa.le(b)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "b"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.le(b)(c) => nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(y) => nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(y))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m))(b))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m))(y)))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(b))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(m))(nat_sttfa.sttfa_O)))" "nat_sttfa.times(a)(c)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(b))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(m))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "nat_sttfa.eq_minus_O"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(x)))" "nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "nat_sttfa.times(a)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(x))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_O))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x0))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(x))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(b)(c) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(b)(c) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.times(a)(b))(nat_sttfa.times(a)(c)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(b)(c) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(b)(c) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(B) => return)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(b)(c))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(b)(c) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(b)(c))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(b)(c)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))))))
%|- QED

minus_plus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))

%|- minus_plus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))"
%|- (sttfa-conv "logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(nat_sttfa.le(n)(m))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "nat_sttfa.decidable_le")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "p"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))))" "nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(y))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(p))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(p) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](p)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "p"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))" "nat_sttfa.le(n)(nat_sttfa.plus(p)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m))) => nat_sttfa.le(n)(nat_sttfa.plus(p)(m)))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(y))(nat_sttfa.plus(y)(p)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(y))(nat_sttfa.plus(y)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(m))(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(y))))" "nat_sttfa.plus(p)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(m)(p))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(sttfa___)))(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(p)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m))) => nat_sttfa.le(n)(nat_sttfa.plus(p)(m))))" "nat_sttfa.le(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))" "nat_sttfa.lt(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.plus(m)(p))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.le(n)(z))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.le(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.le(n)(nat_sttfa.plus(p)(m))) => nat_sttfa.le(n)(nat_sttfa.plus(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(B) => B)))" "nat_sttfa.le(n)(nat_sttfa.plus(p)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => (logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0)))))" "n"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(q)(n0))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))" "nat_sttfa.plus(p)(m)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_l"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(nat_sttfa.le(nat_sttfa.minus(n)(m))(p)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(n)(m))(nat_sttfa.minus(nat_sttfa.plus(p)(m))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(n)(m))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(m0))(nat_sttfa.sttfa_O)))" "p"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(n)(m))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(m0))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-lemma "nat_sttfa.eq_minus_O"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" "nat_sttfa.minus(nat_sttfa.minus(n)(m))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))" "nat_sttfa.le(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))" "nat_sttfa.lt(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => nat_sttfa.lt(n)(nat_sttfa.plus(m)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.plus(m)(p))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(m0)) => nat_sttfa.lt(m0)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p)))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.plus(m)(p)) => nat_sttfa.le(n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.le(n)(z))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(nat_sttfa.sttfa_S(n))(z) => nat_sttfa.le(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(nat_sttfa.sttfa_O)))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus_O"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "(nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.plus(m)(p))(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(z))))" "nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(y))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(y)(z)))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(y))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "nat_sttfa.le(nat_sttfa.plus(m)(p))(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(p0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(p0)))))" "nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))(p0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(m)(p))(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0))))))" "nat_sttfa.plus(m)(p)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_to_plus")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(m)(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p0)))" "nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_to_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(p0)))" "nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(p)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(m0))(p0))))" "p"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(m0))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-lemma "nat_sttfa.plus_to_minus")))))))))
%|- (sttfa-conv "((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => return) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(B) => return)))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(nat_sttfa.plus(m)(p))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.le(nat_sttfa.plus(m)(p))(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.le(nat_sttfa.plus(m)(p))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))
%|- QED

minus_minus  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(p)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p))))))))

%|- minus_minus : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-i "nat_sttfa.le(p)(m)" "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p))))"
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(z))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(z))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(z))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(y))(z))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(y)(z)))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(y))(z))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "nat_sttfa.minus(m)(p)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(p)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p)))" "nat_sttfa.le(p)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(p)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(m0))(m0))))" "p"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(m0))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m)))))" "nat_sttfa.plus(nat_sttfa.minus(m)(p))(p)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(m)(nat_sttfa.minus(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(x_1)(nat_sttfa.minus(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(x_1)(nat_sttfa.minus(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(x_1)(nat_sttfa.minus(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p))(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(p0)))" "nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(m)(p))(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0))))" "nat_sttfa.minus(m)(p)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m0)(p0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m0))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(p)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_to_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(p)(nat_sttfa.minus(n)(m)))(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))))" "nat_sttfa.plus(p)(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(n)(nat_sttfa.minus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.minus(n)(nat_sttfa.minus(m)(p))"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))))
%|- QED

minus_minus_comm  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))

%|- minus_minus_comm : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m))(m)))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))" "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))) => nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(p))))" "b"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(y)(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(y)(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(y))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))))" "nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(y))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(y))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(nat_sttfa.plus(c)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(nat_sttfa.plus(c)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(nat_sttfa.plus(c)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(y))(nat_sttfa.plus(y)(b)))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(y))(nat_sttfa.plus(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(nat_sttfa.plus(c)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(y))))" "nat_sttfa.plus(c)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(p))))" "c"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(sttfa___)))(nat_sttfa.plus(b)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(y)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))))" "nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(y)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___)))(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))))(nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))) => nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(m))(m)))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "nat_sttfa.minus(a)(c)"
%|- (sttfa-lemma "nat_sttfa.le_plus_minus_m_m")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))) => nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(b))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(n))))" "b"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(n)))))" "nat_sttfa.minus(a)(c)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_l"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(b))(b))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(m))(m)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(y))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))" "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))) => nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(p))))" "c"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(y)(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(y)(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(y))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))))" "nat_sttfa.plus(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(y))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(y))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(nat_sttfa.plus(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(nat_sttfa.plus(b)(c))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(nat_sttfa.plus(b)(c))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(y)(c)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(y))(nat_sttfa.plus(y)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "c"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(nat_sttfa.plus(b)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(y))))" "nat_sttfa.plus(b)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(p))))" "b"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(c)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(m))(p))(nat_sttfa.minus(a)(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(sttfa___)))(nat_sttfa.plus(c)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(c)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(c)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(y)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))))" "nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(y)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(sttfa___)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___)))(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))))(nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(sttfa___))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(sttfa___)(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(sttfa___)(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(sttfa___)(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(a)(nat_sttfa.plus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))) => nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(m))(m)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m))))" "nat_sttfa.minus(a)(b)"
%|- (sttfa-lemma "nat_sttfa.le_plus_minus_m_m")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))) => nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(c))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(n))))" "c"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(a)(b))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(n)))))" "nat_sttfa.minus(a)(b)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(p) => nat_sttfa.le(nat_sttfa.minus(q)(n))(nat_sttfa.minus(p)(n))))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c)"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_minus_l"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))) => nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(B) => B)))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(c))(c))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)) => (nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m) => (nat_sttfa.le(m)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m))))" "nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m) => (nat_sttfa.le(m)(nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.minus(nat_sttfa.minus(a)(b))(c)"
%|- (sttfa-lemma "nat_sttfa.le_to_le_to_eq"))))))))))
%|- QED

minus_le_minus_minus_comm  : LEMMA (FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(c)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(b))))))

%|- minus_le_minus_minus_comm : PROOF
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(c)(b)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))"
%|- (sttfa-impl-e "(nat_sttfa.le(c)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))" "nat_sttfa.le(c)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(c)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(m))(m))))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(x))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y))(nat_sttfa.plus(y)(a)))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y))(nat_sttfa.plus(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(y)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))))" "nat_sttfa.plus(a)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(y)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(b)(c))))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(y))(nat_sttfa.plus(y)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.minus(b)(c)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(y))))" "nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(p))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(p))))" "nat_sttfa.minus(b)(c)"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(p))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(m))(p))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(m)(p)))))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(m))(p))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "nat_sttfa.plus(c)(a)"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(y)))" "nat_sttfa.minus(nat_sttfa.plus(c)(a))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y))(nat_sttfa.plus(y)(a)))" "c"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y))(nat_sttfa.plus(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(nat_sttfa.plus(c)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(y)(c))))" "nat_sttfa.plus(c)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(a)(c))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(y)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(a)(c))(c))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(a)(c))(c))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(a)(m))(m)))" "c"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(a)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(sttfa___)(c)))(nat_sttfa.plus(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(sttfa___)(c)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(sttfa___)(c)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(a)(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(a)(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))))" "a"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(nat_sttfa.plus(c)(a))(c)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(sttfa___))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(c)(a))(c))(nat_sttfa.minus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(sttfa___)))(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(c)(a))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(nat_sttfa.minus(b)(c))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(sttfa___)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))(nat_sttfa.plus(c)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(a)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(sttfa___)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(a)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(sttfa___)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(c)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(c)(a)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(c)(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(x)))(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(nat_sttfa.minus(b)(c)))(nat_sttfa.minus(nat_sttfa.plus(a)(c))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.minus(b)(c))(c)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))))))
%|- QED

minus_plus_plus_l  : LEMMA (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(x)(y)))))

%|- minus_plus_plus_l : PROOF
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (then@ (sttfa-forall-i "h")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(x)(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(p))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(p))))" "h"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(p))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(m))(p))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(m)(p)))))" "y"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(m))(p))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(m)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "nat_sttfa.plus(x)(h)"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(x)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y))))" "nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(m))(m)))" "h"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "x"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(y0)(y))))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h))(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(y0)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h))(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h))(y))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(c))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(c))(y)))" "h"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(c))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(c))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(b))(c))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(c))(b))))" "y"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(b))(c))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(c))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(a)(b))(c))(nat_sttfa.minus(nat_sttfa.minus(a)(c))(b)))))" "nat_sttfa.plus(x)(h)"
%|- (sttfa-lemma "nat_sttfa.minus_minus_comm")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(sttfa___)(y)))(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(sttfa___)(y)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(sttfa___)(y)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.minus(nat_sttfa.plus(x)(h))(h)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(nat_sttfa.minus(x)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y))))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(y))(nat_sttfa.minus(x)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(y))(nat_sttfa.minus(x)(y))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(y))(nat_sttfa.minus(x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "nat_sttfa.minus(x)(y)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))(nat_sttfa.minus(x)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(x)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(x)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(nat_sttfa.minus(x)(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "nat_sttfa.minus(x)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(x)(y)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(x)(h))(y))(h)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

eqb : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]

eqb_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]

axiom_eqb  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))

eq_eqb  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))

%|- eq_eqb : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_eqb")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.eqb(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))))
%|- QED

sym_eq_eqb  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))

%|- sym_eq_eqb : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_eqb")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb(n))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.eqb(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

axiom_eqb_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))

eq_eqb_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))

%|- eq_eqb_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))"
%|- (sttfa-lemma "nat_sttfa.axiom_eqb_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.eqb_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

sym_eq_eqb_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))

%|- sym_eq_eqb_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))"
%|- (sttfa-lemma "nat_sttfa.eq_eqb_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.eqb_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))
%|- QED

axiom_eqb_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))

eq_eqb_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))

%|- eq_eqb_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_eqb_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))))
%|- QED

sym_eq_eqb_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_eqb_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_eqb_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

eqb_elim  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))

%|- eqb_elim : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))))"
%|- (sttfa-impl-i "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false))" "P(nat_sttfa.eqb(n)(m))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "P(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_eq_S"))))))
%|- (propax)))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "P(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(y))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(sttfa___)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P0:[nat_sttfa.sttfa_nat -> bool]):(P0(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P0(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(sttfa___)))"
%|- (sttfa-conv "(FORALL(P0:[nat_sttfa.sttfa_nat -> bool]):(P0(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P0(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P0:[nat_sttfa.sttfa_nat -> bool]):(P0(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P0(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (propax)))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" "P"
%|- (propax)))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))(nat_sttfa.eqb(n)(m)) => (LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.eqb(n)(m)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.eqb(n)(m)) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q))(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool_sttfa.sttfa_bool]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m0)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false)))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false))" "P(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_eq_O_S")))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_not_eq[nat_sttfa.sttfa_nat]"))))))
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_O)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_O))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb"))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(n)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m))))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(n))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(z))))))" "n"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))))))) => (FORALL(z:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(z)))))))" "(FORALL(auto:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto))))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false)))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false))" "P(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n))))" "auto"
%|- (sttfa-lemma "nat_sttfa.not_eq_O_S")))
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y)))))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y)))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y)))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n0))))" "auto"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool]((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool_sttfa.sttfa_bool]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))(nat_sttfa.eqb(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(auto))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(auto)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb"))))))))))
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))) => ((FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0))))))) => (FORALL(z:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(z)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(z))))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false))" "P(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_O)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_O))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.eqb(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(sttfa___))))))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(sttfa___))))))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(sttfa___))))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O)(sttfa___))))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(sttfa___)(sttfa__0)))))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2"))))))
%|- QED

eqb_n_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))

%|- eqb_n_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x)(x))(bool_sttfa.sttfa_true))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x)(x))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(x)))(bool_sttfa.sttfa_true))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x)(x))(bool_sttfa.sttfa_true)))" "(FORALL(x_366:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))"
%|- (then@ (sttfa-forall-i "x_366")
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "nat_sttfa.eqb(x_366)(x_366)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))(nat_sttfa.eqb(x_366)(x_366)) => (LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.eqb(x_366)(x_366)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.eqb(x_366)(x_366)) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb(x_366)(x_366))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q))(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool_sttfa.sttfa_bool]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(x_366)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.eqb(n)(q)))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n))))" "x_366"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" "x_366"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))) => P(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x_366)(x_366))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_S(x_366)))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366))) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_S(x_366)))(nat_sttfa.eqb(nat_sttfa.sttfa_S(x_366)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_S(x_366)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb"))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x)(x))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_S(x)))(bool_sttfa.sttfa_true))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(x)(x))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_O)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_O))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m))) => P(y))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(m)))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.eqb_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.eqb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.eqb(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[bool_sttfa.sttfa_bool](y(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(nat_sttfa.sttfa_O))(nat_sttfa.eqb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.eqb_body)(n))(nat_sttfa.eqb(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_eqb")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(sttfa__x_365)(sttfa__x_365))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(sttfa__x_365)(sttfa__x_365))(bool_sttfa.sttfa_true))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(sttfa__x_365)(sttfa__x_365))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(sttfa__x_365)(sttfa__x_365))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(sttfa__x_365)(sttfa__x_365))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

eqb_true_to_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))

%|- eqb_true_to_eq : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.not_eq_true_false")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))(nat_sttfa.eqb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_elim")))))))))))
%|- QED

eqb_false_to_not_eq  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))

%|- eqb_false_to_not_eq : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (propax)))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.not_eq_true_false")
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))(nat_sttfa.eqb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_elim")))))))))))
%|- QED

eq_to_eqb_true  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true))))

%|- eq_to_eqb_true : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(y))(bool_sttfa.sttfa_true)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(y))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "nat_sttfa.eqb(n)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(sttfa___))(bool_sttfa.sttfa_true))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(sttfa___))(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(sttfa___))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

not_eq_to_eqb_false  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))

%|- not_eq_to_eqb_false : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]"))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_elim"))))))))))))
%|- QED

leb : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]

leb_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]

axiom_leb  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))

eq_leb  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))

%|- eq_leb : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_leb")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(n)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.leb(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))))
%|- QED

sym_eq_leb  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))

%|- sym_eq_leb : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_leb")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb(n))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.leb(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

axiom_leb_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))

eq_leb_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))

%|- eq_leb_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "nat_sttfa.axiom_leb_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.leb_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

sym_eq_leb_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))

%|- sym_eq_leb_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "nat_sttfa.eq_leb_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.leb_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))
%|- QED

axiom_leb_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))

eq_leb_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))

%|- eq_leb_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.axiom_leb_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y))))))" "nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]"))))))))
%|- QED

sym_eq_leb_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_leb_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_leb_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](y)(x))))" "nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))
%|- QED

leb_elim  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))

%|- leb_elim : PROOF
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m))))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-impl-e "(((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))) => ((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m))))))))" "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))))"
%|- (sttfa-impl-i "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false))" "P(nat_sttfa.leb(n)(m))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "P(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_not_le_S_S"))))))
%|- (propax)))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))" "(nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "P(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (propax)))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "P"
%|- (propax)))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))(nat_sttfa.leb(n)(m)) => (LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.leb(n)(m)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y))))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(nat_sttfa.leb(n)(m)) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(nat_sttfa.leb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q))(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_S(n0))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[bool_sttfa.sttfa_bool]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0))) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0))) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m0)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))(nat_sttfa.leb(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_S(m))))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb")))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false)))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false))" "P(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y)))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:bool_sttfa.sttfa_bool):(FORALL(case_S:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_O)(nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](case_O)(case_S)(nat_sttfa.sttfa_O))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m))) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.leb(n)(q)))(m)))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))(nat_sttfa.leb(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(y(nat_sttfa.sttfa_O))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_S(n)))(nat_sttfa.leb(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb"))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_O)(n)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m))))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_O)(n))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(n))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(nat_sttfa.sttfa_O)(n))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(n)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(n))))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(n))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(n)))))"
%|- (sttfa-impl-e "((FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))) => (FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(n))))))" "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true))))"
%|- (then@ (sttfa-forall-i "P")
%|- (sttfa-impl-i "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true))" "((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false))" "P(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (propax)))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))(nat_sttfa.leb(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.leb(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(nat_sttfa.sttfa_O)(n) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_O)(n)) => P(bool_sttfa.sttfa_false)) => P(y(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.leb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n))(nat_sttfa.leb(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_leb"))))))))))
%|- (sttfa-conv "((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))(n)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_O)(n)) => ((FORALL(n:nat_sttfa.sttfa_nat):R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(R(n)(m) => R(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):R(n)(m)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(sttfa___)(sttfa__0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(sttfa___)(sttfa__0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(sttfa___)(sttfa__0)))))))"
%|- (sttfa-lemma "nat_sttfa.nat_elim2"))))))
%|- QED

leb_true_to_le  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))))

%|- leb_true_to_le : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.le(n)(m))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.not_eq_true_false")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___1:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.le(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))))" "(nat_sttfa.le(n)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" "nat_sttfa.le(n)(m)"
%|- (propax)))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true) => nat_sttfa.le(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))))
%|- QED

le_to_leb_true  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))

%|- le_to_leb_true : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true)))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))))
%|- QED

not_le_to_leb_false  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_false))))

%|- not_le_to_leb_false : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_false)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_false))))" "(nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(n)(m)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false)))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))))
%|- QED

END nat_sttfa

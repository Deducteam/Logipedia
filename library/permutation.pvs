permutation_sttfa : THEORY
BEGIN
IMPORTING bool_sttfa,connectives_sttfa,leibniz_sttfa,logic_sttfa,nat_sttfa,relations_sttfa

injn  : [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> bool]] = (LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))))

injn_Sn_n  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n)) => permutation_sttfa.injn(f)(n))))

%|- injn_Sn_n : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n)) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))))" () ("permutation_sttfa.injn")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n))" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "(nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y)))" "f(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(j)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "nat_sttfa.le(j)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => nat_sttfa.le(j)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(j)(n) => nat_sttfa.le(j)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(m) => nat_sttfa.le(j)(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(j)(m) => nat_sttfa.le(j)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "j"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(j0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j0)))))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(j0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j0)))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(nat_sttfa.sttfa_S(n)) => (nat_sttfa.le(j0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j0))))))" "i"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j0)))))))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i0))(f0(j0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j0))))))))(f)(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-conv "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n))" ("permutation_sttfa.injn") ()
%|- (propax))))))))))))))))))))
%|- QED

permut  : [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> bool]] = (LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => nat_sttfa.le(f(i))(m))))(permutation_sttfa.injn(f)(m))))

transpose  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]] = (LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(j:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))))

transpose_i_j_i  : LEMMA (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j)))

%|- transpose_i_j_i : PROOF
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(j)))" () ("permutation_sttfa.transpose")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(j))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "i"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(j))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(j)))" "nat_sttfa.eqb(i)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(y))(j))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)) => P(j)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)) => P(y))))(j)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(j)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true))(j))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true))(j))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "j"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(j))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x0))(j))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(j))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- QED

transpose_i_j_j  : LEMMA (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i)))

%|- transpose_i_j_j : PROOF
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)))" () ("permutation_sttfa.transpose")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(i) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "j"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(bool_sttfa.sttfa_false))(i)))" "nat_sttfa.eqb(j)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(i) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(bool_sttfa.sttfa_false))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "j"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "j"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))(i))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => P(i)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => P(y))))(i)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(i)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true))(i))" "j"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true))(i))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "i"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(bool_sttfa.sttfa_false))(i))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x0))(bool_sttfa.sttfa_false))(i))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(bool_sttfa.sttfa_false))(i))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x0))(i))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(i) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "j"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i)))" "j"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i))(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(i))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "i"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x0))(i))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(i))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(i)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))))
%|- QED

transpose_i_j_j_i  : LEMMA (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(n))(permutation_sttfa.transpose(j)(i)(n)))))

%|- transpose_i_j_j_i : PROOF
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))))" () ("permutation_sttfa.transpose" "permutation_sttfa.transpose")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j)))))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x))))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_false)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x))))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(y))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_true)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x0))(nat_sttfa.eqb(n)(j))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j)))))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x))))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "j"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(y)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x))))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y)))" "i"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "j"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x_1))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x0))(nat_sttfa.eqb(n)(j))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(x))(nat_sttfa.eqb(n)(j))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(n)(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(n)(j)))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))
%|- QED

transpose_transpose  : LEMMA (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))))

%|- transpose_transpose : PROOF
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))))" () ("permutation_sttfa.transpose" "permutation_sttfa.transpose" "permutation_sttfa.transpose" "permutation_sttfa.transpose")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n)))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(i)))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(i)))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(n)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(n)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(n)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(n)))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(n)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "j"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(n))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => P(n)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)) => P(y))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(n)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(n)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(n)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false))(case_false))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "i"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(n))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(bool_sttfa.sttfa_false))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(bool_sttfa.sttfa_false))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(n))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(n)(i)))(n))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(n)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(n)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(i)))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n)))" "nat_sttfa.eqb(n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i)))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(i)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(i)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(i)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "i"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(n)))" "nat_sttfa.eqb(i)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "j"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "n"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(i)(nat_sttfa.eqb(i)(j)))(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(i)(j)))(nat_sttfa.eqb(i)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(i)(i)))(n))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(i)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(i)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x0))(i)))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(x))(i)))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))(j)))(nat_sttfa.eqb(y)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(i)))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n)))" "nat_sttfa.eqb(n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(i)))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(j)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(j)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "j"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(n)))" "nat_sttfa.eqb(j)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "i"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "n"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(i) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" "j"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n)))" "nat_sttfa.eqb(j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "j"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x))(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "i"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(j)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(j)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(y)(nat_sttfa.eqb(j)(j)))(nat_sttfa.eqb(j)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(j)(i)))(n))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(j)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(y)(j)))(nat_sttfa.eqb(j)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))(j) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))(j)))(nat_sttfa.eqb(y)(i)))(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "j"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x0))(i)))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(x))(i)))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(j)))(nat_sttfa.eqb(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(n)(nat_sttfa.eqb(n)(j)))(nat_sttfa.eqb(n)(i)))(i)))(n)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))
%|- QED

injective_transpose  : LEMMA (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j))))

%|- injective_transpose : PROOF
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(permutation_sttfa.transpose(i)(j)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))))" () ("relations_sttfa.injective")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (then@ (sttfa-forall-i "x")
%|- (then@ (sttfa-forall-i "y")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(permutation_sttfa.transpose(i)(j)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(x)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(x)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))" "x"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(permutation_sttfa.transpose(i)(j0)(n)))(n)))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(permutation_sttfa.transpose(i)(j0)(n)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))))" "i"
%|- (sttfa-lemma "permutation_sttfa.transpose_transpose")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y)))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(permutation_sttfa.transpose(i)(j)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(permutation_sttfa.transpose(i)(j)(y))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(permutation_sttfa.transpose(i)(j)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(permutation_sttfa.transpose(i)(j)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(y0))(y)))" "permutation_sttfa.transpose(i)(j)(x)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(y)))(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(permutation_sttfa.transpose(i)(j)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(y0))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(y)))(y)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(y)))(y)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))" "y"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(permutation_sttfa.transpose(i)(j0)(n)))(n)))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(permutation_sttfa.transpose(i)(j0)(n)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))))" "i"
%|- (sttfa-lemma "permutation_sttfa.transpose_transpose")))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(sttfa___))(y))(permutation_sttfa.transpose(i)(j)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(permutation_sttfa.transpose(i)(j)(y)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(sttfa___))(y))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.transpose(i)(j)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(permutation_sttfa.transpose(i)(j)(y)) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(sttfa___))(y))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.transpose(i)(j)(y)) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(permutation_sttfa.transpose(i)(j)(y)) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "permutation_sttfa.transpose(i)(j)(y)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y0) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x))) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x)))(y0) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(y0) => P(y0))))))" "permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(x))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))" () ()
%|- (sttfa-forall-e "(FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y)))" "x"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(y)" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(x0))" "y"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))(y0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y) => P(y0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(y))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(y) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(y) => P(y0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x0) => (FORALL(y0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y0)(x0) => P(y0))))))" "y"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

permut_S_to_permut_transpose  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))

%|- permut_S_to_permut_transpose : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))" "permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))" "connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))"
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => (nat_sttfa.le(b)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)))))) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))" "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => (nat_sttfa.le(b)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "nat_sttfa.le(a)(m)" "(nat_sttfa.le(b)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(m)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b)))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y)))" "f(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(a)))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(x))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))" "f(a)"
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(x))(f0(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" ("relations_sttfa.injective") ()
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "permutation_sttfa.injective_transpose"))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(b)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)))" "nat_sttfa.le(b)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(b)(m) => nat_sttfa.le(b)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(b)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(b)(m) => nat_sttfa.le(b)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m0) => nat_sttfa.le(b)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(b)(m0) => nat_sttfa.le(b)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(b)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b))))" "nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(a)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m0) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(b)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j)))))" "b"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "a"
%|- (sttfa-conv "(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i))(f0(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))))(f)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))" ("permutation_sttfa.injn") ()
%|- (propax))))))))))))))))
%|- (sttfa-conv "(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))" ("permutation_sttfa.injn") ()
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))))(m))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))))(m)))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(m)" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))))(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(i)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq")))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(i)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j))))))" "i"
%|- (sttfa-conv "(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j)))))))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i0))(f0(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j))))))))(f)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))" ("permutation_sttfa.injn") ()
%|- (propax)))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "connectives_sttfa.nmk"))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_false)))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(x))(m)))" "nat_sttfa.eqb(f(i))(f(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))(m) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(x))(m))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))(m))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(i)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))" "i"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(i))(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(i))(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_true)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.eq_to_eqb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m)))" "nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))(m) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))(m))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_S(m)"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(m0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(m))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "m"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le")))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m))" "logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(y)(m))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(i)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(y)(m)))))" "logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(i)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(i)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(i)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(sttfa___)(m)))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(sttfa___)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(sttfa___)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(m) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" "nat_sttfa.le(i)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(m) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(i)(m) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(i)(m) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(m))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(i)(m)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(m)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(y))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(f(i))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(f(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(f(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(f(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(f(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(f(i)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(y)))" "f(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(nat_sttfa.sttfa_S(m))))" "f(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(sttfa___))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(i)))(f(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(f(i))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y)))" "f(f(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(i)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(i)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(i)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(sttfa___)))(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(i)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(m) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m0) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j))))))" "i"
%|- (sttfa-conv "(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j)))))))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i0))(f0(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(j))))))))(f)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))" ("permutation_sttfa.injn") ()
%|- (propax)))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))))" "(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-impl-i "nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" "nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))))
%|- (sttfa-conv "((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => return))))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(f(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(nat_sttfa.sttfa_S(m))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(nat_sttfa.sttfa_S(m))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(f(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(case_false)(bool_sttfa.sttfa_true)))" "f(i)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x0))(m))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))))" "(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))"
%|- (sttfa-impl-i "nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(f(i))(m0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(f(i))(m0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_false)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(m0))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m)))" "nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))(m) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(f(i))(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))(m))" "nat_sttfa.le(f(i))(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(m))" "nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(f(i)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(m))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(f(i)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(f(i)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(f(i))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(f(i)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(f(i))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "f(i)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(f(i)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(i)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(f(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](f(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(case_false)(bool_sttfa.sttfa_false)))" "f(i)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x0))(m))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(x))(m))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => return))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(m)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(f(i))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(m))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(x))(m))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(x0))(m))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(i))(nat_sttfa.eqb(f(i))(nat_sttfa.sttfa_S(m))))(x))(m))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))" ("permutation_sttfa.transpose") ()
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))) => (permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(B))))" "permutation_sttfa.injn((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)"
%|- (sttfa-conv "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(m) => nat_sttfa.le(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(x)))(m)))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))" ("permutation_sttfa.permut") ()
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => return)))" "permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m)"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(B) => return))))" "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))))
%|- QED

bijn  : [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> bool]] = (LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))))

eq_to_bijn  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(g(i)))) => (permutation_sttfa.bijn(f)(n) => permutation_sttfa.bijn(g)(n))))))

%|- eq_to_bijn : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(g(i)))) => (permutation_sttfa.bijn(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))))))))" () ("permutation_sttfa.bijn")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "g")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(g(i))))" "(permutation_sttfa.bijn(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))))"
%|- (sttfa-impl-i "permutation_sttfa.bijn(f)(n)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))" "i"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(f)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(f)(n)" ("permutation_sttfa.bijn") ()
%|- (propax)))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(y)))" "i"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(f(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(g(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(f(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(g(a))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(g(a)))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(g(a)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(g(i))))" "a"
%|- (propax))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(g(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(f(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(a))))" "g(a)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(a))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "f(a)"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(x_1))(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(a)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(a)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(a)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x0))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x))(i)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

bijn_n_Sn  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(n))))))

%|- bijn_n_Sn : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))))))" () ("permutation_sttfa.bijn")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.bijn(f)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y)))" "i"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(nat_sttfa.sttfa_S(n))))" "i"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(nat_sttfa.sttfa_S(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i)))" "f(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(y))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(i))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(i)(i)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(sttfa___)))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(i) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(i)(i)"
%|- (sttfa-conv "nat_sttfa.le(i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "i"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(i)(i) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(i)(i) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(B) => B)))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(i)(i) => (logic_sttfa.eq[bool](nat_sttfa.le(i)(i))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(i)(i)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))))" "i"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))))" "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "nat_sttfa.le(i)(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(i)(n))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(i)(n))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(i)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))" "i"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(f)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(f)(n)" ("permutation_sttfa.bijn") ()
%|- (propax)))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i)))" "f(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))" "nat_sttfa.le(a)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => nat_sttfa.le(a)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(a)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))))))))
%|- QED

bijn_fg  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (permutation_sttfa.bijn(g)(n) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):f(g(p))))(n))))))

%|- bijn_fg : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (permutation_sttfa.bijn(g)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))))))))" () ("permutation_sttfa.bijn")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "g")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.bijn(f)(n)" "(permutation_sttfa.bijn(g)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))))"
%|- (sttfa-impl-i "permutation_sttfa.bijn(g)(n)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))" "i"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(f)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(f)(n)" ("permutation_sttfa.bijn") ()
%|- (propax)))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a))))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(m))))))" "a"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(g)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(g)(n)" ("permutation_sttfa.bijn") ()
%|- (propax)))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i))))))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(i)))" "g(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i)))" "f(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(i))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___))(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i))))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i) => connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(b)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(b)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(b)(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(b)))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x)))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i))))))" "b"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x0)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(x)))(i)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(b)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](g(b))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(b)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(b)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(x))(a)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](g(p))(a)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i)))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(g(p)))(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

bijn_transpose  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => permutation_sttfa.bijn(permutation_sttfa.transpose(i)(j))(n))))))

%|- bijn_transpose : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))))))" () ("permutation_sttfa.bijn")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "(nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(n)" "(FORALL(a:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(a)(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(a)(j)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(nat_sttfa.eqb(a)(i)))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(nat_sttfa.eqb(a)(i)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(nat_sttfa.eqb(a)(i)))(a))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(nat_sttfa.eqb(a)(i)))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(x))(a)))" "nat_sttfa.eqb(a)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(bool_sttfa.sttfa_false))(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(x))(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(bool_sttfa.sttfa_false))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(bool_sttfa.sttfa_false))(a))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(bool_sttfa.sttfa_false))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(x))(bool_sttfa.sttfa_false))(a)))" "nat_sttfa.eqb(a)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(x))(bool_sttfa.sttfa_false))(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "j"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))(a))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)) => P(a)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false)) => P(y))))(a)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(a)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(a)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(bool_sttfa.sttfa_false))(a)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false))(case_false))" "a"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "i"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(x))(bool_sttfa.sttfa_false))(a))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(x0))(bool_sttfa.sttfa_false))(a))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(x))(bool_sttfa.sttfa_false))(a))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(x))(a))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(x0))(a))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](j)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](i)(a)(nat_sttfa.eqb(a)(j)))(x))(a))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a)))" ("permutation_sttfa.transpose") ()
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(a)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(a)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(a))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j)" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(i))(j0))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(i))(j0))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j)))" "i"
%|- (sttfa-lemma "permutation_sttfa.transpose_i_j_i")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a)))" "permutation_sttfa.transpose(i)(j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m)))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" "j"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "a"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))(j) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(j) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(a))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(j) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(j) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "j"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(i)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(i)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(i)(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(i)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(i))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" "i"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i)" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(j0))(i))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j0)(j0))(i))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i)))" "i"
%|- (sttfa-lemma "permutation_sttfa.transpose_i_j_j")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a)))" "permutation_sttfa.transpose(i)(j)(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(i))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(i))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.eqb_true_to_eq"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" "i"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "a"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(a))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(i) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "i"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a) => connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(j)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(j)(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(j)(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(j)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(j))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" "j"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x0))(a))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(x))(a)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(p))(a))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(a)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))))
%|- QED

permut_to_bijn  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))))

%|- permut_to_bijn : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))) => (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(x)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x)))))" "(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(m) => permutation_sttfa.bijn(f)(m))) => (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(m) => permutation_sttfa.bijn(f)(m)))" "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m))))"
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m))" "permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m)))" "permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m)))" "permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(x))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(x))(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(y))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)) => P(nat_sttfa.sttfa_S(m))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(x))(nat_sttfa.sttfa_S(m)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(x0))(nat_sttfa.sttfa_S(m)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(m)))(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(x))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m)))" ("permutation_sttfa.transpose") ()
%|- (sttfa-impl-e "(permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m))))" "permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m))" "permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n0))))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n0))))(m))" "permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n0))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m0)) => permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m0)))(nat_sttfa.sttfa_S(m0))(f(n0))))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m0)) => permutation_sttfa.permut((LAMBDA(n0:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m0)))(nat_sttfa.sttfa_S(m0))(f(n0))))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(m:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.permut((LAMBDA(n:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(n))))(m))))" "f"
%|- (sttfa-lemma "permutation_sttfa.permut_S_to_permut_transpose"))))))
%|- (sttfa-conv "(permutation_sttfa.permut((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(m) => permutation_sttfa.bijn(f)(m)))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___)))"
%|- (propax))))
%|- (sttfa-conv "(permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(nat_sttfa.sttfa_S(n0))))(nat_sttfa.sttfa_S(n0)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(n0)))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___)))(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)) => permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(n))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___)))"
%|- (sttfa-lemma "permutation_sttfa.bijn_n_Sn"))))))))
%|- (sttfa-impl-e "(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m))))" "permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" "permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))" "permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.sttfa_S(m)"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j))(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j))(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(i)(j))(nat_sttfa.sttfa_S(m))))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(i)(j))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => permutation_sttfa.bijn(permutation_sttfa.transpose(i)(j))(n))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "permutation_sttfa.bijn_transpose")))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => return)))" "permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m)) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(B) => return))))" "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m)))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)) => (permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(n0) => (permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(n0) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(n0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(n0) => (permutation_sttfa.bijn((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___))))(n0) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___)))(p))))(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(n0) => (permutation_sttfa.bijn(g)(n0) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(g(p))))(n0)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(sttfa___)))"
%|- (sttfa-conv "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))(n0) => (permutation_sttfa.bijn(g)(n0) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(g(p))))(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.bijn(f)(n) => (permutation_sttfa.bijn(g)(n) => permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):f(g(p))))(n))))))" "permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "permutation_sttfa.bijn_fg")))))))))
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(nat_sttfa.sttfa_S(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(n0)))(n0))" "f(i)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(n0)))(n0))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)(n0)))(n0)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(j)(n0)))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(i)(j)(permutation_sttfa.transpose(i)(j)(n)))(n))))" "f(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "permutation_sttfa.transpose_transpose")))))))))
%|- (sttfa-conv "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(nat_sttfa.sttfa_S(m)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(n0) => permutation_sttfa.bijn(f)(n0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(f(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(n0) => permutation_sttfa.bijn(f)(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(i))))(g(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(n0) => permutation_sttfa.bijn(g)(n0)))))" "f"
%|- (sttfa-conv "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p))))(i))(g(i)))) => (permutation_sttfa.bijn((LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p)))))(n0) => permutation_sttfa.bijn(g)(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(g(i)))) => (permutation_sttfa.bijn(f)(n) => permutation_sttfa.bijn(g)(n))))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(permutation_sttfa.transpose(f(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))(f(p))))"
%|- (sttfa-lemma "permutation_sttfa.eq_to_bijn")))))))))))))
%|- (sttfa-impl-e "((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))) => (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(x)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))))))" "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))))"
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))"
%|- (propax)
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m))))))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O)))" "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m)))))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(m)(nat_sttfa.sttfa_O)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m)))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m) => connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(f(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(f(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(f(nat_sttfa.sttfa_O)))" "nat_sttfa.le(f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_O"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(f(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "f(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.le_n_O_to_eq"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(f(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "f(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(m))))" "nat_sttfa.le(m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n_O_elim")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m) => connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m) => connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.sttfa_O))(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x0)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x0))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(x)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(m)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => return)))" "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))(B) => return))))" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => nat_sttfa.le(f(i))(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_O) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_O))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))) => (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(nat_sttfa.sttfa_S(x)) => permutation_sttfa.bijn(f)(nat_sttfa.sttfa_S(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(x) => permutation_sttfa.bijn(f)(x))))))" ("permutation_sttfa.permut" "permutation_sttfa.injn" "permutation_sttfa.bijn") ()
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(sttfa__x_365) => permutation_sttfa.bijn(f)(sttfa__x_365))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(sttfa__x_365) => permutation_sttfa.bijn(f)(sttfa__x_365))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(sttfa__x_365) => permutation_sttfa.bijn(f)(sttfa__x_365))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(sttfa__x_365) => permutation_sttfa.bijn(f)(sttfa__x_365))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(sttfa__x_365) => permutation_sttfa.bijn(f)(sttfa__x_365))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

invert_permut : [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

invert_permut_body : [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

axiom_invert_permut  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))

eq_invert_permut  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))

%|- eq_invert_permut : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut(n)) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut(n)) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))" "n"
%|- (sttfa-lemma "permutation_sttfa.axiom_invert_permut")))
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut(n)) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut(n)) => P(y)))))" "nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "permutation_sttfa.invert_permut(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_invert_permut  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))

%|- sym_eq_invert_permut : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)))" "n"
%|- (sttfa-lemma "permutation_sttfa.eq_invert_permut")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut(n))))" "nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n)"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut(n))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "permutation_sttfa.invert_permut(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

axiom_invert_permut_body_O  : AXIOM connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))

eq_invert_permut_body_O  : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))

%|- eq_invert_permut_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))"
%|- (sttfa-lemma "permutation_sttfa.axiom_invert_permut_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

sym_eq_invert_permut_body_O  : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))

%|- sym_eq_invert_permut_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))"
%|- (sttfa-lemma "permutation_sttfa.eq_invert_permut_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))))" "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O)))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))
%|- QED

axiom_invert_permut_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))

eq_invert_permut_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))

%|- eq_invert_permut_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))" "n"
%|- (sttfa-lemma "permutation_sttfa.axiom_invert_permut_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))) => P((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_invert_permut_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_invert_permut_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))))" "n"
%|- (sttfa-lemma "permutation_sttfa.eq_invert_permut_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

invert_permut_f  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))))

%|- invert_permut_f : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "(permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m)))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m))))" "n"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)))))" "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-e "((nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))) => (nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))))" "(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m))))"
%|- (sttfa-impl-e "((nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))) => (nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))))" "(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m))))"
%|- (sttfa-impl-e "((nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m)))) => (nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m)))))" "(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m))))"
%|- (sttfa-impl-i "nat_sttfa.le(m)(m0)" "((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m)))"
%|- (sttfa-impl-i "(permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0))))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0))))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0))))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0)))" "nat_sttfa.le(m)(m0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m1) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m1))))" "m0"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m1) => nat_sttfa.le(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_S(m1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_S_S"))))))
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m0)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m)(m1) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m1))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(m)(m1) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq")))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y)))" "f(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "f(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(sttfa___))(f(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)))))" "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(m0) => nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)))" "nat_sttfa.le(m)(m0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(m0) => nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m1) => nat_sttfa.le(m)(nat_sttfa.sttfa_S(m1))))" "m0"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m1) => nat_sttfa.le(m)(nat_sttfa.sttfa_S(m1))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(j)))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(m0)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(m0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "m"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => (nat_sttfa.le(j)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))(nat_sttfa.sttfa_S(m0))" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => (nat_sttfa.le(j)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i))(f0(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))))(f)(nat_sttfa.sttfa_S(m0))" () ()
%|- (sttfa-conv "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0))" ("permutation_sttfa.injn") ()
%|- (propax)))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0))) => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-lemma "connectives_sttfa.nmk"))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(f(nat_sttfa.sttfa_S(m0)))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m1:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(m1)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(m1))(bool_sttfa.sttfa_false)))" "f(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "(FORALL(m1:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(m))(m1)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(m1))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "f(m)"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0))))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))))(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(x))(m)))" "nat_sttfa.eqb(f(m))(f(nat_sttfa.sttfa_S(m0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))(m) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(x))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m))" "permutation_sttfa.injn(f)(m0)"
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => permutation_sttfa.injn(f)(m0))" "permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0))"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => permutation_sttfa.injn(f)(m0))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n0)) => permutation_sttfa.injn(f)(n0)))" "m0"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n0)) => permutation_sttfa.injn(f)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n)) => permutation_sttfa.injn(f)(n))))" "f"
%|- (sttfa-lemma "permutation_sttfa.injn_Sn_n"))))))
%|- (propax))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m))(permutation_sttfa.invert_permut(m0)(f)(f(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.invert_permut(m0)(f)(f(m))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.invert_permut(m0)(f)(f(m))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(case_false)(bool_sttfa.sttfa_false)))" "permutation_sttfa.invert_permut(m0)(f)(f(m))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(x))(m))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(x0))(m))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f)(f(m)))(x))(m))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0))))))) => P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0))))))) => P(y))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m1:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m0))(permutation_sttfa.invert_permut(m0)(f0)(m1))(nat_sttfa.eqb(m1)(f0(nat_sttfa.sttfa_S(m0)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))" "m0"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0))) => P(y))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(m0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" "m0"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "permutation_sttfa.invert_permut_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))) => P(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0))) => P(y))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(m0)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "nat_sttfa.sttfa_S(m0)"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut"))))))))))
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m)(f)(f(m)))(m)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => ((permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(m0))(f)(f(m)))(m))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (permutation_sttfa.injn(f)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m0)(f)(f(m)))(m))))))" "(permutation_sttfa.injn(f)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m)(f)(f(m)))(m))"
%|- (sttfa-conv "(permutation_sttfa.injn(f)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(m)(f)(f(m)))(m))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(z) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(z)(f)(f(z)))(z)))" "m"
%|- (sttfa-impl-e "((FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n0))(f)(f(nat_sttfa.sttfa_S(n0))))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(z) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(z)(f)(f(z)))(z))))" "(FORALL(a:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))))(nat_sttfa.sttfa_S(a))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))" "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))))(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))))(nat_sttfa.sttfa_S(a))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "f(nat_sttfa.sttfa_S(a))"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))))(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(x))(nat_sttfa.sttfa_S(a)))))" "nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(x))(nat_sttfa.sttfa_S(a))))))" "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(y))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)) => P(nat_sttfa.sttfa_S(a))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.sttfa_S(a))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a)))" "permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a)))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(x))(nat_sttfa.sttfa_S(a))))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(x0))(nat_sttfa.sttfa_S(a))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_S(a)) => (nat_sttfa.le(j)(nat_sttfa.sttfa_S(a)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(x))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.eqb(f(nat_sttfa.sttfa_S(a)))(f(nat_sttfa.sttfa_S(a)))))(nat_sttfa.sttfa_S(a))) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))" ("permutation_sttfa.injn") ()
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a))))))) => P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a))))))) => P(y))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(a))(permutation_sttfa.invert_permut(a)(f0)(m0))(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_S(a)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))" "a"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a))) => P(y))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(a)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" "a"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "permutation_sttfa.invert_permut_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))) => P(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_S(a))))(nat_sttfa.sttfa_S(a))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a))) => P(y))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(a)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(a)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "nat_sttfa.sttfa_S(a)"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut"))))))))))
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_S(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n0))(f)(f(nat_sttfa.sttfa_S(n0))))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(z) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(z)(f)(f(z)))(z)))))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))" "(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))" "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O)))(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O)))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(n))(bool_sttfa.sttfa_true))" "f(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.eqb_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O)))(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O))))" "nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => ((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O)))))" "((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => P(nat_sttfa.sttfa_O)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(x0))(nat_sttfa.sttfa_O)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):((FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(nat_sttfa.sttfa_O) => (nat_sttfa.le(j)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(x))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(f(nat_sttfa.sttfa_O))(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)) => (permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))" ("permutation_sttfa.injn") ()
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_O)))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_O)))))) => P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m0)(f0(nat_sttfa.sttfa_O)))))) => P(y))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut_body_O"))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O)))" "permutation_sttfa.invert_permut_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => P(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(permutation_sttfa.injn(f)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(f)(f(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => P(y))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(sttfa___)(f)(f(sttfa___)))(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(sttfa___)(f)(f(sttfa___)))(sttfa___)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(sttfa___)(f)(f(sttfa___)))(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(sttfa___) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(sttfa___)(f)(f(sttfa___)))(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop")))))))
%|- (sttfa-conv "((LAMBDA(x_417:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(x_417) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(x_417)(f)(f(m)))(m)))(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => ((LAMBDA(x_417:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(x_417) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(x_417)(f)(f(m)))(m)))(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(x_417) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(x_417)(f)(f(m)))(m)))(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (LAMBDA(x_417:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(x_417) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(x_417)(f)(f(m)))(m)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => Q(m0))))))" "(LAMBDA(x_417:nat_sttfa.sttfa_nat):(permutation_sttfa.injn(f)(x_417) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(x_417)(f)(f(m)))(m)))"
%|- (sttfa-conv "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(m) => ((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => (Q(m0) => Q(nat_sttfa.sttfa_S(m0))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => Q(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(n) => ((FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (Q(m) => Q(nat_sttfa.sttfa_S(m))))) => (FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => Q(m)))))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_ind"))))))))))))))
%|- QED

let_clause_1063  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))))))))))

%|- let_clause_1063 : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(n)" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))))))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "(nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(n)" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))" "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)" "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))"
%|- (sttfa-impl-i "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))" "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(j)))" "a"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(y))(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___1))(j))(b) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___1))(j))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(sttfa___1))(j))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "b"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))))))))))))))))))))
%|- QED

let_clause_1068  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))))))))))

%|- let_clause_1068 : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(n)" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))))))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "(nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(n)" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))" "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)" "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))"
%|- (sttfa-impl-i "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))" "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j)))))))))))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))" "i"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))))))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.let_clause_1063")))))))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i)))" "j"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(i))(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y)))" "i"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))))))))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j)))))))))))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))" "i"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(j0))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))))))))))))))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.let_clause_1063")))))))))))))))))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(sttfa___1))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "j"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))))))))))))))))
%|- QED

injective_invert_permut  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))))

%|- injective_invert_permut : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))))" () ("permutation_sttfa.injn")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(n)" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "(nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "nat_sttfa.le(j)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))" "i"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(f)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(f)(n)" ("permutation_sttfa.bijn") ()
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f0)(n) => permutation_sttfa.bijn(f0)(n)))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f0)(n) => permutation_sttfa.bijn(f0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))))" "n"
%|- (sttfa-lemma "permutation_sttfa.permut_to_bijn"))))))))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j))))"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(j)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m))))))" "j"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(m)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(p))(m))))))))(f)(n)" () ()
%|- (sttfa-conv "permutation_sttfa.bijn(f)(n)" ("permutation_sttfa.bijn") ()
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f0)(n) => permutation_sttfa.bijn(f0)(n)))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f0)(n) => permutation_sttfa.bijn(f0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(permutation_sttfa.permut(f)(n) => permutation_sttfa.bijn(f)(n))))" "n"
%|- (sttfa-lemma "permutation_sttfa.permut_to_bijn"))))))))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))"
%|- (sttfa-impl-i "nat_sttfa.le(b)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(permutation_sttfa.injn(f)(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(permutation_sttfa.injn(f)(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))"
%|- (sttfa-impl-i "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))" "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(y))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))))" "i"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(y))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(j)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(y) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y))))" "j"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(y) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a)"
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a)))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m)))(m)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.invert_permut_f")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(a) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))))" "permutation_sttfa.invert_permut(n)(f)(f(a))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b)"
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b)))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(b)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m)))(m)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.invert_permut_f")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(b)))(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))))" "permutation_sttfa.invert_permut(n)(f)(f(b))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))" "i"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)))))))))))))))))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))))))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.let_clause_1068")))))))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(b))))" "f(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(f(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(y))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b)"
%|- (propax)
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n)))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))" "nat_sttfa.le(b)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))" "b"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))))))))))" "nat_sttfa.le(a)(n)"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))" "connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))" "nat_sttfa.le(j)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))))" "nat_sttfa.le(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))))" "j"
%|- (sttfa-conv "(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))" "i"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)))))))))))))))))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => (nat_sttfa.le(j0)(n) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n) => nat_sttfa.le(f(i00))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(j0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n0) => (nat_sttfa.le(j0)(n0) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0)) => (nat_sttfa.le(a0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b0)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0)) => (nat_sttfa.le(b0)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b0))(j0) => ((FORALL(i00:nat_sttfa.sttfa_nat):(nat_sttfa.le(i00)(n0) => nat_sttfa.le(f(i00))(n0))) => (permutation_sttfa.injn(f)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a0)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a0))(i0))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.le(i0)(n) => nat_sttfa.le(f(i0))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)))))))))))))))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.let_clause_1068")))))))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y)))" "f(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___1))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(sttfa___1)))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(sttfa___1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(f(sttfa___1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(f(b)))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(f(b)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(f(b)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))(b) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(b) => (LAMBDA(x0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(x0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(b) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(b) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "b"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => (LAMBDA(x0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(permutation_sttfa.invert_permut(n)(f)(f(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(f(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "a"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(x_1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(x_1)))(f(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(x_1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(a)))(permutation_sttfa.invert_permut(n)(f)(x_1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(b)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(x_1))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(j)))(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(x_1))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(j)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(x_1))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(j)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "f(a)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (permutation_sttfa.injn(f)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(permutation_sttfa.injn(f)(n)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (permutation_sttfa.injn(f)(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(permutation_sttfa.injn(f)(n)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (permutation_sttfa.injn(f)(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(permutation_sttfa.injn(f)(n)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(B) => return))))" "permutation_sttfa.injn(f)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.le(i1)(n) => nat_sttfa.le(f(i1))(n)))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(b)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(b)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(b))(j)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(b)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(b)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(b)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(j)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(j)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(j)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.le(a)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(a))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.le(a)(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.le(a)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.le(a)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_And(nat_sttfa.le(x)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(i)) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(nat_sttfa.le(p)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(p))(i)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

permut_invert_permut  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n))))

%|- permut_invert_permut : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)))))" () ("permutation_sttfa.permut")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(n)" "connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))"
%|- (sttfa-impl-e "(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)))" "permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n0)(f))(n0)))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n0)(f))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))))" "f"
%|- (sttfa-lemma "permutation_sttfa.injective_invert_permut"))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.le(i)(n)" "nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)"
%|- (sttfa-conv "nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(x)(f)(i))(x))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(x)(f)(i))(x) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(x))(f)(i))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(x)(f)(i))(x)))" "(FORALL(n1:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))))"
%|- (then@ (sttfa-forall-i "n1")
%|- (sttfa-impl-e "((nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))) => (nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))))" "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-e "((nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))) => (nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))))" "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-e "((nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_S(n1)))))(nat_sttfa.sttfa_S(n1))) => (nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))(f)(i))(nat_sttfa.sttfa_S(n1))))" "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_S(n1)))))(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-i "nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1)" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_S(n1)))))(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-conv "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_S(n1)))))(nat_sttfa.sttfa_S(n1))" () ()
%|- (sttfa-forall-e "(FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(z))(nat_sttfa.sttfa_S(n1)))" "nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n1)) => (FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(z))(nat_sttfa.sttfa_S(n1))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(n1)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n1)))" "nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(n1)))" "nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(m) => nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(m))))" "n1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(m) => nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "permutation_sttfa.invert_permut(n1)(f)(i)"
%|- (sttfa-lemma "nat_sttfa.le_S"))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.sttfa_S(n1)))(permutation_sttfa.invert_permut(n1)(f)(i)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.sttfa_S(n1)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.invert_permut(n1)(f)(i)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(y)(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(permutation_sttfa.invert_permut(n1)(f)(i)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_false)(bool_sttfa.sttfa_false)))" "permutation_sttfa.invert_permut(n1)(f)(i)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1)) => (nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(n1)) => (FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(z))(nat_sttfa.sttfa_S(n1)))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1)))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(y))(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true)) => P(nat_sttfa.sttfa_S(n1))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.sttfa_S(n1))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1)))" "permutation_sttfa.invert_permut(n1)(f)(i)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(sttfa___))(nat_sttfa.sttfa_S(n1)))(bool_sttfa.sttfa_true) => ((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(sttfa___))(nat_sttfa.sttfa_S(n1)))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(sttfa___))(nat_sttfa.sttfa_S(n1)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[bool_sttfa.sttfa_bool -> bool]):(return(bool_sttfa.sttfa_true) => (return(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):return(z)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f)(i))(sttfa___))(nat_sttfa.sttfa_S(n1)))"
%|- (sttfa-lemma "bool_sttfa.match_bool_prop"))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1))))))) => P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1))))))) => P(y))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n1))(permutation_sttfa.invert_permut(n1)(f0)(m))(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_S(n1)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(permutation_sttfa.invert_permut(n)(f)(m))(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_S(n)))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n))))" "n1"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1))) => P(y))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n1)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" "n1"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "permutation_sttfa.invert_permut_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))) => P(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(permutation_sttfa.invert_permut(n1)(f)(i))(n1) => nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_S(n1))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1))) => P(y))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_S(n1)))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(n1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "nat_sttfa.sttfa_S(n1)"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(permutation_sttfa.invert_permut(x)(f)(i))(x) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_S(x))(f)(i))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(x)(f)(i))(x))))" "nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O) => nat_sttfa.le(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O))" "nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O))" "nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O) => nat_sttfa.le(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)(f)(i))(nat_sttfa.sttfa_O))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))" "nat_sttfa.eqb(i)(f(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O) => (FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(y))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false)) => P(nat_sttfa.sttfa_O)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false)) => P(y))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_false))(case_false))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O) => (nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_O) => (FORALL(z:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(z))(nat_sttfa.sttfa_O))))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => P(nat_sttfa.sttfa_O)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true)) => P(y))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_true) => ((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[bool_sttfa.sttfa_bool -> bool]):(return(bool_sttfa.sttfa_true) => (return(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):return(z)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "bool_sttfa.match_bool_prop")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_O)))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_O)))))) => P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f0(nat_sttfa.sttfa_O)))))) => P(y))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(nat_sttfa.eqb(m)(f(nat_sttfa.sttfa_O))))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O)))" "permutation_sttfa.invert_permut_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => P(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):nat_sttfa.le(y(f)(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O)) => P(y))))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(nat_sttfa.sttfa_O))(permutation_sttfa.invert_permut(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](permutation_sttfa.invert_permut_body)(n))(permutation_sttfa.invert_permut(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "permutation_sttfa.sym_eq_invert_permut")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(sttfa__x_365)(f)(i))(sttfa__x_365))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(sttfa__x_365)(f)(i))(sttfa__x_365))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(sttfa__x_365)(f)(i))(sttfa__x_365))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(sttfa__x_365)(f)(i))(sttfa__x_365))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):nat_sttfa.le(permutation_sttfa.invert_permut(sttfa__x_365)(f)(i))(sttfa__x_365))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(B))))" "permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)"
%|- (sttfa-conv "(FORALL(B:bool):((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))) => (B => connectives_sttfa.sttfa_And((FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n))))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(x))(n)))"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))))
%|- QED

f_invert_permut  : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.permut(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))))))

%|- f_invert_permut : PROOF
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(m)(n)" "(permutation_sttfa.permut(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))"
%|- (sttfa-impl-i "permutation_sttfa.permut(f)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))" "permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n0)(f))(n0)))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n0)(f))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.permut(permutation_sttfa.invert_permut(n)(f))(n))))" "f"
%|- (sttfa-lemma "permutation_sttfa.permut_invert_permut"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)))" "(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))"
%|- (sttfa-impl-i "permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)"
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(permutation_sttfa.injn(f)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))" () ("permutation_sttfa.permut")
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(permutation_sttfa.injn(f)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n)))" "(permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))"
%|- (sttfa-impl-i "permutation_sttfa.injn(f)(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m))"
%|- (sttfa-impl-e "(permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m)))" "permutation_sttfa.injn(f)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m))))" "nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)))" "m"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m0)))(m0))))" "permutation_sttfa.invert_permut(n)(f)(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m0)))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m0)))(m0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n0) => (permutation_sttfa.injn(f)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n0)(f)(f(m0)))(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(m)))(m))))))" "f"
%|- (sttfa-lemma "permutation_sttfa.invert_permut_f")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n) => (nat_sttfa.le(m)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))))" "nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n) => nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n))" "nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n))" "nat_sttfa.le(m)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)))" "m"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(m))(n) => nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n)))" "permutation_sttfa.invert_permut(n)(f)(m)"
%|- (propax))))
%|- (sttfa-conv "(nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n) => (nat_sttfa.le(m)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(j)))))" "m"
%|- (sttfa-conv "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(f(permutation_sttfa.invert_permut(n)(f)(m)))(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(f(permutation_sttfa.invert_permut(n)(f)(m))))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (nat_sttfa.le(j)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))" "f(permutation_sttfa.invert_permut(n)(f)(m))"
%|- (sttfa-conv "(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => (nat_sttfa.le(j)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](permutation_sttfa.invert_permut(n)(f)(i))(permutation_sttfa.invert_permut(n)(f)(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j)))))))(n)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n0:nat_sttfa.sttfa_nat):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n0) => (nat_sttfa.le(j)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(i))(f0(j)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(j))))))))(permutation_sttfa.invert_permut(n)(f))(n)" () ()
%|- (sttfa-conv "permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)" ("permutation_sttfa.injn") ()
%|- (sttfa-impl-e "(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))" "permutation_sttfa.permut(f)(n)"
%|- (propax)
%|- (sttfa-conv "(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n0)(f))(n0)))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n0) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n0)(f))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(permutation_sttfa.permut(f)(n) => permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n))))" "f"
%|- (sttfa-lemma "permutation_sttfa.injective_invert_permut"))))))))))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (permutation_sttfa.injn(f)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(permutation_sttfa.injn(f)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (permutation_sttfa.injn(f)(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(permutation_sttfa.injn(f)(n)) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (permutation_sttfa.injn(f)(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(permutation_sttfa.injn(f)(n)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(B) => return))))" "permutation_sttfa.injn(f)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(f(i))(n)))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(permutation_sttfa.invert_permut(n)(f)(m)))(m)"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(B) => return))))" "permutation_sttfa.injn(permutation_sttfa.invert_permut(n)(f))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => nat_sttfa.le(permutation_sttfa.invert_permut(n)(f)(i))(n)))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))))))
%|- QED

END permutation_sttfa

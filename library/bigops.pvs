bigops_sttfa : THEORY
BEGIN
IMPORTING bool_sttfa,connectives_sttfa,div_mod_sttfa,leibniz_sttfa,logic_sttfa,nat_sttfa

sameF_upto [A:TYPE+] : [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> A] -> [[nat_sttfa.sttfa_nat -> A] -> bool]]] = (LAMBDA(k:nat_sttfa.sttfa_nat):(LAMBDA(f:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(k) => logic_sttfa.eq[A](f(i))(g(i)))))))

sameF_p [A:TYPE+] : [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [[nat_sttfa.sttfa_nat -> A] -> [[nat_sttfa.sttfa_nat -> A] -> bool]]]] = (LAMBDA(k:nat_sttfa.sttfa_nat):(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(k) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i)))))))))

sameF_upto_le [A:TYPE+] : LEMMA (FORALL(f:[nat_sttfa.sttfa_nat -> A]):(FORALL(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_upto[A](m)(f)(g) => bigops_sttfa.sameF_upto[A](n)(f)(g)))))))

%|- sameF_upto_le : PROOF
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> A]):(FORALL(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_upto[A](m)(f)(g) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => logic_sttfa.eq[A](f(i))(g(i))))))))))" () ("bigops_sttfa.sameF_upto")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "g")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(bigops_sttfa.sameF_upto[A](m)(f)(g) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => logic_sttfa.eq[A](f(i))(g(i)))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_upto[A](m)(f)(g)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => logic_sttfa.eq[A](f(i))(g(i))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n)" "logic_sttfa.eq[A](f(i))(g(i))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(m) => logic_sttfa.eq[A](f(i))(g(i)))" "nat_sttfa.lt(i)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" "nat_sttfa.lt(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p) => nat_sttfa.lt(i)(p))))" "m"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p) => nat_sttfa.lt(i)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(i)(p)))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(i)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(i)(m) => logic_sttfa.eq[A](f(i))(g(i)))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => logic_sttfa.eq[A](f(i0))(g(i0))))" "i"
%|- (sttfa-conv "(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => logic_sttfa.eq[A](f(i0))(g0(i0)))))(g)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => logic_sttfa.eq[A](f0(i0))(g0(i0))))))(f)(g)" () ()
%|- (sttfa-conv "(LAMBDA(k:nat_sttfa.sttfa_nat):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(k) => logic_sttfa.eq[A](f0(i0))(g0(i0)))))))(m)(f)(g)" () ()
%|- (sttfa-conv "bigops_sttfa.sameF_upto[A](m)(f)(g)" ("bigops_sttfa.sameF_upto") ()
%|- (propax)))))))))))))))))
%|- QED

sameF_p_le [A:TYPE+] : LEMMA (FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> A]):(FORALL(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_p[A](m)(p)(f)(g) => bigops_sttfa.sameF_p[A](n)(p)(f)(g))))))))

%|- sameF_p_le : PROOF
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> A]):(FORALL(g:[nat_sttfa.sttfa_nat -> A]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_p[A](m)(p)(f)(g) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i))))))))))))" () ("bigops_sttfa.sameF_p")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "g")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(bigops_sttfa.sameF_p[A](m)(p)(f)(g) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i))))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_p[A](m)(p)(f)(g)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[A](f(i))(g(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i))))" "nat_sttfa.lt(i)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" "nat_sttfa.lt(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p0) => nat_sttfa.lt(i)(p0))))" "m"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p0) => nat_sttfa.lt(i)(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p0) => nat_sttfa.lt(i)(p0)))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p0) => nat_sttfa.lt(i)(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(i)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i))(g(i))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i0))(g(i0)))))" "i"
%|- (sttfa-conv "(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f(i0))(g0(i0))))))(g)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f0(i0))(g0(i0)))))))(f)(g)" () ()
%|- (sttfa-conv "(LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f0(i0))(g0(i0))))))))(p)(f)(g)" () ()
%|- (sttfa-conv "(LAMBDA(k:nat_sttfa.sttfa_nat):(LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> A]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> A]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(k) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[A](f0(i0))(g0(i0)))))))))(m)(p)(f)(g)" () ()
%|- (sttfa-conv "bigops_sttfa.sameF_p[A](m)(p)(f)(g)" ("bigops_sttfa.sameF_p") ()
%|- (propax)))))))))))))))))))))
%|- QED

bigop [H:TYPE+]: [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]

bigop_body [H:TYPE+]: [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]

axiom_bigop_O [H:TYPE+] : AXIOM connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))

eq_bigop_O [H:TYPE+] : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))

%|- eq_bigop_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "bigops_sttfa.axiom_bigop_O[H]")
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)) => P(y)))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(x) => P(y))))))" "bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]")))))))
%|- QED

sym_eq_bigop_O [H:TYPE+] : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))

%|- sym_eq_bigop_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[H]")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop[H](nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(x))))" "bigops_sttfa.bigop[H](nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]"))))))
%|- QED

axiom_bigop_S [H:TYPE+] : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))

eq_bigop_S [H:TYPE+] : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))

%|- eq_bigop_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n0)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.axiom_bigop_S[H]")))
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))) => P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))) => P(y)))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(x) => P(y))))))" "bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]"))))))))
%|- QED

sym_eq_bigop_S [H:TYPE+] : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))))

%|- sym_eq_bigop_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n0)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_S[H]")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(x))))" "bigops_sttfa.bigop[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]")))))))
%|- QED

axiom_bigop_body_O [H:TYPE+] : AXIOM connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))

eq_bigop_body_O [H:TYPE+] : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))

%|- eq_bigop_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))"
%|- (sttfa-lemma "bigops_sttfa.axiom_bigop_body_O[H]")
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(x) => P(y))))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]")))))))
%|- QED

sym_eq_bigop_body_O [H:TYPE+] : LEMMA leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))

%|- sym_eq_bigop_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))"
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[H]")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil)))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))))" "(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):nil))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(x))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]"))))))
%|- QED

axiom_bigop_body_S [H:TYPE+] : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))))

eq_bigop_body_S [H:TYPE+] : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))))

%|- eq_bigop_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))))))" "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))"
%|- (sttfa-conv "connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n0)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n0))(bigops_sttfa.bigop[H](n0)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n0)(p)(nil)(op)(f))(p(n0))))))))" "n"
%|- (sttfa-lemma "bigops_sttfa.axiom_bigop_body_S[H]")))
%|- (sttfa-conv "(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(connectives_sttfa.equal[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => (FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]] -> bool]):(P(x) => P(y))))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]"))))))))
%|- QED

sym_eq_bigop_body_S [H:TYPE+] : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))

%|- sym_eq_bigop_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n0)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n0))(bigops_sttfa.bigop[H](n0)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n0)(p)(nil)(op)(f))(p(n0))))))))" "n"
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_S[H]")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n)))))))(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))))" "(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:H):(LAMBDA(op:[H -> [H -> H]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> H]):bool_sttfa.match_bool_type[H](op(f(n))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f)))(bigops_sttfa.bigop[H](n)(p)(nil)(op)(f))(p(n))))))"
%|- (sttfa-conv "(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(FORALL(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]):(leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](x)(y) => leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]](y)(x))))" "bigops_sttfa.bigop_body[H](nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [H -> [[H -> [H -> H]] -> [[nat_sttfa.sttfa_nat -> H] -> H]]]]]")))))))
%|- QED

bigop_Strue [B:TYPE+] : LEMMA (FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:B):(FORALL(op:[B -> [B -> B]]):(FORALL(f:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))))

%|- bigop_Strue : PROOF
%|- (then@ (sttfa-forall-i "k")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "nil")
%|- (then@ (sttfa-forall-i "op")
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "p(k)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true)) => (LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(y))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true)) => P(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true)) => P(y))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(case_false)(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(case_false)(bool_sttfa.sttfa_true))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x0))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p0)(nil0)(op0)(f0))(p0(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))))" "k"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_S[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => P(y))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))))" "k"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_S[B]"))))))))))))))
%|- QED

bigop_Sfalse [B:TYPE+] : LEMMA (FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:B):(FORALL(op:[B -> [B -> B]]):(FORALL(f:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))))

%|- bigop_Sfalse : PROOF
%|- (then@ (sttfa-forall-i "k")
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "nil")
%|- (then@ (sttfa-forall-i "op")
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p(k)))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "p(k)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false)) => (LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(y))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false)) => P(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(LAMBDA(y:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false)) => P(y))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bool_sttfa.sttfa_false))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(case_false)(bool_sttfa.sttfa_false))(case_false))" "bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x0))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(k))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(x))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k))))))) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(k))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](k)(p0)(nil0)(op0)(f0))(p0(k)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p0)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p0)(nil0)(op0)(f0))(p0(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))))" "k"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_S[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k))) => P(y))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(k)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))))" "k"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_S[B]"))))))))))))))
%|- QED

same_bigop [B:TYPE+] : LEMMA (FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:B):(FORALL(op:[B -> [B -> B]]):(FORALL(f:[nat_sttfa.sttfa_nat -> B]):(FORALL(g:[nat_sttfa.sttfa_nat -> B]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](k)(p1)(p2) => (bigops_sttfa.sameF_p[B](k)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))))))

%|- same_bigop : PROOF
%|- (then@ (sttfa-forall-i "k")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "nil")
%|- (then@ (sttfa-forall-i "op")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "g")
%|- (sttfa-conv "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](k)(p1)(p2) => (bigops_sttfa.sameF_p[B](k)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](x)(p1)(p2) => (bigops_sttfa.sameF_p[B](x)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" "k"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](x)(p1)(p2) => (bigops_sttfa.sameF_p[B](x)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(x))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(x))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](x)(p1)(p2) => (bigops_sttfa.sameF_p[B](x)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))) => ((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-impl-e "(((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))) => ((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-impl-e "(((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))) => ((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-impl-e "(((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n)))))) => ((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))))"
%|- (sttfa-impl-i "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n)))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2)" "(bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g)" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-impl-e "(bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))" "bigops_sttfa.sameF_p[B](n)(p1)(f)(g)"
%|- (sttfa-impl-e "(bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => bigops_sttfa.sameF_p[B](n)(p1)(f)(g))" "bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => bigops_sttfa.sameF_p[B](n)(p1)(f)(g)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_pred_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B0:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(B0) => B0)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B0:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(B0) => B0)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => bigops_sttfa.sameF_p[B](n)(p1)(f)(g)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g) => bigops_sttfa.sameF_p[B](n)(p1)(f)(g))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g) => bigops_sttfa.sameF_p[B](n)(p1)(f)(g))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g) => bigops_sttfa.sameF_p[B](n0)(p1)(f)(g)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g) => bigops_sttfa.sameF_p[B](n0)(p1)(f)(g)))))" () ()
%|- (sttfa-forall-e "(FORALL(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g0) => bigops_sttfa.sameF_p[B](n0)(p1)(f)(g0))))))" "g"
%|- (sttfa-conv "(FORALL(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f)(g0) => bigops_sttfa.sameF_p[B](n0)(p1)(f)(g0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(FORALL(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f0)(g0) => bigops_sttfa.sameF_p[B](n0)(p1)(f0)(g0)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(FORALL(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p1)(f0)(g0) => bigops_sttfa.sameF_p[B](n0)(p1)(f0)(g0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(FORALL(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_p[B](m)(p)(f0)(g0) => bigops_sttfa.sameF_p[B](n0)(p)(f0)(g0))))))))" "p1"
%|- (sttfa-lemma "bigops_sttfa.sameF_p_le[B]")))))))))))))
%|- (sttfa-impl-e "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))" "bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2)"
%|- (sttfa-impl-e "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2))" "bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.pred_Sn")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.pred(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.pred(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))))" "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.pred(n))(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_pred_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B0:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(B0) => B0)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(B0:bool):(nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n)))(B0) => B0)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.pred(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n0)(p1)(p2)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(p2) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n0)(p1)(p2)))))" () ()
%|- (sttfa-forall-e "(FORALL(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(g0) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n0)(p1)(g0))))))" "p2"
%|- (sttfa-conv "(FORALL(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(p1)(g0) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n0)(p1)(g0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](m)(f0)(g0) => bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n0)(f0)(g0)))))))" "p1"
%|- (sttfa-lemma "bigops_sttfa.sameF_upto_le[bool_sttfa.sttfa_bool]")))))))))))
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(x))(x)(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n)))))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(x))(x)(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n)))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n)))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(p2(i))))" "n"
%|- (sttfa-conv "(LAMBDA(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(g0(i)))))(p2)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](f0(i))(g0(i))))))(p1)(p2)" () ()
%|- (sttfa-conv "(LAMBDA(k0:nat_sttfa.sttfa_nat):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(k0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](f0(i))(g0(i)))))))(nat_sttfa.sttfa_S(n))(p1)(p2)" () ()
%|- (sttfa-conv "bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2)" ("bigops_sttfa.sameF_upto") ()
%|- (propax)))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(p2(n)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(y))))" "p2(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(y)))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "p1(n)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))))" "p1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-conv "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(y))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (LAMBDA(y:B):logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(y))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:B):logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(y))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(y))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_false)))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_false))))" "op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(y))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_false)))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_false)(bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_false))))" "op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x0))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))))" "p1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](f(n))(g(n)) => logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))" "logic_sttfa.eq[B](f(n))(g(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(n))(g(n)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(n))(g(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(n))(g(n))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(n))(g(n))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(i))(g(i)))))" "n"
%|- (sttfa-conv "(LAMBDA(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f(i))(g0(i))))))(g)" () ()
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f0(i))(g0(i)))))))(f)(g)" () ()
%|- (sttfa-conv "(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f0(i))(g0(i))))))))(p1)(f)(g)" () ()
%|- (sttfa-conv "(LAMBDA(k0:nat_sttfa.sttfa_nat):(LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):(LAMBDA(g0:[nat_sttfa.sttfa_nat -> B]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(k0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](f0(i))(g0(i)))))))))(nat_sttfa.sttfa_S(n))(p1)(f)(g)" () ()
%|- (sttfa-conv "bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g)" ("bigops_sttfa.sameF_p") ()
%|- (propax)))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[B](f(n))(g(n)) => logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:B):(logic_sttfa.eq[B](f(n))(y) => logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(y)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" "g(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => (FORALL(y:B):(logic_sttfa.eq[B](f(n))(y) => logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(y)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))"
%|- (sttfa-conv "logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(x_1:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(x_1)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))(f(n)) => (FORALL(y:B):(logic_sttfa.eq[B](f(n))(y) => (LAMBDA(x_1:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(x_1)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(f(n)) => (FORALL(y:B):(logic_sttfa.eq[B](f(n))(y) => P(y)))))" "(LAMBDA(x_1:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(op(x_1)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))"
%|- (sttfa-conv "(FORALL(P:[B -> bool]):(P(f(n)) => (FORALL(y:B):(logic_sttfa.eq[B](f(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):(FORALL(P:[B -> bool]):(P(x) => (FORALL(y:B):(logic_sttfa.eq[B](x)(y) => P(y))))))" "f(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(y))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => (LAMBDA(y:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(y))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => P(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:B):logic_sttfa.eq[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(y))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => P(y))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_true)))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_true)(bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_true))))" "op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => (LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => P(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:B):logic_sttfa.eq[B](y)(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))) => P(y))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:B):(LAMBDA(y:B):(FORALL(P:[B -> bool]):(P(x) => P(y)))))(op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_true)))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-conv "(FORALL(case_false:B):leibniz_sttfa.leibniz[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:B):(FORALL(case_false:B):leibniz_sttfa.leibniz[B](case_true)(bool_sttfa.match_bool_type[B](case_true)(case_false)(bool_sttfa.sttfa_true))))" "op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[B]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x0))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B0:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((B0 => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(B0) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B0:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((B0 => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(B0) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(x_1:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x_1)))(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => (LAMBDA(x_1:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => P(y)))))" "(LAMBDA(x_1:bool_sttfa.sttfa_bool):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p1(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(x))(x)(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (LAMBDA(x0:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(x0))(x0)(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(x)))))" "(LAMBDA(x:B):logic_sttfa.eq[B](bool_sttfa.match_bool_type[B](op(f(n))(x))(x)(p1(n)))(bool_sttfa.match_bool_type[B](op(g(n))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))(p2(n))))"
%|- (sttfa-conv "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:B):(FORALL(P:[B -> bool]):(P(a) => (FORALL(x:B):(logic_sttfa.eq[B](x)(a) => P(x))))))" "bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[B]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n0))(bigops_sttfa.bigop[B](n0)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n0)(p)(nil0)(op0)(f0))(p(n0)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_S[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n))))))) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n)(p)(nil0)(op0)(f0))(p(n)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):bool_sttfa.match_bool_type[B](op0(f0(n0))(bigops_sttfa.bigop[B](n0)(p)(nil0)(op0)(f0)))(bigops_sttfa.bigop[B](n0)(p)(nil0)(op0)(f0))(p(n0)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_S[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => P(y))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n0)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_S[B]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](n)(p1)(p2) => (bigops_sttfa.sameF_p[B](n)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(n))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(n))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n))) => P(y))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_S(n0)))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_S[B]"))))))))))
%|- (sttfa-impl-e "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](x)(p1)(p2) => (bigops_sttfa.sameF_p[B](x)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_S(x))(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_S(x))(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](x)(p1)(p2) => (bigops_sttfa.sameF_p[B](x)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))"
%|- (sttfa-impl-e "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))"
%|- (sttfa-impl-e "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)))"
%|- (sttfa-impl-e "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-impl-e "((bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))) => (bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2)" "(bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g)" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-conv "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0))))) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0))))) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](nat_sttfa.sttfa_O)(p1)(p2) => (bigops_sttfa.sameF_p[B](nat_sttfa.sttfa_O)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](sttfa__x_365)(p1)(p2) => (bigops_sttfa.sameF_p[B](sttfa__x_365)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](sttfa__x_365)(p1)(p2) => (bigops_sttfa.sameF_p[B](sttfa__x_365)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](sttfa__x_365)(p1)(p2) => (bigops_sttfa.sameF_p[B](sttfa__x_365)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](sttfa__x_365)(p1)(p2) => (bigops_sttfa.sameF_p[B](sttfa__x_365)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](sttfa__x_365)(p1)(p2) => (bigops_sttfa.sameF_p[B](sttfa__x_365)(p1)(f)(g) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))))))
%|- QED

bigop_false [B:TYPE+] : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(nil:B):(FORALL(op:[B -> [B -> B]]):(FORALL(f:[nat_sttfa.sttfa_nat -> B]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)))))

%|- bigop_false : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "nil")
%|- (then@ (sttfa-forall-i "op")
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-conv "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)))" "(FORALL(n1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)))"
%|- (then@ (sttfa-forall-i "n1")
%|- (sttfa-impl-i "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "op"
%|- (sttfa-conv "(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil0:B):(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nil"
%|- (sttfa-conv "(FORALL(nil0:B):(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)(n1))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil0:B):(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n1))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil0:B):(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n1))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil0:B):(FORALL(op0:[B -> [B -> B]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> B]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[B](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p(i)))(nil0)(op0)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[B]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](x)(nil)))" "bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(n1))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](x)(nil))))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" () ()
%|- (sttfa-forall-e "(FORALL(y:B):(logic_sttfa.eq[B](y)(nil) => logic_sttfa.eq[B](y)(nil)))" "bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](nil)(nil) => (FORALL(y:B):(logic_sttfa.eq[B](y)(nil) => logic_sttfa.eq[B](y)(nil))))" "logic_sttfa.eq[B](nil)(nil)"
%|- (sttfa-conv "logic_sttfa.eq[B](nil)(nil)" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "nil"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:B):logic_sttfa.eq[B](sttfa___)(nil))(nil) => (FORALL(y:B):(logic_sttfa.eq[B](y)(nil) => (LAMBDA(sttfa___:B):logic_sttfa.eq[B](sttfa___)(nil))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(nil) => (FORALL(y:B):(logic_sttfa.eq[B](y)(nil) => P(y)))))" "(LAMBDA(sttfa___:B):logic_sttfa.eq[B](sttfa___)(nil))"
%|- (sttfa-conv "(FORALL(P:[B -> bool]):(P(nil) => (FORALL(y:B):(logic_sttfa.eq[B](y)(nil) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):(FORALL(P:[B -> bool]):(P(x) => (FORALL(y:B):(logic_sttfa.eq[B](y)(x) => P(y))))))" "nil"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[B]")))))))))
%|- (sttfa-conv "((LAMBDA(x:B):logic_sttfa.eq[B](x)(nil))(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (LAMBDA(x0:B):logic_sttfa.eq[B](x0)(nil))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => P(x)))))" "(LAMBDA(x:B):logic_sttfa.eq[B](x)(nil))"
%|- (sttfa-conv "(FORALL(P:[B -> bool]):(P(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:B):(logic_sttfa.eq[B](x)(bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:B):(FORALL(P:[B -> bool]):(P(a) => (FORALL(x:B):(logic_sttfa.eq[B](x)(a) => P(x))))))" "bigops_sttfa.bigop[B](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[B]")))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => ((FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))) => (FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil)"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-conv "logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:B):logic_sttfa.eq[B](x)(x))" "bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "logic_sttfa.refl[B]")))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):logic_sttfa.eq[B](bigops_sttfa.bigop[B](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [B -> [[B -> [B -> B]] -> [[nat_sttfa.sttfa_nat -> B] -> B]]]]](bigops_sttfa.bigop_body[B](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil0:B):(LAMBDA(op0:[B -> [B -> B]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> B]):nil0)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[B]")))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):logic_sttfa.eq[B](bigops_sttfa.bigop[B](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nil))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))))
%|- QED

Aop [A:TYPE+]: [A -> bool]

mk_Aop [A:TYPE+] : AXIOM (FORALL(nil:A):(FORALL(op:[A -> [A -> A]]):((FORALL(a:A):logic_sttfa.eq[A](op(nil)(a))(a)) => ((FORALL(a:A):logic_sttfa.eq[A](op(a)(nil))(a)) => ((FORALL(a:A):(FORALL(b:A):(FORALL(c:A):logic_sttfa.eq[A](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => bigops_sttfa.Aop[A](nil))))))

assoc  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))))

%|- assoc : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" "nat_sttfa.times(a)(nat_sttfa.times(b)(c))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.times(nat_sttfa.times(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- QED

timesA  : LEMMA bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))

%|- timesA : PROOF
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))))"
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" "nat_sttfa.times(a)(nat_sttfa.times(b)(c))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.times(nat_sttfa.times(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_1")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "n"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" "nat_sttfa.plus(a)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "a"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))
%|- (sttfa-conv "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nil)(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nil))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => bigops_sttfa.Aop[nat_sttfa.sttfa_nat](nil))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "bigops_sttfa.mk_Aop[nat_sttfa.sttfa_nat]"))))))))
%|- QED

bigop_I_gen  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))

%|- bigop_I_gen : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "b"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))) => (FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(x)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))" "(FORALL(b0:nat_sttfa.sttfa_nat):((FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))) => (FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))))"
%|- (then@ (sttfa-forall-i "b0")
%|- (sttfa-impl-i "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-i "nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))))" "nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(a)(nat_sttfa.sttfa_S(b0)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(a)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(a)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(a)(a))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))" "a"
%|- (sttfa-lemma "nat_sttfa.minus_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(a)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(a)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "nat_sttfa.minus(a)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nil))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nil))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nil)))))" "a"
%|- (sttfa-lemma "bigops_sttfa.bigop_false[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(a) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(a) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(a)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i))(f(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "f(i)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" ("bigops_sttfa.sameF_p") ()
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(a) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(a) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(a)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(i))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(i))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(a) => connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(i)))" "nat_sttfa.lt(i)(a)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(a) => connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(i)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(i))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(m))(bool_sttfa.sttfa_false)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(a)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_false))))" "a"
%|- (sttfa-lemma "nat_sttfa.not_le_to_leb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x)(p(i)))))" "nat_sttfa.leb(a)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x)(p(i))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "p(i)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(bool_sttfa.sttfa_false)(p(i))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x)(p(i))))))" ("bool_sttfa.andb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x)(p(i))))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x0)(p(i))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.andb(x)(p(i))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" ("bigops_sttfa.sameF_upto") ()
%|- (sttfa-conv "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" "f"
%|- (sttfa-conv "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](a)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](a)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](k)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](k)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):g(i)))))))))))))" "a"
%|- (sttfa-lemma "bigops_sttfa.same_bigop[nat_sttfa.sttfa_nat]")))))))))))))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](a)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x_1)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "p(b0)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_false)))" "p(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(z)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" "nat_sttfa.leb(a)(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(z)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" () ("bool_sttfa.andb" "bool_sttfa.andb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(y))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(z)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)))" ("bool_sttfa.andb") ()
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(z)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ("bool_sttfa.andb" "bool_sttfa.andb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(bool_sttfa.sttfa_false)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(z)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))))" ("bool_sttfa.andb") ()
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => ((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[bool_sttfa.sttfa_bool -> bool]):(return(bool_sttfa.sttfa_true) => (return(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):return(z)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.match_bool_prop")))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x0))(bool_sttfa.sttfa_false))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "b0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z)))))" "a"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))" "(FORALL(a1:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (then@ (sttfa-forall-i "a1")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))) => (nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))) => (nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(b0)(m))))" "a1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(b0)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" "b0"
%|- (sttfa-lemma "nat_sttfa.eq_minus_S_pred")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x))))" "nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(a1))))" "b0"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(a1))))" () ()
%|- (sttfa-forall-e "(FORALL(b1:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b1)))))" "a1"
%|- (sttfa-conv "(FORALL(b1:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b1)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.lt(a)(nat_sttfa.minus(c)(b))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_plus_to_minus_r")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x)))" "nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.pred(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.minus(b0)(a1)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(n))))" "a1"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q))(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(case_S)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(case_S)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n))))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "b0"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" "b0"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z)))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(b0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "b0"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(y))))" "nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "b0"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "b0"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(y))(bool_sttfa.sttfa_false)))" "nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(y))(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "p(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_false))(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "b0"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "nat_sttfa.minus(b0)(a)"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "p"
%|- (propax))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x0)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_true)))" "p(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(m))(bool_sttfa.sttfa_true)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(a)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_to_leb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)))" "nat_sttfa.leb(a)(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ("bool_sttfa.andb" "bool_sttfa.andb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))))" ("bool_sttfa.andb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x0)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(x)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x0))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(x))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a0) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a0) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(nat_sttfa.leb(a)(b0))(p(b0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(sttfa___))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))))" "b0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z)))))" "a"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n))))))"
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))" "(FORALL(a1:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (then@ (sttfa-forall-i "a1")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))) => (nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))) => (nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))" "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(b0)(m))))" "a1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(b0)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" "b0"
%|- (sttfa-lemma "nat_sttfa.eq_minus_S_pred")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x))))" "nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(a1)))(b0))" "nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):m)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nat_sttfa.le(nat_sttfa.sttfa_S(y(a1)))(b0))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(b0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(a1))))" "b0"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(a1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(a1))))" () ()
%|- (sttfa-forall-e "(FORALL(b1:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b1)))))" "a1"
%|- (sttfa-conv "(FORALL(b1:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.sttfa_O)(b1))(c) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(c)(b1)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.plus(a)(b))(c) => nat_sttfa.lt(a)(nat_sttfa.minus(c)(b))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.lt_plus_to_minus_r")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(n)))(n)))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "nat_sttfa.S_pred"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))))(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x)))" "nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(b0)(a1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.minus(b0)(a1))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(b0)(a1)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(b0)(a1)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.pred(nat_sttfa.minus(b0)(a1))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.pred(nat_sttfa.minus(b0)(a1))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.minus(b0)(a1)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(b0)(a1)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a1))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(a1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(n))))" "a1"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q))(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(case_S)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(case_S)(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n))))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(nat_sttfa.sttfa_S(a1))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(a1)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(a1))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m))) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(b0)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(q:nat_sttfa.sttfa_nat):nat_sttfa.minus(n)(q)))(m)))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(n))))" "b0"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(b0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" "b0"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => P(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0))) => P(y))))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_S(b0)))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n))(nat_sttfa.minus(n)))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_minus")))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))) => ((FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(n)))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_S(n)))))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(z)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(z))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(z)))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(b0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "b0"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(y))))" "nat_sttfa.minus(b0)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(b0))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(nat_sttfa.sttfa_S(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "b0"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(b0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(b0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.le(sttfa___)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(sttfa___)))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "b0"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(y))(bool_sttfa.sttfa_true)))" "nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(y))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_true))(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(x_1))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "b0"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))(i))))(nat_sttfa.times((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(nat_sttfa.times(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(nat_sttfa.minus(b0)(a)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(nat_sttfa.minus(b0)(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i:nat_sttfa.sttfa_nat):p0(i)))(nil)(op)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i)))))))))))" "nat_sttfa.minus(b0)(a)"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a)))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f0(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "p"
%|- (propax))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(b0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(b0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))"
%|- (sttfa-impl-e "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" "nat_sttfa.le(a)(b0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(b0)) => nat_sttfa.le(a)(b0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" "b0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(a))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(a)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "a"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(a)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" "a"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "b0"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m"))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(b0))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b0)))" "nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(b0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(b0)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(b0)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "b0"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(b0))(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(b0))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(b0))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(b0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](b0)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "b0"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(b0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(y))))" "b0"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y)))))" "nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(x))(f0(y))))))" "f"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(y2)))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))"
%|- (sttfa-conv "(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))(nat_sttfa.times(f(b0))(y2)))))" () ()
%|- (sttfa-forall-e "(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(y1))(nat_sttfa.times(f(b0))(y2))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))"
%|- (sttfa-conv "(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(f(b0)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(y1))(nat_sttfa.times(f(b0))(y2))))))" () ()
%|- (sttfa-forall-e "(FORALL(x2:nat_sttfa.sttfa_nat):(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(x2) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(y1))(nat_sttfa.times(x2)(y2)))))))" "f(b0)"
%|- (sttfa-conv "(FORALL(x2:nat_sttfa.sttfa_nat):(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(x2) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(y1))(nat_sttfa.times(x2)(y2)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x1:nat_sttfa.sttfa_nat):(FORALL(x2:nat_sttfa.sttfa_nat):(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x1)(x2) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x1)(y1))(nat_sttfa.times(x2)(y2))))))))" "f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a))"
%|- (sttfa-conv "(FORALL(x1:nat_sttfa.sttfa_nat):(FORALL(x2:nat_sttfa.sttfa_nat):(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x1)(x2) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x1)(y1))(nat_sttfa.times(x2)(y2))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x1:nat_sttfa.sttfa_nat):(FORALL(x2:nat_sttfa.sttfa_nat):(FORALL(y1:nat_sttfa.sttfa_nat):(FORALL(y2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x1)(x2) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](y1)(y2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(x1)(y1))(f0(x2)(y2)))))))))" "nat_sttfa.times"
%|- (sttfa-lemma "logic_sttfa.eq_f2[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(f(nat_sttfa.plus(nat_sttfa.minus(b0)(a))(a)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(b0)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x0)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.sttfa_S(nat_sttfa.minus(b0)(a))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(f(b0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](b0)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(b0))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(b0))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(b0))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.sttfa_S(b0))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(a)(nat_sttfa.sttfa_S(b0))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))))))
%|- (sttfa-impl-e "((FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))) => (FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_S(x)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_S(x))(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(x) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))))" "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))))"
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i)))))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus_body(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))) => (nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))" "(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))))"
%|- (sttfa-impl-i "nat_sttfa.le(a)(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a))))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(nat_sttfa.minus(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_minus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.minus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body)(nat_sttfa.sttfa_O))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.minus_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](y(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.minus_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.minus_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_minus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.sttfa_O)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(y((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(sttfa__x_365) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa__x_365)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(sttfa__x_365) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa__x_365)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(sttfa__x_365) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa__x_365)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(sttfa__x_365) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa__x_365)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(a)(sttfa__x_365) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa__x_365)(a))((LAMBDA(i:nat_sttfa.sttfa_nat):p(nat_sttfa.plus(i)(a))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(nat_sttfa.plus(i)(a)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i:nat_sttfa.sttfa_nat):bool_sttfa.andb(nat_sttfa.leb(a)(i))(p(i))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f(i))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))))
%|- QED

ACop [A:TYPE+]: [A -> bool]

mk_ACop [A:TYPE+] : AXIOM (FORALL(nil:A):(FORALL(op:[A -> [A -> A]]):((FORALL(a:A):logic_sttfa.eq[A](op(nil)(a))(a)) => ((FORALL(a:A):logic_sttfa.eq[A](op(a)(nil))(a)) => ((FORALL(a:A):(FORALL(b:A):(FORALL(c:A):logic_sttfa.eq[A](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => ((FORALL(a:A):(FORALL(b:A):logic_sttfa.eq[A](op(a)(b))(op(b)(a)))) => bigops_sttfa.ACop[A](nil)))))))

timesAC  : LEMMA bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))

%|- timesAC : PROOF
%|- (sttfa-impl-e "(relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)"
%|- (sttfa-lemma "nat_sttfa.commutative_times")
%|- (sttfa-conv "((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ("relations_sttfa.commutative")
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))))"
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(z))(nat_sttfa.times(a)(nat_sttfa.times(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(nat_sttfa.times(a)(nat_sttfa.times(b)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" "nat_sttfa.times(a)(nat_sttfa.times(b)(c))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(b))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.times(nat_sttfa.times(a)(b))(c)"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_1")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "n"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "(FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.times_body(nat_sttfa.sttfa_O)(a)))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "a"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(a)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(nat_sttfa.sttfa_O))(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" "nat_sttfa.plus(a)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "a"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(a)(y(a)))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](y(a))(a))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))
%|- (sttfa-conv "((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(b))(op(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(b))(op(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(nil)(a))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(nil))(a)) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(op(b)(c)))(op(op(a)(b))(c))))) => ((FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](op(a)(b))(op(b)(a)))) => bigops_sttfa.ACop[nat_sttfa.sttfa_nat](nil)))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "bigops_sttfa.mk_ACop[nat_sttfa.sttfa_nat]"))))))))))
%|- QED

bigop_diff  : LEMMA (FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))))))

%|- bigop_diff : PROOF
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0)))))))))))" () ()
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-conv "(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(x) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))" "n"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(i)(x) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))) => (nat_sttfa.lt(i)(nat_sttfa.sttfa_S(x)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(x) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0)))))))))" "(FORALL(n0:nat_sttfa.sttfa_nat):((nat_sttfa.lt(i)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))) => (nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n0)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))))"
%|- (then@ (sttfa-forall-i "n0")
%|- (sttfa-impl-i "(nat_sttfa.lt(i)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n0)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n0))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0))"
%|- (sttfa-impl-e "(nat_sttfa.le(i)(n0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" "nat_sttfa.le(i)(n0)"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n0)) => nat_sttfa.le(i)(n0))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_S(n0))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(n0)) => nat_sttfa.le(i)(n0))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(n0)) => nat_sttfa.le(i)(n0))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(i)(n0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "n0"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "p"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))))" "i"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_true)))" "i"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_true))))" "i"
%|- (sttfa-lemma "nat_sttfa.eq_to_eqb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(i)))(bool_sttfa.sttfa_false)))" "nat_sttfa.eqb(i)(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(i)))(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i))"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" () ("bool_sttfa.andb" "bool_sttfa.notb" "bool_sttfa.andb" "bool_sttfa.notb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => P(bool_sttfa.sttfa_false)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(y)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)) => P(y))))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(y))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_false)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i))(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "p(i)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p(i)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(i)))(bool_sttfa.sttfa_false))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(i)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x0))(p(i)))(bool_sttfa.sttfa_false))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(i)))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i)))(p(i)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "i"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(i) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(i) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(i0)))))"
%|- (then@ (sttfa-forall-i "i0")
%|- (sttfa-impl-i "nat_sttfa.lt(i0)(i)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(i0)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(i0))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](f(i0))(f(i0))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "f(i0)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" ("bigops_sttfa.sameF_p") ()
%|- (sttfa-impl-e "((FORALL(k:nat_sttfa.sttfa_nat):(nat_sttfa.lt(k)(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(k)))(p(k))))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "(FORALL(k:nat_sttfa.sttfa_nat):(nat_sttfa.lt(k)(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(k)))(p(k)))))"
%|- (then@ (sttfa-forall-i "k")
%|- (sttfa-impl-i "nat_sttfa.lt(k)(i)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(k)))(p(k)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(k)))(p(k))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(k))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(k))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "i"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_n")))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(y))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))))" "k"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(y))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(sttfa___))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(k)(i) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))" "nat_sttfa.lt(k)(i)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k))(i) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k))(i) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(k))(i) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(k))(i) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(k))(i))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(k))(i)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(i)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(k)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(k))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" "k"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(k)))(p(k))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x))(p(k)))))" "nat_sttfa.eqb(i)(k)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x))(p(k))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(p(k)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(p(k))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(p(k))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "p(k)"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(y))(p(k)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(k)) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(k)) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))))" "p(k)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.sttfa_false)(y)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(k))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x))(p(k))))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x))(p(k))))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x0))(p(k))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k))(bool_sttfa.andb(bool_sttfa.notb(x))(p(k))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" ("bigops_sttfa.sameF_upto") ()
%|- (sttfa-conv "(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(f) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))" "f"
%|- (sttfa-conv "(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))))))" "p"
%|- (sttfa-conv "(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](i)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](i)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(g:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sameF_upto[bool_sttfa.sttfa_bool](k)(p1)(p2) => (bigops_sttfa.sameF_p[nat_sttfa.sttfa_nat](k)(p1)(f0)(g) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):g(i0)))))))))))))" "i"
%|- (sttfa-lemma "bigops_sttfa.same_bigop[nat_sttfa.sttfa_nat]")))))))))))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(y))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(x))(nat_sttfa.times(f(i))(y)))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(x))(nat_sttfa.times(f(i))(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(x))(f0(y))))))" "nat_sttfa.times(f(i))"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(i))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x_1))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))" "(nat_sttfa.lt(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n0)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "p(n0)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "p(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "p"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "n0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(bool_sttfa.sttfa_false)))" "p(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(p(n0))))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(p(n0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" "nat_sttfa.lt(i)(n0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0))))" "nat_sttfa.eqb(i)(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0))"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" () ("bool_sttfa.andb" "bool_sttfa.notb" "bool_sttfa.andb" "bool_sttfa.notb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(p(n0))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(p(n0))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(case_false)(bool_sttfa.sttfa_true))(p(n0)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(case_false)(bool_sttfa.sttfa_true))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "p(n0)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(p(n0)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x0))(p(n0)))(p(n0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p(n0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(sttfa___))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p(n0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "n0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(x))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "nat_sttfa.lt(i)(n0)"
%|- (propax)
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(x)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "p"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))))" "n0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00)))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(bool_sttfa.sttfa_true)))" "p(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(y)))" "bool_sttfa.sttfa_true"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(p(n0))))" "bool_sttfa.sttfa_true"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(y))(p(n0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" "nat_sttfa.lt(i)(n0)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n0) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" "n0"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "i"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(i)(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0))))" "nat_sttfa.eqb(i)(n0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0))"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" () ("bool_sttfa.andb" "bool_sttfa.notb" "bool_sttfa.andb" "bool_sttfa.notb")
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(bool_sttfa.sttfa_true)))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => P(y))))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(p(n0))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)) => P(y))))(p(n0))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(p(n0))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(case_false)(bool_sttfa.sttfa_true))(p(n0)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(case_false)(bool_sttfa.sttfa_true))(p(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "p(n0)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)(y))(p(n0)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p(n0)))(p(n0)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x0))(p(n0)))(p(n0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p(n0)))(p(n0)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(p(n0)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p(n0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(sttfa___))(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p(n0)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p(n0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(sttfa___))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" "f"
%|- (sttfa-conv "(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(nat_sttfa.times(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(n0)))(p(n0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool]((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(sttfa___)))(p(sttfa___)))"
%|- (sttfa-conv "(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k:nat_sttfa.sttfa_nat):(FORALL(p0:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p0(k))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k))((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0))))(op(f0(k))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k)((LAMBDA(i0:nat_sttfa.sttfa_nat):p0(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f0(i0)))))))))))" "n0"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(c)))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(c)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(c)))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(f(i))(b))(c))))" "f(n0)"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(f(i))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))))" "f(i)"
%|- (sttfa-lemma "bigops_sttfa.assoc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x)))" "nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(f(n0)))(nat_sttfa.times(f(n0))(f(i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(f(n0)))(nat_sttfa.times(f(n0))(f(i)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(f(n0)))(nat_sttfa.times(f(n0))(f(i)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(y))(nat_sttfa.times(y)(f(i))))" "f(n0)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(y))(nat_sttfa.times(y)(f(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "f(i)"
%|- (sttfa-conv "(LAMBDA(f0:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f0(x)(y))(f0(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(i))(f(n0)))(nat_sttfa.times(f(n0))(f(i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(f(i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "nat_sttfa.times(f(i))(f(n0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(f(i))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(c)))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(c)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(c)))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(c)))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(f(n0))(b))(c))))" "f(i)"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(f(n0))(b))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(b)(c)))(nat_sttfa.times(nat_sttfa.times(a)(b))(c)))))" "f(n0)"
%|- (sttfa-lemma "bigops_sttfa.assoc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(y)))" "nat_sttfa.times(nat_sttfa.times(f(n0))(f(i)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "nat_sttfa.lt(i)(n0)"
%|- (propax)
%|- (propax)))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" () ("bool_sttfa.andb" "bool_sttfa.notb")
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x0))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(x))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x_1))(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(f(n0))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(nat_sttfa.times(f(n0))(f(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(f(i))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(f(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(f(i))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(f(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(f(i))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(n0))(f(i))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x))(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(nat_sttfa.times(f(i))(f(n0)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p(i0))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(nat_sttfa.eqb(i)(i0)))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x)))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x)))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))(nat_sttfa.times(f(i))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(i0)))(p(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x00)))(p(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f(x00))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f(n0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n0))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(i)(n0) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n0))((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(i)(n0) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(n0) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(n0)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(i)(n0) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(i)(n0))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(i)(n0)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(i)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((nat_sttfa.lt(i)(x) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))) => (nat_sttfa.lt(i)(nat_sttfa.sttfa_S(x)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(x) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))))" "(nat_sttfa.lt(i)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(i)(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "i"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(i)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(sttfa__x_365) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(sttfa__x_365) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(sttfa__x_365) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(sttfa__x_365) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):p(x0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x0)))(p(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f(x0))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(sttfa__x_365) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))))
%|- QED

sub_hk  : [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]]]]]]]] = (LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n1:nat_sttfa.sttfa_nat):(LAMBDA(n2:nat_sttfa.sttfa_nat):(LAMBDA(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))))))))))))

iso  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]]]]]] = (LAMBDA(n1:nat_sttfa.sttfa_nat):(LAMBDA(n2:nat_sttfa.sttfa_nat):(LAMBDA(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))))))))))

sub_hkO  : LEMMA (FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))))))))))

%|- sub_hkO : PROOF
%|- (sttfa-conv "(FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))))))))))))" () ("bigops_sttfa.sub_hk")
%|- (then@ (sttfa-forall-i "h")
%|- (then@ (sttfa-forall-i "k")
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "f1")
%|- (then@ (sttfa-forall-i "f2")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n1)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))))" "n1"
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "i"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))))" "n1"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))" "nat_sttfa.lt(i)(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(n1)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(i))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))"
%|- (sttfa-lemma "connectives_sttfa.falsity"))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => (LAMBDA(x0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.sttfa_O) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))))))))))))))
%|- QED

sub0_to_false  : LEMMA (FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(h)(k)(n2)(n1)(p2)(p1)(f2)(f1) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n2) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))))))))))))

%|- sub0_to_false : PROOF
%|- (then@ (sttfa-forall-i "h")
%|- (then@ (sttfa-forall-i "k")
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "f1")
%|- (then@ (sttfa-forall-i "f2")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O)" "(bigops_sttfa.sub_hk(h)(k)(n2)(n1)(p2)(p1)(f2)(f1) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n2) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h)(k)(n2)(n1)(p2)(p1)(f2)(f1)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n2) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n2)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "p2(i)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "p2(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" "nat_sttfa.lt(i)(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))" "i"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))(f1)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))))(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))(p2)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))))))(n1)(p2)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))))(n2)(n1)(p2)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h(i0)))(i0))))))))))))(k)(n2)(n1)(p2)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h0(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h0(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h0(i0)))(i0)))))))))))))(h)(k)(n2)(n1)(p2)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(h)(k)(n2)(n1)(p2)(p1)(f2)(f1)" ("bigops_sttfa.sub_hk") ()
%|- (propax))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" "(nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))"
%|- (sttfa-impl-i "nat_sttfa.lt(h(i))(n1)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "h(i)"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))))" "n1"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))" "nat_sttfa.lt(h(i))(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(n1)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(h(i)))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(h(i))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(i))(n1) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(i))(n1) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(h(i))(n1)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)) => return)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i)))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i))(n1))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(h(i)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))))))))
%|- QED

sub_lt  : LEMMA (FORALL(e:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m)(p)(p)(e)(e))))))

%|- sub_lt : PROOF
%|- (sttfa-conv "(FORALL(e:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i))))))))))" () ("bigops_sttfa.sub_hk")
%|- (then@ (sttfa-forall-i "e")
%|- (then@ (sttfa-forall-i "f")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "f(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(i)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" "nat_sttfa.lt(i)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(i)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p) => nat_sttfa.lt(i)(p))))" "m"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (nat_sttfa.le(n)(p) => nat_sttfa.lt(i)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(i)(p)))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(m0) => (nat_sttfa.le(m0)(p) => nat_sttfa.lt(i)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "i"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(i)(m) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(i)(m) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(i)(m) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(i)(m)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(i)(m))(logic_sttfa.eq[bool_sttfa.sttfa_bool](f(i))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))))))))
%|- QED

transitive_sub  : LEMMA (FORALL(h1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(h1(x))))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n1)(n3)(p1)(p3)(f1)(f3))))))))))))))))

%|- transitive_sub : PROOF
%|- (sttfa-conv "(FORALL(h1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))))))))))))))))))" () ("bigops_sttfa.sub_hk")
%|- (then@ (sttfa-forall-i "h1")
%|- (then@ (sttfa-forall-i "k1")
%|- (then@ (sttfa-forall-i "h2")
%|- (then@ (sttfa-forall-i "k2")
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "n3")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "p3")
%|- (then@ (sttfa-forall-i "f1")
%|- (then@ (sttfa-forall-i "f2")
%|- (then@ (sttfa-forall-i "f3")
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2)" "(bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3)" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-impl-i "nat_sttfa.lt(i)(n1)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i))))" "nat_sttfa.lt(i)(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0)))))" "i"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0))))))(f2)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0)))))))(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0))))))))(p2)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0)))))))))(p1)(p2)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0))))))))))(n2)(p1)(p2)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i0)))(i0)))))))))))(n1)(n2)(p1)(p2)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h1(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h1(i0)))(i0))))))))))))(k1)(n1)(n2)(p1)(p2)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))))))(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2)" ("bigops_sttfa.sub_hk") ()
%|- (propax))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))" "(nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(h1(i))(n2)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)))))" "nat_sttfa.lt(h1(i))(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0)))))" "h1(i)"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0))))))(f3)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0)))))))(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0))))))))(p3)(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0)))))))))(p2)(p3)(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0))))))))))(n3)(p2)(p3)(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(i0)))(i0)))))))))))(n2)(n3)(p2)(p3)(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h2(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h2(i0)))(i0))))))))))))(k2)(n2)(n3)(p2)(p3)(f2)(f3)" () ()
%|- (sttfa-conv "(LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))))))(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3)" ("bigops_sttfa.sub_hk") ()
%|- (propax))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))" "(nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(h2(h1(i)))(n3)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h1(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(y))(i)))" "k2(h2(h1(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h1(i)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(y))(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i)))" "k1(h1(i))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i)(i)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(sttfa___))(i))(h1(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h1(i)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(sttfa___))(i))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(h1(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h1(i)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(sttfa___))(i))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(h1(i)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h1(i)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "h1(i)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p3(h2(h1(i)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(h2(h1(i)))(n3)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(h2(h1(i)))(n3) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(h2(h1(i)))(n3) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(h2(h1(i)))(n3)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(h2(h1(i)))(n3) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h2(h1(i)))(n3) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h2(h1(i)))(n3) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(h2(h1(i)))(n3)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))) => return)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i)) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k2(h2(h1(i))))(h1(i))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(h1(i))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h1(i))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h1(i))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(h1(i))(n2)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)) => return)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h2(h1(i)))(n3))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p3(h2(h1(i))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(k2(h2(h1(i)))))(i))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k1(h1(i)))(i)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h1(i))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(h1(i)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))))))))))))))))))
%|- QED

let_clause_10471  : LEMMA (FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))))

%|- let_clause_10471 : PROOF
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "f1")
%|- (then@ (sttfa-forall-i "f2")
%|- (sttfa-impl-i "bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2)" "(FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))"
%|- (then@ (sttfa-forall-i "h")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))" "(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))"
%|- (then@ (sttfa-forall-i "k")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))" "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))" "(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "(FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))"
%|- (then@ (sttfa-forall-i "p20")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)" "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2)" "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)" "(FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))"
%|- (then@ (sttfa-forall-i "x2571")
%|- (then@ (sttfa-forall-i "x2572")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(x2571)(x2572))))" "x2572"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(x2571)(x2572))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(x2571)(x2572)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(y)(div_mod_sttfa.mod(x2571)(x2572)))))" "nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(div_mod_sttfa.mod(x2571)(x2572))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(y)(div_mod_sttfa.mod(x2571)(x2572))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(div_mod_sttfa.mod(x2571)(x2572)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(div_mod_sttfa.mod(x2571)(x2572)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(x2571)(m0))(m0))(div_mod_sttfa.mod(x2571)(m0))))" "x2572"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(x2571)(m0))(m0))(div_mod_sttfa.mod(x2571)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "x2571"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(sttfa___1)(div_mod_sttfa.mod(x2571)(x2572))))(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(sttfa___1)(div_mod_sttfa.mod(x2571)(x2572))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(sttfa___1)(div_mod_sttfa.mod(x2571)(x2572))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(div_mod_sttfa.div(x2571)(x2572))(x2572)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))))))))))))))))))))
%|- QED

bigop_iso  : LEMMA (FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))))))

%|- bigop_iso : PROOF
%|- (then@ (sttfa-forall-i "n1")
%|- (then@ (sttfa-forall-i "n2")
%|- (then@ (sttfa-forall-i "p1")
%|- (then@ (sttfa-forall-i "p2")
%|- (then@ (sttfa-forall-i "f1")
%|- (then@ (sttfa-forall-i "f2")
%|- (sttfa-impl-i "bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-impl-e "(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))" "bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2)"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))" () ("bigops_sttfa.iso")
%|- (sttfa-impl-e "((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(x(i)))))))(bigops_sttfa.sub_hk(x)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(x)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" "(FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))"
%|- (then@ (sttfa-forall-i "h")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))" "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(x)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(x)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" "(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))"
%|- (then@ (sttfa-forall-i "k")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))"
%|- (propax)
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))" "(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))"
%|- (propax)
%|- (sttfa-impl-e "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))"
%|- (sttfa-impl-i "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))" "(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))"
%|- (sttfa-impl-e "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (then@ (sttfa-forall-i "i")
%|- (sttfa-conv "(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "p2"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(x)(n1) => (bigops_sttfa.sub_hk(h)(k)(x)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(x)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))" "i"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(x)(n1) => (bigops_sttfa.sub_hk(h)(k)(x)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(x)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(x))(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(x))(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(x)(n1) => (bigops_sttfa.sub_hk(h)(k)(x)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(x)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))))"
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "(FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (then@ (sttfa-forall-i "p20")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1)" "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" "(bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(b:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](b)(bool_sttfa.sttfa_false)))" "p1(n)"
%|- (sttfa-lemma "bool_sttfa.true_or_false")))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "p1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "f1"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" "p1"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))))" "n"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))"
%|- (then@ (sttfa-forall-i "i0")
%|- (sttfa-impl-i "nat_sttfa.lt(i0)(n2)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" "nat_sttfa.lt(i0)(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1)))))" "i0"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1))))))(f1)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1)))))))(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1))))))))(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1)))))))))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1))))))))))(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i1)))(i1)))))))))))(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(k(i1)))(i1))))))))))))(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h0(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h0(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h0(i1)))(i1)))))))))))))(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" ("bigops_sttfa.sub_hk") ()
%|- (propax))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))" "(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0)))" "h(k(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i0"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i0"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p1(k(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(k(i0))(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => nat_sttfa.lt(k(i0))(n))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(k(i0))(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)))" "nat_sttfa.le(k(i0))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(i0))(n))" "nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k(i0)))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(i0))(n))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k(i0)))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(i0))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(k(i0)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(k(i0))(m)))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(k(i0)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(k(i0))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "k(i0)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(k(i0))(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(k(i0))(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(k(i0))(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "k(i0)"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => nat_sttfa.lt(k(i0))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => nat_sttfa.lt(k(i0))(n)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => nat_sttfa.lt(k(i0))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(k(i0))(n))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.not_eq_true_false")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(y))(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(y))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(sttfa___))(bool_sttfa.sttfa_true))(k(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(sttfa___))(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(sttfa___))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "k(i0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_false))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p1(n)) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "p1(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(y) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(k(i0))(n))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(k(i0))(n) => nat_sttfa.lt(k(i0))(n)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => nat_sttfa.lt(k(i0))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => nat_sttfa.lt(k(i0))(n))))" "(nat_sttfa.lt(k(i0))(n) => nat_sttfa.lt(k(i0))(n))"
%|- (sttfa-impl-i "nat_sttfa.lt(k(i0))(n)" "nat_sttfa.lt(k(i0))(n)"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(k(i0))(n) => nat_sttfa.lt(k(i0))(n)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => nat_sttfa.lt(k(i0))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => nat_sttfa.lt(k(i0))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(k(i0))(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => return))))" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(k(i0))(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(i0))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(i0))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(i0))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(i0))(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(k(i0))(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(k(i0))(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(k(i0))(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(k(i0))(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)) => return)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk(k)(h)(n2)(n)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" ("bigops_sttfa.sub_hk") ()
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f2)"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f2))" "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)"
%|- (propax)
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f2)))" "bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(n)(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m)(p1)(p1)(f1)(f1)))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m)(p1)(p1)(f1)(f1)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n0)(m)(p1)(p1)(f1)(f1))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n0)(m)(p1)(p1)(f1)(f1))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n0)(m)(p)(p)(f1)(f1)))))" "p1"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n0)(m)(p)(p)(f1)(f1)))))" () ()
%|- (sttfa-forall-e "(FORALL(e:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m)(p)(p)(e)(e))))))" "f1"
%|- (sttfa-lemma "bigops_sttfa.sub_lt"))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f2)))" () ()
%|- (sttfa-forall-e "(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f3))))" "f2"
%|- (sttfa-conv "(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f3))))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f3)))))" "f1"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f1)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f1)(f3)))))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f10)(f3))))))" "f1"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p20)(f10)(f3))))))" () ()
%|- (sttfa-forall-e "(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p3)(f10)(f3)))))))" "p20"
%|- (sttfa-conv "(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p1)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p3)(f10)(f3)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p3)(f10)(f3))))))))" "p1"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p1)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p1)(p3)(f10)(f3))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p10)(p3)(f10)(f3)))))))))" "p1"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n2)(p10)(p3)(f10)(f3)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n3)(p10)(p3)(f10)(f3))))))))))" "n2"
%|- (sttfa-conv "(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(nat_sttfa.sttfa_S(n))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n3)(p10)(p3)(f10)(f3))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n3)(p10)(p3)(f10)(f3)))))))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n)(n3)(p10)(p3)(f10)(f3)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))" "k"
%|- (sttfa-conv "(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))))" "h"
%|- (sttfa-conv "(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(x0:nat_sttfa.sttfa_nat):x0)(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))(k1)(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):x)"
%|- (sttfa-conv "(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))(k1)(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2((LAMBDA(x0:nat_sttfa.sttfa_nat):x0)(x))))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(h1(x))))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n1)(n3)(p1)(p3)(f1)(f3))))))))))))))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):x)"
%|- (sttfa-lemma "bigops_sttfa.transitive_sub")))))))))))))))))))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" ("bigops_sttfa.sub_hk") ("bigops_sttfa.sub_hk")
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "nat_sttfa.le(n)(n1)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1) => nat_sttfa.le(n)(n1))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => nat_sttfa.le(n)(n1))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => nat_sttfa.le(n)(n1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.le(n)(y)))" "n1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.le(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "p20"
%|- (propax))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "f1"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(nat_sttfa.times(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))))" "p1"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(op(f(k0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))))" "n"
%|- (sttfa-lemma "bigops_sttfa.bigop_Strue[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))" "n"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))(f2)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))))(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))))))))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))))))))(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h(i0)))(i0))))))))))))(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h0(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h0(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h0(i0)))(i0)))))))))))))(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" ("bigops_sttfa.sub_hk") ()
%|- (propax)))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "(nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(h(n))(n2)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p20(h(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))))" "nat_sttfa.lt(h(n))(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(h(n))(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))))" "n2"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(h(n))(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(i0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i0)(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))))))" "h(n)"
%|- (sttfa-conv "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(i0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i0)(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i0)(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))))" "f2"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n0) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i0))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n0)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i0)(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x:nat_sttfa.sttfa_nat):p(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x))))(nat_sttfa.times(f(i))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(i)(x)))(p(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f(x)))))))))))" "p20"
%|- (sttfa-lemma "bigops_sttfa.bigop_diff")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):p20(x)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n)))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))" "n"
%|- (propax))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(n))(f2(h(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(f2(h(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00)))))))" "f1(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(f2(h(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "((FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.lt(j)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "(FORALL(j:nat_sttfa.sttfa_nat):(nat_sttfa.lt(j)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))))"
%|- (then@ (sttfa-forall-i "j")
%|- (sttfa-impl-i "nat_sttfa.lt(j)(n2)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](b2)(bool_sttfa.sttfa_true)))" "p20(j)"
%|- (sttfa-conv "(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](b2)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(b1:bool_sttfa.sttfa_bool):(FORALL(b2:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(b1)(b2))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](b2)(bool_sttfa.sttfa_true))))" "bool_sttfa.notb(nat_sttfa.eqb(h(n))(j))"
%|- (sttfa-lemma "bool_sttfa.andb_true_r"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(j)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" "nat_sttfa.lt(j)(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(j)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))" "j"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))))(f1)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))))(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))))))(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))))))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0))))))))))(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(i0)))(i0)))))))))))(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(k(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(k(i0)))(i0))))))))))))(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "(LAMBDA(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h0(i0))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h0(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h0(i0)))(i0)))))))))))))(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(n))(p20)(p1)(f2)(f1)" ("bigops_sttfa.sub_hk") ()
%|- (propax))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))))" "(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j)))" "h(k(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "j"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "j"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p1(k(j))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(k(j))(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => nat_sttfa.lt(k(j))(n))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(k(j))(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)))" "nat_sttfa.le(k(j))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(j))(n))" "nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k(j)))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(j))(n))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(k(j)))(nat_sttfa.sttfa_S(n)) => nat_sttfa.le(k(j))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(k(j)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(k(j))(m)))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(k(j)))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(k(j))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "k(j)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(k(j))(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(k(j))(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(k(j))(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "k(j)"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => nat_sttfa.lt(k(j))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => nat_sttfa.lt(k(j))(n)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => nat_sttfa.lt(k(j))(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(k(j))(n))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(y))(j)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(y))(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](h(sttfa___))(j))(k(j)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](h(sttfa___))(j))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(j)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](h(sttfa___))(j))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(j)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "k(j)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j)))" "h(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](j)(j)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "j"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(j))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(j) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(j) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "j"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(p20(j)) => (LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p20(j)) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p20(j)) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(p20(j))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))))" "p20(j)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))"
%|- (sttfa-lemma "bool_sttfa.not_eq_true_false")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y)))" "bool_sttfa.sttfa_false"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(y))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "p20(j)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.sttfa_false) => (LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(j))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_true))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(j)))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False)))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(sttfa___))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(sttfa___))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(sttfa___))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))(nat_sttfa.eqb(h(n))(j))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(h(n))(j)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(sttfa___))(p20(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_False))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(j)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(h(n))(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(h(n))(m))))))" "j"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(h(n))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.eqb(n)(m)))))))" "h(n)"
%|- (sttfa-lemma "nat_sttfa.eqb_elim"))))))))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(k(j))(n))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(k(j))(n) => nat_sttfa.lt(k(j))(n)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => nat_sttfa.lt(k(j))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => nat_sttfa.lt(k(j))(n))))" "(nat_sttfa.lt(k(j))(n) => nat_sttfa.lt(k(j))(n))"
%|- (sttfa-impl-i "nat_sttfa.lt(k(j))(n)" "nat_sttfa.lt(k(j))(n)"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(k(j))(n) => nat_sttfa.lt(k(j))(n)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => nat_sttfa.lt(k(j))(n)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => nat_sttfa.lt(k(j))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(k(j))(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => return))))" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(k(j))(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(j))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(j))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(j))(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(k(j))(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(k(j))(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(k(j))(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(k(j))(n) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(k(j))(n)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)) => return)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(n))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(k(j)))(j)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(k(j))(nat_sttfa.sttfa_S(n)))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(k(j)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk(k)(h)(n2)(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" ("bigops_sttfa.sub_hk") ()
%|- (sttfa-impl-e "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))"
%|- (then@ (sttfa-forall-i "i0")
%|- (sttfa-impl-i "nat_sttfa.lt(i0)(n)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" "nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i0)(n) => nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(n)))" "nat_sttfa.lt(i0)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i0))(n) => nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(n)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(i0))(n) => nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i0))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(i0))(m) => nat_sttfa.le(nat_sttfa.sttfa_S(i0))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.sttfa_S(i0)"
%|- (sttfa-lemma "nat_sttfa.le_S")))))))
%|- (sttfa-conv "(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1)))))" "i0"
%|- (sttfa-conv "(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1))))))(f2)" () ()
%|- (sttfa-conv "(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1)))))))(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1))))))))(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1)))))))))(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(nat_sttfa.sttfa_S(n)) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1))))))))))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i1)))(i1)))))))))))(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h(i1)))(i1))))))))))))(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "(LAMBDA(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(n10:nat_sttfa.sttfa_nat):(LAMBDA(n20:nat_sttfa.sttfa_nat):(LAMBDA(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(i1:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i1)(n10) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i1))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h0(i1))(n20))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(h0(i1)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k0(h0(i1)))(i1)))))))))))))(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" () ()
%|- (sttfa-conv "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(n))(n2)(p1)(p20)(f1)(f2)" ("bigops_sttfa.sub_hk") ()
%|- (propax)))))))))))))))
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true))"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))" "(nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(h(i0))(n2)" "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))"
%|- (sttfa-impl-i "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0)))" "k(h(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(i0)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "i0"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(i0))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(i0) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "i0"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(h(i0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(h(i0)))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(h(i0)))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(i0)(n) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)))" "nat_sttfa.lt(i0)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(i0)(n) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "i0"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(i0)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(i0))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(i0))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(y))(i0)))" "h(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](k(y))(i0))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k(sttfa___))(i0))(h(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h(i0)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k(sttfa___))(i0))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(h(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h(i0)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](k(sttfa___))(i0))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(h(i0)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(h(i0)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "h(i0)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(i0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "i0"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(k(h(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(h(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(k(h(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "k(h(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "i0"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](i0)(n)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(h(i0))) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(h(i0)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(m))(bool_sttfa.sttfa_false)))" "h(i0)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](h(n))(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(n)(m))(bool_sttfa.sttfa_false))))" "h(n)"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_eqb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.eqb(h(n))(h(i0)))(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p20(h(i0))))(bool_sttfa.sttfa_true)))" "nat_sttfa.eqb(h(n))(h(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p20(h(i0))))(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true)))" "p20(h(i0))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.sttfa_true)" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(x))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.refl[bool_sttfa.sttfa_bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](sttfa___)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => (FORALL(y:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(x) => P(y))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[bool_sttfa.sttfa_bool]")))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))(p20(h(i0))) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p20(h(i0))) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](y)(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(p20(h(i0))) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(p20(h(i0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(case_false)(bool_sttfa.sttfa_true)))" "bool_sttfa.sttfa_false"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_true))))" "p20(h(i0))"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_true) => (LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))))" "(LAMBDA(y:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_false)(y))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => P(y))))(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:bool_sttfa.sttfa_bool):(LAMBDA(y:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(x) => P(y)))))(bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_true)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(bool_sttfa.sttfa_true)(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" "bool_sttfa.sttfa_true"
%|- (sttfa-conv "(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](bool_sttfa.sttfa_false)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:bool_sttfa.sttfa_bool):(FORALL(case_false:bool_sttfa.sttfa_bool):leibniz_sttfa.leibniz[bool_sttfa.sttfa_bool](case_false)(bool_sttfa.match_bool_type[bool_sttfa.sttfa_bool](case_true)(case_false)(bool_sttfa.sttfa_false))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[bool_sttfa.sttfa_bool]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(bool_sttfa.sttfa_false))(p20(h(i0))))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p20(h(i0))))(bool_sttfa.sttfa_true))))" ("bool_sttfa.andb" "bool_sttfa.notb") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p20(h(i0))))(bool_sttfa.sttfa_true))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x0))(p20(h(i0))))(bool_sttfa.sttfa_true))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(x))(p20(h(i0))))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))))" "nat_sttfa.lt(h(i0))(n2)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true) => connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(h(i0))(n2) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(B))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(h(i0))(n2) => (B => connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "nat_sttfa.lt(h(i0))(n2)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)) => (B => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(h(i0))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(i0))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(i0))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(h(i0))(n2)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)) => connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)) => return)))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(h(i0))))(p20(h(i0))))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(i0)))(i0)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(i0))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(i0)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" ("bigops_sttfa.sub_hk") ()
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(i0)))(p20(i0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "nat_sttfa.le(n)(n1)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1) => nat_sttfa.le(n)(n1))" "nat_sttfa.le(nat_sttfa.sttfa_S(n))(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => nat_sttfa.le(n)(n1))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "(nat_sttfa.lt(n)(n1) => nat_sttfa.le(n)(n1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.le(n)(y)))" "n1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(y) => nat_sttfa.le(n)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_le")))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___))))(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___)))(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(n)(n1) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(sttfa___)))(p20(sttfa___)))"
%|- (propax))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(y))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x)))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(x))(nat_sttfa.times(f2(h(n)))(y)))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f2(h(n)))(x))(nat_sttfa.times(f2(h(n)))(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y))))))" "nat_sttfa.times(f2(h(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_f[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))))(f2(h(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(f2(h(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x00:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x00)))(p20(x00))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x00:nat_sttfa.sttfa_nat):f2(x00))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f2(h(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(f2(h(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(f2(h(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(f2(h(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "f2(h(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(x))(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x0:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x0)))(p20(x0))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x0:nat_sttfa.sttfa_nat):f2(x0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f2(h(n)))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(x:nat_sttfa.sttfa_nat):bool_sttfa.andb(bool_sttfa.notb(nat_sttfa.eqb(h(n))(x)))(p20(x))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(x:nat_sttfa.sttfa_nat):f2(x))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => return)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(h(n))(n2) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(n))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(B) => return))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(h(n))(n2) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(h(n))(n2)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](k(h(n)))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And(nat_sttfa.lt(h(n))(n2))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(h(n)))(bool_sttfa.sttfa_true))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x0)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.times(f1(n))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(B) => return)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_false)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))
%|- (sttfa-impl-e "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(x)(n1) => (bigops_sttfa.sub_hk(h)(k)(x)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(x)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_S(x))(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_S(x))(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_S(x))(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(x)(n1) => (bigops_sttfa.sub_hk(h)(k)(x)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(x)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))))" "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(x)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(x)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))" "n2"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(x)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(x)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x))(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(x)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(x)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "(FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (then@ (sttfa-forall-i "p20")
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)" "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2)" "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false))" "nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))" "logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(m)(x2572)))(div_mod_sttfa.mod(m)(x2572))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(m)(x2572)))(div_mod_sttfa.mod(m)(x2572))))" () ()
%|- (sttfa-forall-e "(FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))" "m"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))" "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)"
%|- (propax)
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))" "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))" "p20"
%|- (sttfa-impl-e "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))" "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))" "i"
%|- (sttfa-impl-e "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))" "k"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))" "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))" "h"
%|- (sttfa-impl-e "(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))" "bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2)"
%|- (propax)
%|- (sttfa-conv "(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))" "f2"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))" "f1"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))" "p2"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))" "p1"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n20)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))))" "n2"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n20)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.let_clause_10471"))))))))))))))))))))))))))))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(y))(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(y))(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.times_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(y))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(m)(x2572)))(div_mod_sttfa.mod(m)(x2572))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(m)(x2572)))(div_mod_sttfa.mod(m)(x2572))))" () ()
%|- (sttfa-forall-e "(FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))" "m"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))" "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)"
%|- (propax)
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))" "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))" "p20"
%|- (sttfa-impl-e "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))" "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))" "i"
%|- (sttfa-impl-e "((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))" "connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))" "k"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))" "connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))))(bigops_sttfa.sub_hk(h)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))" "h"
%|- (sttfa-impl-e "(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))" "bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2)"
%|- (propax)
%|- (sttfa-conv "(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f2(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f2(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f2) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))" "f2"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f1)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f1(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f1)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))" "f1"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p2)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p2)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))" "p2"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p1)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p1)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p1)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p1)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p1(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p1)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p1)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))" "p1"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n2)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n2)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n20)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))))" "n2"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n20)(p10)(p21)(f10)(f20) => (FORALL(h0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)))) => (FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)))(bigops_sttfa.sub_hk(k0)(h0)(n20)(n1)(p21)(p10)(f20)(f10)) => (connectives_sttfa.sttfa_And((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))))(bigops_sttfa.sub_hk(h0)(k0)(n1)(n20)(p10)(p21)(f10)(f20)) => ((FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p10(i0))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f10(i0))(f20(h0(i0)))))) => (FORALL(i0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(m0)(p10)(f)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(m0)(nat_sttfa.sttfa_O)(f)(p10)(f20)(f10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i00:nat_sttfa.sttfa_nat):p10(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f10(i00))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m0)((LAMBDA(i00:nat_sttfa.sttfa_nat):f(i00)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i00:nat_sttfa.sttfa_nat):f20(i00)))))))) => (FORALL(p200:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h0)(k0)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))(p10)(p200)(f10)(f20) => (bigops_sttfa.sub_hk(k0)(h0)(nat_sttfa.sttfa_S(m0))(nat_sttfa.sttfa_O)(p200)(p10)(f20)(f10) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572))))))))))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.iso(n1)(n2)(p1)(p2)(f1)(f2) => (FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => (FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => ((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (FORALL(i:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(p20:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m))(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(x2571:nat_sttfa.sttfa_nat):(FORALL(x2572:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x2571)(nat_sttfa.plus(nat_sttfa.times(x2572)(div_mod_sttfa.div(x2571)(x2572)))(div_mod_sttfa.mod(x2571)(x2572)))))))))))))))))))))))))" "n1"
%|- (sttfa-lemma "bigops_sttfa.let_clause_10471"))))))))))))))))))))))))))))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(sttfa___1)))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(sttfa___1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(sttfa___1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___1))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___1))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___1))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(y))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(y))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___1))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___1))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___1))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___1)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___1)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___1)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(sttfa___1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(sttfa___1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(sttfa___1)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(x))(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(x))(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.plus(a)(x))(nat_sttfa.sttfa_S(n))))))" "div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.lt_plus_Sn_r")))))))
%|- (sttfa-conv "(nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))) => nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => B)))" "nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (logic_sttfa.eq[bool](nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.plus(div_mod_sttfa.mod(m)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(div_mod_sttfa.div(m)(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.lt(m)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false)))" "m"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false))))" "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false)))))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f1) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false))))))" "f2"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f1) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false))))))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false)))))))" "f1"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(i0))(bool_sttfa.sttfa_false)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p1)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))" "p20"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p1)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false)))))))))" "p1"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(nat_sttfa.sttfa_S(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(n20)(nat_sttfa.sttfa_O)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(n20)(nat_sttfa.sttfa_O)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(n20)(n10)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false)))))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(h)(n20)(n10)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(k0)(n20)(n10)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))))))" "h"
%|- (sttfa-conv "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(k)(k0)(n20)(n10)(p21)(p10)(f20)(f10) => (FORALL(i0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i0)(n20) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p21(i0))(bool_sttfa.sttfa_false))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => (bigops_sttfa.sub_hk(h)(k)(n2)(n1)(p2)(p1)(f2)(f1) => (FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n2) => logic_sttfa.eq[bool_sttfa.sttfa_bool](p2(i))(bool_sttfa.sttfa_false)))))))))))))" "k"
%|- (sttfa-lemma "bigops_sttfa.sub0_to_false"))))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" "f2"
%|- (sttfa-conv "(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))" () ()
%|- (sttfa-forall-e "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" "nat_sttfa.times"
%|- (sttfa-conv "(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p20(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" "p20"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:nat_sttfa.sttfa_nat):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(nil:nat_sttfa.sttfa_nat):(FORALL(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[bool_sttfa.sttfa_bool](p(k0))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(k0))((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](k0)((LAMBDA(i0:nat_sttfa.sttfa_nat):p(i0)))(nil)(op)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0))))))))))" "m"
%|- (sttfa-lemma "bigops_sttfa.bigop_Sfalse[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(x)))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(m))((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" "bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)"
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1))" "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)"
%|- (propax)
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)))" "bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2))" "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(m0)(p20)(p20)(f2)(f2)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(m0)(p20)(p20)(f2)(f2)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m0)(p20)(p20)(f2)(f2))))" "m"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m0)(p20)(p20)(f2)(f2))))" () ()
%|- (sttfa-forall-e "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m0)(p)(p)(f2)(f2)))))" "p20"
%|- (sttfa-conv "(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m0)(p)(p)(f2)(f2)))))" () ()
%|- (sttfa-forall-e "(FORALL(e:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n)(m)(p)(p)(e)(e))))))" "f2"
%|- (sttfa-lemma "bigops_sttfa.sub_lt"))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1)))" () ()
%|- (sttfa-forall-e "(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3))))" "f1"
%|- (sttfa-conv "(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3))))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3)))))" "f2"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f2)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f3)))))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f10)(f3))))))" "f2"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p1)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p1)(f10)(f3))))))" () ()
%|- (sttfa-forall-e "(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p3)(f10)(f3)))))))" "p1"
%|- (sttfa-conv "(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p20)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p20)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p3)(f10)(f3)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p3)(f10)(f3))))))))" "p20"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p20)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p20)(p3)(f10)(f3))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p10)(p3)(f10)(f3)))))))))" "p20"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(nat_sttfa.sttfa_O)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(nat_sttfa.sttfa_O)(p10)(p3)(f10)(f3)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(n3)(p10)(p3)(f10)(f3))))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(nat_sttfa.sttfa_S(m))(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(m))(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(n3)(p10)(p3)(f10)(f3))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(n3)(p10)(p3)(f10)(f3)))))))))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(m)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(m)(n3)(p10)(p3)(f10)(f3)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))" "m"
%|- (sttfa-conv "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(h)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):h(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))" "h"
%|- (sttfa-conv "(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(k)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):k(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k2(x)))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))))" "k"
%|- (sttfa-conv "(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))((LAMBDA(x:nat_sttfa.sttfa_nat):x))(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(x0:nat_sttfa.sttfa_nat):x0)(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))(k1)(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(x)))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):x)"
%|- (sttfa-conv "(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):x))(k1)(n10)(n20)(p10)(p21)(f10)(f20) => (bigops_sttfa.sub_hk(h2)(k2)(n20)(n3)(p21)(p3)(f20)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2((LAMBDA(x0:nat_sttfa.sttfa_nat):x0)(x))))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n10)(n3)(p10)(p3)(f10)(f3)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(h2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(n3:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p3:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f3:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(bigops_sttfa.sub_hk(h1)(k1)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(h2)(k2)(n2)(n3)(p2)(p3)(f2)(f3) => bigops_sttfa.sub_hk((LAMBDA(x:nat_sttfa.sttfa_nat):h2(h1(x))))((LAMBDA(x:nat_sttfa.sttfa_nat):k1(k2(x))))(n1)(n3)(p1)(p3)(f1)(f3))))))))))))))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):x)"
%|- (sttfa-lemma "bigops_sttfa.transitive_sub")))))))))))))))))))))))))))))
%|- (sttfa-conv "(bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))" ("bigops_sttfa.sub_hk") ("bigops_sttfa.sub_hk")
%|- (sttfa-impl-e "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))" "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2))" () ()
%|- (sttfa-forall-e "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f20)))" "f2"
%|- (sttfa-conv "(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f20)))" () ()
%|- (sttfa-forall-e "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f10)(f20))))" "f1"
%|- (sttfa-conv "(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f10)(f20))))" () ()
%|- (sttfa-forall-e "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p21)(f10)(f20)))))" "p20"
%|- (sttfa-conv "(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p21)(f10)(f20)))))" () ()
%|- (sttfa-forall-e "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p10)(p21)(f10)(f20))))))" "p1"
%|- (sttfa-conv "(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p10)(p21)(f10)(f20))))))" () ()
%|- (sttfa-forall-e "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(n20)(p10)(p21)(f10)(f20)))))))" "m"
%|- (sttfa-conv "(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(n20)(p10)(p21)(f10)(f20)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(n10)(n20)(p10)(p21)(f10)(f20))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(n10)(n20)(p10)(p21)(f10)(f20))))))))" () ()
%|- (sttfa-forall-e "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k0)(n10)(n20)(p10)(p21)(f10)(f20)))))))))" "k"
%|- (sttfa-conv "(FORALL(k0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n10:nat_sttfa.sttfa_nat):(FORALL(n20:nat_sttfa.sttfa_nat):(FORALL(p10:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p21:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f10:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f20:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n10)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k0)(n10)(n20)(p10)(p21)(f10)(f20)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n1:nat_sttfa.sttfa_nat):(FORALL(n2:nat_sttfa.sttfa_nat):(FORALL(p1:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(p2:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(f1:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(f2:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n1)(nat_sttfa.sttfa_O) => bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))))))))))" "h"
%|- (sttfa-lemma "bigops_sttfa.sub_hkO"))))))))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n1"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(p20)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(p20)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(m)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(m)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0))))))))" "p20"
%|- (propax)))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(x))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](m)((LAMBDA(i0:nat_sttfa.sttfa_nat):p20(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))))))))
%|- (sttfa-impl-e "((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(x)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(x)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(x))(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_S(x))(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(x))((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(x)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(x)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](x)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))))" "(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))"
%|- (then@ (sttfa-forall-i "f")
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO)))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO)))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))) => (nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))" "(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))))"
%|- (sttfa-impl-i "nat_sttfa.le(nat_sttfa.sttfa_O)(n1)" "(bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2)" "(bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))))"
%|- (sttfa-impl-i "bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0)))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil))))) => P(y))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]]((LAMBDA(p:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(nil:nat_sttfa.sttfa_nat):(LAMBDA(op:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(f0:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):nil)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_body_O[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => (LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))))" "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(iO:nat_sttfa.sttfa_nat):p1(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f1(iO))))(y((LAMBDA(iO:nat_sttfa.sttfa_nat):f(iO)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(iO:nat_sttfa.sttfa_nat):f2(iO))))))))"
%|- (sttfa-conv "(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)) => P(y))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(LAMBDA(y:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]):(FORALL(P:[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]] -> bool]):(P(x) => P(y)))))(bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> [nat_sttfa.sttfa_nat -> [[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> [[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> nat_sttfa.sttfa_nat]]]]](bigops_sttfa.bigop_body[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "bigops_sttfa.sym_eq_bigop_O[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(sttfa__x_365)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(sttfa__x_365)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(sttfa__x_365)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(sttfa__x_365)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(sttfa__x_365)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(sttfa__x_365)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(sttfa__x_365)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(sttfa__x_365)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(nat_sttfa.sttfa_O)(n1) => (bigops_sttfa.sub_hk(h)(k)(nat_sttfa.sttfa_O)(sttfa__x_365)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(sttfa__x_365)(nat_sttfa.sttfa_O)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind")))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(sttfa__x_365)(n1) => (bigops_sttfa.sub_hk(h)(k)(sttfa__x_365)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa__x_365)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(sttfa__x_365)(n1) => (bigops_sttfa.sub_hk(h)(k)(sttfa__x_365)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa__x_365)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(sttfa__x_365)(n1) => (bigops_sttfa.sub_hk(h)(k)(sttfa__x_365)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa__x_365)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(sttfa__x_365)(n1) => (bigops_sttfa.sub_hk(h)(k)(sttfa__x_365)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa__x_365)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(f:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(nat_sttfa.le(sttfa__x_365)(n1) => (bigops_sttfa.sub_hk(h)(k)(sttfa__x_365)(n2)(p1)(f)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa__x_365)(f)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa__x_365)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):f(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))))
%|- (sttfa-conv "((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n1) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (bigops_sttfa.sub_hk(h)(k)(i)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(i)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](i)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))) => (bigops_sttfa.sub_hk(h)(k)(n)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))))" "n1"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(bigops_sttfa.sub_hk(h)(k)(sttfa___)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa___)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa___)((LAMBDA(i0:nat_sttfa.sttfa_nat):p1(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f1(i0))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i0:nat_sttfa.sttfa_nat):p2(i0)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i0:nat_sttfa.sttfa_nat):f2(i0)))))))(i))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(bigops_sttfa.sub_hk(h)(k)(sttfa___)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa___)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa___)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(n:nat_sttfa.sttfa_nat):((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.le(i)(n) => P(i))) => P(n))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(bigops_sttfa.sub_hk(h)(k)(sttfa___)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(sttfa___)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](sttfa___)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))"
%|- (sttfa-lemma "nat_sttfa.le_gen")))))))
%|- (sttfa-conv "(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => return)))" "(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))"
%|- (sttfa-conv "(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2) => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(B) => return))))" "bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):(((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))) => (B => return)) => (connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "(FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i))))))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1) => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(B) => return))))" "bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)) => (B => return)) => (connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2))"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))
%|- (sttfa-conv "((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(x)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(x)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(x)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(x)(h)(n2)(n1)(p2)(p1)(f2)(f1)) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))(x) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(P(x) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](P) => return))))" "(LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(x(i)))))))(bigops_sttfa.sub_hk(x)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(x)(n2)(n1)(p2)(p1)(f2)(f1)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i)))))) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(x(i)))))))(bigops_sttfa.sub_hk(x)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(x)(n2)(n1)(p2)(p1)(f2)(f1)))) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n1)((LAMBDA(i:nat_sttfa.sttfa_nat):p1(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f1(i))))(bigops_sttfa.bigop[nat_sttfa.sttfa_nat](n2)((LAMBDA(i:nat_sttfa.sttfa_nat):p2(i)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.times)((LAMBDA(i:nat_sttfa.sttfa_nat):f2(i))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))(x) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(FORALL(return:bool):((FORALL(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(P(x) => return)) => (connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](P) => return))))" "(LAMBDA(h:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_ex[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(k:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):connectives_sttfa.sttfa_And(connectives_sttfa.sttfa_And((FORALL(i:nat_sttfa.sttfa_nat):(nat_sttfa.lt(i)(n1) => (logic_sttfa.eq[bool_sttfa.sttfa_bool](p1(i))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](f1(i))(f2(h(i)))))))(bigops_sttfa.sub_hk(h)(k)(n1)(n2)(p1)(p2)(f1)(f2)))(bigops_sttfa.sub_hk(k)(h)(n2)(n1)(p2)(p1)(f2)(f1)))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))))))
%|- QED

END bigops_sttfa

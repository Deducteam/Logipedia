div_mod_sttfa : THEORY
BEGIN
IMPORTING bool_sttfa,connectives_sttfa,leibniz_sttfa,logic_sttfa,nat_sttfa

mod_aux : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

mod_aux_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

axiom_mod_aux  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))

eq_mod_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))

%|- eq_mod_aux : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))" "p"
%|- (sttfa-lemma "div_mod_sttfa.axiom_mod_aux")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux(p)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux(p)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.mod_aux(p)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_mod_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))

%|- sym_eq_mod_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)))" "p"
%|- (sttfa-lemma "div_mod_sttfa.eq_mod_aux")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux(p))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.mod_aux(p)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

axiom_mod_aux_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))

eq_mod_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))

%|- eq_mod_aux_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))"
%|- (sttfa-lemma "div_mod_sttfa.axiom_mod_aux_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

sym_eq_mod_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))

%|- sym_eq_mod_aux_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))"
%|- (sttfa-lemma "div_mod_sttfa.eq_mod_aux_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))
%|- QED

axiom_mod_aux_body_S  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))

eq_mod_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))

%|- eq_mod_aux_body_S : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))" "p"
%|- (sttfa-lemma "div_mod_sttfa.axiom_mod_aux_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_mod_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))))

%|- sym_eq_mod_aux_body_S : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))))" "p"
%|- (sttfa-lemma "div_mod_sttfa.eq_mod_aux_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

mod  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] = (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(m)))

div_aux : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

div_aux_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

axiom_div_aux  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))

eq_div_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))

%|- eq_div_aux : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))" "p"
%|- (sttfa-lemma "div_mod_sttfa.axiom_div_aux")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux(p)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux(p)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.div_aux(p)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_div_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))(div_mod_sttfa.div_aux(p)))

%|- sym_eq_div_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))(div_mod_sttfa.div_aux(p)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)))" "p"
%|- (sttfa-lemma "div_mod_sttfa.eq_div_aux")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))(div_mod_sttfa.div_aux(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux(p))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.div_aux(p)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

axiom_div_aux_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))

eq_div_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))

%|- eq_div_aux_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "div_mod_sttfa.axiom_div_aux_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

sym_eq_div_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))

%|- sym_eq_div_aux_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))"
%|- (sttfa-lemma "div_mod_sttfa.eq_div_aux_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))
%|- QED

axiom_div_aux_body_S  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))

eq_div_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))

%|- eq_div_aux_body_S : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))" "p"
%|- (sttfa-lemma "div_mod_sttfa.axiom_div_aux_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_div_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))))

%|- sym_eq_div_aux_body_S : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))))" "p"
%|- (sttfa-lemma "div_mod_sttfa.eq_div_aux_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

div  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] = (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(m)))

le_mod_aux_m_m  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(p) => nat_sttfa.le(div_mod_sttfa.mod_aux(p)(n)(m))(m)))))

%|- le_mod_aux_m_m : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(p) => nat_sttfa.le(div_mod_sttfa.mod_aux(p)(n)(m))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(x) => nat_sttfa.le(div_mod_sttfa.mod_aux(x)(n)(m))(m)))))" "p"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(x) => nat_sttfa.le(div_mod_sttfa.mod_aux(x)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(x))(n)(m))(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(x) => nat_sttfa.le(div_mod_sttfa.mod_aux(x)(n)(m))(m))))))" "(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))(m))))))"
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(m))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))(m))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(m)))))"
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(m))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(m))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(m)))))"
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(m))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m)))))"
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))" "nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m)"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))(m))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))(m)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m))" "nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q))" "nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "q"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(nat_sttfa.plus(m)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(nat_sttfa.plus(m)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(nat_sttfa.plus(m)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(y))(nat_sttfa.plus(y)(q)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(y))(nat_sttfa.plus(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(nat_sttfa.plus(m)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.plus(m)(q)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(q)(m)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(q)(m)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(q)(m)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(q)(m0)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(q)(m0)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "q"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(nat_sttfa.plus(q)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(q)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(q)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(q)(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(q)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(sttfa___))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(m)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):nat_sttfa.le(m0)(nat_sttfa.plus(m0)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))) => nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(B) => B)))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(nat_sttfa.sttfa_S(q))(m))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(z) => nat_sttfa.le(n)(z))))" "nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.le(nat_sttfa.sttfa_S(q))(z) => nat_sttfa.le(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(n)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "n"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.plus(q)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(p0)))" "q"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(nat_sttfa.sttfa_S(m))) => nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(p0)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(m0)) => nat_sttfa.le(nat_sttfa.minus(n)(m0))(p0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p0)(m0)) => nat_sttfa.le(nat_sttfa.minus(n)(m0))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.plus(p)(m)) => nat_sttfa.le(nat_sttfa.minus(n)(m))(p)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_plus_to_minus"))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (propax)))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(y)(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(y)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(y)(m)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" "div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))(m)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))(m)) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))(m)))" "(nat_sttfa.le(n)(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(n)(m) => nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))(m)))" "(nat_sttfa.le(n)(m) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "nat_sttfa.le(n)(m)"
%|- (propax))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(y)(m)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(y)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(y)(m)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" "div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))(m))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))(m))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))(m))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):nat_sttfa.le(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))(m))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n))))) => P(y))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))))" "q"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(n))))" "q"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n)))))" "div_mod_sttfa.mod_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => P(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(q) => nat_sttfa.le(div_mod_sttfa.mod_aux(q)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(y(n)(m))(m))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => P(y))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux"))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))(m)))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(x) => nat_sttfa.le(div_mod_sttfa.mod_aux(x)(n)(m))(m)))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(x))(n)(m))(m)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(x) => nat_sttfa.le(div_mod_sttfa.mod_aux(x)(n)(m))(m)))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))(m))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m))(m)) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))(m)))" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m))(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m))(m)) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m))(m)))" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m))(m))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(n)(m)) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m))(m)))" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(n)(m))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_O)" "nat_sttfa.le(n)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.le(n)(m))" "nat_sttfa.le(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa___)(m))(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa___)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):nat_sttfa.le(sttfa___)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(n)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n_O_elim"))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => P(y))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => P(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => nat_sttfa.le(y(n)(m))(m)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => P(y))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(sttfa__x_365) => nat_sttfa.le(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))(m)))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(sttfa__x_365) => nat_sttfa.le(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))(m)))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(sttfa__x_365) => nat_sttfa.le(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))(m)))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(sttfa__x_365) => nat_sttfa.le(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(sttfa__x_365) => nat_sttfa.le(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))(m)))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

lt_mod_m_m  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))

%|- lt_mod_m_m : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(z) => nat_sttfa.lt(div_mod_sttfa.mod(n)(z))(z)))" "m"
%|- (sttfa-impl-e "((FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))(nat_sttfa.sttfa_S(p)))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(z) => nat_sttfa.lt(div_mod_sttfa.mod(n)(z))(z))))" "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))(nat_sttfa.sttfa_S(p))))"
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(p))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))(nat_sttfa.sttfa_S(p))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(p)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p))" "nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(p))"
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(p)))" "nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(p)"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(p))" "nat_sttfa.le(n)(n)"
%|- (sttfa-conv "nat_sttfa.le(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(n)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(p))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(m0))(m0)))" "p"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n0)(m0))(m0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n0)(n) => nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n0)(m0))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(p) => nat_sttfa.le(div_mod_sttfa.mod_aux(p)(n)(m))(m)))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.le_mod_aux_m_m"))))))))
%|- (sttfa-conv "(nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(p) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(m0))))" "p"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(div_mod_sttfa.mod_aux(n)(n)(p))(m0) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)))))" "div_mod_sttfa.mod_aux(n)(n)(p)"
%|- (sttfa-lemma "nat_sttfa.le_S_S")))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(div_mod_sttfa.mod_aux(n)(n)(p))(nat_sttfa.sttfa_S(p))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))(nat_sttfa.sttfa_S(p))))" ("nat_sttfa.lt") ()
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(y)(nat_sttfa.sttfa_S(p))))(div_mod_sttfa.mod_aux(n)(n)(p)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(y)(nat_sttfa.sttfa_S(p))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(n)(n)(p)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(p)) => nat_sttfa.lt(y)(nat_sttfa.sttfa_S(p))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(n)(n)(p)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux(n)(n)(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(p))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(n0))))" "p"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(q:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(q))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))))
%|- (sttfa-conv "((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)) => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(z) => nat_sttfa.lt(div_mod_sttfa.mod(n)(z))(z))))" ("nat_sttfa.lt" "div_mod_sttfa.mod") ("nat_sttfa.lt")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => ((FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n0)) => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))) => (FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(z) => nat_sttfa.lt(div_mod_sttfa.mod(n)(z))(z)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" "nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_O")))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___) => nat_sttfa.lt(div_mod_sttfa.mod(n)(sttfa___))(sttfa___)))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___) => nat_sttfa.lt(div_mod_sttfa.mod(n)(sttfa___))(sttfa___)))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___) => nat_sttfa.lt(div_mod_sttfa.mod(n)(sttfa___))(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(sttfa___) => nat_sttfa.lt(div_mod_sttfa.mod(n)(sttfa___))(sttfa___)))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))))
%|- QED

div_aux_mod_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(p)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(p)(n)(m))))))

%|- div_aux_mod_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(p)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(p)(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(x)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(x)(n)(m))))))" "p"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(x)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(x)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(x))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(x))(n)(m))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(x)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(x)(n)(m)))))))" "(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))"
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))))"
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))))"
%|- (sttfa-impl-e "(((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))) => ((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))" "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))))"
%|- (sttfa-impl-i "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m)))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(z))))" "div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(y))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(y)(z)))))" "nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(y))(z))(nat_sttfa.plus(m)(nat_sttfa.plus(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(x)(y))(z))(nat_sttfa.plus(x)(nat_sttfa.plus(y)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_plus")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(x))))" "nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m)))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (propax)))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y)))))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m0)))(nat_sttfa.pred(nat_sttfa.minus(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m0)))(nat_sttfa.pred(nat_sttfa.minus(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus_S_pred")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))))))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m0)))(nat_sttfa.pred(nat_sttfa.minus(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m0)))(nat_sttfa.pred(nat_sttfa.minus(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.eq_minus_S_pred")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y))))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(y)))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m0)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m0)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" "nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(y))(nat_sttfa.plus(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" "nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(y))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m)))(nat_sttfa.plus(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_Sm")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(sttfa___))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.pred(nat_sttfa.minus(n)(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))))" "nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.sttfa_S(nat_sttfa.pred(nat_sttfa.minus(n)(m))))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___)))))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.pred(nat_sttfa.minus(n)(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(sttfa___)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.pred(nat_sttfa.minus(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.pred(nat_sttfa.minus(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" "nat_sttfa.lt(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m0)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m0))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(m))(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_minus_m_m")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(x_1))))(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(x_1))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(x_1))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(x)))(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.plus(m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m)))))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))(nat_sttfa.plus(nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(nat_sttfa.plus(m)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0)))) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(m)(m0))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_S(nat_sttfa.plus(n)(m))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.sttfa_S(m))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m))) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_S(m)))(nat_sttfa.plus(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))(nat_sttfa.times(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_false)))" "nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(x))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => (LAMBDA(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(x))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(x))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" "div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_false))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_false)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m))))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)) => (nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]"))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" "div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(nat_sttfa.sttfa_O) => (LAMBDA(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(x)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(bool_sttfa.sttfa_true)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true)))" "nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(sttfa___))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(sttfa___))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(sttfa___))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(sttfa___))(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(sttfa___))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m))(nat_sttfa.leb(n)(m)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(n0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(n0))))" "q"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(z:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(z)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0))))) => P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0))))) => P(y))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m0)(div_mod_sttfa.mod_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0))(nat_sttfa.leb(m0)(n0)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(div_mod_sttfa.mod_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(p))))" "q"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(n0))))" "q"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "div_mod_sttfa.mod_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => P(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_S(q))))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q))) => P(y))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(q)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(n0)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(n0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))" "q"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_S(n0)))((LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))(n0)))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" "(LAMBDA(q0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q0)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0)))(case_S(n0)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n))))) => P(y))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(p)(nat_sttfa.minus(m)(nat_sttfa.sttfa_S(n)))(n)))(nat_sttfa.leb(m)(n)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(p))))" "q"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_div_aux_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(q)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(n))))" "q"
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n)))))" "div_mod_sttfa.div_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))) => P(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(q)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(q)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(q))(n)(m)))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q))) => P(y))))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_S(q)))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))(div_mod_sttfa.div_aux(p)))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_div_aux"))))))))))
%|- (sttfa-impl-e "((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(x)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(x)(n)(m))))) => (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_S(x))(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_S(x))(n)(m))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(x)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(x)(n)(m))))))))" "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m)))))"
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(nat_sttfa.times_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))(nat_sttfa.times_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.times(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_S(m)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):y))(n)(m))(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.sttfa_O) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):y))(n)(m))(nat_sttfa.sttfa_S(m)))(n)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):y))(n)(m))(nat_sttfa.sttfa_S(m)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))) => P(y))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => P(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(m0)(nat_sttfa.sttfa_S(n0)))(n0)))(nat_sttfa.leb(m0)(n0))))(nat_sttfa.sttfa_O)))(n)(m))(nat_sttfa.sttfa_S(m)))(y(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O)) => P(y))))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.mod_aux_body)(p))(div_mod_sttfa.mod_aux(p)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_mod_aux")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_O)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)((LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m))))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" "(LAMBDA(q:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(div_mod_sttfa.div_aux(q)(nat_sttfa.minus(n)(nat_sttfa.sttfa_S(m)))(m)))(nat_sttfa.leb(n)(m)))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(case_S)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))(case_O)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O))) => P(y))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):nat_sttfa.sttfa_O)))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_div_aux_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.div_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)) => P(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(nat_sttfa.sttfa_O)(n)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O)) => P(y))))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(nat_sttfa.sttfa_O))(div_mod_sttfa.div_aux(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](div_mod_sttfa.div_aux_body)(p))(div_mod_sttfa.div_aux(p)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "div_mod_sttfa.sym_eq_div_aux")))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(sttfa__x_365)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(sttfa__x_365)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(sttfa__x_365)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(sttfa__x_365)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(sttfa__x_365)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(sttfa__x_365)(n)(m))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

div_mod  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))

%|- div_mod : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(z))(z))(div_mod_sttfa.mod(n)(z))))" "m"
%|- (sttfa-impl-e "((FORALL(auto:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto))))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(z))(z))(div_mod_sttfa.mod(n)(z)))))" "(FORALL(auto:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))"
%|- (then@ (sttfa-forall-i "auto")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(n)(n)(m0))))" "auto"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(n)(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n0)(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(n)(n0)(m0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n0)(m0))(nat_sttfa.sttfa_S(m0)))(div_mod_sttfa.mod_aux(n)(n0)(m0)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(p)(n)(m))(nat_sttfa.sttfa_S(m)))(div_mod_sttfa.mod_aux(p)(n)(m))))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_aux_mod_aux")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(div_mod_sttfa.mod_aux(n)(n)(auto))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(y)))(div_mod_sttfa.mod_aux(n)(n)(auto)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(n)(n)(auto)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.sttfa_S(auto)))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod_aux(n)(n)(auto)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(div_mod_sttfa.mod_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.mod_aux(n)(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(n0))))" "auto"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]")))))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))(div_mod_sttfa.div_aux(n)(n)(auto)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.div_aux(n)(n)(auto)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(y)(nat_sttfa.sttfa_S(auto)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.div_aux(n)(n)(auto)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.div_aux(n)(n)(auto))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(auto)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](div_mod_sttfa.div_aux(n)(n)(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(n0))))" "auto"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat]((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p))(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" "(LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_S(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_S(n0))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_S(n0))))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_S[nat_sttfa.sttfa_nat]"))))))))))))))
%|- (sttfa-conv "((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_S(n0))))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(z))(z))(div_mod_sttfa.mod(n)(z)))))" ("div_mod_sttfa.div" "div_mod_sttfa.mod") ()
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))) => ((FORALL(n0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_S(n0)))(nat_sttfa.sttfa_S(n0)))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_S(n0))))) => (FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(z))(z))(div_mod_sttfa.mod(n)(z))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(n)(nat_sttfa.sttfa_O))(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus_body(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(n)(nat_sttfa.sttfa_O))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(n)(nat_sttfa.sttfa_O))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(n)(nat_sttfa.sttfa_O))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n))))" "nat_sttfa.times(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(nat_sttfa.plus_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):m0)) => P(y))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):m))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.plus_body(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_O)))" "nat_sttfa.plus_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.plus(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(n)))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.plus_body)(n))(nat_sttfa.plus(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.sym_eq_plus")))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y)))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y)))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))" ("div_mod_sttfa.mod") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0)))) => P(y))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m0:nat_sttfa.sttfa_nat):nat_sttfa.plus(m0)(nat_sttfa.times(n)(m0))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(m)(nat_sttfa.times(n)(m))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times_body_S"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.times_body(nat_sttfa.sttfa_S(n))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](return)(nat_sttfa.sttfa_S(n0)))))" "nat_sttfa.times_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))" () ("div_mod_sttfa.mod")
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(y)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))(nat_sttfa.sttfa_S(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(y)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => P(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(y)(nat_sttfa.sttfa_O))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](n)((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(n)(n)(p)))(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(n)) => P(y))))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))((LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p)))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_O)))" "(LAMBDA(p:nat_sttfa.sttfa_nat):div_mod_sttfa.div_aux(n)(n)(p))"
%|- (sttfa-conv "(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(n))(case_S)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(case_O:nat_sttfa.sttfa_nat):(FORALL(case_S:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_O)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](case_O)(case_S)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_match_nat_type_O[nat_sttfa.sttfa_nat]"))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))" ("div_mod_sttfa.div" "div_mod_sttfa.mod") ()
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))) => P(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y(nat_sttfa.sttfa_O))(div_mod_sttfa.mod(n)(nat_sttfa.sttfa_O))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O))) => P(y))))(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(P:[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]](nat_sttfa.times_body)(n))(nat_sttfa.times(n)))" "div_mod_sttfa.div(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.sym_eq_times"))))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(sttfa___))(sttfa___))(div_mod_sttfa.mod(n)(sttfa___))))(nat_sttfa.sttfa_O) => ((FORALL(n0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(sttfa___))(sttfa___))(div_mod_sttfa.mod(n)(sttfa___))))(nat_sttfa.sttfa_S(n0))) => (FORALL(z:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(sttfa___))(sttfa___))(div_mod_sttfa.mod(n)(sttfa___))))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> bool]):(return(nat_sttfa.sttfa_O) => ((FORALL(n:nat_sttfa.sttfa_nat):return(nat_sttfa.sttfa_S(n))) => (FORALL(z:nat_sttfa.sttfa_nat):return(z)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(sttfa___))(sttfa___))(div_mod_sttfa.mod(n)(sttfa___))))"
%|- (sttfa-lemma "nat_sttfa.match_nat_prop"))))))))))
%|- QED

eq_times_div_minus_mod  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))

%|- eq_times_div_minus_mod : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" "div_mod_sttfa.mod(a)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(y)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))))" "nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(y)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(a)(b))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(a)(b)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))))" "nat_sttfa.times(div_mod_sttfa.div(a)(b))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" "div_mod_sttfa.mod(a)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(a)(b))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(a)(b)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(div_mod_sttfa.mod(a)(b)))))" "nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(div_mod_sttfa.mod(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(div_mod_sttfa.mod(a)(b))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(div_mod_sttfa.mod(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(a)(m))(m))(div_mod_sttfa.mod(a)(m))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(a)(m))(m))(div_mod_sttfa.mod(a)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(a)(b))))(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(a)(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(a)(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(a)(b))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(div_mod_sttfa.div(a)(b))(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(y)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))))" "nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(y)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(sttfa___)(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(div_mod_sttfa.mod(a)(b))(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(m))(m)))" "div_mod_sttfa.mod(a)(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(nat_sttfa.plus(n)(m))(m))))" "nat_sttfa.times(b)(div_mod_sttfa.div(a)(b))"
%|- (sttfa-lemma "nat_sttfa.minus_plus_m_m")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(a)(b))(b))(nat_sttfa.minus(a)(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(div_mod_sttfa.div(a)(b)))(div_mod_sttfa.mod(a)(b)))(div_mod_sttfa.mod(a)(b)))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- QED

div_mod_spec : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]]]

div_mod_spec_intro  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))))

match_div_mod_spec_prop  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => return)) => (div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => return)))))))

div_mod_spec_div_mod  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))))

%|- div_mod_spec_div_mod : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)" "div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(div_mod_sttfa.mod(n)(m)))))" "nat_sttfa.times(div_mod_sttfa.div(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(div_mod_sttfa.mod(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" "div_mod_sttfa.mod(n)(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" "div_mod_sttfa.mod(n)(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(n)(m))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(n)(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(div_mod_sttfa.mod(n)(m)))))" "nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(div_mod_sttfa.mod(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m0))(m0))(div_mod_sttfa.mod(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m0))(m0))(div_mod_sttfa.mod(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(div_mod_sttfa.div(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))(div_mod_sttfa.mod(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(div_mod_sttfa.mod(n)(m))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(div_mod_sttfa.div(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m))))" "nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m0))(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m))) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(r))))" "div_mod_sttfa.mod(n)(m)"
%|- (sttfa-conv "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(r))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))" "div_mod_sttfa.div(n)(m)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m0))(r)) => div_mod_sttfa.div_mod_spec(n)(m0)(q)(r))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m0))(r)) => div_mod_sttfa.div_mod_spec(n)(m0)(q)(r))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_intro"))))))))))))))
%|- QED

let_clause_1078  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))))))

%|- let_clause_1078 : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "q")
%|- (then@ (sttfa-forall-i "r")
%|- (then@ (sttfa-forall-i "q1")
%|- (then@ (sttfa-forall-i "r1")
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)" "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(r)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))"
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)" "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(r1)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))" "(nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))"
%|- (sttfa-impl-i "nat_sttfa.le(q)(q1)" "(nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))"
%|- (sttfa-impl-i "nat_sttfa.lt(q)(q1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))))))))))))
%|- QED

let_clause_1062  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))))))))

%|- let_clause_1062 : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "q")
%|- (then@ (sttfa-forall-i "r")
%|- (then@ (sttfa-forall-i "q1")
%|- (then@ (sttfa-forall-i "r1")
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)" "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(r)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))"
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)" "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(r1)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))))))))))))
%|- QED

div_mod_spec_to_eq  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))))

%|- div_mod_spec_to_eq : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "q")
%|- (then@ (sttfa-forall-i "r")
%|- (then@ (sttfa-forall-i "q1")
%|- (then@ (sttfa-forall-i "r1")
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))"
%|- (sttfa-impl-i "nat_sttfa.lt(r)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))"
%|- (sttfa-impl-i "nat_sttfa.lt(r1)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "a"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_n")))
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(a)(a)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a) => nat_sttfa.lt(a)(a))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(q)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a))" "nat_sttfa.le(nat_sttfa.times(q)(b))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q)(b))(a))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(y)(r)))(nat_sttfa.le(y)(a))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(y)(r)))(nat_sttfa.le(y)(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(y))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(y))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(y))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(a))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(y))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(a))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(a))(nat_sttfa.le(nat_sttfa.times(b)(q))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.times(b)(q))(a)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q))(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r)))(nat_sttfa.le(sttfa___)(a)))(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r)))(nat_sttfa.le(sttfa___)(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r)))(nat_sttfa.le(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q)(b))(a)))" "nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(r)))" "nat_sttfa.times(q)(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(r)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "r"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(nat_sttfa.le(nat_sttfa.times(q)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q)(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(q)(b))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(q)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)) => (nat_sttfa.le(nat_sttfa.times(q)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q1))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(y)(nat_sttfa.times(q)(b)))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(q)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(y)(nat_sttfa.times(q)(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(q)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(q)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(q)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(y)(nat_sttfa.times(q)(b)))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(q)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(y)(nat_sttfa.times(q)(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(q)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(q)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(q)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(q))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(sttfa___)))(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q)(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))))" "nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(nat_sttfa.lt(q1)(q) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))" "nat_sttfa.lt(q1)(q)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => nat_sttfa.lt(q1)(q))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => nat_sttfa.lt(q1)(q))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(m)) => nat_sttfa.lt(m)(q)))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(m)) => nat_sttfa.lt(m)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "q"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q1))(q) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q1))(q) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q1))(y) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(y))))" "q"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q1))(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(nat_sttfa.sttfa_S(q1)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(y)))))" "nat_sttfa.sttfa_S(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "b"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)) => (nat_sttfa.le(nat_sttfa.times(q)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)) => (nat_sttfa.le(nat_sttfa.times(q)(b))(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(z))))" "a"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(q)(b)) => (nat_sttfa.le(nat_sttfa.times(q)(b))(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(z)))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a) => nat_sttfa.lt(a)(a)))" "nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(y)(r1))(nat_sttfa.plus(y)(b)))(nat_sttfa.lt(nat_sttfa.plus(y)(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(y)(r1))(nat_sttfa.plus(y)(b)))(nat_sttfa.lt(nat_sttfa.plus(y)(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))" "nat_sttfa.lt(r1)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))))" "nat_sttfa.lt(r)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q1)))))))))))" "r1"
%|- (sttfa-conv "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q1)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))" "q1"
%|- (sttfa-conv "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10)))))))))))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b0)(q10)))))))))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b0)(q10)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.let_clause_1062"))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q1))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(y))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(y))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1))"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))" "nat_sttfa.lt(r1)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))))))))" "nat_sttfa.lt(r)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q1)))))))))))" "r1"
%|- (sttfa-conv "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q1)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))" "q1"
%|- (sttfa-conv "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10)))))))))))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b)(q10))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b0)(q10)))))))))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q0)(q10)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r10)(nat_sttfa.times(b0)(q10)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))))))))))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.let_clause_1062"))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(y))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(y))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q1)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b))"
%|- (sttfa-impl-e "(nat_sttfa.lt(r1)(b) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))" "nat_sttfa.lt(r1)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(r1)(b) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r1)(y) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(y))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r1)(y) => nat_sttfa.lt((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m))(r1))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m))(y)))))" "r1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q1)(b))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-lemma "nat_sttfa.monotonic_lt_plus_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(B) => B)))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(b))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.lt(x0)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(a) => nat_sttfa.lt(a)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(p) => nat_sttfa.lt(a)(p))))" "a"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b))(p) => nat_sttfa.lt(a)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(a)(p)))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q1))(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(a)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.le(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "(nat_sttfa.le(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "nat_sttfa.le(q)(q1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-e "(nat_sttfa.le(q)(q1) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "nat_sttfa.le(q)(q1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(q)(q1) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(m))))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(q)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "q"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y)))" "q1"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "q"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(sttfa___))(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "q"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" "(nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-impl-i "nat_sttfa.lt(q)(q1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a))"
%|- (sttfa-conv "connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(n))(n)))" "a"
%|- (sttfa-lemma "nat_sttfa.not_le_Sn_n")))
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(a)(a)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a) => nat_sttfa.lt(a)(a))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(q1)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a))" "nat_sttfa.le(nat_sttfa.times(q1)(b))(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q1)(b))(a))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(y)(r1)))(nat_sttfa.le(y)(a))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(y)(r1)))(nat_sttfa.le(y)(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(y))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(y))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___)(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(y))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(a))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(y))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(a))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(a))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.times(b)(q1))(a)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(q1))(sttfa___))(nat_sttfa.le(nat_sttfa.times(b)(q1))(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r1)))(nat_sttfa.le(sttfa___)(a)))(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r1)))(nat_sttfa.le(sttfa___)(a)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(sttfa___)(r1)))(nat_sttfa.le(sttfa___)(a)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q1)(b))(a)))" "nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(r1)))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):nat_sttfa.le(m)(nat_sttfa.plus(m)(n))))" "r1"
%|- (sttfa-lemma "nat_sttfa.le_plus_n_r")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(nat_sttfa.le(nat_sttfa.times(q1)(b))(a)) => nat_sttfa.le(nat_sttfa.times(q1)(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(q1)(b))(a)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(q1)(b))(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)) => (nat_sttfa.le(nat_sttfa.times(q1)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(y)(nat_sttfa.times(q1)(b)))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(q1)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(y)(nat_sttfa.times(q1)(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(q1)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(q1)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(q1)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(y)(nat_sttfa.times(q1)(b)))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(q1)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(y)(nat_sttfa.times(q1)(b))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(q1)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(q1)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(q1)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(q1))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(sttfa___)))(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q1)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(sttfa___)(nat_sttfa.times(q1)(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))))" "nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(nat_sttfa.lt(q)(q1) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))" "nat_sttfa.lt(q)(q1)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(q1) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(q))(q1) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(y) => nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(y))))" "q1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(q))(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(nat_sttfa.sttfa_S(q)))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m))(y)))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => nat_sttfa.le(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.le)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.times(n)(m))))" "b"
%|- (sttfa-lemma "nat_sttfa.monotonic_le_times_r"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(B) => B)))" "nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))(nat_sttfa.times(b)(q1))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)) => (nat_sttfa.le(nat_sttfa.times(q1)(b))(a) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)) => (nat_sttfa.le(nat_sttfa.times(q1)(b))(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(z))))" "a"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(q1)(b)) => (nat_sttfa.le(nat_sttfa.times(q1)(b))(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(z)))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le")))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a) => nat_sttfa.lt(a)(a)))" "nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "a"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(y)(r))(nat_sttfa.plus(y)(b)))(nat_sttfa.lt(nat_sttfa.plus(y)(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(y)(r))(nat_sttfa.plus(y)(b)))(nat_sttfa.lt(nat_sttfa.plus(y)(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" "nat_sttfa.lt(q)(q1)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))" "nat_sttfa.le(q)(q1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))" "nat_sttfa.lt(r1)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))" "nat_sttfa.lt(r)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))))" "r1"
%|- (sttfa-conv "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))" "q1"
%|- (sttfa-conv "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q))))))))))))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q0)))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b0)(q0))))))))))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b0)(q0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.let_clause_1078")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(y)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(y))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" "q"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(m)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "b"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(y))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" "nat_sttfa.lt(q)(q1)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))" "nat_sttfa.le(q)(q1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))" "nat_sttfa.lt(r1)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))" "nat_sttfa.lt(r)(b)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))))" "r1"
%|- (sttfa-conv "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r10)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))" "q1"
%|- (sttfa-conv "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q))))))))))))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q)(q10) => (nat_sttfa.lt(q)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q0)))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => (nat_sttfa.lt(r10)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b)(q0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b0)(q0))))))))))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (nat_sttfa.lt(r0)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b0))(r0)) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => (nat_sttfa.lt(r10)(b0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q10)(b0))(r10)) => (nat_sttfa.le(q0)(q10) => (nat_sttfa.lt(q0)(q10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r0)(nat_sttfa.times(b0)(q0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => (nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (nat_sttfa.le(q)(q1) => (nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))))))))))))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.let_clause_1078")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(b))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(y))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[bool](nat_sttfa.lt(a)(y))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))))" "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(a)(sttfa___))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(b)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(b)(nat_sttfa.times(b)(q)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(b)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(a)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(b)(q))(b)))(nat_sttfa.lt(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.plus(sttfa___)(b)))(nat_sttfa.lt(nat_sttfa.plus(sttfa___)(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b))"
%|- (sttfa-impl-e "(nat_sttfa.lt(r)(b) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))" "nat_sttfa.lt(r)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(r)(b) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(y) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(y))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(y) => nat_sttfa.lt((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(r))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(y)))))" "r"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.lt(f(x))(f(y))))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" () ()
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(R(x)(y) => R(f(x))(f(y)))))))(nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" () ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" ("relations_sttfa.monotonic") ()
%|- (sttfa-conv "relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.monotonic[nat_sttfa.sttfa_nat](nat_sttfa.lt)((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-lemma "nat_sttfa.monotonic_lt_plus_r")))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))) => nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(B) => B)))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.lt(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(b))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):nat_sttfa.lt(x0)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):nat_sttfa.lt(x)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(q)(b))(r)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(a) => nat_sttfa.lt(a)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(p) => nat_sttfa.lt(a)(p))))" "a"
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)) => (nat_sttfa.le(nat_sttfa.times(nat_sttfa.sttfa_S(q))(b))(p) => nat_sttfa.lt(a)(p))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(a)(p)))))" "nat_sttfa.times(nat_sttfa.sttfa_S(q))(b)"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(a)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(a)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => (nat_sttfa.le(m)(p) => nat_sttfa.lt(n)(p))))))" "a"
%|- (sttfa-lemma "nat_sttfa.lt_to_le_to_lt")))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.le(nat_sttfa.sttfa_S(a))(a)"
%|- (sttfa-lemma "logic_sttfa.absurd"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-conv "((nat_sttfa.lt(q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(q)(q1) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(q)(q1) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(q)(q1) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(q)(q1) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(q)(q1))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(q)(q1)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(q)(q1) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))(nat_sttfa.leb(q)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(q)(q1) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(q)(q1)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(q)(q1) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(q1)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(q)(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(q)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(q)(m))))))" "q1"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(q)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(q)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(q)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "q"
%|- (sttfa-lemma "nat_sttfa.leb_elim")))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r0) => return))))" "r1"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r0) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" "q1"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => return)) => (div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => return)))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.match_div_mod_spec_prop"))))))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => return)))" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => return))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => return)) => (div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => return)))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.match_div_mod_spec_prop"))))))))))))))))))))
%|- QED

div_mod_spec_to_eq2  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))))))))

%|- div_mod_spec_to_eq2 : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (then@ (sttfa-forall-i "q")
%|- (then@ (sttfa-forall-i "r")
%|- (then@ (sttfa-forall-i "q1")
%|- (then@ (sttfa-forall-i "r1")
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)" "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))"
%|- (sttfa-impl-i "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))" "(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))"
%|- (sttfa-impl-i "nat_sttfa.lt(r)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))" "(nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))"
%|- (sttfa-impl-i "nat_sttfa.lt(r1)(b)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(y)(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r)))(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q))(r)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(r)(nat_sttfa.times(b)(q)))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(y))(nat_sttfa.times(y)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q)(b))(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(nat_sttfa.times(b)(q))(r1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))" "div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1)"
%|- (propax)
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" "div_mod_sttfa.div_mod_spec(a)(b)(q)(r)"
%|- (propax)
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q10)))))" "q1"
%|- (sttfa-conv "(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q10)))))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q10))))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q10))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q0)(q10)))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => (div_mod_sttfa.div_mod_spec(a)(b)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q0)(q10)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q0)(q10))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(q10:nat_sttfa.sttfa_nat):(FORALL(r10:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b0)(q0)(r0) => (div_mod_sttfa.div_mod_spec(a)(b0)(q10)(r10) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q0)(q10))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_to_eq")))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(y)))))" "q"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(q1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(y))(nat_sttfa.plus(y)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(y))(nat_sttfa.times(y)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "q1"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(nat_sttfa.times(b)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1))))" "nat_sttfa.times(b)(q1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(y)(r1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q1)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(q1)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(q1)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(b)(q1))(r1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(sttfa___1))))(q1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(q1) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(sttfa___1))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(q1) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(sttfa___1))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(q1) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(q1) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "q1"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y)))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(a)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(a)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "a"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(sttfa___1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r1)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(sttfa___1)(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "a"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___1)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(r)(nat_sttfa.times(b)(q))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(r)(nat_sttfa.times(b)(q))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___1)(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => (LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___1)(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" "(LAMBDA(sttfa___1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(sttfa___1)(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(q)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(b)(q)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(b)(q)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(q)(b))(r))(nat_sttfa.plus(nat_sttfa.times(q)(b))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(y)))" "r1"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(r))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(x))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m))(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y))))" "r"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x))(f(y)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y)))))((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" () ()
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" ("relations_sttfa.injective") ()
%|- (sttfa-conv "relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(nat_sttfa.times(q)(b))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):relations_sttfa.injective[nat_sttfa.sttfa_nat,nat_sttfa.sttfa_nat]((LAMBDA(m:nat_sttfa.sttfa_nat):nat_sttfa.plus(n)(m))))" "nat_sttfa.times(q)(b)"
%|- (sttfa-lemma "nat_sttfa.injective_plus_r"))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(r1)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r1)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r0) => return))))" "r1"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q1)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r0) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" "q1"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => return)) => (div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => return)))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.match_div_mod_spec_prop")))))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1))) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => return)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](r)(r1)"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => return))))" "r"
%|- (sttfa-conv "(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q)(r0) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(b))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(b)(q0)(r0) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q0:nat_sttfa.sttfa_nat):(FORALL(r0:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r0)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](a)(nat_sttfa.plus(nat_sttfa.times(q0)(m))(r0)) => return)) => (div_mod_sttfa.div_mod_spec(a)(m)(q0)(r0) => return))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(return:bool):((nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => return)) => (div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => return)))))))" "a"
%|- (sttfa-lemma "div_mod_sttfa.match_div_mod_spec_prop")))))))))))))))))))))
%|- QED

div_times  : LEMMA (FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(b) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a))))

%|- div_times : PROOF
%|- (then@ (sttfa-forall-i "a")
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(b)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a))" "div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(b))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y)))" "nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y)))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.times(a)(b))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(b))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(nat_sttfa.sttfa_O)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(r))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(a)(b))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(r))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q)(r)))))" "a"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(b) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(q)(b))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q)(r)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(m)(q)(r))))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(b))(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(m)(q)(r))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_intro")))))))))))
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a)))" "div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(b) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(b)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(b) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(m)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(m))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(m))))" "b"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(m)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(m))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_div_mod"))))))
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a)))" () ()
%|- (sttfa-forall-e "(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(a)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(a))))" () ()
%|- (sttfa-forall-e "(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(q1)))))" "a"
%|- (sttfa-conv "(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(q1))))))" "div_mod_sttfa.mod(nat_sttfa.times(a)(b))(b)"
%|- (sttfa-conv "(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(nat_sttfa.times(a)(b))(b))(q1))))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q)(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))" "div_mod_sttfa.div(nat_sttfa.times(a)(b))(b)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q)(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b0)(q)(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b0)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b0)(q)(r) => (div_mod_sttfa.div_mod_spec(nat_sttfa.times(a)(b))(b0)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))))" "nat_sttfa.times(a)(b)"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_to_eq"))))))))))))))))))
%|- QED

eq_div_O  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O))))

%|- eq_div_O : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O))" "div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n)) => div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(nat_sttfa.sttfa_O))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(nat_sttfa.sttfa_O))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(nat_sttfa.sttfa_O))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(m)(nat_sttfa.sttfa_O))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n))))" "nat_sttfa.times(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.plus(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n)) => div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(n)) => div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(r))))" "n"
%|- (sttfa-conv "(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(r))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m0))(r)) => div_mod_sttfa.div_mod_spec(n)(m0)(q)(r))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m0))(r)) => div_mod_sttfa.div_mod_spec(n)(m0)(q)(r))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(nat_sttfa.lt(r)(m) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(q)(m))(r)) => div_mod_sttfa.div_mod_spec(n)(m)(q)(r)))))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_intro")))))))))))
%|- (sttfa-impl-e "(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O)))" "div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))))" "n"
%|- (sttfa-lemma "nat_sttfa.ltn_to_ltO"))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => div_mod_sttfa.div_mod_spec(n)(m0)(div_mod_sttfa.div(n)(m0))(div_mod_sttfa.mod(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => div_mod_sttfa.div_mod_spec(n)(m0)(div_mod_sttfa.div(n)(m0))(div_mod_sttfa.mod(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_div_mod"))))))
%|- (sttfa-conv "(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-conv "(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(nat_sttfa.sttfa_O)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(q1)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(div_mod_sttfa.mod(n)(m)) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(q1)))))" () ()
%|- (sttfa-forall-e "(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(r) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(q1))))))" "div_mod_sttfa.mod(n)(m)"
%|- (sttfa-conv "(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(div_mod_sttfa.div(n)(m))(r) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.div(n)(m))(q1))))))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))" "div_mod_sttfa.div(n)(m)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(m)(q)(r) => (div_mod_sttfa.div_mod_spec(n)(m)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))" () ()
%|- (sttfa-forall-e "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(n)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))))))" "m"
%|- (sttfa-conv "(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(n)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(n)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1))))))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(FORALL(r:nat_sttfa.sttfa_nat):(FORALL(q1:nat_sttfa.sttfa_nat):(FORALL(r1:nat_sttfa.sttfa_nat):(div_mod_sttfa.div_mod_spec(a)(b)(q)(r) => (div_mod_sttfa.div_mod_spec(a)(b)(q1)(r1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](q)(q1)))))))))" "n"
%|- (sttfa-lemma "div_mod_sttfa.div_mod_spec_to_eq"))))))))))))))))))
%|- QED

mod_O_n  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))

%|- mod_O_n : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(h))(nat_sttfa.plus(nat_sttfa.sttfa_O)(h)))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" "nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(h))(nat_sttfa.plus(nat_sttfa.sttfa_O)(h)))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(h:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(x)(h))(nat_sttfa.plus(y)(h)))(nat_sttfa.minus(x)(y)))))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "nat_sttfa.minus_plus_plus_l")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))))" "nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))))" "nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y) => logic_sttfa.eq[bool](nat_sttfa.le(y)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))))" "nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(y)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(m))(m))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(m))))" "n"
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(m))(m))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))))" "nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(sttfa___))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(sttfa___))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(sttfa___))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.le(sttfa___)(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.minus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(y))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(y))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.minus(x)(y))(x)))" "nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-lemma "nat_sttfa.minus_le")))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)) => nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(B) => B)))" "nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))) => (logic_sttfa.eq[bool](nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.le(nat_sttfa.minus(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n)))))(nat_sttfa.plus(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(nat_sttfa.sttfa_O)(n))))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(nat_sttfa.le(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "nat_sttfa.le_n_O_to_eq"))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.sym_eq[nat_sttfa.sttfa_nat]")))))))
%|- QED

END div_mod_sttfa


(; This file was generated by Holide. ;)

#NAME set_2Dsize_2Dthm_2D1_2E64.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

def type_3 : hol.type :=
  hol.arr type_0 type_2.

def term_0 : hol.term type_3 :=
  hol.eq type_0.

def type_4 : hol.type -> hol.type :=
  A : hol.type => A.

Set_2Eset : hol.type -> hol.type.

def type_5 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_4 A).

(; Constant Set.size ;)

Set_2Esize : A : hol.type -> hol.term (type_4 A).

def term_1 : A : hol.type -> hol.term (hol.arr (type_5 A) type_0) :=
  A : hol.type => Set_2Esize (hol.arr (type_5 A) type_0).

(; Constant Set.{} ;)

Set_2E_7B_7D : A : hol.type -> hol.term (type_4 A).

def term_2 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Set_2E_7B_7D (type_5 A).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term (type_4 A).

def term_3 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_4 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 (term_1 A (term_2 A)) term_3.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_4 A).

(; Theorem: |- ((= (Set.size Set.{})) Number.Natural.zero) ;)

def type_6 : hol.type :=
  Set_2Eset type_1.

(; Constant Set.hasSize ;)

Set_2EhasSize : A : hol.type -> hol.term (type_4 A).

(; Constant Set.universe ;)

Set_2Euniverse : A : hol.type -> hol.term (type_4 A).

def type_7 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.bit0 ;)

Number_2ENatural_2Ebit0 : A : hol.type -> hol.term (type_4 A).

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term (type_4 A).

def term_5 : hol.term type_0 :=
  Number_2ENatural_2Ebit1 type_7 term_3.

def term_6 : hol.term type_0 :=
  Number_2ENatural_2Ebit0 type_7 term_5.

def term_7 : hol.term type_1 :=
  Set_2EhasSize (hol.arr type_6 type_2) (Set_2Euniverse type_6) term_6.

(; axiom ;)

thm_1 : hol.proof term_7.

(; Theorem: |- ((Set.hasSize Set.universe) (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) ;)

def type_8 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_1.

def type_9 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_8 A) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_4 A).

def term_8 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_9 A).

def term_9 : A : hol.type -> hol.term (hol.arr (type_5 A) type_2) :=
  A : hol.type => Set_2EhasSize (hol.arr (type_5 A) type_2).

(; Constant Set.insert ;)

Set_2Einsert : A : hol.type -> hol.term (type_4 A).

def term_10 : A : hol.type -> hol.term (hol.arr (type_4 A) (hol.arr (type_5 A) (type_5 A))) :=
  A : hol.type => Set_2Einsert (hol.arr (type_4 A) (hol.arr (type_5 A) (type_5 A))).

def term_11 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => x_1.

def term_12 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (hol.arr (type_5 A) (type_5 A)) :=
  A : hol.type => x_1 : hol.term (type_4 A) => term_10 A (term_11 A x_1).

def term_13 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_5 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => term_12 A x_1 (term_2 A).

def term_14 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_8 A (x_1 : hol.term (type_4 A) => term_9 A (term_13 A x_1) term_5).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_14 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Set.hasSize ((Set.insert x) Set.{})) (Number.Natural.bit1 Number.Natural.zero))) ;)

def type_10 : hol.type :=
  hol.arr type_1 type_1.

def type_11 : hol.type :=
  hol.arr type_1 type_10.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_4 A).

def term_15 : hol.term type_11 :=
  Data_2EBool_2E_3D_3D_3E type_11.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_4 A).

def term_16 : hol.term type_11 :=
  Data_2EBool_2E_2F_5C type_11.

def type_12 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_1.

(; Constant Set.finite ;)

Set_2Efinite : A : hol.type -> hol.term (type_4 A).

def term_17 : A : hol.type -> hol.term (type_12 A) :=
  A : hol.type => Set_2Efinite (type_12 A).

def term_18 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Set_2Euniverse (type_5 A).

def type_13 : hol.type -> hol.type :=
  B : hol.type => B.

def type_14 : hol.type -> hol.type :=
  B : hol.type => Set_2Eset (type_13 B).

def type_15 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_14 B) type_1.

def term_19 : B : hol.type -> hol.term (type_15 B) :=
  B : hol.type => Set_2Efinite (type_15 B).

def term_20 : B : hol.type -> hol.term (type_14 B) :=
  B : hol.type => Set_2Euniverse (type_14 B).

def term_21 : B : hol.type -> A : hol.type -> hol.term type_10 :=
  B : hol.type => A : hol.type => term_15 (term_16 (term_17 A (term_18 A)) (term_19 B (term_20 B))).

def type_16 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_13 B).

def type_17 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_16 B A).

def term_22 : B : hol.type -> A : hol.type -> hol.term (type_17 B A) :=
  B : hol.type => A : hol.type => Set_2Euniverse (type_17 B A).

def term_23 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_21 B A (Set_2Efinite (hol.arr (type_17 B A) type_1) (term_22 B A)).

(; axiom ;)

thm_3 : B : hol.type -> A : hol.type -> hol.proof (term_23 B A).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite Set.universe)) (Set.finite Set.universe))) (Set.finite Set.universe)) ;)

def term_24 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_8 A (x_1 : hol.term (type_4 A) => term_0 (term_1 A (term_13 A x_1)) term_5).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_24 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Set.size ((Set.insert x) Set.{}))) (Number.Natural.bit1 Number.Natural.zero))) ;)

def type_18 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_12 A) type_1.

def term_25 : A : hol.type -> hol.term (type_18 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_18 A).

def term_26 : hol.term type_11 :=
  hol.eq type_1.

def term_27 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => s_1.

def term_28 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_17 A (term_27 A s_1).

def term_29 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_9 A (term_27 A s_1).

def term_30 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_1 A (term_27 A s_1).

def term_31 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_26 (term_28 A s_1) (term_29 A s_1 (term_30 A s_1))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_31 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite s)) ((Set.hasSize s) (Set.size s)))) ;)

def type_19 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) (type_12 A).

def term_32 : A : hol.type -> hol.term (type_19 A) :=
  A : hol.type => hol.eq (type_5 A).

def term_33 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_12 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_32 A (term_27 A s_1).

def term_34 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_33 A s_1 (term_2 A).

def term_35 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_26 (term_29 A s_1 term_3) (term_34 A s_1)).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_35 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.hasSize s) Number.Natural.zero)) ((= s) Set.{}))) ;)

def type_20 : hol.type :=
  hol.arr type_2 type_1.

def term_36 : hol.term type_20 :=
  Data_2EBool_2E_21 type_20.

def term_37 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_38 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_29 A s_2 (term_37 n_1).

def term_39 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_15 (term_38 A n_1 s_2).

def term_40 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_0 (term_30 A s_1).

def term_41 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_39 A n_2 s_1 (term_40 A s_1 (term_37 n_2)))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_41 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) ((= (Set.size s)) n)))) ;)

def term_42 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_15 (term_28 A s_1).

def term_43 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_42 A s_1 (term_26 (term_40 A s_1 term_3) (term_34 A s_1))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_43 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= ((= (Set.size s)) Number.Natural.zero)) ((= s) Set.{})))) ;)

def type_21 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) type_1.

def type_22 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_21 B A) type_1.

def term_44 : B : hol.type -> A : hol.type -> hol.term (type_22 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_22 B A).

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_4 A).

def term_45 : hol.term type_3 :=
  Number_2ENatural_2E_3C_3D type_3.

def term_46 : B : hol.type -> hol.term (hol.arr (type_14 B) type_0) :=
  B : hol.type => Set_2Esize (hol.arr (type_14 B) type_0).

(; Constant Set.image ;)

Set_2Eimage : A : hol.type -> hol.term (type_4 A).

def term_47 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_16 B A) -> hol.term (type_16 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_16 B A) => f_1.

def term_48 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_16 B A) -> hol.term (hol.arr (type_5 A) (type_14 B)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_16 B A) => Set_2Eimage (hol.arr (type_16 B A) (hol.arr (type_5 A) (type_14 B))) (term_47 B A f_1).

def term_49 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_16 B A) -> hol.term (type_14 B) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_16 B A) => term_48 B A f_2 (term_27 A s_1).

def term_50 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_16 B A) -> hol.term type_0 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_16 B A) => term_46 B (term_49 B A s_1 f_2).

def term_51 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_42 A s_2 (term_45 (term_50 A B s_2 f_1) (term_30 A s_2)))).

(; axiom ;)

thm_9 : B : hol.type -> A : hol.type -> hol.proof (term_51 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= (Set.size ((Set.image f) s))) (Set.size s))))) ;)

def type_23 : hol.type :=
  Set_2Eset type_0.

def term_52 : hol.term (hol.arr type_23 type_2) :=
  Set_2EhasSize (hol.arr type_23 type_2).

(; Constant Set.fromPredicate ;)

Set_2EfromPredicate : A : hol.type -> hol.term (type_4 A).

def term_53 : hol.term (hol.arr type_2 type_23) :=
  Set_2EfromPredicate (hol.arr type_2 type_23).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_4 A).

def term_54 : hol.term type_20 :=
  Data_2EBool_2E_3F type_20.

def term_55 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_56 : m_1 : hol.term type_0 -> v_2 : hol.term type_0 -> hol.term type_10 :=
  m_1 : hol.term type_0 => v_2 : hol.term type_0 => term_16 (term_0 v_2 (term_55 m_1)).

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_4 A).

def term_57 : hol.term type_3 :=
  Number_2ENatural_2E_3C type_3.

def term_58 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> hol.term type_1 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => term_57 (term_55 m_2) (term_37 n_1).

def term_59 : n_1 : hol.term type_0 -> hol.term type_23 :=
  n_1 : hol.term type_0 => term_53 (v_2 : hol.term type_0 => term_54 (m_3 : hol.term type_0 => term_56 m_3 v_2 (term_58 n_1 m_3))).

def term_60 : hol.term type_1 :=
  term_36 (n_1 : hol.term type_0 => term_52 (term_59 n_1) (term_37 n_1)).

(; axiom ;)

thm_10 : hol.proof term_60.

(; Theorem: |- (Data.Bool.! \lambda n. ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.< m) n))))) n)) ;)

def term_61 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_17 B A) type_0) :=
  B : hol.type => A : hol.type => Set_2Esize (hol.arr (type_17 B A) type_0).

def type_24 : hol.type :=
  hol.arr type_0 type_7.

(; Constant Number.Natural.^ ;)

Number_2ENatural_2E_5E : A : hol.type -> hol.term (type_4 A).

def term_62 : hol.term type_24 :=
  Number_2ENatural_2E_5E type_24.

def term_63 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_21 B A (term_0 (term_61 B A (term_22 B A)) (term_62 (term_46 B (term_20 B)) (term_1 A (term_18 A)))).

(; axiom ;)

thm_11 : B : hol.type -> A : hol.type -> hol.proof (term_63 B A).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite Set.universe)) (Set.finite Set.universe))) ((= (Set.size Set.universe)) ((Number.Natural.^ (Set.size Set.universe)) (Set.size Set.universe)))) ;)

def term_64 : hol.term (hol.arr type_23 type_0) :=
  Set_2Esize (hol.arr type_23 type_0).

def term_65 : hol.term type_1 :=
  term_36 (n_1 : hol.term type_0 => term_0 (term_64 (term_59 n_1)) (term_37 n_1)).

(; axiom ;)

thm_12 : hol.proof term_65.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.< m) n)))))) n)) ;)

(; Constant Set.properSubset ;)

Set_2EproperSubset : A : hol.type -> hol.term (type_4 A).

def term_66 : A : hol.type -> a_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => a_1 : hol.term (type_5 A) => a_1.

def term_67 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => b_1 : hol.term (type_5 A) => b_1.

def term_68 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_17 A (term_67 A b_1).

def term_69 : A : hol.type -> a_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => a_1 : hol.term (type_5 A) => term_1 A (term_66 A a_1).

def term_70 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_1 A (term_67 A b_1).

def term_71 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (a_1 : hol.term (type_5 A) => term_25 A (b_2 : hol.term (type_5 A) => term_15 (term_16 (Set_2EproperSubset (type_19 A) (term_66 A a_1) (term_67 A b_2)) (term_68 A b_2)) (term_57 (term_69 A a_1) (term_70 A b_2)))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (term_71 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ ((Set.properSubset a) b)) (Set.finite b))) ((Number.Natural.< (Set.size a)) (Set.size b))))) ;)

(; Constant Set.subset ;)

Set_2Esubset : A : hol.type -> hol.term (type_4 A).

def term_72 : A : hol.type -> hol.term (type_19 A) :=
  A : hol.type => Set_2Esubset (type_19 A).

def term_73 : A : hol.type -> b_1 : hol.term (type_5 A) -> a_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => b_1 : hol.term (type_5 A) => a_2 : hol.term (type_5 A) => term_16 (term_72 A (term_66 A a_2) (term_67 A b_1)).

def term_74 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (a_1 : hol.term (type_5 A) => term_25 A (b_2 : hol.term (type_5 A) => term_15 (term_73 A b_2 a_1 (term_68 A b_2)) (term_45 (term_69 A a_1) (term_70 A b_2)))).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_74 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset a) b)) (Set.finite b))) ((Number.Natural.<= (Set.size a)) (Set.size b))))) ;)

def term_75 : B : hol.type -> hol.term (hol.arr (type_14 B) type_2) :=
  B : hol.type => Set_2EhasSize (hol.arr (type_14 B) type_2).

def term_76 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_17 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2EhasSize (hol.arr (type_17 B A) type_2).

def term_77 : m_1 : hol.term type_0 -> n_2 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => n_2 : hol.term type_0 => term_62 (term_37 n_2) (term_55 m_1).

def term_78 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_36 (m_1 : hol.term type_0 => term_36 (n_2 : hol.term type_0 => term_15 (term_16 (term_9 A (term_18 A) (term_55 m_1)) (term_75 B (term_20 B) (term_37 n_2))) (term_76 B A (term_22 B A) (term_77 m_1 n_2)))).

(; axiom ;)

thm_15 : B : hol.type -> A : hol.type -> hol.proof (term_78 B A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize Set.universe) m)) ((Set.hasSize Set.universe) n))) ((Set.hasSize Set.universe) ((Number.Natural.^ n) m))))) ;)

def term_79 : n_1 : hol.term type_0 -> hol.term type_23 :=
  n_1 : hol.term type_0 => term_53 (v_2 : hol.term type_0 => term_54 (m_3 : hol.term type_0 => term_56 m_3 v_2 (term_45 (term_55 m_3) (term_37 n_1)))).

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_4 A).

def term_80 : hol.term type_24 :=
  Number_2ENatural_2E_2B type_24.

def term_81 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => term_80 (term_37 n_1) term_5.

def term_82 : hol.term type_1 :=
  term_36 (n_1 : hol.term type_0 => term_52 (term_79 n_1) (term_81 n_1)).

(; axiom ;)

thm_16 : hol.proof term_82.

(; Theorem: |- (Data.Bool.! \lambda n. ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.<= m) n))))) ((Number.Natural.+ n) (Number.Natural.bit1 Number.Natural.zero)))) ;)

def term_83 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_16 (term_28 A s_1).

def term_84 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_45 (term_30 A s_1).

def term_85 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_9 A).

def term_86 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_12 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_72 A (term_27 A s_1).

def term_87 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => a_1 : hol.term (type_4 A) => a_1.

def term_88 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (hol.arr (type_5 A) (type_5 A)) :=
  A : hol.type => a_1 : hol.term (type_4 A) => term_10 A (term_87 A a_1).

def term_89 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_26 (term_83 A s_1 (term_84 A s_1 term_5)) (term_85 A (a_2 : hol.term (type_4 A) => term_86 A s_1 (term_88 A a_2 (term_2 A))))).

(; axiom ;)

thm_17 : A : hol.type -> hol.proof (term_89 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Data.Bool./\ (Set.finite s)) ((Number.Natural.<= (Set.size s)) (Number.Natural.bit1 Number.Natural.zero)))) (Data.Bool.? \lambda a. ((Set.subset s) ((Set.insert a) Set.{}))))) ;)

def term_90 : hol.term type_1 :=
  term_36 (n_1 : hol.term type_0 => term_0 (term_64 (term_79 n_1)) (term_81 n_1)).

(; axiom ;)

thm_18 : hol.proof term_90.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.<= m) n)))))) ((Number.Natural.+ n) (Number.Natural.bit1 Number.Natural.zero)))) ;)

def term_91 : B : hol.type -> hol.term (hol.arr (type_15 B) type_1) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_15 B) type_1).

def term_92 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => t_1.

def term_93 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_17 A (term_92 A t_1).

def term_94 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_16 (term_93 A t_1).

def type_25 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_14 B) (type_15 B).

def term_95 : B : hol.type -> hol.term (type_25 B) :=
  B : hol.type => Set_2Esubset (type_25 B).

def term_96 : B : hol.type -> s_1 : hol.term (type_14 B) -> hol.term (type_14 B) :=
  B : hol.type => s_1 : hol.term (type_14 B) => s_1.

def term_97 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_1 A (term_92 A t_1).

def term_98 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_91 B (s_2 : hol.term (type_14 B) => term_25 A (t_3 : hol.term (type_5 A) => term_15 (term_94 A t_3 (term_95 B (term_96 B s_2) (term_48 B A f_1 (term_92 A t_3)))) (term_45 (term_46 B (term_96 B s_2)) (term_97 A t_3))))).

(; axiom ;)

thm_19 : B : hol.type -> A : hol.type -> hol.proof (term_98 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) ((Set.image f) t)))) ((Number.Natural.<= (Set.size s)) (Set.size t)))))) ;)

def term_99 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_15 (term_83 A s_2 (term_93 A t_1)).

def type_26 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) (hol.arr (type_5 A) (type_5 A)).

(; Constant Set.union ;)

Set_2Eunion : A : hol.type -> hol.term (type_4 A).

def term_100 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => Set_2Eunion (type_26 A) (term_27 A s_2) (term_92 A t_1).

def term_101 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_1 A (term_100 A t_1 s_2).

def term_102 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_7 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_80 (term_30 A s_1).

def term_103 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_102 A s_2 (term_97 A t_1).

def term_104 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_99 A t_2 s_1 (term_45 (term_101 A t_2 s_1) (term_103 A t_2 s_1)))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (term_104 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Number.Natural.<= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_105 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_86 A s_2 (term_92 A t_1).

def term_106 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_15 (term_94 A t_2 (term_105 A t_2 s_1)) (term_26 (term_40 A s_1 (term_97 A t_2)) (term_33 A s_1 (term_92 A t_2))))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (term_106 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ((= ((= (Set.size s)) (Set.size t))) ((= s) t))))) ;)

def term_107 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_16 (term_68 A b_1).

def term_108 : A : hol.type -> b_1 : hol.term (type_5 A) -> a_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => b_1 : hol.term (type_5 A) => a_2 : hol.term (type_5 A) => term_32 A (term_66 A a_2) (term_67 A b_1).

def term_109 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (a_1 : hol.term (type_5 A) => term_25 A (b_2 : hol.term (type_5 A) => term_15 (term_107 A b_2 (term_73 A b_2 a_1 (term_0 (term_69 A a_1) (term_70 A b_2)))) (term_108 A b_2 a_1))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_109 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite b)) ((Data.Bool./\ ((Set.subset a) b)) ((= (Set.size a)) (Set.size b))))) ((= a) b)))) ;)

def term_110 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (a_1 : hol.term (type_5 A) => term_25 A (b_2 : hol.term (type_5 A) => term_15 (term_107 A b_2 (term_73 A b_2 a_1 (term_45 (term_70 A b_2) (term_69 A a_1)))) (term_108 A b_2 a_1))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (term_110 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite b)) ((Data.Bool./\ ((Set.subset a) b)) ((Number.Natural.<= (Set.size b)) (Set.size a))))) ((= a) b)))) ;)

def term_111 : B : hol.type -> t_1 : hol.term (type_14 B) -> hol.term (type_14 B) :=
  B : hol.type => t_1 : hol.term (type_14 B) => t_1.

def term_112 : B : hol.type -> t_1 : hol.term (type_14 B) -> hol.term type_1 :=
  B : hol.type => t_1 : hol.term (type_14 B) => term_19 B (term_111 B t_1).

def term_113 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_15 (term_83 A s_2 (term_112 B t_1)).

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_27 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_4 A) (type_13 B).

def type_28 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_27 B A).

def term_114 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_28 B A) type_0) :=
  B : hol.type => A : hol.type => Set_2Esize (hol.arr (type_28 B A) type_0).

(; Constant Set.cross ;)

Set_2Ecross : A : hol.type -> hol.term (type_4 A).

def term_115 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term (type_28 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => Set_2Ecross (hol.arr (type_5 A) (hol.arr (type_14 B) (type_28 B A))) (term_27 A s_2) (term_111 B t_1).

(; Constant Number.Natural.* ;)

Number_2ENatural_2E_2A : A : hol.type -> hol.term (type_4 A).

def term_116 : hol.term type_24 :=
  Number_2ENatural_2E_2A type_24.

def term_117 : B : hol.type -> t_1 : hol.term (type_14 B) -> hol.term type_0 :=
  B : hol.type => t_1 : hol.term (type_14 B) => term_46 B (term_111 B t_1).

def term_118 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_116 (term_30 A s_2) (term_117 B t_1).

def term_119 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_113 B A t_2 s_1 (term_0 (term_114 B A (term_115 B A t_2 s_1)) (term_118 B A t_2 s_1)))).

(; axiom ;)

thm_24 : B : hol.type -> A : hol.type -> hol.proof (term_119 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

def term_120 : n_1 : hol.term type_0 -> hol.term type_2 :=
  n_1 : hol.term type_0 => term_45 (term_37 n_1).

def term_121 : A : hol.type -> s_1 : hol.term (type_5 A) -> n_2 : hol.term type_0 -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => n_2 : hol.term type_0 => term_120 n_2 (term_30 A s_1).

def term_122 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_42 A s_2 (term_121 A s_2 n_1).

def term_123 : A : hol.type -> hol.term (type_18 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_18 A).

def term_124 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term (type_12 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_72 A (term_92 A t_1).

def term_125 : A : hol.type -> s_1 : hol.term (type_5 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => t_2 : hol.term (type_5 A) => term_124 A t_2 (term_27 A s_1).

def term_126 : A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_5 A) => term_9 A (term_92 A t_2) (term_37 n_1).

def term_127 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_123 A (t_3 : hol.term (type_5 A) => term_16 (term_125 A s_2 t_3) (term_126 A n_1 t_3)).

def term_128 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_36 (n_1 : hol.term type_0 => term_25 A (s_2 : hol.term (type_5 A) => term_26 (term_122 A n_1 s_2) (term_127 A n_1 s_2))).

(; axiom ;)

thm_25 : A : hol.type -> hol.proof (term_128 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda s. ((= ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

def term_129 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_15 (term_83 A s_1 (term_121 A s_1 n_2)) (term_127 A n_2 s_1))).

(; axiom ;)

thm_26 : A : hol.type -> hol.proof (term_129 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

def term_130 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_15 (term_122 A n_2 s_1) (term_127 A n_2 s_1))).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (term_130 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_4 A).

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_4 A).

def term_131 : A : hol.type -> hol.term (hol.arr (type_4 A) (type_12 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_4 A) (type_12 A)).

def term_132 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_131 A (term_11 A x_2) (term_27 A s_1).

def term_133 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_24 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => Data_2EBool_2Econd (hol.arr type_1 type_24) (term_132 A s_1 x_2).

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_4 A).

def term_134 : hol.term type_7 :=
  Number_2ENatural_2Esuc type_7.

def term_135 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_8 A (x_1 : hol.term (type_4 A) => term_25 A (s_2 : hol.term (type_5 A) => term_42 A s_2 (term_0 (term_1 A (term_12 A x_1 (term_27 A s_2))) (term_133 A s_2 x_1 (term_30 A s_2) (term_134 (term_30 A s_2)))))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (term_135 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (Set.size s)) (Number.Natural.suc (Set.size s))))))) ;)

(; Constant Set.difference ;)

Set_2Edifference : A : hol.type -> hol.term (type_4 A).

def term_136 : A : hol.type -> hol.term (type_26 A) :=
  A : hol.type => Set_2Edifference (type_26 A).

def term_137 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_136 A (term_27 A s_2) (term_92 A t_1).

(; Constant Number.Natural.- ;)

Number_2ENatural_2E_2D : A : hol.type -> hol.term (type_4 A).

def term_138 : hol.term type_24 :=
  Number_2ENatural_2E_2D type_24.

def term_139 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_7 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_138 (term_30 A s_1).

def term_140 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_15 (term_83 A s_1 (term_125 A s_1 t_2)) (term_0 (term_1 A (term_137 A t_2 s_1)) (term_139 A s_1 (term_97 A t_2))))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (term_140 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Set.subset t) s))) ((= (Set.size ((Set.difference s) t))) ((Number.Natural.- (Set.size s)) (Set.size t)))))) ;)

def term_141 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_0 (term_101 A t_1 s_2).

def term_142 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_99 A t_2 s_1 (term_141 A t_2 s_1 (term_102 A s_1 (term_1 A (term_136 A (term_92 A t_2) (term_27 A s_1))))))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_142 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size ((Set.difference t) s))))))) ;)

def term_143 : A : hol.type -> m_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => m_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_16 (term_29 A s_2 (term_55 m_1)).

def term_144 : B : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_14 B) -> hol.term type_1 :=
  B : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_14 B) => term_75 B (term_111 B t_2) (term_37 n_1).

def term_145 : B : hol.type -> A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_14 B) -> m_3 : hol.term type_0 -> s_4 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_14 B) => m_3 : hol.term type_0 => s_4 : hol.term (type_5 A) => term_15 (term_143 A m_3 s_4 (term_144 B n_1 t_2)).

def term_146 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_28 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2EhasSize (hol.arr (type_28 B A) type_2).

def term_147 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => term_116 (term_55 m_2) (term_37 n_1).

def term_148 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_145 B A n_4 t_2 m_3 s_1 (term_146 B A (term_115 B A t_2 s_1) (term_147 n_4 m_3)))))).

(; axiom ;)

thm_31 : B : hol.type -> A : hol.type -> hol.proof (term_148 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize ((Set.cross s) t)) ((Number.Natural.* m) n))))))) ;)

(; Constant Set.delete ;)

Set_2Edelete : A : hol.type -> hol.term (type_4 A).

def term_149 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (hol.arr (type_4 A) (type_5 A)) :=
  A : hol.type => s_1 : hol.term (type_5 A) => Set_2Edelete (hol.arr (type_5 A) (hol.arr (type_4 A) (type_5 A))) (term_27 A s_1).

def term_150 : A : hol.type -> x_1 : hol.term (type_4 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => s_2 : hol.term (type_5 A) => term_149 A s_2 (term_11 A x_1).

def term_151 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_8 A (x_1 : hol.term (type_4 A) => term_25 A (s_2 : hol.term (type_5 A) => term_42 A s_2 (term_0 (term_1 A (term_150 A x_1 s_2)) (term_133 A s_2 x_1 (term_139 A s_2 term_5) (term_30 A s_2))))).

(; axiom ;)

thm_32 : A : hol.type -> hol.proof (term_151 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size ((Set.delete s) x))) (((Data.Bool.cond ((Set.member x) s)) ((Number.Natural.- (Set.size s)) (Number.Natural.bit1 Number.Natural.zero))) (Set.size s)))))) ;)

def type_29 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_5 A).

def term_152 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_29 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => Set_2EfromPredicate (hol.arr (type_12 A) (type_29 A)) (v_2 : hol.term (type_5 A) => term_123 A (t_3 : hol.term (type_5 A) => term_16 (term_32 A v_2 (term_92 A t_3)) (term_125 A s_1 t_3))).

def term_153 : hol.term type_7 :=
  term_62 term_6.

def term_154 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_42 A s_1 (term_0 (Set_2Esize (hol.arr (type_29 A) type_0) (term_152 A s_1)) (term_153 (term_30 A s_1)))).

(; axiom ;)

thm_33 : A : hol.type -> hol.proof (term_154 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) ((Number.Natural.^ (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) (Set.size s))))) ;)

def term_155 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_39 A n_2 s_1 (Set_2EhasSize (hol.arr (type_29 A) type_2) (term_152 A s_1) (term_153 (term_37 n_2))))).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (term_155 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Number.Natural.^ (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) n))))) ;)

def term_156 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_141 A t_1 s_2 (term_103 A t_1 s_2).

(; Constant Set.disjoint ;)

Set_2Edisjoint : A : hol.type -> hol.term (type_4 A).

def term_157 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => Set_2Edisjoint (type_19 A) (term_27 A s_2) (term_92 A t_1).

def term_158 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_99 A t_2 s_1 (term_26 (term_156 A t_2 s_1) (term_157 A t_2 s_1)))).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (term_158 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))) ((Set.disjoint s) t))))) ;)

def term_159 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_15 (term_83 A s_1 (term_94 A t_2 (term_157 A t_2 s_1))) (term_156 A t_2 s_1))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (term_159 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Set.disjoint s) t)))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_160 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_26 (term_29 A s_2 (term_134 (term_37 n_1))).

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_4 A).

def term_161 : hol.term type_10 :=
  Data_2EBool_2E_7E type_10.

def term_162 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_161 (term_34 A s_1).

def term_163 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (type_12 A) :=
  A : hol.type => a_1 : hol.term (type_4 A) => term_131 A (term_87 A a_1).

def term_164 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_160 A n_2 s_1 (term_16 (term_162 A s_1) (term_8 A (a_3 : hol.term (type_4 A) => term_15 (term_163 A a_3 (term_27 A s_1)) (term_9 A (term_149 A s_1 (term_87 A a_3)) (term_37 n_2))))))).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (term_164 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) (Number.Natural.suc n))) ((Data.Bool./\ (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Set.member a) s)) ((Set.hasSize ((Set.delete s) a)) n))))))) ;)

(; Constant Set.intersect ;)

Set_2Eintersect : A : hol.type -> hol.term (type_4 A).

def term_165 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_1 A (Set_2Eintersect (type_26 A) (term_27 A s_2) (term_92 A t_1)).

def term_166 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_99 A t_2 s_1 (term_141 A t_2 s_1 (term_138 (term_103 A t_2 s_1) (term_165 A t_2 s_1))))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (term_166 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.- ((Number.Natural.+ (Set.size s)) (Set.size t))) (Set.size ((Set.intersect s) t))))))) ;)

def term_167 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_99 A t_2 s_1 (term_0 (term_80 (term_101 A t_2 s_1) (term_165 A t_2 s_1)) (term_103 A t_2 s_1)))).

(; axiom ;)

thm_39 : A : hol.type -> hol.proof (term_167 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= ((Number.Natural.+ (Set.size ((Set.union s) t))) (Set.size ((Set.intersect s) t)))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_168 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_15 (term_83 A s_1 (term_94 A t_2 (term_57 (term_101 A t_2 s_1) (term_103 A t_2 s_1)))) (term_161 (term_157 A t_2 s_1)))).

(; axiom ;)

thm_40 : A : hol.type -> hol.proof (term_168 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.< (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) (Data.Bool.~ ((Set.disjoint s) t))))) ;)

def term_169 : A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_5 A) -> hol.term type_10 :=
  A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_5 A) => term_16 (term_126 A n_1 t_2).

def term_170 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_160 A n_2 s_1 (term_85 A (a_3 : hol.term (type_4 A) => term_123 A (t_4 : hol.term (type_5 A) => term_169 A n_2 t_4 (term_16 (term_161 (term_163 A a_3 (term_92 A t_4))) (term_33 A s_1 (term_88 A a_3 (term_92 A t_4))))))))).

(; axiom ;)

thm_41 : A : hol.type -> hol.proof (term_170 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) (Number.Natural.suc n))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.hasSize t) n)) ((Data.Bool./\ (Data.Bool.~ ((Set.member a) t))) ((= s) ((Set.insert a) t))))))))) ;)

def term_171 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_15 (term_143 A m_3 s_1 (term_169 A n_4 t_2 (term_157 A t_2 s_1))) (term_9 A (term_100 A t_2 s_1) (term_80 (term_55 m_3) (term_37 n_4))))))).

(; axiom ;)

thm_42 : A : hol.type -> hol.proof (term_171 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ ((Set.hasSize t) n)) ((Set.disjoint s) t)))) ((Set.hasSize ((Set.union s) t)) ((Number.Natural.+ m) n))))))) ;)

def term_172 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_15 (term_143 A m_3 s_1 (term_169 A n_4 t_2 (term_125 A s_1 t_2))) (term_9 A (term_137 A t_2 s_1) (term_138 (term_55 m_3) (term_37 n_4))))))).

(; axiom ;)

thm_43 : A : hol.type -> hol.proof (term_172 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ ((Set.hasSize t) n)) ((Set.subset t) s)))) ((Set.hasSize ((Set.difference s) t)) ((Number.Natural.- m) n))))))) ;)

def term_173 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => u_1 : hol.term (type_5 A) => u_1.

def term_174 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => u_1 : hol.term (type_5 A) => term_17 A (term_173 A u_1).

def term_175 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => u_1 : hol.term (type_5 A) => term_1 A (term_173 A u_1).

def term_176 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_25 A (t_2 : hol.term (type_5 A) => term_25 A (u_3 : hol.term (type_5 A) => term_15 (term_16 (term_174 A u_3) (term_16 (term_157 A t_2 s_1) (term_32 A (term_100 A t_2 s_1) (term_173 A u_3)))) (term_0 (term_103 A t_2 s_1) (term_175 A u_3))))).

(; axiom ;)

thm_44 : A : hol.type -> hol.proof (term_176 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ (Set.finite u)) ((Data.Bool./\ ((Set.disjoint s) t)) ((= ((Set.union s) t)) u)))) ((= ((Number.Natural.+ (Set.size s)) (Set.size t))) (Set.size u)))))) ;)

def type_30 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) (type_4 A).

def term_177 : A : hol.type -> hol.term (hol.arr (hol.arr (type_30 A) type_1) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_30 A) type_1) type_1).

def term_178 : A : hol.type -> f_1 : hol.term (type_30 A) -> hol.term (type_30 A) :=
  A : hol.type => f_1 : hol.term (type_30 A) => f_1.

def term_179 : A : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_30 A) -> hol.term (type_5 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_30 A) => Set_2Eimage (hol.arr (type_30 A) (hol.arr (type_5 A) (type_5 A))) (term_178 A f_2) (term_27 A s_1).

def term_180 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_16 (term_132 A s_1 x_2).

def term_181 : A : hol.type -> y_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => y_1 : hol.term (type_4 A) => y_1.

def term_182 : A : hol.type -> s_1 : hol.term (type_5 A) -> y_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => y_2 : hol.term (type_4 A) => term_131 A (term_181 A y_2) (term_27 A s_1).

def term_183 : A : hol.type -> s_1 : hol.term (type_5 A) -> y_2 : hol.term (type_4 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_5 A) => y_2 : hol.term (type_4 A) => term_16 (term_182 A s_1 y_2).

def term_184 : A : hol.type -> hol.term (hol.arr (type_4 A) (type_8 A)) :=
  A : hol.type => hol.eq (type_4 A).

def term_185 : A : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_30 A) -> hol.term (type_8 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_30 A) => term_184 A (term_178 A f_2 (term_11 A x_1)).

def term_186 : A : hol.type -> y_1 : hol.term (type_4 A) -> x_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => y_1 : hol.term (type_4 A) => x_2 : hol.term (type_4 A) => term_184 A (term_11 A x_2) (term_181 A y_1).

def term_187 : A : hol.type -> f_1 : hol.term (type_30 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => f_1 : hol.term (type_30 A) => s_2 : hol.term (type_5 A) => term_8 A (x_3 : hol.term (type_4 A) => term_8 A (y_4 : hol.term (type_4 A) => term_15 (term_180 A s_2 x_3 (term_183 A s_2 y_4 (term_185 A x_3 f_1 (term_178 A f_1 (term_181 A y_4))))) (term_186 A y_4 x_3))).

def term_188 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_177 A (f_2 : hol.term (type_30 A) => term_15 (term_83 A s_1 (term_32 A (term_179 A s_1 f_2) (term_27 A s_1))) (term_187 A f_2 s_1))).

(; axiom ;)

thm_45 : A : hol.type -> hol.proof (term_188 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((= ((Set.image f) s)) s))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

def type_31 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_27 B A) type_1.

def term_189 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_31 B A) (type_28 B A)) :=
  B : hol.type => A : hol.type => Set_2EfromPredicate (hol.arr (type_31 B A) (type_28 B A)).

def type_32 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_13 B) type_1.

def type_33 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_32 B) type_1.

def term_190 : B : hol.type -> hol.term (type_33 B) :=
  B : hol.type => Data_2EBool_2E_3F (type_33 B).

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_4 A).

def term_191 : B : hol.type -> y_1 : hol.term (type_13 B) -> hol.term (type_13 B) :=
  B : hol.type => y_1 : hol.term (type_13 B) => y_1.

def term_192 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_13 B) -> x_2 : hol.term (type_4 A) -> v_3 : hol.term (type_27 B A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_13 B) => x_2 : hol.term (type_4 A) => v_3 : hol.term (type_27 B A) => term_16 (hol.eq (type_27 B A) v_3 (Data_2EPair_2E_2C (hol.arr (type_4 A) (hol.arr (type_13 B) (type_27 B A))) (term_11 A x_2) (term_191 B y_1))).

def term_193 : B : hol.type -> hol.term (hol.arr (type_13 B) (type_15 B)) :=
  B : hol.type => Set_2Emember (hol.arr (type_13 B) (type_15 B)).

def term_194 : B : hol.type -> y_1 : hol.term (type_13 B) -> hol.term (type_15 B) :=
  B : hol.type => y_1 : hol.term (type_13 B) => term_193 B (term_191 B y_1).

def term_195 : B : hol.type -> t_1 : hol.term (type_14 B) -> y_2 : hol.term (type_13 B) -> hol.term type_1 :=
  B : hol.type => t_1 : hol.term (type_14 B) => y_2 : hol.term (type_13 B) => term_194 B y_2 (term_111 B t_1).

def term_196 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term (type_28 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_189 B A (v_3 : hol.term (type_27 B A) => term_85 A (x_4 : hol.term (type_4 A) => term_190 B (y_5 : hol.term (type_13 B) => term_192 B A y_5 x_4 v_3 (term_180 A s_2 x_4 (term_195 B t_1 y_5))))).

def term_197 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_113 B A t_2 s_1 (term_0 (term_114 B A (term_196 B A t_2 s_1)) (term_118 B A t_2 s_1)))).

(; axiom ;)

thm_46 : B : hol.type -> A : hol.type -> hol.proof (term_197 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

def type_34 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_0 (type_4 A).

def term_198 : A : hol.type -> m_1 : hol.term type_0 -> f_2 : hol.term (type_34 A) -> hol.term (type_4 A) :=
  A : hol.type => m_1 : hol.term type_0 => f_2 : hol.term (type_34 A) => f_2 (term_55 m_1).

def term_199 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_15 (term_132 A s_1 x_2).

(; Constant Data.Bool.?! ;)

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term (type_4 A).

def term_200 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_36 (n_2 : hol.term type_0 => term_39 A n_2 s_1 (Data_2EBool_2E_3F (hol.arr (hol.arr (type_34 A) type_1) type_1) (f_3 : hol.term (type_34 A) => term_16 (term_36 (m_4 : hol.term type_0 => term_15 (term_58 n_2 m_4) (term_131 A (term_198 A m_4 f_3) (term_27 A s_1)))) (term_8 A (x_4 : hol.term (type_4 A) => term_199 A s_1 x_4 (Data_2EBool_2E_3F_21 type_20 (m_5 : hol.term type_0 => term_16 (term_58 n_2 m_5) (term_184 A (term_198 A m_5 f_3) (term_11 A x_4)))))))))).

(; axiom ;)

thm_47 : A : hol.type -> hol.proof (term_200 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) (Data.Bool.? \lambda f. ((Data.Bool./\ (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) ((Set.member (f m)) s)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.?! \lambda m. ((Data.Bool./\ ((Number.Natural.< m) n)) ((= (f m)) x)))))))))) ;)

def term_201 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_16 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_16 B A) => term_0 (term_50 A B s_1 f_2) (term_30 A s_1).

def term_202 : B : hol.type -> hol.term (hol.arr (type_13 B) (type_32 B)) :=
  B : hol.type => hol.eq (type_13 B).

def term_203 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_16 B A) -> hol.term (type_13 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_16 B A) => term_47 B A f_2 (term_11 A x_1).

def term_204 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_16 B A) -> hol.term (type_32 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_16 B A) => term_202 B (term_203 B A x_1 f_2).

def term_205 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_16 B A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_16 B A) => s_2 : hol.term (type_5 A) => term_8 A (x_3 : hol.term (type_4 A) => term_8 A (y_4 : hol.term (type_4 A) => term_15 (term_180 A s_2 x_3 (term_183 A s_2 y_4 (term_204 A B x_3 f_1 (term_47 B A f_1 (term_181 A y_4))))) (term_186 A y_4 x_3))).

def term_206 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_42 A s_2 (term_26 (term_201 A B s_2 f_1) (term_205 B A f_1 s_2)))).

(; axiom ;)

thm_48 : B : hol.type -> A : hol.type -> hol.proof (term_206 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= ((= (Set.size ((Set.image f) s))) (Set.size s))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_207 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_16 B A) -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_16 B A) => s_2 : hol.term (type_5 A) => term_16 (term_205 B A f_1 s_2).

def term_208 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_15 (term_207 B A f_1 s_2 (term_28 A s_2)) (term_201 A B s_2 f_1))).

(; axiom ;)

thm_49 : B : hol.type -> A : hol.type -> hol.proof (term_208 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Set.finite s))) ((= (Set.size ((Set.image f) s))) (Set.size s))))) ;)

def term_209 : A : hol.type -> p_1 : hol.term (type_12 A) -> hol.term (type_12 A) :=
  A : hol.type => p_1 : hol.term (type_12 A) => p_1.

def term_210 : A : hol.type -> s_1 : hol.term (type_5 A) -> p_2 : hol.term (type_12 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => p_2 : hol.term (type_12 A) => term_209 A p_2 (term_27 A s_1).

def term_211 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_18 A) type_1) (p_1 : hol.term (type_12 A) => term_15 (term_16 (term_209 A p_1 (term_2 A)) (term_25 A (s_2 : hol.term (type_5 A) => term_15 (term_83 A s_2 (term_162 A s_2)) (term_85 A (x_3 : hol.term (type_4 A) => term_180 A s_2 x_3 (term_15 (term_209 A p_1 (term_150 A x_3 s_2)) (term_210 A s_2 p_1))))))) (term_25 A (s_2 : hol.term (type_5 A) => term_42 A s_2 (term_210 A s_2 p_1)))).

(; axiom ;)

thm_50 : A : hol.type -> hol.proof (term_211 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Data.Bool.~ ((= s) Set.{})))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool.==> (p ((Set.delete s) x))) (p s)))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

def term_212 : A : hol.type -> B : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> f_3 : hol.term (type_16 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => f_3 : hol.term (type_16 B A) => term_75 B (term_49 B A s_2 f_3) (term_37 n_1).

def term_213 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_36 (n_3 : hol.term type_0 => term_15 (term_205 B A f_1 s_2) (term_26 (term_212 A B n_3 s_2 f_1) (term_38 A n_3 s_2))))).

(; axiom ;)

thm_51 : B : hol.type -> A : hol.type -> hol.proof (term_213 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ((= ((Set.hasSize ((Set.image f) s)) n)) ((Set.hasSize s) n)))))) ;)

def term_214 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_36 (n_3 : hol.term type_0 => term_15 (term_207 B A f_1 s_2 (term_38 A n_3 s_2)) (term_212 A B n_3 s_2 f_1)))).

(; axiom ;)

thm_52 : B : hol.type -> A : hol.type -> hol.proof (term_214 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ((Set.hasSize s) n))) ((Set.hasSize ((Set.image f) s)) n))))) ;)

def term_215 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_145 B A n_4 t_2 m_3 s_1 (term_146 B A (term_196 B A t_2 s_1) (term_147 n_4 m_3)))))).

(; axiom ;)

thm_53 : B : hol.type -> A : hol.type -> hol.proof (term_215 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))))) ((Number.Natural.* m) n))))))) ;)

def term_216 : A : hol.type -> u_1 : hol.term (type_5 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => u_1 : hol.term (type_5 A) => t_2 : hol.term (type_5 A) => term_124 A t_2 (term_173 A u_1).

def term_217 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_36 (n_1 : hol.term type_0 => term_25 A (s_2 : hol.term (type_5 A) => term_25 A (u_3 : hol.term (type_5 A) => term_15 (term_16 (term_86 A s_2 (term_173 A u_3)) (term_83 A s_2 (term_16 (term_84 A s_2 (term_37 n_1)) (term_15 (term_174 A u_3) (term_120 n_1 (term_175 A u_3)))))) (term_123 A (t_4 : hol.term (type_5 A) => term_16 (term_105 A t_4 s_2) (term_16 (term_216 A u_3 t_4) (term_126 A n_1 t_4))))))).

(; axiom ;)

thm_54 : A : hol.type -> hol.proof (term_217 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda s. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ ((Number.Natural.<= (Set.size s)) n)) ((Data.Bool.==> (Set.finite u)) ((Number.Natural.<= n) (Set.size u))))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset s) t)) ((Data.Bool./\ ((Set.subset t) u)) ((Set.hasSize t) n)))))))) ;)

def term_218 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_14 B) -> x_2 : hol.term (type_4 A) -> f_3 : hol.term (type_16 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_14 B) => x_2 : hol.term (type_4 A) => f_3 : hol.term (type_16 B A) => term_193 B (term_203 B A x_2 f_3) (term_111 B t_1).

def term_219 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> f_2 : hol.term (type_16 B A) -> s_3 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => f_2 : hol.term (type_16 B A) => s_3 : hol.term (type_5 A) => term_16 (term_8 A (x_4 : hol.term (type_4 A) => term_199 A s_3 x_4 (term_218 A B t_1 x_4 f_2))).

def term_220 : B : hol.type -> hol.term (type_33 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_33 B).

def term_221 : B : hol.type -> t_1 : hol.term (type_14 B) -> y_2 : hol.term (type_13 B) -> hol.term type_10 :=
  B : hol.type => t_1 : hol.term (type_14 B) => y_2 : hol.term (type_13 B) => term_15 (term_195 B t_1 y_2).

def term_222 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_13 B) -> f_2 : hol.term (type_16 B A) -> s_3 : hol.term (type_5 A) -> hol.term (type_8 A) :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_13 B) => f_2 : hol.term (type_16 B A) => s_3 : hol.term (type_5 A) => x_4 : hol.term (type_4 A) => term_180 A s_3 x_4 (term_204 A B x_4 f_2 (term_191 B y_1)).

def term_223 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_44 B A (f_1 : hol.term (type_16 B A) => term_25 A (s_2 : hol.term (type_5 A) => term_91 B (t_3 : hol.term (type_14 B) => term_15 (term_83 A s_2 (term_219 B A t_3 f_1 s_2 (term_220 B (y_4 : hol.term (type_13 B) => term_221 B t_3 y_4 (Data_2EBool_2E_3F_21 (type_9 A) (term_222 B A y_4 f_1 s_2)))))) (term_0 (term_117 B t_3) (term_30 A s_2))))).

(; axiom ;)

thm_55 : B : hol.type -> A : hol.type -> hol.proof (term_223 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.?! \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) ((= (Set.size t)) (Set.size s)))))) ;)

def term_224 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_40 A s_2 (term_117 B t_1).

def term_225 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_16 (term_224 B A t_1 s_2).

def term_226 : B : hol.type -> hol.term (type_25 B) :=
  B : hol.type => hol.eq (type_14 B).

def term_227 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_44 B A (f_3 : hol.term (type_16 B A) => term_15 (term_83 A s_1 (term_225 B A t_2 s_1 (term_226 B (term_49 B A s_1 f_3) (term_111 B t_2)))) (term_205 B A f_3 s_1)))).

(; axiom ;)

thm_56 : B : hol.type -> A : hol.type -> hol.proof (term_227 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ ((= (Set.size s)) (Set.size t))) ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_228 : B : hol.type -> t_1 : hol.term (type_14 B) -> hol.term type_10 :=
  B : hol.type => t_1 : hol.term (type_14 B) => term_16 (term_112 B t_1).

def term_229 : B : hol.type -> A : hol.type -> hol.term (type_22 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_22 B A).

def term_230 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> f_3 : hol.term (type_16 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => f_3 : hol.term (type_16 B A) => term_95 B (term_49 B A s_2 f_3) (term_111 B t_1).

def term_231 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_15 (term_83 A s_1 (term_228 B t_2 (term_84 A s_1 (term_117 B t_2)))) (term_229 B A (f_3 : hol.term (type_16 B A) => term_16 (term_230 A B t_2 s_1 f_3) (term_205 B A f_3 s_1))))).

(; axiom ;)

thm_57 : B : hol.type -> A : hol.type -> hol.proof (term_231 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.<= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((Set.subset ((Set.image f) s)) t)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

def type_35 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_14 B).

def term_232 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_35 B A) type_1) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_35 B A) type_1) type_1).

def term_233 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_35 B A) -> hol.term (type_35 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_35 B A) => t_1.

def term_234 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> t_2 : hol.term (type_35 B A) -> hol.term (type_14 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => t_2 : hol.term (type_35 B A) => term_233 B A t_2 (term_11 A x_1).

def type_36 : hol.type -> hol.type :=
  B : hol.type => Set_2Eset (type_14 B).

(; Constant Set.bigUnion ;)

Set_2EbigUnion : A : hol.type -> hol.term (type_4 A).

def term_235 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> t_2 : hol.term (type_35 B A) -> hol.term (type_14 B) :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => t_2 : hol.term (type_35 B A) => Set_2EbigUnion (hol.arr (type_36 B) (type_14 B)) (Set_2EfromPredicate (hol.arr (type_15 B) (type_36 B)) (v_3 : hol.term (type_14 B) => term_85 A (x_4 : hol.term (type_4 A) => term_16 (term_226 B v_3 (term_234 B A x_4 t_2)) (term_132 A s_1 x_4)))).

def term_236 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_232 B A (t_2 : hol.term (type_35 B A) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_15 (term_143 A m_3 s_1 (term_8 A (x_5 : hol.term (type_4 A) => term_199 A s_1 x_5 (term_16 (term_19 B (term_234 B A x_5 t_2)) (term_45 (term_46 B (term_234 B A x_5 t_2)) (term_37 n_4)))))) (term_45 (term_46 B (term_235 A B s_1 t_2)) (term_147 n_4 m_3)))))).

(; axiom ;)

thm_58 : B : hol.type -> A : hol.type -> hol.proof (term_236 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Set.finite (t x))) ((Number.Natural.<= (Set.size (t x))) n)))))) ((Number.Natural.<= (Set.size (Set.bigUnion (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) (t x))) ((Set.member x) s))))))) ((Number.Natural.* m) n))))))) ;)

def term_237 : B : hol.type -> A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_35 B A) -> s_3 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_35 B A) => s_3 : hol.term (type_5 A) => term_8 A (x_4 : hol.term (type_4 A) => term_199 A s_3 x_4 (term_75 B (term_234 B A x_4 t_2) (term_37 n_1))).

def term_238 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_232 B A (t_2 : hol.term (type_35 B A) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_15 (term_143 A m_3 s_1 (term_237 B A n_4 t_2 s_1)) (term_146 B A (term_189 B A (v_5 : hol.term (type_27 B A) => term_85 A (x_6 : hol.term (type_4 A) => term_190 B (y_7 : hol.term (type_13 B) => term_192 B A y_7 x_6 v_5 (term_180 A s_1 x_6 (term_194 B y_7 (term_234 B A x_6 t_2))))))) (term_147 n_4 m_3)))))).

(; axiom ;)

thm_59 : B : hol.type -> A : hol.type -> hol.proof (term_238 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.hasSize (t x)) n))))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) (t x)))))))) ((Number.Natural.* m) n))))))) ;)

def type_37 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_29 A) type_1.

def term_239 : A : hol.type -> hol.term (hol.arr (type_5 A) (type_37 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_5 A) (type_37 A)).

def term_240 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term (type_29 A) :=
  A : hol.type => f_1 : hol.term (type_29 A) => f_1.

def term_241 : A : hol.type -> f_1 : hol.term (type_29 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => f_1 : hol.term (type_29 A) => t_2 : hol.term (type_5 A) => term_239 A (term_92 A t_2) (term_240 A f_1).

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_4 A).

def term_242 : hol.term type_11 :=
  Data_2EBool_2E_5C_2F type_11.

def term_243 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term (type_5 A) :=
  A : hol.type => f_1 : hol.term (type_29 A) => Set_2EbigUnion (hol.arr (type_29 A) (type_5 A)) (term_240 A f_1).

def term_244 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_37 A) type_1) (f_1 : hol.term (type_29 A) => term_36 (n_2 : hol.term type_0 => term_15 (term_16 (term_25 A (t_3 : hol.term (type_5 A) => term_25 A (u_4 : hol.term (type_5 A) => term_15 (term_16 (term_241 A f_1 t_3) (term_239 A (term_173 A u_4) (term_240 A f_1))) (term_242 (term_216 A u_4 t_3) (term_72 A (term_173 A u_4) (term_92 A t_3)))))) (term_25 A (t_3 : hol.term (type_5 A) => term_15 (term_241 A f_1 t_3) (term_94 A t_3 (term_45 (term_97 A t_3) (term_37 n_2)))))) (term_16 (term_17 A (term_243 A f_1)) (term_45 (term_1 A (term_243 A f_1)) (term_37 n_2))))).

(; axiom ;)

thm_60 : A : hol.type -> hol.proof (term_244 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda t. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ ((Set.member t) f)) ((Set.member u) f))) ((Data.Bool.\/ ((Set.subset t) u)) ((Set.subset u) t)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) f)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.<= (Set.size t)) n)))))) ((Data.Bool./\ (Set.finite (Set.bigUnion f))) ((Number.Natural.<= (Set.size (Set.bigUnion f))) n))))) ;)

def term_245 : B : hol.type -> A : hol.type -> d_1 : hol.term (type_13 B) -> t_2 : hol.term (type_14 B) -> s_3 : hol.term (type_5 A) -> hol.term (type_17 B A) :=
  B : hol.type => A : hol.type => d_1 : hol.term (type_13 B) => t_2 : hol.term (type_14 B) => s_3 : hol.term (type_5 A) => Set_2EfromPredicate (hol.arr (type_21 B A) (type_17 B A)) (v_4 : hol.term (type_16 B A) => term_229 B A (f_5 : hol.term (type_16 B A) => term_16 (hol.eq (type_16 B A) v_4 (term_47 B A f_5)) (term_219 B A t_2 f_5 s_3 (term_8 A (x_6 : hol.term (type_4 A) => term_15 (term_161 (term_132 A s_3 x_6)) (term_204 A B x_6 f_5 d_1)))))).

def term_246 : A : hol.type -> B : hol.type -> hol.term type_1 :=
  A : hol.type => B : hol.type => term_220 B (d_1 : hol.term (type_13 B) => term_25 A (s_2 : hol.term (type_5 A) => term_91 B (t_3 : hol.term (type_14 B) => term_113 B A t_3 s_2 (term_0 (term_61 B A (term_245 B A d_1 t_3 s_2)) (term_62 (term_117 B t_3) (term_30 A s_2)))))).

(; axiom ;)

thm_61 : A : hol.type -> B : hol.type -> hol.proof (term_246 A B).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Number.Natural.^ (Set.size t)) (Set.size s))))))) ;)

def term_247 : A : hol.type -> B : hol.type -> hol.term type_1 :=
  A : hol.type => B : hol.type => term_220 B (d_1 : hol.term (type_13 B) => term_25 A (s_2 : hol.term (type_5 A) => term_91 B (t_3 : hol.term (type_14 B) => term_36 (m_4 : hol.term type_0 => term_36 (n_5 : hol.term type_0 => term_145 B A n_5 t_3 m_4 s_2 (term_76 B A (term_245 B A d_1 t_3 s_2) (term_77 m_4 n_5))))))).

(; axiom ;)

thm_62 : A : hol.type -> B : hol.type -> hol.proof (term_247 A B).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Number.Natural.^ n) m)))))))) ;)

def type_38 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (type_13 B) (type_4 A).

def type_39 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (hol.arr (type_38 A B) type_1) type_1.

def term_248 : A : hol.type -> B : hol.type -> hol.term (type_39 A B) :=
  A : hol.type => B : hol.type => Data_2EBool_2E_21 (type_39 A B).

def term_249 : A : hol.type -> B : hol.type -> g_1 : hol.term (type_38 A B) -> hol.term (type_38 A B) :=
  A : hol.type => B : hol.type => g_1 : hol.term (type_38 A B) => g_1.

def term_250 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_38 A B) -> t_2 : hol.term (type_14 B) -> f_3 : hol.term (type_16 B A) -> s_4 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_38 A B) => t_2 : hol.term (type_14 B) => f_3 : hol.term (type_16 B A) => s_4 : hol.term (type_5 A) => term_16 (term_8 A (x_5 : hol.term (type_4 A) => term_199 A s_4 x_5 (term_16 (term_218 A B t_2 x_5 f_3) (term_184 A (term_249 A B g_1 (term_203 B A x_5 f_3)) (term_11 A x_5))))).

def term_251 : A : hol.type -> B : hol.type -> y_1 : hol.term (type_13 B) -> g_2 : hol.term (type_38 A B) -> hol.term (type_4 A) :=
  A : hol.type => B : hol.type => y_1 : hol.term (type_13 B) => g_2 : hol.term (type_38 A B) => term_249 A B g_2 (term_191 B y_1).

def term_252 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_16 B A) -> s_2 : hol.term (type_5 A) -> g_3 : hol.term (type_38 A B) -> t_4 : hol.term (type_14 B) -> hol.term type_1 :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_16 B A) => s_2 : hol.term (type_5 A) => g_3 : hol.term (type_38 A B) => t_4 : hol.term (type_14 B) => term_220 B (y_5 : hol.term (type_13 B) => term_221 B t_4 y_5 (term_16 (term_131 A (term_251 A B y_5 g_3) (term_27 A s_2)) (term_202 B (term_47 B A f_1 (term_251 A B y_5 g_3)) (term_191 B y_5)))).

def term_253 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_44 B A (f_3 : hol.term (type_16 B A) => term_248 A B (g_4 : hol.term (type_38 A B) => term_36 (n_5 : hol.term type_0 => term_15 (term_250 B A g_4 t_2 f_3 s_1 (term_16 (term_252 A B f_3 s_1 g_4 t_2) (term_38 A n_5 s_1))) (term_144 B n_5 t_2)))))).

(; axiom ;)

thm_63 : B : hol.type -> A : hol.type -> hol.proof (term_253 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ((Set.hasSize s) n)))) ((Set.hasSize t) n))))))) ;)

def term_254 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_38 A B) -> t_2 : hol.term (type_14 B) -> f_3 : hol.term (type_16 B A) -> s_4 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_38 A B) => t_2 : hol.term (type_14 B) => f_3 : hol.term (type_16 B A) => s_4 : hol.term (type_5 A) => term_250 B A g_1 t_2 f_3 s_4 (term_252 A B f_3 s_4 g_1 t_2).

def term_255 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_44 B A (f_3 : hol.term (type_16 B A) => term_248 A B (g_4 : hol.term (type_38 A B) => term_15 (term_254 B A g_4 t_2 f_3 s_1) (term_36 (n_5 : hol.term type_0 => term_26 (term_38 A n_5 s_1) (term_144 B n_5 t_2))))))).

(; axiom ;)

thm_64 : B : hol.type -> A : hol.type -> hol.proof (term_255 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda n. ((= ((Set.hasSize s) n)) ((Set.hasSize t) n)))))))) ;)

def term_256 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_177 A (f_2 : hol.term (type_30 A) => term_15 (term_83 A s_1 (term_72 A (term_179 A s_1 f_2) (term_27 A s_1))) (term_26 (term_8 A (y_3 : hol.term (type_4 A) => term_15 (term_182 A s_1 y_3) (term_85 A (x_4 : hol.term (type_4 A) => term_180 A s_1 x_4 (term_185 A x_4 f_2 (term_181 A y_3)))))) (term_187 A f_2 s_1)))).

(; axiom ;)

thm_65 : A : hol.type -> hol.proof (term_256 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Set.subset ((Set.image f) s)) s))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_257 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_44 B A (f_3 : hol.term (type_16 B A) => term_248 A B (g_4 : hol.term (type_38 A B) => term_15 (term_16 (term_242 (term_28 A s_1) (term_112 B t_2)) (term_254 B A g_4 t_2 f_3 s_1)) (term_224 B A t_2 s_1))))).

(; axiom ;)

thm_66 : B : hol.type -> A : hol.type -> hol.proof (term_257 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.\/ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ((= (Set.size s)) (Set.size t))))))) ;)

def term_258 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_14 B) -> s_2 : hol.term (type_5 A) -> hol.term type_10 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_14 B) => s_2 : hol.term (type_5 A) => term_15 (term_83 A s_2 (term_228 B t_1 (term_224 B A t_1 s_2))).

def term_259 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_258 B A t_2 s_1 (term_229 B A (f_3 : hol.term (type_16 B A) => Data_2EBool_2E_3F (type_39 A B) (g_4 : hol.term (type_38 A B) => term_254 B A g_4 t_2 f_3 s_1))))).

(; axiom ;)

thm_67 : B : hol.type -> A : hol.type -> hol.proof (term_259 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))))) ;)

def term_260 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_16 B A) -> s_2 : hol.term (type_5 A) -> t_3 : hol.term (type_14 B) -> hol.term type_1 :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_16 B A) => s_2 : hol.term (type_5 A) => t_3 : hol.term (type_14 B) => term_220 B (y_4 : hol.term (type_13 B) => term_221 B t_3 y_4 (term_85 A (term_222 B A y_4 f_1 s_2))).

def term_261 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_44 B A (f_3 : hol.term (type_16 B A) => term_15 (term_83 A s_1 (term_228 B t_2 (term_225 B A t_2 s_1 (term_230 A B t_2 s_1 f_3)))) (term_26 (term_260 A B f_3 s_1 t_2) (term_205 B A f_3 s_1))))).

(; axiom ;)

thm_68 : B : hol.type -> A : hol.type -> hol.proof (term_261 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((= (Set.size s)) (Set.size t))) ((Set.subset ((Set.image f) s)) t))))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

def term_262 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_232 B A (t_2 : hol.term (type_35 B A) => term_36 (m_3 : hol.term type_0 => term_36 (n_4 : hol.term type_0 => term_15 (term_143 A m_3 s_1 (term_16 (term_237 B A n_4 t_2 s_1) (term_8 A (x_5 : hol.term (type_4 A) => term_8 A (y_6 : hol.term (type_4 A) => term_15 (term_180 A s_1 x_5 (term_183 A s_1 y_6 (term_161 (term_186 A y_6 x_5)))) (Set_2Edisjoint (type_25 B) (term_234 B A x_5 t_2) (term_233 B A t_2 (term_181 A y_6)))))))) (term_75 B (term_235 A B s_1 t_2) (term_147 n_4 m_3)))))).

(; axiom ;)

thm_69 : B : hol.type -> A : hol.type -> hol.proof (term_262 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.hasSize (t x)) n)))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) (Data.Bool.~ ((= x) y))))) ((Set.disjoint (t x)) (t y)))))))) ((Set.hasSize (Set.bigUnion (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) (t x))) ((Set.member x) s)))))) ((Number.Natural.* m) n))))))) ;)

def term_263 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 A (s_1 : hol.term (type_5 A) => term_91 B (t_2 : hol.term (type_14 B) => term_258 B A t_2 s_1 (term_229 B A (f_3 : hol.term (type_16 B A) => term_219 B A t_2 f_3 s_1 (term_16 (term_260 A B f_3 s_1 t_2) (term_205 B A f_3 s_1)))))).

(; axiom ;)

thm_70 : B : hol.type -> A : hol.type -> hol.proof (term_263 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))))) ;)

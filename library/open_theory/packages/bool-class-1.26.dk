
(; This file was generated by Holide. ;)

#NAME bool_2Dclass_2D1_2E26.

def type_0 : hol.type :=
  hol.bool.

def type_1 : hol.type :=
  hol.arr type_0 type_0.

def type_2 : hol.type :=
  hol.arr type_1 type_0.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term type_2 :=
  Data_2EBool_2E_21 type_2.

def type_3 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term A.

def term_1 : hol.term type_3 :=
  Data_2EBool_2E_5C_2F type_3.

def term_2 : t_1 : hol.term type_0 -> hol.term type_0 :=
  t_1 : hol.term type_0 => t_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

def term_3 : hol.term type_1 :=
  Data_2EBool_2E_7E type_1.

def term_4 : t_1 : hol.term type_0 -> hol.term type_0 :=
  t_1 : hol.term type_0 => term_3 (term_2 t_1).

def term_5 : hol.term type_0 :=
  term_0 (t_1 : hol.term type_0 => term_1 (term_2 t_1) (term_4 t_1)).

(; axiom ;)

thm_0 : hol.proof term_5.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.\/ t) (Data.Bool.~ t))) ;)

def type_4 : hol.type -> hol.type :=
  A : hol.type => A.

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_0.

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_0.

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_6 A) type_0.

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_4 A).

def term_6 : A : hol.type -> hol.term (type_6 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_6 A).

def term_7 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => p_1 : hol.term (type_5 A) => p_1.

def term_8 : A : hol.type -> hol.term (hol.arr (type_5 A) (type_4 A)) :=
  A : hol.type => hol.select (type_4 A).

def term_9 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term (type_4 A) :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_8 A (term_7 A p_1).

def term_10 : A : hol.type -> hol.term type_0 :=
  A : hol.type => hol.eq (type_6 A) (term_6 A) (p_1 : hol.term (type_5 A) => term_7 A p_1 (term_9 A p_1)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_10 A).

(; Theorem: |- ((= Data.Bool.?) \lambda p. (p (select p))) ;)

def term_11 : hol.term type_3 :=
  hol.eq type_0.

def term_12 : hol.term type_0 :=
  term_0 (t_1 : hol.term type_0 => term_11 (term_3 (term_4 t_1)) (term_2 t_1)).

(; axiom ;)

thm_2 : hol.proof term_12.

(; Theorem: |- (Data.Bool.! \lambda t. ((= (Data.Bool.~ (Data.Bool.~ t))) t)) ;)

def term_13 : A : hol.type -> hol.term (type_6 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_6 A).

def term_14 : A : hol.type -> hol.term (hol.arr (type_4 A) (type_5 A)) :=
  A : hol.type => hol.eq (type_4 A).

def term_15 : A : hol.type -> y_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => y_1 : hol.term (type_4 A) => y_1.

def term_16 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => x_1.

def term_17 : A : hol.type -> x_1 : hol.term (type_4 A) -> y_2 : hol.term (type_4 A) -> hol.term type_0 :=
  A : hol.type => x_1 : hol.term (type_4 A) => y_2 : hol.term (type_4 A) => term_14 A (term_15 A y_2) (term_16 A x_1).

def term_18 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_13 A (x_1 : hol.term (type_4 A) => term_14 A (term_8 A (y_2 : hol.term (type_4 A) => term_17 A x_1 y_2)) (term_16 A x_1)).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_18 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (select \lambda y. ((= y) x))) x)) ;)

def term_19 : t_1 : hol.term type_0 -> hol.term type_1 :=
  t_1 : hol.term type_0 => term_11 (term_2 t_1).

(; Constant Data.Bool.T ;)

Data_2EBool_2ET : A : hol.type -> hol.term (type_4 A).

def term_20 : hol.term type_0 :=
  Data_2EBool_2ET type_0.

(; Constant Data.Bool.F ;)

Data_2EBool_2EF : A : hol.type -> hol.term (type_4 A).

def term_21 : hol.term type_0 :=
  Data_2EBool_2EF type_0.

def term_22 : hol.term type_0 :=
  term_0 (t_1 : hol.term type_0 => term_1 (term_19 t_1 term_20) (term_19 t_1 term_21)).

(; axiom ;)

thm_4 : hol.proof term_22.

(; Theorem: |- (Data.Bool.! \lambda t. ((Data.Bool.\/ ((= t) Data.Bool.T)) ((= t) Data.Bool.F))) ;)

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_4 A).

def term_23 : A : hol.type -> hol.term (hol.arr type_0 (hol.arr (type_4 A) (hol.arr (type_4 A) (type_4 A)))) :=
  A : hol.type => Data_2EBool_2Econd (hol.arr type_0 (hol.arr (type_4 A) (hol.arr (type_4 A) (type_4 A)))).

def term_24 : A : hol.type -> t1_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => t1_1 : hol.term (type_4 A) => t1_1.

def term_25 : A : hol.type -> t2_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => t2_1 : hol.term (type_4 A) => t2_1.

def term_26 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_13 A (t1_1 : hol.term (type_4 A) => term_13 A (t2_2 : hol.term (type_4 A) => term_14 A (term_23 A term_21 (term_24 A t1_1) (term_25 A t2_2)) (term_25 A t2_2))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_26 A).

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.F) t1) t2)) t2))) ;)

def term_27 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_13 A (t1_1 : hol.term (type_4 A) => term_13 A (t2_2 : hol.term (type_4 A) => term_14 A (term_23 A term_20 (term_24 A t1_1) (term_25 A t2_2)) (term_24 A t1_1))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_27 A).

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond Data.Bool.T) t1) t2)) t1))) ;)

def term_28 : b_1 : hol.term type_0 -> hol.term type_0 :=
  b_1 : hol.term type_0 => b_1.

def term_29 : A : hol.type -> b_1 : hol.term type_0 -> hol.term (hol.arr (type_4 A) (hol.arr (type_4 A) (type_4 A))) :=
  A : hol.type => b_1 : hol.term type_0 => term_23 A (term_28 b_1).

def term_30 : A : hol.type -> t_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => t_1 : hol.term (type_4 A) => t_1.

def term_31 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (b_1 : hol.term type_0 => term_13 A (t_2 : hol.term (type_4 A) => term_14 A (term_29 A b_1 (term_30 A t_2) (term_30 A t_2)) (term_30 A t_2))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_31 A).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda t. ((= (((Data.Bool.cond b) t) t)) t))) ;)

def term_32 : hol.term (hol.arr type_2 type_0) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_0).

def term_33 : p_1 : hol.term type_1 -> hol.term type_1 :=
  p_1 : hol.term type_1 => p_1.

def term_34 : p_1 : hol.term type_1 -> hol.term type_1 :=
  p_1 : hol.term type_1 => b_2 : hol.term type_0 => term_33 p_1 (term_28 b_2).

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_4 A).

def term_35 : hol.term type_3 :=
  Data_2EBool_2E_2F_5C type_3.

def term_36 : p_1 : hol.term type_1 -> hol.term type_0 :=
  p_1 : hol.term type_1 => term_33 p_1 term_20.

def term_37 : p_1 : hol.term type_1 -> hol.term type_0 :=
  p_1 : hol.term type_1 => term_33 p_1 term_21.

def term_38 : hol.term type_0 :=
  term_32 (p_1 : hol.term type_1 => term_11 (term_0 (term_34 p_1)) (term_35 (term_36 p_1) (term_37 p_1))).

(; axiom ;)

thm_8 : hol.proof term_38.

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda b. (p b))) ((Data.Bool./\ (p Data.Bool.T)) (p Data.Bool.F)))) ;)

def term_39 : hol.term type_0 :=
  term_32 (p_1 : hol.term type_1 => term_11 (Data_2EBool_2E_3F type_2 (term_34 p_1)) (term_1 (term_36 p_1) (term_37 p_1))).

(; axiom ;)

thm_9 : hol.proof term_39.

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda b. (p b))) ((Data.Bool.\/ (p Data.Bool.T)) (p Data.Bool.F)))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_4 A).

def term_40 : hol.term type_3 :=
  Data_2EBool_2E_3D_3D_3E type_3.

def term_41 : hol.term type_0 :=
  term_32 (p_1 : hol.term type_1 => term_40 (term_35 (term_37 p_1) (term_36 p_1)) (term_0 (x_2 : hol.term type_0 => term_33 p_1 x_2))).

(; axiom ;)

thm_10 : hol.proof term_41.

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Data.Bool.F)) (p Data.Bool.T))) (Data.Bool.! \lambda x. (p x)))) ;)

def term_42 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_7 A).

def term_43 : A : hol.type -> x_1 : hol.term (type_4 A) -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => x_1 : hol.term (type_4 A) => p_2 : hol.term (type_5 A) => term_7 A p_2 (term_16 A x_1).

def term_44 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => p_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_3 (term_43 A x_2 p_1).

def term_45 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_13 A (term_44 A p_1).

def term_46 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => p_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_43 A x_2 p_1.

def term_47 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_3 (term_6 A (term_46 A p_1)).

def term_48 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_11 (term_45 A p_1) (term_47 A p_1)).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (term_48 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda x. (Data.Bool.~ (p x)))) (Data.Bool.~ (Data.Bool.? \lambda x. (p x))))) ;)

def term_49 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_6 A (term_44 A p_1).

def term_50 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_13 A (term_46 A p_1).

def term_51 : A : hol.type -> p_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => p_1 : hol.term (type_5 A) => term_3 (term_50 A p_1).

def term_52 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_11 (term_49 A p_1) (term_51 A p_1)).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_52 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda x. (Data.Bool.~ (p x)))) (Data.Bool.~ (Data.Bool.! \lambda x. (p x))))) ;)

def term_53 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_11 (term_51 A p_1) (term_49 A p_1)).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (term_53 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.~ (Data.Bool.! \lambda x. (p x)))) (Data.Bool.? \lambda x. (Data.Bool.~ (p x))))) ;)

def term_54 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_11 (term_47 A p_1) (term_45 A p_1)).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_54 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.~ (Data.Bool.? \lambda x. (p x)))) (Data.Bool.! \lambda x. (Data.Bool.~ (p x))))) ;)

def term_55 : t1_1 : hol.term type_0 -> hol.term type_0 :=
  t1_1 : hol.term type_0 => t1_1.

def term_56 : t2_1 : hol.term type_0 -> hol.term type_0 :=
  t2_1 : hol.term type_0 => t2_1.

def term_57 : t1_1 : hol.term type_0 -> hol.term type_1 :=
  t1_1 : hol.term type_0 => term_35 (term_55 t1_1).

def term_58 : t2_1 : hol.term type_0 -> hol.term type_0 :=
  t2_1 : hol.term type_0 => term_3 (term_56 t2_1).

def term_59 : hol.term type_0 :=
  term_0 (t1_1 : hol.term type_0 => term_0 (t2_2 : hol.term type_0 => term_11 (term_3 (term_40 (term_55 t1_1) (term_56 t2_2))) (term_57 t1_1 (term_58 t2_2)))).

(; axiom ;)

thm_15 : hol.proof term_59.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.==> t1) t2))) ((Data.Bool./\ t1) (Data.Bool.~ t2))))) ;)

def term_60 : t1_1 : hol.term type_0 -> hol.term type_0 :=
  t1_1 : hol.term type_0 => term_3 (term_55 t1_1).

def term_61 : hol.term type_0 :=
  term_0 (t1_1 : hol.term type_0 => term_0 (t2_2 : hol.term type_0 => term_11 (term_11 (term_60 t1_1) (term_58 t2_2)) (term_11 (term_55 t1_1) (term_56 t2_2)))).

(; axiom ;)

thm_16 : hol.proof term_61.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= ((= (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((= t1) t2)))) ;)

def term_62 : hol.term type_0 :=
  term_0 (t1_1 : hol.term type_0 => term_0 (t2_2 : hol.term type_0 => term_11 (term_40 (term_60 t1_1) (term_58 t2_2)) (term_40 (term_56 t2_2) (term_55 t1_1)))).

(; axiom ;)

thm_17 : hol.proof term_62.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= ((Data.Bool.==> (Data.Bool.~ t1)) (Data.Bool.~ t2))) ((Data.Bool.==> t2) t1)))) ;)

def term_63 : hol.term type_0 :=
  term_0 (t1_1 : hol.term type_0 => term_0 (t2_2 : hol.term type_0 => term_11 (term_3 (term_57 t1_1 (term_56 t2_2))) (term_1 (term_60 t1_1) (term_58 t2_2)))).

(; axiom ;)

thm_18 : hol.proof term_63.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool./\ t1) t2))) ((Data.Bool.\/ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

def term_64 : hol.term type_0 :=
  term_0 (t1_1 : hol.term type_0 => term_0 (t2_2 : hol.term type_0 => term_11 (term_3 (term_1 (term_55 t1_1) (term_56 t2_2))) (term_35 (term_60 t1_1) (term_58 t2_2)))).

(; axiom ;)

thm_19 : hol.proof term_64.

(; Theorem: |- (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (Data.Bool.~ ((Data.Bool.\/ t1) t2))) ((Data.Bool./\ (Data.Bool.~ t1)) (Data.Bool.~ t2))))) ;)

def type_8 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_0 (type_4 A).

def term_65 : A : hol.type -> f_1 : hol.term (type_8 A) -> hol.term (type_8 A) :=
  A : hol.type => f_1 : hol.term (type_8 A) => f_1.

def term_66 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_13 A (a_1 : hol.term (type_4 A) => term_13 A (b_2 : hol.term (type_4 A) => Data_2EBool_2E_3F (hol.arr (hol.arr (type_8 A) type_0) type_0) (f_3 : hol.term (type_8 A) => term_35 (term_14 A (term_65 A f_3 term_21) a_1) (term_14 A (term_65 A f_3 term_20) b_2)))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (term_66 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= (f Data.Bool.F)) a)) ((= (f Data.Bool.T)) b))))) ;)

def term_67 : c_1 : hol.term type_0 -> hol.term type_0 :=
  c_1 : hol.term type_0 => c_1.

def term_68 : c_1 : hol.term type_0 -> hol.term type_0 :=
  c_1 : hol.term type_0 => term_3 (term_67 c_1).

def term_69 : A : hol.type -> c_1 : hol.term type_0 -> hol.term (hol.arr (type_4 A) (hol.arr (type_4 A) (type_4 A))) :=
  A : hol.type => c_1 : hol.term type_0 => term_23 A (term_67 c_1).

def term_70 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (c_1 : hol.term type_0 => term_13 A (x_2 : hol.term (type_4 A) => term_13 A (y_3 : hol.term (type_4 A) => term_14 A (term_23 A (term_68 c_1) (term_16 A x_2) (term_15 A y_3)) (term_69 A c_1 (term_15 A y_3) (term_16 A x_2))))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (term_70 A).

(; Theorem: |- (Data.Bool.! \lambda c. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Data.Bool.cond (Data.Bool.~ c)) x) y)) (((Data.Bool.cond c) y) x))))) ;)

def term_71 : p_1 : hol.term type_0 -> hol.term type_0 :=
  p_1 : hol.term type_0 => p_1.

def term_72 : p_1 : hol.term type_0 -> hol.term type_1 :=
  p_1 : hol.term type_0 => term_1 (term_71 p_1).

def term_73 : A : hol.type -> x_1 : hol.term (type_4 A) -> q_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => x_1 : hol.term (type_4 A) => q_2 : hol.term (type_5 A) => q_2 (term_16 A x_1).

def term_74 : A : hol.type -> q_1 : hol.term (type_5 A) -> p_2 : hol.term type_0 -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term (type_5 A) => p_2 : hol.term type_0 => term_13 A (x_3 : hol.term (type_4 A) => term_72 p_2 (term_73 A x_3 q_1)).

def term_75 : A : hol.type -> q_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => q_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_73 A x_2 q_1.

def term_76 : A : hol.type -> q_1 : hol.term (type_5 A) -> p_2 : hol.term type_0 -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term (type_5 A) => p_2 : hol.term type_0 => term_72 p_2 (term_13 A (term_75 A q_1)).

def term_77 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (p_1 : hol.term type_0 => term_42 A (q_2 : hol.term (type_5 A) => term_11 (term_74 A q_2 p_1) (term_76 A q_2 p_1))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_77 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= (Data.Bool.! \lambda x. ((Data.Bool.\/ p) (q x)))) ((Data.Bool.\/ p) (Data.Bool.! \lambda x. (q x)))))) ;)

def term_78 : p_1 : hol.term type_0 -> hol.term type_1 :=
  p_1 : hol.term type_0 => term_40 (term_71 p_1).

def term_79 : A : hol.type -> q_1 : hol.term (type_5 A) -> p_2 : hol.term type_0 -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term (type_5 A) => p_2 : hol.term type_0 => term_6 A (x_3 : hol.term (type_4 A) => term_78 p_2 (term_73 A x_3 q_1)).

def term_80 : A : hol.type -> q_1 : hol.term (type_5 A) -> p_2 : hol.term type_0 -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term (type_5 A) => p_2 : hol.term type_0 => term_78 p_2 (term_6 A (term_75 A q_1)).

def term_81 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (p_1 : hol.term type_0 => term_42 A (q_2 : hol.term (type_5 A) => term_11 (term_79 A q_2 p_1) (term_80 A q_2 p_1))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (term_81 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= (Data.Bool.? \lambda x. ((Data.Bool.==> p) (q x)))) ((Data.Bool.==> p) (Data.Bool.? \lambda x. (q x)))))) ;)

def term_82 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (p_1 : hol.term type_0 => term_42 A (q_2 : hol.term (type_5 A) => term_11 (term_80 A q_2 p_1) (term_79 A q_2 p_1))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (term_82 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.==> p) (Data.Bool.? \lambda x. (q x)))) (Data.Bool.? \lambda x. ((Data.Bool.==> p) (q x)))))) ;)

def term_83 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_0 (p_1 : hol.term type_0 => term_42 A (q_2 : hol.term (type_5 A) => term_11 (term_76 A q_2 p_1) (term_74 A q_2 p_1))).

(; axiom ;)

thm_25 : A : hol.type -> hol.proof (term_83 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ p) (Data.Bool.! \lambda x. (q x)))) (Data.Bool.! \lambda x. ((Data.Bool.\/ p) (q x)))))) ;)

def term_84 : q_1 : hol.term type_0 -> hol.term type_0 :=
  q_1 : hol.term type_0 => q_1.

def term_85 : A : hol.type -> q_1 : hol.term type_0 -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term type_0 => p_2 : hol.term (type_5 A) => term_13 A (x_3 : hol.term (type_4 A) => term_1 (term_43 A x_3 p_2) (term_84 q_1)).

def term_86 : A : hol.type -> q_1 : hol.term type_0 -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term type_0 => p_2 : hol.term (type_5 A) => term_1 (term_50 A p_2) (term_84 q_1).

def term_87 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_0 (q_2 : hol.term type_0 => term_11 (term_85 A q_2 p_1) (term_86 A q_2 p_1))).

(; axiom ;)

thm_26 : A : hol.type -> hol.proof (term_87 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= (Data.Bool.! \lambda x. ((Data.Bool.\/ (p x)) q))) ((Data.Bool.\/ (Data.Bool.! \lambda x. (p x))) q)))) ;)

def term_88 : A : hol.type -> x_1 : hol.term (type_4 A) -> p_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_4 A) => p_2 : hol.term (type_5 A) => term_40 (term_43 A x_1 p_2).

def term_89 : A : hol.type -> q_1 : hol.term type_0 -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term type_0 => p_2 : hol.term (type_5 A) => term_6 A (x_3 : hol.term (type_4 A) => term_88 A x_3 p_2 (term_84 q_1)).

def term_90 : A : hol.type -> q_1 : hol.term type_0 -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => q_1 : hol.term type_0 => p_2 : hol.term (type_5 A) => term_40 (term_50 A p_2) (term_84 q_1).

def term_91 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_0 (q_2 : hol.term type_0 => term_11 (term_89 A q_2 p_1) (term_90 A q_2 p_1))).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (term_91 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= (Data.Bool.? \lambda x. ((Data.Bool.==> (p x)) q))) ((Data.Bool.==> (Data.Bool.! \lambda x. (p x))) q)))) ;)

def term_92 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_0 (q_2 : hol.term type_0 => term_11 (term_90 A q_2 p_1) (term_89 A q_2 p_1))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (term_92 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.==> (Data.Bool.! \lambda x. (p x))) q)) (Data.Bool.? \lambda x. ((Data.Bool.==> (p x)) q))))) ;)

def term_93 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_0 (q_2 : hol.term type_0 => term_11 (term_86 A q_2 p_1) (term_85 A q_2 p_1))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (term_93 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((= ((Data.Bool.\/ (Data.Bool.! \lambda x. (p x))) q)) (Data.Bool.! \lambda x. ((Data.Bool.\/ (p x)) q))))) ;)

def term_94 : A : hol.type -> y_1 : hol.term (type_4 A) -> p_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => y_1 : hol.term (type_4 A) => p_2 : hol.term (type_5 A) => term_7 A p_2 (term_15 A y_1).

def term_95 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_13 A (x_2 : hol.term (type_4 A) => term_40 (term_13 A (y_3 : hol.term (type_4 A) => term_11 (term_94 A y_3 p_1) (term_17 A x_2 y_3))) (term_14 A (term_9 A p_1) (term_16 A x_2)))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_95 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda y. ((= (p y)) ((= y) x)))) ((= (select p)) x)))) ;)

def type_9 : hol.type -> hol.type :=
  B : hol.type => B.

def type_10 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_9 B) type_0.

def type_11 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_10 B).

def term_96 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_11 B A) type_0) type_0) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_11 B A) type_0) type_0).

def type_12 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_10 B) type_0.

def term_97 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> r_2 : hol.term (type_11 B A) -> hol.term (type_10 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => r_2 : hol.term (type_11 B A) => r_2 (term_16 A x_1).

def term_98 : B : hol.type -> y_1 : hol.term (type_9 B) -> hol.term (type_9 B) :=
  B : hol.type => y_1 : hol.term (type_9 B) => y_1.

def term_99 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_4 A) -> r_2 : hol.term (type_11 B A) -> hol.term type_0 :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_4 A) => r_2 : hol.term (type_11 B A) => Data_2EBool_2E_3F (type_12 B) (y_3 : hol.term (type_9 B) => term_97 B A x_1 r_2 (term_98 B y_3)).

def type_13 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_9 B).

def type_14 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_13 B A) type_0.

def type_15 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_14 B A) type_0.

def term_100 : B : hol.type -> A : hol.type -> hol.term (type_15 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_15 B A).

def term_101 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_13 B A) -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_13 B A) => f_1.

def term_102 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_13 B A) -> hol.term (type_9 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_13 B A) => term_101 B A f_2 (term_16 A x_1).

def term_103 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_13 B A) -> x_2 : hol.term (type_4 A) -> r_3 : hol.term (type_11 B A) -> hol.term type_0 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_13 B A) => x_2 : hol.term (type_4 A) => r_3 : hol.term (type_11 B A) => term_97 B A x_2 r_3 (term_102 B A x_2 f_1).

def term_104 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_96 B A (r_1 : hol.term (type_11 B A) => term_11 (term_13 A (x_2 : hol.term (type_4 A) => term_99 A B x_2 r_1)) (term_100 B A (f_2 : hol.term (type_13 B A) => term_13 A (x_3 : hol.term (type_4 A) => term_103 B A f_2 x_3 r_1)))).

(; axiom ;)

thm_31 : B : hol.type -> A : hol.type -> hol.proof (term_104 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Data.Bool.! \lambda x. (Data.Bool.? \lambda y. ((r x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((r x) (f x)))))) ;)

(; Constant Data.Bool.?! ;)

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term (type_4 A).

def term_105 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> p_2 : hol.term (type_11 B A) -> hol.term (type_10 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => p_2 : hol.term (type_11 B A) => p_2 (term_16 A x_1).

def term_106 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_9 B) -> x_2 : hol.term (type_4 A) -> p_3 : hol.term (type_11 B A) -> hol.term type_0 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_9 B) => x_2 : hol.term (type_4 A) => p_3 : hol.term (type_11 B A) => term_105 B A x_2 p_3 (term_98 B y_1).

def term_107 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_11 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_11 B A) => term_11 (term_13 A (x_2 : hol.term (type_4 A) => Data_2EBool_2E_3F_21 (type_12 B) (y_3 : hol.term (type_9 B) => term_106 B A y_3 x_2 p_1))).

def term_108 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_96 B A (p_1 : hol.term (type_11 B A) => term_107 B A p_1 (Data_2EBool_2E_3F_21 (type_15 B A) (f_2 : hol.term (type_13 B A) => term_13 A (x_3 : hol.term (type_4 A) => term_105 B A x_3 p_1 (term_102 B A x_3 f_2))))).

(; axiom ;)

thm_32 : B : hol.type -> A : hol.type -> hol.proof (term_108 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda x. (Data.Bool.?! \lambda y. ((p x) y)))) (Data.Bool.?! \lambda f. (Data.Bool.! \lambda x. ((p x) (f x)))))) ;)

def term_109 : B : hol.type -> A : hol.type -> hol.term (type_15 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_15 B A).

def term_110 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_13 B A) -> b_3 : hol.term type_0 -> hol.term (hol.arr (type_9 B) (type_9 B)) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_13 B A) => b_3 : hol.term type_0 => Data_2EBool_2Econd (hol.arr type_0 (hol.arr (type_9 B) (hol.arr (type_9 B) (type_9 B)))) (term_28 b_3) (term_102 B A x_1 f_2).

def term_111 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_13 B A) -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_13 B A) => g_1.

def term_112 : A : hol.type -> B : hol.type -> g_1 : hol.term (type_13 B A) -> x_2 : hol.term (type_4 A) -> f_3 : hol.term (type_13 B A) -> b_4 : hol.term type_0 -> hol.term (type_9 B) :=
  A : hol.type => B : hol.type => g_1 : hol.term (type_13 B A) => x_2 : hol.term (type_4 A) => f_3 : hol.term (type_13 B A) => b_4 : hol.term type_0 => term_110 A B x_2 f_3 b_4 (term_111 B A g_1 (term_16 A x_2)).

def term_113 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_13 B A) -> f_2 : hol.term (type_13 B A) -> b_3 : hol.term type_0 -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_13 B A) => f_2 : hol.term (type_13 B A) => b_3 : hol.term type_0 => Data_2EBool_2Econd (hol.arr type_0 (hol.arr (type_13 B A) (hol.arr (type_13 B A) (type_13 B A)))) (term_28 b_3) (term_101 B A f_2) (term_111 B A g_1).

def term_114 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_0 (b_1 : hol.term type_0 => term_109 B A (f_2 : hol.term (type_13 B A) => term_109 B A (g_3 : hol.term (type_13 B A) => hol.eq (type_13 B A) (x_4 : hol.term (type_4 A) => term_112 A B g_3 x_4 f_2 b_1) (term_113 B A g_3 f_2 b_1)))).

(; axiom ;)

thm_33 : B : hol.type -> A : hol.type -> hol.proof (term_114 B A).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= \lambda x. (((Data.Bool.cond b) (f x)) (g x))) (((Data.Bool.cond b) f) g))))) ;)

def term_115 : b_1 : hol.term type_0 -> hol.term type_3 :=
  b_1 : hol.term type_0 => Data_2EBool_2Econd (hol.arr type_0 type_3) (term_28 b_1).

def term_116 : hol.term type_0 :=
  term_0 (b_1 : hol.term type_0 => term_0 (t1_2 : hol.term type_0 => term_0 (t2_3 : hol.term type_0 => term_11 (term_115 b_1 (term_55 t1_2) (term_56 t2_3)) (term_35 (term_1 (term_3 (term_28 b_1)) (term_55 t1_2)) (term_1 (term_28 b_1) (term_56 t2_3)))))).

(; axiom ;)

thm_34 : hol.proof term_116.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda t1. (Data.Bool.! \lambda t2. ((= (((Data.Bool.cond b) t1) t2)) ((Data.Bool./\ ((Data.Bool.\/ (Data.Bool.~ b)) t1)) ((Data.Bool.\/ b) t2)))))) ;)

def term_117 : B : hol.type -> hol.term (hol.arr (type_9 B) (type_10 B)) :=
  B : hol.type => hol.eq (type_9 B).

def term_118 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_0 (b_1 : hol.term type_0 => term_109 B A (f_2 : hol.term (type_13 B A) => term_13 A (x_3 : hol.term (type_4 A) => term_13 A (y_4 : hol.term (type_4 A) => term_117 B (term_101 B A f_2 (term_29 A b_1 (term_16 A x_3) (term_15 A y_4))) (term_110 A B x_3 f_2 b_1 (term_101 B A f_2 (term_15 A y_4))))))).

(; axiom ;)

thm_35 : B : hol.type -> A : hol.type -> hol.proof (term_118 B A).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (f (((Data.Bool.cond b) x) y))) (((Data.Bool.cond b) (f x)) (f y))))))) ;)

def term_119 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_0 (b_1 : hol.term type_0 => term_109 B A (f_2 : hol.term (type_13 B A) => term_109 B A (g_3 : hol.term (type_13 B A) => term_13 A (x_4 : hol.term (type_4 A) => term_117 B (term_113 B A g_3 f_2 b_1 (term_16 A x_4)) (term_112 A B g_3 x_4 f_2 b_1))))).

(; axiom ;)

thm_36 : B : hol.type -> A : hol.type -> hol.proof (term_119 B A).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((= ((((Data.Bool.cond b) f) g) x)) (((Data.Bool.cond b) (f x)) (g x))))))) ;)

def term_120 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_96 B A (p_1 : hol.term (type_11 B A) => term_107 B A p_1 (term_100 B A (f_2 : hol.term (type_13 B A) => term_13 A (x_3 : hol.term (type_4 A) => Data_2EBool_2E_21 (type_12 B) (y_4 : hol.term (type_9 B) => term_11 (term_106 B A y_4 x_3 p_1) (term_117 B (term_102 B A x_3 f_2) (term_98 B y_4))))))).

(; axiom ;)

thm_37 : B : hol.type -> A : hol.type -> hol.proof (term_120 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda x. (Data.Bool.?! \lambda y. ((p x) y)))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((p x) y)) ((= (f x)) y))))))) ;)

def term_121 : A : hol.type -> hol.term type_0 :=
  A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_0 (c_2 : hol.term type_0 => term_13 A (x_3 : hol.term (type_4 A) => term_13 A (y_4 : hol.term (type_4 A) => term_11 (term_7 A p_1 (term_69 A c_2 (term_16 A x_3) (term_15 A y_4))) (term_35 (term_40 (term_67 c_2) (term_43 A x_3 p_1)) (term_40 (term_68 c_2) (term_94 A y_4 p_1))))))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (term_121 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda c. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (p (((Data.Bool.cond c) x) y))) ((Data.Bool./\ ((Data.Bool.==> c) (p x))) ((Data.Bool.==> (Data.Bool.~ c)) (p y)))))))) ;)

def term_122 : B : hol.type -> A : hol.type -> hol.term type_0 :=
  B : hol.type => A : hol.type => term_42 A (p_1 : hol.term (type_5 A) => term_96 B A (r_2 : hol.term (type_11 B A) => term_11 (term_13 A (x_3 : hol.term (type_4 A) => term_88 A x_3 p_1 (term_99 A B x_3 r_2))) (term_100 B A (f_3 : hol.term (type_13 B A) => term_13 A (x_4 : hol.term (type_4 A) => term_88 A x_4 p_1 (term_103 B A f_3 x_4 r_2)))))).

(; axiom ;)

thm_39 : B : hol.type -> A : hol.type -> hol.proof (term_122 B A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda r. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) (Data.Bool.? \lambda y. ((r x) y))))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((Data.Bool.==> (p x)) ((r x) (f x)))))))) ;)

def term_123 : r_1 : hol.term type_0 -> hol.term type_0 :=
  r_1 : hol.term type_0 => r_1.

def term_124 : s_1 : hol.term type_0 -> hol.term type_0 :=
  s_1 : hol.term type_0 => s_1.

def term_125 : hol.term type_0 :=
  term_0 (b_1 : hol.term type_0 => term_0 (p_2 : hol.term type_0 => term_0 (q_3 : hol.term type_0 => term_0 (r_4 : hol.term type_0 => term_0 (s_5 : hol.term type_0 => term_40 (term_35 (term_78 p_2 (term_84 q_3)) (term_40 (term_123 r_4) (term_124 s_5))) (term_40 (term_115 b_1 (term_71 p_2) (term_123 r_4)) (term_115 b_1 (term_84 q_3) (term_124 s_5)))))))).

(; axiom ;)

thm_40 : hol.proof term_125.

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.==> p) q)) ((Data.Bool.==> r) s))) ((Data.Bool.==> (((Data.Bool.cond b) p) r)) (((Data.Bool.cond b) q) s)))))))) ;)

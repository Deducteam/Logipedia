
(; This file was generated by Holide. ;)

#NAME list_2Dfold_2D1_2E29.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Data_2EList_2Elist : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (hol.arr (type_3 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) type_2).

def term_1 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_3 A)) :=
  A : hol.type => hol.eq (type_1 A).

def type_4 : hol.type -> hol.type :=
  B : hol.type => B.

def type_5 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (hol.arr (type_4 B) (type_4 B)).

def type_6 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_5 B A) (hol.arr (type_4 B) (hol.arr (type_1 A) (type_4 B))).

(; Constant list-fold-1.29 ;)

list_2Dfold_2D1_2E29 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.foldr ;)

def Data_2EList_2Efoldr : B : hol.type -> A : hol.type -> hol.term (type_6 B A) :=
  B : hol.type => A : hol.type => list_2Dfold_2D1_2E29 (type_6 B A).

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_1 A).

def type_8 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_7 A).

def type_9 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_7 A).

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_8 A) :=
  A : hol.type => Data_2EList_2E_3A_3A (type_8 A).

def term_3 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EList_2Efoldr (type_1 A) (type_0 A) (term_2 A).

(; Constant Data.List.[] ;)

Data_2EList_2E_5B_5D : A : hol.type -> hol.term (type_0 A).

def term_4 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Data_2EList_2E_5B_5D (type_1 A).

def term_5 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => l_1.

def term_6 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_1 A (term_3 A (term_4 A) (term_5 A l_1)) (term_5 A l_1)).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_6 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= (((Data.List.foldr Data.List.::) Data.List.[]) l)) l)) ;)

def term_7 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_5 B A) type_2) type_2) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_5 B A) type_2) type_2).

def type_10 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_4 B) type_2.

def term_8 : B : hol.type -> hol.term (hol.arr (type_10 B) type_2) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_10 B) type_2).

def term_9 : B : hol.type -> hol.term (hol.arr (type_4 B) (type_10 B)) :=
  B : hol.type => hol.eq (type_4 B).

def term_10 : B : hol.type -> A : hol.type -> hol.term (type_6 B A) :=
  B : hol.type => A : hol.type => Data_2EList_2Efoldr (type_4 B) (type_0 A).

def term_11 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_5 B A) -> hol.term (type_5 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_5 B A) => f_1.

def term_12 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_5 B A) -> hol.term (hol.arr (type_4 B) (hol.arr (type_1 A) (type_4 B))) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_5 B A) => term_10 B A (term_11 B A f_1).

def term_13 : B : hol.type -> b_1 : hol.term (type_4 B) -> hol.term (type_4 B) :=
  B : hol.type => b_1 : hol.term (type_4 B) => b_1.

def term_14 : B : hol.type -> A : hol.type -> b_1 : hol.term (type_4 B) -> f_2 : hol.term (type_5 B A) -> hol.term (hol.arr (type_1 A) (type_4 B)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (type_4 B) => f_2 : hol.term (type_5 B A) => term_12 B A f_2 (term_13 B b_1).

def term_15 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_7 B A (f_1 : hol.term (type_5 B A) => term_8 B (b_2 : hol.term (type_4 B) => term_9 B (term_14 B A b_2 f_1 (term_4 A)) (term_13 B b_2))).

(; axiom ;)

thm_1 : B : hol.type -> A : hol.type -> hol.proof (term_15 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((= (((Data.List.foldr f) b) Data.List.[])) b))) ;)

def type_11 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (type_4 B) (hol.arr (type_0 A) (type_4 B)).

def term_16 : A : hol.type -> B : hol.type -> hol.term (hol.arr (hol.arr (type_11 A B) type_2) type_2) :=
  A : hol.type => B : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_11 A B) type_2) type_2).

def type_12 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (type_11 A B) (hol.arr (type_4 B) (hol.arr (type_1 A) (type_4 B))).

(; Constant Data.List.foldl ;)

def Data_2EList_2Efoldl : A : hol.type -> B : hol.type -> hol.term (type_12 A B) :=
  A : hol.type => B : hol.type => list_2Dfold_2D1_2E29 (type_12 A B).

def term_17 : A : hol.type -> B : hol.type -> hol.term (type_12 A B) :=
  A : hol.type => B : hol.type => Data_2EList_2Efoldl (type_0 A) (type_4 B).

def term_18 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_11 A B) -> hol.term (type_11 A B) :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_11 A B) => f_1.

def term_19 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_11 A B) -> hol.term (hol.arr (type_4 B) (hol.arr (type_1 A) (type_4 B))) :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_11 A B) => term_17 A B (term_18 A B f_1).

def term_20 : A : hol.type -> B : hol.type -> b_1 : hol.term (type_4 B) -> f_2 : hol.term (type_11 A B) -> hol.term (hol.arr (type_1 A) (type_4 B)) :=
  A : hol.type => B : hol.type => b_1 : hol.term (type_4 B) => f_2 : hol.term (type_11 A B) => term_19 A B f_2 (term_13 B b_1).

def term_21 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_16 A B (f_1 : hol.term (type_11 A B) => term_8 B (b_2 : hol.term (type_4 B) => term_9 B (term_20 A B b_2 f_1 (term_4 A)) (term_13 B b_2))).

(; axiom ;)

thm_2 : A : hol.type -> B : hol.type -> hol.proof (term_21 A B).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. ((= (((Data.List.foldl f) b) Data.List.[])) b))) ;)

def type_13 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (hol.arr (type_0 A) (type_1 A)).

(; Constant Function.flip ;)

Function_2Eflip : A : hol.type -> hol.term (type_0 A).

def term_22 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EList_2Efoldl (type_0 A) (type_1 A) (Function_2Eflip (hol.arr (type_8 A) (type_13 A)) (term_2 A)).

(; Constant Data.List.reverse ;)

Data_2EList_2Ereverse : A : hol.type -> hol.term (type_0 A).

def term_23 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Data_2EList_2Ereverse (type_7 A).

def term_24 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => term_23 A (term_5 A l_1).

def term_25 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_1 A (term_22 A (term_4 A) (term_5 A l_1)) (term_24 A l_1)).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_25 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= (((Data.List.foldl (Function.flip Data.List.::)) Data.List.[]) l)) (Data.List.reverse l))) ;)

def term_26 : A : hol.type -> l2_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l2_1 : hol.term (type_1 A) => l2_1.

def term_27 : A : hol.type -> l1_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l1_1 : hol.term (type_1 A) => l1_1.

(; Constant Data.List.@ ;)

Data_2EList_2E_40 : A : hol.type -> hol.term (type_0 A).

def term_28 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EList_2E_40 (type_9 A).

def term_29 : A : hol.type -> l2_1 : hol.term (type_1 A) -> l1_2 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l2_1 : hol.term (type_1 A) => l1_2 : hol.term (type_1 A) => term_28 A (term_27 A l1_2) (term_26 A l2_1).

def term_30 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l1_1 : hol.term (type_1 A) => term_0 A (l2_2 : hol.term (type_1 A) => term_1 A (term_3 A (term_26 A l2_2) (term_27 A l1_1)) (term_29 A l2_2 l1_1))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_30 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= (((Data.List.foldr Data.List.::) l2) l1)) ((Data.List.@ l1) l2)))) ;)

def term_31 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l1_1 : hol.term (type_1 A) => term_0 A (l2_2 : hol.term (type_1 A) => term_1 A (term_22 A (term_26 A l2_2) (term_27 A l1_1)) (term_28 A (term_23 A (term_27 A l1_1)) (term_26 A l2_2)))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_31 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= (((Data.List.foldl (Function.flip Data.List.::)) l2) l1)) ((Data.List.@ (Data.List.reverse l1)) l2)))) ;)

Number_2ENatural_2Enatural : hol.type.

def type_14 : hol.type :=
  Number_2ENatural_2Enatural.

def type_15 : hol.type :=
  hol.arr type_14 type_2.

def term_32 : hol.term (hol.arr type_15 type_2) :=
  Data_2EBool_2E_21 (hol.arr type_15 type_2).

def term_33 : hol.term (hol.arr type_14 type_15) :=
  hol.eq type_14.

def type_16 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_14.

def type_17 : hol.type :=
  hol.arr type_14 type_14.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_0 A).

def term_34 : n_1 : hol.term type_14 -> hol.term type_14 :=
  n_1 : hol.term type_14 => Number_2ENatural_2Esuc type_17 n_1.

def term_35 : k_1 : hol.term type_14 -> hol.term type_14 :=
  k_1 : hol.term type_14 => k_1.

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.length ;)

Data_2EList_2Elength : A : hol.type -> hol.term (type_0 A).

def term_36 : A : hol.type -> k_1 : hol.term type_14 -> l_2 : hol.term (type_1 A) -> hol.term type_14 :=
  A : hol.type => k_1 : hol.term type_14 => l_2 : hol.term (type_1 A) => Number_2ENatural_2E_2B (hol.arr type_14 type_17) (Data_2EList_2Elength (type_16 A) (term_5 A l_2)) (term_35 k_1).

def term_37 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_32 (k_2 : hol.term type_14 => term_33 (Data_2EList_2Efoldl (type_0 A) type_14 (n_3 : hol.term type_14 => x_4 : hol.term (type_0 A) => term_34 n_3) (term_35 k_2) (term_5 A l_1)) (term_36 A k_2 l_1))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_37 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Data.Bool.! \lambda k. ((= (((Data.List.foldl \lambda n. \lambda x. (Number.Natural.suc n)) k) l)) ((Number.Natural.+ (Data.List.length l)) k)))) ;)

def term_38 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_32 (k_2 : hol.term type_14 => term_33 (Data_2EList_2Efoldr type_14 (type_0 A) (x_3 : hol.term (type_0 A) => n_4 : hol.term type_14 => term_34 n_4) (term_35 k_2) (term_5 A l_1)) (term_36 A k_2 l_1))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_38 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Data.Bool.! \lambda k. ((= (((Data.List.foldr \lambda x. \lambda n. (Number.Natural.suc n)) k) l)) ((Number.Natural.+ (Data.List.length l)) k)))) ;)

def term_39 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_7 B A (f_1 : hol.term (type_5 B A) => term_8 B (b_2 : hol.term (type_4 B) => term_0 A (l_3 : hol.term (type_1 A) => term_9 B (term_14 B A b_2 f_1 (term_24 A l_3)) (term_17 A B (Function_2Eflip (hol.arr (type_5 B A) (type_11 A B)) (term_11 B A f_1)) (term_13 B b_2) (term_5 A l_3))))).

(; axiom ;)

thm_8 : B : hol.type -> A : hol.type -> hol.proof (term_39 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l. ((= (((Data.List.foldr f) b) (Data.List.reverse l))) (((Data.List.foldl (Function.flip f)) b) l))))) ;)

def term_40 : B : hol.type -> A : hol.type -> b_1 : hol.term (type_4 B) -> f_2 : hol.term (type_11 A B) -> hol.term (hol.arr (type_1 A) (type_4 B)) :=
  B : hol.type => A : hol.type => b_1 : hol.term (type_4 B) => f_2 : hol.term (type_11 A B) => term_10 B A (Function_2Eflip (hol.arr (type_11 A B) (type_5 B A)) (term_18 A B f_2)) (term_13 B b_1).

def term_41 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_16 A B (f_1 : hol.term (type_11 A B) => term_8 B (b_2 : hol.term (type_4 B) => term_0 A (l_3 : hol.term (type_1 A) => term_9 B (term_20 A B b_2 f_1 (term_5 A l_3)) (term_40 B A b_2 f_1 (term_24 A l_3))))).

(; axiom ;)

thm_9 : A : hol.type -> B : hol.type -> hol.proof (term_41 A B).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l. ((= (((Data.List.foldl f) b) l)) (((Data.List.foldr (Function.flip f)) b) (Data.List.reverse l)))))) ;)

def term_42 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_16 A B (f_1 : hol.term (type_11 A B) => term_8 B (b_2 : hol.term (type_4 B) => term_0 A (l_3 : hol.term (type_1 A) => term_9 B (term_20 A B b_2 f_1 (term_24 A l_3)) (term_40 B A b_2 f_1 (term_5 A l_3))))).

(; axiom ;)

thm_10 : A : hol.type -> B : hol.type -> hol.proof (term_42 A B).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l. ((= (((Data.List.foldl f) b) (Data.List.reverse l))) (((Data.List.foldr (Function.flip f)) b) l))))) ;)

def term_43 : A : hol.type -> hol.term (hol.arr (hol.arr (type_0 A) type_2) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_0 A) type_2) type_2).

def term_44 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => h_1 : hol.term (type_0 A) => h_1.

def term_45 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => t_1.

def term_46 : A : hol.type -> t_1 : hol.term (type_1 A) -> h_2 : hol.term (type_0 A) -> hol.term (type_1 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => h_2 : hol.term (type_0 A) => term_2 A (term_44 A h_2) (term_45 A t_1).

def term_47 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_7 B A (f_1 : hol.term (type_5 B A) => term_8 B (b_2 : hol.term (type_4 B) => term_43 A (h_3 : hol.term (type_0 A) => term_0 A (t_4 : hol.term (type_1 A) => term_9 B (term_14 B A b_2 f_1 (term_46 A t_4 h_3)) (term_11 B A f_1 (term_44 A h_3) (term_14 B A b_2 f_1 (term_45 A t_4))))))).

(; axiom ;)

thm_11 : B : hol.type -> A : hol.type -> hol.proof (term_47 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (((Data.List.foldr f) b) ((Data.List.:: h) t))) ((f h) (((Data.List.foldr f) b) t))))))) ;)

def term_48 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_16 A B (f_1 : hol.term (type_11 A B) => term_8 B (b_2 : hol.term (type_4 B) => term_43 A (h_3 : hol.term (type_0 A) => term_0 A (t_4 : hol.term (type_1 A) => term_9 B (term_20 A B b_2 f_1 (term_46 A t_4 h_3)) (term_19 A B f_1 (term_18 A B f_1 (term_13 B b_2) (term_44 A h_3)) (term_45 A t_4)))))).

(; axiom ;)

thm_12 : A : hol.type -> B : hol.type -> hol.proof (term_48 A B).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (((Data.List.foldl f) b) ((Data.List.:: h) t))) (((Data.List.foldl f) ((f b) h)) t)))))) ;)

def term_49 : A : hol.type -> B : hol.type -> l2_1 : hol.term (type_1 A) -> l1_2 : hol.term (type_1 A) -> b_3 : hol.term (type_4 B) -> f_4 : hol.term (type_5 B A) -> hol.term (type_10 B) :=
  A : hol.type => B : hol.type => l2_1 : hol.term (type_1 A) => l1_2 : hol.term (type_1 A) => b_3 : hol.term (type_4 B) => f_4 : hol.term (type_5 B A) => term_9 B (term_14 B A b_3 f_4 (term_29 A l2_1 l1_2)).

def term_50 : B : hol.type -> A : hol.type -> l2_1 : hol.term (type_1 A) -> b_2 : hol.term (type_4 B) -> f_3 : hol.term (type_5 B A) -> hol.term (type_4 B) :=
  B : hol.type => A : hol.type => l2_1 : hol.term (type_1 A) => b_2 : hol.term (type_4 B) => f_3 : hol.term (type_5 B A) => term_14 B A b_2 f_3 (term_26 A l2_1).

def term_51 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_7 B A (f_1 : hol.term (type_5 B A) => term_8 B (b_2 : hol.term (type_4 B) => term_0 A (l1_3 : hol.term (type_1 A) => term_0 A (l2_4 : hol.term (type_1 A) => term_49 A B l2_4 l1_3 b_2 f_1 (term_12 B A f_1 (term_50 B A l2_4 b_2 f_1) (term_27 A l1_3)))))).

(; axiom ;)

thm_13 : B : hol.type -> A : hol.type -> hol.proof (term_51 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= (((Data.List.foldr f) b) ((Data.List.@ l1) l2))) (((Data.List.foldr f) (((Data.List.foldr f) b) l2)) l1)))))) ;)

def term_52 : A : hol.type -> B : hol.type -> l2_1 : hol.term (type_1 A) -> l1_2 : hol.term (type_1 A) -> b_3 : hol.term (type_4 B) -> f_4 : hol.term (type_11 A B) -> hol.term (type_10 B) :=
  A : hol.type => B : hol.type => l2_1 : hol.term (type_1 A) => l1_2 : hol.term (type_1 A) => b_3 : hol.term (type_4 B) => f_4 : hol.term (type_11 A B) => term_9 B (term_20 A B b_3 f_4 (term_29 A l2_1 l1_2)).

def term_53 : A : hol.type -> B : hol.type -> l1_1 : hol.term (type_1 A) -> b_2 : hol.term (type_4 B) -> f_3 : hol.term (type_11 A B) -> hol.term (type_4 B) :=
  A : hol.type => B : hol.type => l1_1 : hol.term (type_1 A) => b_2 : hol.term (type_4 B) => f_3 : hol.term (type_11 A B) => term_20 A B b_2 f_3 (term_27 A l1_1).

def term_54 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_16 A B (f_1 : hol.term (type_11 A B) => term_8 B (b_2 : hol.term (type_4 B) => term_0 A (l1_3 : hol.term (type_1 A) => term_0 A (l2_4 : hol.term (type_1 A) => term_52 A B l2_4 l1_3 b_2 f_1 (term_19 A B f_1 (term_53 A B l1_3 b_2 f_1) (term_26 A l2_4)))))).

(; axiom ;)

thm_14 : A : hol.type -> B : hol.type -> hol.proof (term_54 A B).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= (((Data.List.foldl f) b) ((Data.List.@ l1) l2))) (((Data.List.foldl f) (((Data.List.foldl f) b) l1)) l2)))))) ;)

def type_18 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_4 B) (hol.arr (type_4 B) (type_4 B)).

def term_55 : B : hol.type -> hol.term (hol.arr (hol.arr (type_18 B) type_2) type_2) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_18 B) type_2) type_2).

def type_19 : hol.type :=
  hol.arr type_2 (hol.arr type_2 type_2).

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_56 : hol.term type_19 :=
  Data_2EBool_2E_3D_3D_3E type_19.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_57 : hol.term type_19 :=
  Data_2EBool_2E_2F_5C type_19.

def term_58 : B : hol.type -> g_1 : hol.term (type_18 B) -> hol.term (type_18 B) :=
  B : hol.type => g_1 : hol.term (type_18 B) => g_1.

def term_59 : B : hol.type -> s_1 : hol.term (type_4 B) -> hol.term (type_4 B) :=
  B : hol.type => s_1 : hol.term (type_4 B) => s_1.

def term_60 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_61 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_5 B A) -> hol.term (hol.arr (type_4 B) (type_4 B)) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_5 B A) => term_11 B A f_2 (term_60 A x_1).

def term_62 : B : hol.type -> s1_1 : hol.term (type_4 B) -> hol.term (type_4 B) :=
  B : hol.type => s1_1 : hol.term (type_4 B) => s1_1.

def term_63 : B : hol.type -> s2_1 : hol.term (type_4 B) -> hol.term (type_4 B) :=
  B : hol.type => s2_1 : hol.term (type_4 B) => s2_1.

def term_64 : B : hol.type -> s1_1 : hol.term (type_4 B) -> g_2 : hol.term (type_18 B) -> hol.term (hol.arr (type_4 B) (type_4 B)) :=
  B : hol.type => s1_1 : hol.term (type_4 B) => g_2 : hol.term (type_18 B) => term_58 B g_2 (term_62 B s1_1).

def term_65 : B : hol.type -> s2_1 : hol.term (type_4 B) -> s1_2 : hol.term (type_4 B) -> g_3 : hol.term (type_18 B) -> hol.term (type_4 B) :=
  B : hol.type => s2_1 : hol.term (type_4 B) => s1_2 : hol.term (type_4 B) => g_3 : hol.term (type_18 B) => term_64 B s1_2 g_3 (term_63 B s2_1).

def term_66 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_55 B (g_1 : hol.term (type_18 B) => term_7 B A (f_2 : hol.term (type_5 B A) => term_8 B (b_3 : hol.term (type_4 B) => term_0 A (l1_4 : hol.term (type_1 A) => term_0 A (l2_5 : hol.term (type_1 A) => term_56 (term_57 (term_8 B (s_6 : hol.term (type_4 B) => term_9 B (term_58 B g_1 (term_13 B b_3) (term_59 B s_6)) (term_59 B s_6))) (term_43 A (x_6 : hol.term (type_0 A) => term_8 B (s1_7 : hol.term (type_4 B) => term_8 B (s2_8 : hol.term (type_4 B) => term_9 B (term_58 B g_1 (term_61 B A x_6 f_2 (term_62 B s1_7)) (term_63 B s2_8)) (term_61 B A x_6 f_2 (term_65 B s2_8 s1_7 g_1))))))) (term_49 A B l2_5 l1_4 b_3 f_2 (term_58 B g_1 (term_14 B A b_3 f_2 (term_27 A l1_4)) (term_50 B A l2_5 b_3 f_2)))))))).

(; axiom ;)

thm_15 : A : hol.type -> B : hol.type -> hol.proof (term_66 A B).

(; Theorem: |- (Data.Bool.! \lambda g. (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda s. ((= ((g b) s)) s))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s1. (Data.Bool.! \lambda s2. ((= ((g ((f x) s1)) s2)) ((f x) ((g s1) s2)))))))) ((= (((Data.List.foldr f) b) ((Data.List.@ l1) l2))) ((g (((Data.List.foldr f) b) l1)) (((Data.List.foldr f) b) l2))))))))) ;)

def term_67 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_55 B (g_1 : hol.term (type_18 B) => term_16 A B (f_2 : hol.term (type_11 A B) => term_8 B (b_3 : hol.term (type_4 B) => term_0 A (l1_4 : hol.term (type_1 A) => term_0 A (l2_5 : hol.term (type_1 A) => term_56 (term_57 (term_8 B (s_6 : hol.term (type_4 B) => term_9 B (term_58 B g_1 (term_59 B s_6) (term_13 B b_3)) (term_59 B s_6))) (term_8 B (s1_6 : hol.term (type_4 B) => term_8 B (s2_7 : hol.term (type_4 B) => term_43 A (x_8 : hol.term (type_0 A) => term_9 B (term_64 B s1_6 g_1 (term_18 A B f_2 (term_63 B s2_7) (term_60 A x_8))) (term_18 A B f_2 (term_65 B s2_7 s1_6 g_1) (term_60 A x_8))))))) (term_52 A B l2_5 l1_4 b_3 f_2 (term_58 B g_1 (term_53 A B l1_4 b_3 f_2) (term_20 A B b_3 f_2 (term_26 A l2_5))))))))).

(; axiom ;)

thm_16 : A : hol.type -> B : hol.type -> hol.proof (term_67 A B).

(; Theorem: |- (Data.Bool.! \lambda g. (Data.Bool.! \lambda f. (Data.Bool.! \lambda b. (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda s. ((= ((g s) b)) s))) (Data.Bool.! \lambda s1. (Data.Bool.! \lambda s2. (Data.Bool.! \lambda x. ((= ((g s1) ((f s2) x))) ((f ((g s1) s2)) x))))))) ((= (((Data.List.foldl f) b) ((Data.List.@ l1) l2))) ((g (((Data.List.foldl f) b) l1)) (((Data.List.foldl f) b) l2))))))))) ;)

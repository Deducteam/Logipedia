
(; This file was generated by Holide. ;)

#NAME relation_2D1_2E62.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_1.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_2 A).

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) type_1.

(; Constant relation-1.62 ;)

relation_2D1_2E62 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => relation_2D1_2E62 (type_4 A).

(; Constant Relation.irreflexive ;)

def Relation_2Eirreflexive : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => term_0 A.

def term_1 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Eirreflexive (type_0 A).

def type_5 : hol.type -> hol.type :=
  B : hol.type => B.

def type_6 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_5 B) type_1.

def type_7 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_6 B).

def term_2 : B : hol.type -> A : hol.type -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_7 B A).

(; Constant Relation.empty ;)

def Relation_2Eempty : B : hol.type -> A : hol.type -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => term_2 B A.

def term_3 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Relation_2Eempty (type_0 A) (type_0 A).

def term_4 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (term_3 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_4 A).

(; Theorem: |- (Relation.irreflexive Relation.empty) ;)

Number_2ENatural_2Enatural : hol.type.

def type_8 : hol.type :=
  Number_2ENatural_2Enatural.

def type_9 : hol.type :=
  hol.arr type_8 type_1.

def type_10 : hol.type :=
  hol.arr type_8 type_9.

def type_11 : hol.type :=
  hol.arr type_10 type_1.

(; Constant Number.Natural.isSuc ;)

def Number_2ENatural_2EisSuc : hol.term type_10 :=
  relation_2D1_2E62 type_10.

def term_5 : hol.term type_10 :=
  Number_2ENatural_2EisSuc.

def term_6 : hol.term type_1 :=
  Relation_2Eirreflexive type_8 term_5.

(; axiom ;)

thm_1 : hol.proof term_6.

(; Theorem: |- (Relation.irreflexive Number.Natural.isSuc) ;)

(; Constant Relation.reflexive ;)

def Relation_2Ereflexive : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => term_0 A.

def term_7 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Ereflexive (type_0 A).

(; Constant Relation.universe ;)

def Relation_2Euniverse : B : hol.type -> A : hol.type -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => term_2 B A.

def term_8 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Relation_2Euniverse (type_0 A) (type_0 A).

def term_9 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_7 A (term_8 A).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_9 A).

(; Theorem: |- (Relation.reflexive Relation.universe) ;)

(; Constant Relation.transitive ;)

def Relation_2Etransitive : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => term_0 A.

def term_10 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Etransitive (type_0 A).

def term_11 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_10 A (term_3 A).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- (Relation.transitive Relation.empty) ;)

def term_12 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_10 A (term_8 A).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_12 A).

(; Theorem: |- (Relation.transitive Relation.universe) ;)

def term_13 : hol.term type_11 :=
  Relation_2Etransitive type_8.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_0 A).

def term_14 : hol.term type_10 :=
  Number_2ENatural_2E_3C type_10.

def term_15 : hol.term type_1 :=
  term_13 term_14.

(; axiom ;)

thm_5 : hol.proof term_15.

(; Theorem: |- (Relation.transitive Number.Natural.<) ;)

(; Constant Relation.wellFounded ;)

def Relation_2EwellFounded : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => term_0 A.

def term_16 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2EwellFounded (type_0 A).

def term_17 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_16 A (term_3 A).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_17 A).

(; Theorem: |- (Relation.wellFounded Relation.empty) ;)

def term_18 : hol.term type_11 :=
  Relation_2EwellFounded type_8.

def term_19 : hol.term type_1 :=
  term_18 term_14.

(; axiom ;)

thm_7 : hol.proof term_19.

(; Theorem: |- (Relation.wellFounded Number.Natural.<) ;)

def term_20 : hol.term type_1 :=
  term_18 term_5.

(; axiom ;)

thm_8 : hol.proof term_20.

(; Theorem: |- (Relation.wellFounded Number.Natural.isSuc) ;)

def type_12 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) type_1.

def type_13 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) (type_12 B A).

(; Constant Relation.subrelation ;)

def Relation_2Esubrelation : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_13 B A).

def type_14 : hol.type :=
  hol.arr type_10 type_11.

def term_21 : hol.term type_14 :=
  Relation_2Esubrelation type_8 type_8.

def term_22 : hol.term type_11 :=
  term_21 term_5.

def term_23 : hol.term type_1 :=
  term_22 term_14.

(; axiom ;)

thm_9 : hol.proof term_23.

(; Theorem: |- ((Relation.subrelation Number.Natural.isSuc) Number.Natural.<) ;)

def term_24 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => hol.eq (type_7 B A).

def term_25 : B : hol.type -> A : hol.type -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => Relation_2Eempty (type_5 B) (type_0 A).

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_15 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_5 B).

Set_2Eset : hol.type -> hol.type.

def type_16 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_15 B A).

def type_17 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) (type_7 B A).

(; Constant Relation.fromSet ;)

def Relation_2EfromSet : B : hol.type -> A : hol.type -> hol.term (type_17 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_17 B A).

def term_26 : B : hol.type -> A : hol.type -> hol.term (type_17 B A) :=
  B : hol.type => A : hol.type => Relation_2EfromSet (type_5 B) (type_0 A).

(; Constant Set.{} ;)

Set_2E_7B_7D : A : hol.type -> hol.term (type_0 A).

def term_27 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_24 B A (term_25 B A) (term_26 B A (Set_2E_7B_7D (type_16 B A))).

(; axiom ;)

thm_10 : B : hol.type -> A : hol.type -> hol.proof (term_27 B A).

(; Theorem: |- ((= Relation.empty) (Relation.fromSet Set.{})) ;)

def term_28 : B : hol.type -> A : hol.type -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => Relation_2Euniverse (type_5 B) (type_0 A).

(; Constant Set.universe ;)

Set_2Euniverse : A : hol.type -> hol.term (type_0 A).

def term_29 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_24 B A (term_28 B A) (term_26 B A (Set_2Euniverse (type_16 B A))).

(; axiom ;)

thm_11 : B : hol.type -> A : hol.type -> hol.proof (term_29 B A).

(; Theorem: |- ((= Relation.universe) (Relation.fromSet Set.universe)) ;)

def type_18 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) (type_3 A).

(; Constant Relation.transitiveClosure ;)

def Relation_2EtransitiveClosure : A : hol.type -> hol.term (type_18 A) :=
  A : hol.type => relation_2D1_2E62 (type_18 A).

def term_30 : hol.term type_1 :=
  hol.eq type_10 (Relation_2EtransitiveClosure type_8 term_5) term_14.

(; axiom ;)

thm_12 : hol.proof term_30.

(; Theorem: |- ((= (Relation.transitiveClosure Number.Natural.isSuc)) Number.Natural.<) ;)

def type_19 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_8.

def type_20 : hol.type -> hol.type :=
  A : hol.type => hol.arr (hol.arr (type_19 A) type_1) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_31 : A : hol.type -> hol.term (type_20 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_20 A).

def type_21 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_19 A) (type_3 A).

(; Constant Relation.measure ;)

def Relation_2Emeasure : A : hol.type -> hol.term (type_21 A) :=
  A : hol.type => relation_2D1_2E62 (type_21 A).

def term_32 : A : hol.type -> m_1 : hol.term (type_19 A) -> hol.term (type_19 A) :=
  A : hol.type => m_1 : hol.term (type_19 A) => m_1.

def term_33 : A : hol.type -> m_1 : hol.term (type_19 A) -> hol.term (type_3 A) :=
  A : hol.type => m_1 : hol.term (type_19 A) => Relation_2Emeasure (type_0 A) (term_32 A m_1).

def term_34 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_31 A (m_1 : hol.term (type_19 A) => term_16 A (term_33 A m_1)).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (term_34 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Relation.wellFounded (Relation.measure m))) ;)

def type_22 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_1.

def term_35 : A : hol.type -> hol.term (type_22 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_22 A).

def term_36 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => r_1.

def term_37 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => Relation_2EtransitiveClosure (type_0 A) (term_36 A r_1).

def term_38 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_10 A (term_37 A r_1)).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_38 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Relation.transitive (Relation.transitiveClosure r))) ;)

def type_23 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_12 B A) type_1.

def term_39 : B : hol.type -> A : hol.type -> hol.term (type_23 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_23 B A).

def term_40 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => Relation_2Esubrelation (type_5 B) (type_0 A).

def term_41 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => r_1.

def term_42 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_12 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => term_40 B A (term_41 B A r_1).

def term_43 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_42 B A r_1 (term_41 B A r_1)).

(; axiom ;)

thm_15 : B : hol.type -> A : hol.type -> hol.proof (term_43 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Relation.subrelation r) r)) ;)

def type_24 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) (type_4 A).

def term_44 : A : hol.type -> hol.term (type_24 A) :=
  A : hol.type => Relation_2Esubrelation (type_0 A) (type_0 A).

def term_45 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_4 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_44 A (term_36 A r_1).

def term_46 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_45 A r_1 (term_37 A r_1)).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (term_46 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Relation.subrelation r) (Relation.transitiveClosure r))) ;)

def type_25 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) type_1.

def term_47 : A : hol.type -> hol.term (type_25 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_25 A).

def type_26 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_6 B) type_1.

def term_48 : B : hol.type -> hol.term (type_26 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_26 B).

def term_49 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_50 : B : hol.type -> y_1 : hol.term (type_5 B) -> hol.term (type_5 B) :=
  B : hol.type => y_1 : hol.term (type_5 B) => y_1.

def term_51 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_47 A (x_1 : hol.term (type_0 A) => term_48 B (y_2 : hol.term (type_5 B) => term_28 B A (term_49 A x_1) (term_50 B y_2))).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (term_51 B A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Relation.universe x) y))) ;)

def type_27 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) type_1.

def term_52 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_27 B A) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_27 B A) type_1).

def type_28 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) (type_27 B A).

def term_53 : B : hol.type -> A : hol.type -> hol.term (type_28 B A) :=
  B : hol.type => A : hol.type => hol.eq (type_16 B A).

def type_29 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) (type_16 B A).

(; Constant Relation.toSet ;)

def Relation_2EtoSet : B : hol.type -> A : hol.type -> hol.term (type_29 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_29 B A).

def term_54 : B : hol.type -> A : hol.type -> hol.term (type_29 B A) :=
  B : hol.type => A : hol.type => Relation_2EtoSet (type_5 B) (type_0 A).

def term_55 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_16 B A) -> hol.term (type_16 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_16 B A) => s_1.

def term_56 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_16 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_16 B A) => term_26 B A (term_55 B A s_1).

def term_57 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_52 B A (s_1 : hol.term (type_16 B A) => term_53 B A (term_54 B A (term_56 B A s_1)) (term_55 B A s_1)).

(; axiom ;)

thm_18 : B : hol.type -> A : hol.type -> hol.proof (term_57 B A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.toSet (Relation.fromSet s))) s)) ;)

def type_30 : hol.type :=
  hol.arr type_1 type_1.

def type_31 : hol.type :=
  hol.arr type_1 type_30.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_58 : hol.term type_31 :=
  Data_2EBool_2E_3D_3D_3E type_31.

def term_59 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_16 A (term_36 A r_1).

def term_60 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_58 (term_59 A r_1).

def term_61 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_1 A (term_36 A r_1).

def term_62 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (term_61 A r_1)).

(; axiom ;)

thm_19 : A : hol.type -> hol.proof (term_62 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.irreflexive r))) ;)

def term_63 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_16 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => term_54 B A (term_41 B A r_1).

def term_64 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_24 B A (term_26 B A (term_63 B A r_1)) (term_41 B A r_1)).

(; axiom ;)

thm_20 : B : hol.type -> A : hol.type -> hol.proof (term_64 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.fromSet (Relation.toSet r))) r)) ;)

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

def term_65 : hol.term type_30 :=
  Data_2EBool_2E_7E type_30.

def term_66 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_47 A (x_1 : hol.term (type_0 A) => term_48 B (y_2 : hol.term (type_5 B) => term_65 (term_25 B A (term_49 A x_1) (term_50 B y_2)))).

(; axiom ;)

thm_21 : B : hol.type -> A : hol.type -> hol.proof (term_66 B A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.~ ((Relation.empty x) y)))) ;)

def term_67 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_7 A (term_36 A r_1).

def term_68 : A : hol.type -> x_1 : hol.term (type_0 A) -> r_2 : hol.term (type_3 A) -> hol.term (type_2 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => r_2 : hol.term (type_3 A) => term_36 A r_2 (term_49 A x_1).

def term_69 : A : hol.type -> x_1 : hol.term (type_0 A) -> r_2 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => r_2 : hol.term (type_3 A) => term_68 A x_1 r_2 (term_49 A x_1).

def term_70 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_47 A (x_2 : hol.term (type_0 A) => term_58 (term_67 A r_1) (term_69 A x_2 r_1))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_70 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. ((Data.Bool.==> (Relation.reflexive r)) ((r x) x)))) ;)

def term_71 : hol.term type_31 :=
  hol.eq type_1.

def term_72 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_71 (term_67 A r_1) (term_47 A (x_2 : hol.term (type_0 A) => term_69 A x_2 r_1))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (term_72 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.reflexive r)) (Data.Bool.! \lambda x. ((r x) x)))) ;)

def type_32 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_7 B A).

def type_33 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_32 B A) type_1.

def term_73 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_33 B A) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_33 B A) type_1).

def type_34 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_32 B A) (type_7 B A).

def term_74 : B : hol.type -> A : hol.type -> hol.term (type_34 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_34 B A).

(; Constant Relation.bigIntersect ;)

def Relation_2EbigIntersect : B : hol.type -> A : hol.type -> hol.term (type_34 B A) :=
  B : hol.type => A : hol.type => term_74 B A.

def term_75 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_32 B A) -> hol.term (type_32 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_32 B A) => s_1.

def term_76 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_32 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_32 B A) => Relation_2EbigIntersect (type_5 B) (type_0 A) (term_75 B A s_1).

def type_35 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_16 B A).

def type_36 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_35 B A) (type_16 B A).

(; Constant Set.bigIntersect ;)

Set_2EbigIntersect : A : hol.type -> hol.term (type_0 A).

(; Constant Set.image ;)

Set_2Eimage : A : hol.type -> hol.term (type_0 A).

def term_77 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_32 B A) -> hol.term (type_35 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_32 B A) => Set_2Eimage (hol.arr (type_29 B A) (hol.arr (type_32 B A) (type_35 B A))) (term_54 B A) (term_75 B A s_1).

def term_78 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_73 B A (s_1 : hol.term (type_32 B A) => term_24 B A (term_76 B A s_1) (term_26 B A (Set_2EbigIntersect (type_36 B A) (term_77 B A s_1)))).

(; axiom ;)

thm_24 : B : hol.type -> A : hol.type -> hol.proof (term_78 B A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.bigIntersect s)) (Relation.fromSet (Set.bigIntersect ((Set.image Relation.toSet) s))))) ;)

(; Constant Relation.bigUnion ;)

def Relation_2EbigUnion : B : hol.type -> A : hol.type -> hol.term (type_34 B A) :=
  B : hol.type => A : hol.type => term_74 B A.

def term_79 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_32 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_32 B A) => Relation_2EbigUnion (type_5 B) (type_0 A) (term_75 B A s_1).

(; Constant Set.bigUnion ;)

Set_2EbigUnion : A : hol.type -> hol.term (type_0 A).

def term_80 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_73 B A (s_1 : hol.term (type_32 B A) => term_24 B A (term_79 B A s_1) (term_26 B A (Set_2EbigUnion (type_36 B A) (term_77 B A s_1)))).

(; axiom ;)

thm_25 : B : hol.type -> A : hol.type -> hol.proof (term_80 B A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.bigUnion s)) (Relation.fromSet (Set.bigUnion ((Set.image Relation.toSet) s))))) ;)

def term_81 : A : hol.type -> x_1 : hol.term (type_0 A) -> r_2 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => r_2 : hol.term (type_3 A) => term_65 (term_69 A x_1 r_2).

def term_82 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_47 A (x_2 : hol.term (type_0 A) => term_58 (term_61 A r_1) (term_81 A x_2 r_1))).

(; axiom ;)

thm_26 : A : hol.type -> hol.proof (term_82 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. ((Data.Bool.==> (Relation.irreflexive r)) (Data.Bool.~ ((r x) x))))) ;)

def term_83 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_47 A (x_2 : hol.term (type_0 A) => term_81 A x_2 r_1).

def term_84 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_71 (term_61 A r_1) (term_83 A r_1)).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (term_84 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.irreflexive r)) (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x))))) ;)

def term_85 : hol.term (hol.arr type_9 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_9 type_1).

def term_86 : m_1 : hol.term type_8 -> hol.term type_8 :=
  m_1 : hol.term type_8 => m_1.

def term_87 : n_1 : hol.term type_8 -> hol.term type_8 :=
  n_1 : hol.term type_8 => n_1.

def term_88 : hol.term type_10 :=
  hol.eq type_8.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_0 A).

def term_89 : hol.term (hol.arr type_8 type_8) :=
  Number_2ENatural_2Esuc (hol.arr type_8 type_8).

def term_90 : hol.term type_1 :=
  term_85 (m_1 : hol.term type_8 => term_85 (n_2 : hol.term type_8 => term_71 (term_5 (term_86 m_1) (term_87 n_2)) (term_88 (term_89 (term_86 m_1)) (term_87 n_2)))).

(; axiom ;)

thm_28 : hol.proof term_90.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_91 : hol.term type_31 :=
  Data_2EBool_2E_2F_5C type_31.

def term_92 : r_1 : hol.term type_10 -> hol.term type_10 :=
  r_1 : hol.term type_10 => r_1.

def term_93 : hol.term type_1 :=
  Data_2EBool_2E_21 (hol.arr type_11 type_1) (r_1 : hol.term type_10 => term_58 (term_91 (term_22 (term_92 r_1)) (term_13 (term_92 r_1))) (term_21 term_14 (term_92 r_1))).

(; axiom ;)

thm_29 : hol.proof term_93.

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation Number.Natural.isSuc) r)) (Relation.transitive r))) ((Relation.subrelation Number.Natural.<) r))) ;)

def term_94 : A : hol.type -> s_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => s_1 : hol.term (type_3 A) => s_1.

def term_95 : A : hol.type -> s_1 : hol.term (type_3 A) -> r_2 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => s_1 : hol.term (type_3 A) => r_2 : hol.term (type_3 A) => term_91 (term_45 A r_2 (term_94 A s_1)).

def term_96 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_35 A (s_2 : hol.term (type_3 A) => term_58 (term_95 A s_2 r_1 (term_16 A (term_94 A s_2))) (term_59 A r_1))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_96 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.wellFounded s))) (Relation.wellFounded r)))) ;)

def term_97 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => s_1.

def term_98 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_42 B A r_2 (term_97 B A s_1).

def term_99 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_71 (term_98 B A s_1 r_2).

(; Constant Set.subset ;)

Set_2Esubset : A : hol.type -> hol.term (type_0 A).

def term_100 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> hol.term (type_16 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => term_54 B A (term_97 B A s_1).

def term_101 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_99 B A s_2 r_1 (Set_2Esubset (type_28 B A) (term_63 B A r_1) (term_100 B A s_2)))).

(; axiom ;)

thm_31 : B : hol.type -> A : hol.type -> hol.proof (term_101 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) ((Set.subset (Relation.toSet r)) (Relation.toSet s))))) ;)

def term_102 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_27 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => term_53 B A (term_63 B A r_1).

def term_103 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_24 B A (term_41 B A r_2) (term_97 B A s_1).

def term_104 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_58 (term_102 B A r_1 (term_100 B A s_2)) (term_103 B A s_2 r_1))).

(; axiom ;)

thm_32 : B : hol.type -> A : hol.type -> hol.proof (term_104 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((= (Relation.toSet r)) (Relation.toSet s))) ((= r) s)))) ;)

def type_37 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) (hol.arr (type_7 B A) (type_7 B A)).

def term_105 : B : hol.type -> A : hol.type -> hol.term (type_37 B A) :=
  B : hol.type => A : hol.type => relation_2D1_2E62 (type_37 B A).

(; Constant Relation.intersect ;)

def Relation_2Eintersect : B : hol.type -> A : hol.type -> hol.term (type_37 B A) :=
  B : hol.type => A : hol.type => term_105 B A.

def term_106 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => Relation_2Eintersect (type_5 B) (type_0 A) (term_41 B A r_2) (term_97 B A s_1).

def type_38 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) (hol.arr (type_16 B A) (type_16 B A)).

(; Constant Set.intersect ;)

Set_2Eintersect : A : hol.type -> hol.term (type_0 A).

def term_107 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_24 B A (term_106 B A s_2 r_1) (term_26 B A (Set_2Eintersect (type_38 B A) (term_63 B A r_1) (term_100 B A s_2))))).

(; axiom ;)

thm_33 : B : hol.type -> A : hol.type -> hol.proof (term_107 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.intersect r) s)) (Relation.fromSet ((Set.intersect (Relation.toSet r)) (Relation.toSet s)))))) ;)

(; Constant Relation.union ;)

def Relation_2Eunion : B : hol.type -> A : hol.type -> hol.term (type_37 B A) :=
  B : hol.type => A : hol.type => term_105 B A.

def term_108 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => Relation_2Eunion (type_5 B) (type_0 A) (term_41 B A r_2) (term_97 B A s_1).

(; Constant Set.union ;)

Set_2Eunion : A : hol.type -> hol.term (type_0 A).

def term_109 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_24 B A (term_108 B A s_2 r_1) (term_26 B A (Set_2Eunion (type_38 B A) (term_63 B A r_1) (term_100 B A s_2))))).

(; axiom ;)

thm_34 : B : hol.type -> A : hol.type -> hol.proof (term_109 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.union r) s)) (Relation.fromSet ((Set.union (Relation.toSet r)) (Relation.toSet s)))))) ;)

def type_39 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_5 B) (type_6 B).

def type_40 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_39 B) type_1.

def term_110 : B : hol.type -> hol.term (hol.arr (type_40 B) type_1) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_40 B) type_1).

def type_41 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_5 B).

def type_42 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_41 B A) type_1.

def type_43 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_42 B A) type_1.

def term_111 : B : hol.type -> A : hol.type -> hol.term (type_43 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_43 B A).

def term_112 : B : hol.type -> hol.term (type_40 B) :=
  B : hol.type => Relation_2EwellFounded (type_5 B).

def term_113 : B : hol.type -> r_1 : hol.term (type_39 B) -> hol.term (type_39 B) :=
  B : hol.type => r_1 : hol.term (type_39 B) => r_1.

def term_114 : B : hol.type -> A : hol.type -> m_1 : hol.term (type_41 B A) -> hol.term (type_41 B A) :=
  B : hol.type => A : hol.type => m_1 : hol.term (type_41 B A) => m_1.

def term_115 : A : hol.type -> y_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => y_1 : hol.term (type_0 A) => y_1.

def term_116 : A : hol.type -> B : hol.type -> hol.term type_1 :=
  A : hol.type => B : hol.type => term_110 B (r_1 : hol.term (type_39 B) => term_111 B A (m_2 : hol.term (type_41 B A) => term_58 (term_112 B (term_113 B r_1)) (term_16 A (x_3 : hol.term (type_0 A) => y_4 : hol.term (type_0 A) => term_113 B r_1 (term_114 B A m_2 (term_49 A x_3)) (term_114 B A m_2 (term_115 A y_4)))))).

(; axiom ;)

thm_35 : A : hol.type -> B : hol.type -> hol.proof (term_116 A B).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda m. ((Data.Bool.==> (Relation.wellFounded r)) (Relation.wellFounded \lambda x. \lambda y. ((r (m x)) (m y)))))) ;)

def term_117 : A : hol.type -> s_1 : hol.term (type_3 A) -> r_2 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_3 A) => r_2 : hol.term (type_3 A) => term_95 A s_1 r_2 (term_10 A (term_94 A s_1)).

def term_118 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_35 A (s_2 : hol.term (type_3 A) => term_58 (term_117 A s_2 r_1) (term_44 A (term_37 A r_1) (term_94 A s_2)))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (term_118 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))) ((Relation.subrelation (Relation.transitiveClosure r)) s)))) ;)

def term_119 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_91 (term_98 B A s_1 r_2).

def term_120 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> hol.term (type_12 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => term_40 B A (term_97 B A s_1).

def term_121 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_58 (term_119 B A s_2 r_1 (term_120 B A s_2 (term_41 B A r_1))) (term_103 B A s_2 r_1))).

(; axiom ;)

thm_37 : B : hol.type -> A : hol.type -> hol.proof (term_121 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) ((Relation.subrelation s) r))) ((= r) s)))) ;)

def term_122 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_31 A (m_1 : hol.term (type_19 A) => term_47 A (x_2 : hol.term (type_0 A) => term_47 A (y_3 : hol.term (type_0 A) => term_71 (term_33 A m_1 (term_49 A x_2) (term_115 A y_3)) (term_14 (term_32 A m_1 (term_49 A x_2)) (term_32 A m_1 (term_115 A y_3)))))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (term_122 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))))) ;)

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_0 A).

def term_123 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_0 A) (hol.arr (type_5 B) (type_15 B A))) :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_5 B) (type_15 B A))).

def term_124 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> hol.term (type_15 B A) :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => term_123 B A (term_49 A x_2) (term_50 B y_1).

def term_125 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> hol.term (type_27 B A) :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => Set_2Emember (hol.arr (type_15 B A) (type_27 B A)) (term_124 B A y_1 x_2).

def term_126 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_52 B A (s_1 : hol.term (type_16 B A) => term_47 A (x_2 : hol.term (type_0 A) => term_48 B (y_3 : hol.term (type_5 B) => term_71 (term_56 B A s_1 (term_49 A x_2) (term_50 B y_3)) (term_125 B A y_3 x_2 (term_55 B A s_1))))).

(; axiom ;)

thm_39 : B : hol.type -> A : hol.type -> hol.proof (term_126 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.fromSet s) x) y)) ((Set.member ((Data.Pair., x) y)) s))))) ;)

def term_127 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_71 (term_59 A r_1).

def type_44 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_8 (type_0 A).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_128 : A : hol.type -> f_1 : hol.term (type_44 A) -> hol.term (type_44 A) :=
  A : hol.type => f_1 : hol.term (type_44 A) => f_1.

def term_129 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_127 A r_1 (term_65 (Data_2EBool_2E_3F (hol.arr (hol.arr (type_44 A) type_1) type_1) (f_2 : hol.term (type_44 A) => term_85 (n_3 : hol.term type_8 => term_36 A r_1 (term_128 A f_2 (term_89 (term_87 n_3))) (term_128 A f_2 (term_87 n_3))))))).

(; axiom ;)

thm_40 : A : hol.type -> hol.proof (term_129 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.wellFounded r)) (Data.Bool.~ (Data.Bool.? \lambda f. (Data.Bool.! \lambda n. ((r (f (Number.Natural.suc n))) (f n))))))) ;)

def term_130 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> r_3 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => r_3 : hol.term (type_7 B A) => term_41 B A r_3 (term_49 A x_2) (term_50 B y_1).

def term_131 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_47 A (x_2 : hol.term (type_0 A) => term_48 B (y_3 : hol.term (type_5 B) => term_71 (term_125 B A y_3 x_2 (term_63 B A r_1)) (term_130 B A y_3 x_2 r_1)))).

(; axiom ;)

thm_41 : B : hol.type -> A : hol.type -> hol.proof (term_131 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((Set.member ((Data.Pair., x) y)) (Relation.toSet r))) ((r x) y))))) ;)

def term_132 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_7 B A) => t_1.

def term_133 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_42 B A r_2 (term_132 B A t_1).

def term_134 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_39 B A (t_3 : hol.term (type_7 B A) => term_58 (term_119 B A s_2 r_1 (term_120 B A s_2 (term_132 B A t_3))) (term_133 B A t_3 r_1)))).

(; axiom ;)

thm_42 : B : hol.type -> A : hol.type -> hol.proof (term_134 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) ((Relation.subrelation s) t))) ((Relation.subrelation r) t))))) ;)

def term_135 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_7 B A) (type_33 B A)) :=
  B : hol.type => A : hol.type => Set_2Emember (hol.arr (type_7 B A) (type_33 B A)).

def term_136 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_73 B A (s_2 : hol.term (type_32 B A) => term_71 (term_42 B A r_1 (term_76 B A s_2)) (term_39 B A (t_3 : hol.term (type_7 B A) => term_58 (term_135 B A (term_132 B A t_3) (term_75 B A s_2)) (term_133 B A t_3 r_1))))).

(; axiom ;)

thm_43 : B : hol.type -> A : hol.type -> hol.proof (term_136 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) (Relation.bigIntersect s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) ((Relation.subrelation r) t)))))) ;)

def term_137 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> s_2 : hol.term (type_7 B A) -> hol.term (type_6 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => s_2 : hol.term (type_7 B A) => term_97 B A s_2 (term_49 A x_1).

def term_138 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> s_3 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => s_3 : hol.term (type_7 B A) => term_137 B A x_2 s_3 (term_50 B y_1).

def term_139 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_99 B A s_2 r_1 (term_47 A (x_3 : hol.term (type_0 A) => term_48 B (y_4 : hol.term (type_5 B) => term_58 (term_130 B A y_4 x_3 r_1) (term_138 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_44 : B : hol.type -> A : hol.type -> hol.proof (term_139 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y))))))) ;)

def term_140 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_58 (term_47 A (x_3 : hol.term (type_0 A) => term_48 B (y_4 : hol.term (type_5 B) => term_71 (term_130 B A y_4 x_3 r_1) (term_138 B A y_4 x_3 s_2)))) (term_103 B A s_2 r_1))).

(; axiom ;)

thm_45 : B : hol.type -> A : hol.type -> hol.proof (term_140 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((r x) y)) ((s x) y))))) ((= r) s)))) ;)

def type_45 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_15 B A) type_1.

(; Constant Set.fromPredicate ;)

Set_2EfromPredicate : A : hol.type -> hol.term (type_0 A).

def term_141 : A : hol.type -> hol.term (type_25 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_25 A).

def term_142 : B : hol.type -> hol.term (type_26 B) :=
  B : hol.type => Data_2EBool_2E_3F (type_26 B).

def type_46 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_15 B A) (type_45 B A).

def term_143 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_102 B A r_1 (Set_2EfromPredicate (hol.arr (type_45 B A) (type_16 B A)) (v_2 : hol.term (type_15 B A) => term_141 A (x_3 : hol.term (type_0 A) => term_142 B (y_4 : hol.term (type_5 B) => term_91 (hol.eq (type_15 B A) v_2 (term_124 B A y_4 x_3)) (term_130 B A y_4 x_3 r_1)))))).

(; axiom ;)

thm_46 : B : hol.type -> A : hol.type -> hol.proof (term_143 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.toSet r)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((r x) y))))))) ;)

def term_144 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_32 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_32 B A) => r_2 : hol.term (type_7 B A) => term_135 B A (term_41 B A r_2) (term_75 B A s_1).

def term_145 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_73 B A (s_1 : hol.term (type_32 B A) => term_47 A (x_2 : hol.term (type_0 A) => term_48 B (y_3 : hol.term (type_5 B) => term_71 (term_76 B A s_1 (term_49 A x_2) (term_50 B y_3)) (term_39 B A (r_4 : hol.term (type_7 B A) => term_58 (term_144 B A s_1 r_4) (term_130 B A y_3 x_2 r_4)))))).

(; axiom ;)

thm_47 : B : hol.type -> A : hol.type -> hol.proof (term_145 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.bigIntersect s) x) y)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Set.member r) s)) ((r x) y))))))) ;)

def term_146 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_73 B A (s_1 : hol.term (type_32 B A) => term_47 A (x_2 : hol.term (type_0 A) => term_48 B (y_3 : hol.term (type_5 B) => term_71 (term_79 B A s_1 (term_49 A x_2) (term_50 B y_3)) (Data_2EBool_2E_3F (type_23 B A) (r_4 : hol.term (type_7 B A) => term_91 (term_144 B A s_1 r_4) (term_130 B A y_3 x_2 r_4)))))).

(; axiom ;)

thm_48 : B : hol.type -> A : hol.type -> hol.proof (term_146 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.bigUnion s) x) y)) (Data.Bool.? \lambda r. ((Data.Bool./\ ((Set.member r) s)) ((r x) y))))))) ;)

def term_147 : A : hol.type -> hol.term (hol.arr (type_25 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_25 A) type_1).

def type_47 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_0 A).

def term_148 : B : hol.type -> A : hol.type -> hol.term (type_43 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_43 B A).

def term_149 : B : hol.type -> hol.term (type_39 B) :=
  B : hol.type => hol.eq (type_5 B).

def term_150 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_41 B A) -> hol.term (type_41 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_41 B A) => f_1.

def term_151 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_41 B A) -> hol.term (type_5 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_41 B A) => term_150 B A f_2 (term_49 A x_1).

def term_152 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_41 B A) -> hol.term (type_6 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_41 B A) => term_149 B (term_151 B A x_1 f_2).

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_0 A).

def term_153 : A : hol.type -> p_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => p_1 : hol.term (type_2 A) => p_1.

def term_154 : A : hol.type -> x_1 : hol.term (type_0 A) -> p_2 : hol.term (type_2 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => p_2 : hol.term (type_2 A) => term_153 A p_2 (term_49 A x_1).

def term_155 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_147 A (p_1 : hol.term (type_2 A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_47 A) type_1) type_1) (g_2 : hol.term (type_47 A) => term_111 B A (h_3 : hol.term (type_41 B A) => term_148 B A (f_4 : hol.term (type_41 B A) => term_47 A (x_5 : hol.term (type_0 A) => term_152 A B x_5 f_4 (Data_2EBool_2Econd (hol.arr type_1 (hol.arr (type_5 B) (hol.arr (type_5 B) (type_5 B)))) (term_154 A x_5 p_1) (term_150 B A f_4 (g_2 (term_49 A x_5))) (h_3 (term_49 A x_5)))))))).

(; axiom ;)

thm_49 : B : hol.type -> A : hol.type -> hol.proof (term_155 B A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda g. (Data.Bool.! \lambda h. (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((= (f x)) (((Data.Bool.cond (p x)) (f (g x))) (h x)))))))) ;)

def term_156 : A : hol.type -> hol.term (type_24 A) :=
  A : hol.type => hol.eq (type_3 A).

def type_48 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_3 A).

def term_157 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_156 A (term_37 A r_1) (Relation_2EbigIntersect (type_0 A) (type_0 A) (Set_2EfromPredicate (hol.arr (type_4 A) (type_48 A)) (v_2 : hol.term (type_3 A) => Data_2EBool_2E_3F (type_22 A) (s_3 : hol.term (type_3 A) => term_91 (term_156 A v_2 (term_94 A s_3)) (term_117 A s_3 r_1)))))).

(; axiom ;)

thm_50 : A : hol.type -> hol.proof (term_157 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.transitiveClosure r)) (Relation.bigIntersect (Set.fromPredicate \lambda v. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= v) s)) ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s)))))))) ;)

def term_158 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_47 A (x_3 : hol.term (type_0 A) => term_48 B (y_4 : hol.term (type_5 B) => term_71 (term_106 B A s_2 r_1 (term_49 A x_3) (term_50 B y_4)) (term_91 (term_130 B A y_4 x_3 r_1) (term_138 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_51 : B : hol.type -> A : hol.type -> hol.proof (term_158 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((((Relation.intersect r) s) x) y)) ((Data.Bool./\ ((r x) y)) ((s x) y))))))) ;)

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_0 A).

def term_159 : hol.term type_31 :=
  Data_2EBool_2E_5C_2F type_31.

def term_160 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_39 B A (r_1 : hol.term (type_7 B A) => term_39 B A (s_2 : hol.term (type_7 B A) => term_47 A (x_3 : hol.term (type_0 A) => term_48 B (y_4 : hol.term (type_5 B) => term_71 (term_108 B A s_2 r_1 (term_49 A x_3) (term_50 B y_4)) (term_159 (term_130 B A y_4 x_3 r_1) (term_138 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_52 : B : hol.type -> A : hol.type -> hol.proof (term_160 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((((Relation.union r) s) x) y)) ((Data.Bool.\/ ((r x) y)) ((s x) y))))))) ;)

def term_161 : A : hol.type -> y_1 : hol.term (type_0 A) -> r_2 : hol.term (type_3 A) -> hol.term (type_2 A) :=
  A : hol.type => y_1 : hol.term (type_0 A) => r_2 : hol.term (type_3 A) => term_36 A r_2 (term_115 A y_1).

def term_162 : A : hol.type -> z_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => z_1 : hol.term (type_0 A) => z_1.

def term_163 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_47 A (x_2 : hol.term (type_0 A) => term_47 A (y_3 : hol.term (type_0 A) => term_47 A (z_4 : hol.term (type_0 A) => term_58 (term_91 (term_68 A x_2 r_1 (term_115 A y_3)) (term_161 A y_3 r_1 (term_162 A z_4))) (term_68 A x_2 r_1 (term_162 A z_4))))).

def term_164 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_71 (term_10 A (term_36 A r_1)) (term_163 A r_1)).

(; axiom ;)

thm_53 : A : hol.type -> hol.proof (term_164 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.transitive r)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z))))))) ;)

def term_165 : A : hol.type -> y_1 : hol.term (type_0 A) -> m_2 : hol.term (type_19 A) -> hol.term (type_2 A) :=
  A : hol.type => y_1 : hol.term (type_0 A) => m_2 : hol.term (type_19 A) => term_33 A m_2 (term_115 A y_1).

def term_166 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => a_1.

def term_167 : A : hol.type -> b_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => b_1 : hol.term (type_0 A) => b_1.

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_0 A).

def term_168 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_31 A (m_1 : hol.term (type_19 A) => term_47 A (a_2 : hol.term (type_0 A) => term_47 A (b_3 : hol.term (type_0 A) => term_71 (term_47 A (y_4 : hol.term (type_0 A) => term_58 (term_165 A y_4 m_1 (term_166 A a_2)) (term_165 A y_4 m_1 (term_167 A b_3)))) (Number_2ENatural_2E_3C_3D type_10 (term_32 A m_1 (term_166 A a_2)) (term_32 A m_1 (term_167 A b_3)))))).

(; axiom ;)

thm_54 : A : hol.type -> hol.proof (term_168 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (Data.Bool.! \lambda y. ((Data.Bool.==> (((Relation.measure m) y) a)) (((Relation.measure m) y) b)))) ((Number.Natural.<= (m a)) (m b)))))) ;)

def term_169 : A : hol.type -> x_1 : hol.term (type_0 A) -> y_2 : hol.term (type_0 A) -> r_3 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => y_2 : hol.term (type_0 A) => r_3 : hol.term (type_3 A) => term_161 A y_2 r_3 (term_49 A x_1).

def term_170 : A : hol.type -> x_1 : hol.term (type_0 A) -> y_2 : hol.term (type_0 A) -> r_3 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => x_1 : hol.term (type_0 A) => y_2 : hol.term (type_0 A) => r_3 : hol.term (type_3 A) => term_58 (term_169 A x_1 y_2 r_3).

def term_171 : A : hol.type -> y_1 : hol.term (type_0 A) -> p_2 : hol.term (type_2 A) -> hol.term type_1 :=
  A : hol.type => y_1 : hol.term (type_0 A) => p_2 : hol.term (type_2 A) => term_153 A p_2 (term_115 A y_1).

def term_172 : A : hol.type -> p_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => p_1 : hol.term (type_2 A) => x_2 : hol.term (type_0 A) => term_154 A x_2 p_1.

def term_173 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_127 A r_1 (term_147 A (p_2 : hol.term (type_2 A) => term_58 (term_47 A (x_3 : hol.term (type_0 A) => term_58 (term_47 A (y_4 : hol.term (type_0 A) => term_170 A x_3 y_4 r_1 (term_171 A y_4 p_2))) (term_154 A x_3 p_2))) (term_47 A (term_172 A p_2))))).

(; axiom ;)

thm_55 : A : hol.type -> hol.proof (term_173 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.wellFounded r)) (Data.Bool.! \lambda p. ((Data.Bool.==> (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda y. ((Data.Bool.==> ((r y) x)) (p y)))) (p x)))) (Data.Bool.! \lambda x. (p x)))))) ;)

def term_174 : A : hol.type -> p_1 : hol.term (type_2 A) -> hol.term type_1 :=
  A : hol.type => p_1 : hol.term (type_2 A) => term_141 A (term_172 A p_1).

def term_175 : A : hol.type -> r_1 : hol.term (type_3 A) -> p_2 : hol.term (type_2 A) -> hol.term type_1 :=
  A : hol.type => r_1 : hol.term (type_3 A) => p_2 : hol.term (type_2 A) => term_141 A (x_3 : hol.term (type_0 A) => term_91 (term_154 A x_3 p_2) (term_47 A (y_4 : hol.term (type_0 A) => term_170 A x_3 y_4 r_1 (term_65 (term_171 A y_4 p_2))))).

def term_176 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_127 A r_1 (term_147 A (p_2 : hol.term (type_2 A) => term_71 (term_174 A p_2) (term_175 A r_1 p_2)))).

(; axiom ;)

thm_56 : A : hol.type -> hol.proof (term_176 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.wellFounded r)) (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((r y) x)) (Data.Bool.~ (p y)))))))))) ;)

def term_177 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_127 A r_1 (term_147 A (p_2 : hol.term (type_2 A) => term_58 (term_174 A p_2) (term_175 A r_1 p_2)))).

(; axiom ;)

thm_57 : A : hol.type -> hol.proof (term_177 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.wellFounded r)) (Data.Bool.! \lambda p. ((Data.Bool.==> (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda x. ((Data.Bool./\ (p x)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((r y) x)) (Data.Bool.~ (p y)))))))))) ;)

def term_178 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_91 (term_59 A r_1).

def term_179 : B : hol.type -> s_1 : hol.term (type_39 B) -> hol.term (type_39 B) :=
  B : hol.type => s_1 : hol.term (type_39 B) => s_1.

def term_180 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_39 B) -> r_2 : hol.term (type_3 A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_39 B) => r_2 : hol.term (type_3 A) => term_58 (term_178 A r_2 (term_112 B (term_179 B s_1))).

def type_49 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_46 B A) type_1.

def term_181 : B : hol.type -> A : hol.type -> hol.term (type_49 B A) :=
  B : hol.type => A : hol.type => Relation_2EwellFounded (type_15 B A).

def term_182 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_49 B A) (type_46 B A)) :=
  B : hol.type => A : hol.type => hol.select (type_46 B A).

def type_50 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_45 B A) type_1.

def term_183 : A : hol.type -> x1_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x1_1 : hol.term (type_0 A) => x1_1.

def term_184 : B : hol.type -> y1_1 : hol.term (type_5 B) -> hol.term (type_5 B) :=
  B : hol.type => y1_1 : hol.term (type_5 B) => y1_1.

def term_185 : B : hol.type -> A : hol.type -> y1_1 : hol.term (type_5 B) -> x1_2 : hol.term (type_0 A) -> f_3 : hol.term (type_46 B A) -> hol.term (type_50 B A) :=
  B : hol.type => A : hol.type => y1_1 : hol.term (type_5 B) => x1_2 : hol.term (type_0 A) => f_3 : hol.term (type_46 B A) => hol.eq (type_45 B A) (f_3 (term_123 B A (term_183 A x1_2) (term_184 B y1_1))).

def term_186 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_50 B A) (type_45 B A)) :=
  B : hol.type => A : hol.type => hol.select (type_45 B A).

def term_187 : A : hol.type -> x2_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x2_1 : hol.term (type_0 A) => x2_1.

def term_188 : B : hol.type -> y2_1 : hol.term (type_5 B) -> hol.term (type_5 B) :=
  B : hol.type => y2_1 : hol.term (type_5 B) => y2_1.

def term_189 : B : hol.type -> A : hol.type -> y2_1 : hol.term (type_5 B) -> x2_2 : hol.term (type_0 A) -> f_3 : hol.term (type_45 B A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => y2_1 : hol.term (type_5 B) => x2_2 : hol.term (type_0 A) => f_3 : hol.term (type_45 B A) => term_71 (f_3 (term_123 B A (term_187 A x2_2) (term_188 B y2_1))).

def term_190 : A : hol.type -> x2_1 : hol.term (type_0 A) -> x1_2 : hol.term (type_0 A) -> r_3 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => x2_1 : hol.term (type_0 A) => x1_2 : hol.term (type_0 A) => r_3 : hol.term (type_3 A) => term_36 A r_3 (term_183 A x1_2) (term_187 A x2_1).

def term_191 : B : hol.type -> y2_1 : hol.term (type_5 B) -> y1_2 : hol.term (type_5 B) -> s_3 : hol.term (type_39 B) -> hol.term type_1 :=
  B : hol.type => y2_1 : hol.term (type_5 B) => y1_2 : hol.term (type_5 B) => s_3 : hol.term (type_39 B) => term_179 B s_3 (term_184 B y1_2) (term_188 B y2_1).

def term_192 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_110 B (s_2 : hol.term (type_39 B) => term_180 B A s_2 r_1 (term_181 B A (term_182 B A (f_3 : hol.term (type_46 B A) => term_47 A (x1_4 : hol.term (type_0 A) => term_48 B (y1_5 : hol.term (type_5 B) => term_185 B A y1_5 x1_4 f_3 (term_186 B A (f_6 : hol.term (type_45 B A) => term_47 A (x2_7 : hol.term (type_0 A) => term_48 B (y2_8 : hol.term (type_5 B) => term_189 B A y2_8 x2_7 f_6 (term_91 (term_190 A x2_7 x1_4 r_1) (term_191 B y2_8 y1_5 s_2))))))))))))).

(; axiom ;)

thm_58 : B : hol.type -> A : hol.type -> hol.proof (term_192 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Relation.wellFounded r)) (Relation.wellFounded s))) (Relation.wellFounded (select \lambda f. (Data.Bool.! \lambda x1. (Data.Bool.! \lambda y1. ((= (f ((Data.Pair., x1) y1))) (select \lambda f. (Data.Bool.! \lambda x2. (Data.Bool.! \lambda y2. ((= (f ((Data.Pair., x2) y2))) ((Data.Bool./\ ((r x1) x2)) ((s y1) y2)))))))))))))) ;)

def type_51 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_41 B A) (type_41 B A).

def term_193 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_51 B A) type_1) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_51 B A) type_1) type_1).

def term_194 : A : hol.type -> x_1 : hol.term (type_0 A) -> z_2 : hol.term (type_0 A) -> r_3 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => x_1 : hol.term (type_0 A) => z_2 : hol.term (type_0 A) => r_3 : hol.term (type_3 A) => term_58 (term_36 A r_3 (term_162 A z_2) (term_49 A x_1)).

def term_195 : B : hol.type -> A : hol.type -> z_1 : hol.term (type_0 A) -> f_2 : hol.term (type_41 B A) -> hol.term (type_5 B) :=
  B : hol.type => A : hol.type => z_1 : hol.term (type_0 A) => f_2 : hol.term (type_41 B A) => term_150 B A f_2 (term_162 A z_1).

def term_196 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_41 B A) -> hol.term (type_41 B A) :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_41 B A) => g_1.

def term_197 : A : hol.type -> B : hol.type -> g_1 : hol.term (type_41 B A) -> z_2 : hol.term (type_0 A) -> f_3 : hol.term (type_41 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => g_1 : hol.term (type_41 B A) => z_2 : hol.term (type_0 A) => f_3 : hol.term (type_41 B A) => term_149 B (term_195 B A z_2 f_3) (term_196 B A g_1 (term_162 A z_2)).

def term_198 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_41 B A) -> f_2 : hol.term (type_41 B A) -> x_3 : hol.term (type_0 A) -> r_4 : hol.term (type_3 A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_41 B A) => f_2 : hol.term (type_41 B A) => x_3 : hol.term (type_0 A) => r_4 : hol.term (type_3 A) => term_58 (term_47 A (z_5 : hol.term (type_0 A) => term_194 A x_3 z_5 r_4 (term_197 A B g_1 z_5 f_2))).

def term_199 : B : hol.type -> A : hol.type -> h_1 : hol.term (type_51 B A) -> hol.term (type_51 B A) :=
  B : hol.type => A : hol.type => h_1 : hol.term (type_51 B A) => h_1.

def term_200 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_41 B A) -> h_3 : hol.term (type_51 B A) -> hol.term (type_5 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_41 B A) => h_3 : hol.term (type_51 B A) => term_199 B A h_3 (term_150 B A f_2) (term_49 A x_1).

def term_201 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> g_2 : hol.term (type_41 B A) -> h_3 : hol.term (type_51 B A) -> hol.term (type_5 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => g_2 : hol.term (type_41 B A) => h_3 : hol.term (type_51 B A) => term_199 B A h_3 (term_196 B A g_2) (term_49 A x_1).

def term_202 : A : hol.type -> B : hol.type -> g_1 : hol.term (type_41 B A) -> x_2 : hol.term (type_0 A) -> f_3 : hol.term (type_41 B A) -> h_4 : hol.term (type_51 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => g_1 : hol.term (type_41 B A) => x_2 : hol.term (type_0 A) => f_3 : hol.term (type_41 B A) => h_4 : hol.term (type_51 B A) => term_149 B (term_200 B A x_2 f_3 h_4) (term_201 B A x_2 g_1 h_4).

def term_203 : B : hol.type -> A : hol.type -> h_1 : hol.term (type_51 B A) -> r_2 : hol.term (type_3 A) -> hol.term type_30 :=
  B : hol.type => A : hol.type => h_1 : hol.term (type_51 B A) => r_2 : hol.term (type_3 A) => term_58 (term_111 B A (f_3 : hol.term (type_41 B A) => term_111 B A (g_4 : hol.term (type_41 B A) => term_47 A (x_5 : hol.term (type_0 A) => term_198 B A g_4 f_3 x_5 r_2 (term_202 A B g_4 x_5 f_3 h_1))))).

def term_204 : B : hol.type -> A : hol.type -> h_1 : hol.term (type_51 B A) -> f_2 : hol.term (type_41 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => h_1 : hol.term (type_51 B A) => f_2 : hol.term (type_41 B A) => term_47 A (x_3 : hol.term (type_0 A) => term_152 A B x_3 f_2 (term_200 B A x_3 f_2 h_1)).

def term_205 : B : hol.type -> A : hol.type -> h_1 : hol.term (type_51 B A) -> hol.term (type_42 B A) :=
  B : hol.type => A : hol.type => h_1 : hol.term (type_51 B A) => f_2 : hol.term (type_41 B A) => term_204 B A h_1 f_2.

def term_206 : B : hol.type -> A : hol.type -> h_1 : hol.term (type_51 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => h_1 : hol.term (type_51 B A) => term_148 B A (term_205 B A h_1).

def term_207 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (term_193 B A (h_2 : hol.term (type_51 B A) => term_203 B A h_2 r_1 (term_206 B A h_2)))).

(; axiom ;)

thm_59 : B : hol.type -> A : hol.type -> hol.proof (term_207 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Data.Bool.! \lambda h. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= ((h f) x)) ((h g) x))))))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((= (f x)) ((h f) x)))))))) ;)

(; Constant Data.Bool.?! ;)

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term (type_0 A).

def term_208 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (term_193 B A (h_2 : hol.term (type_51 B A) => term_203 B A h_2 r_1 (Data_2EBool_2E_3F_21 (type_43 B A) (term_205 B A h_2))))).

(; axiom ;)

thm_60 : B : hol.type -> A : hol.type -> hol.proof (term_208 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Data.Bool.! \lambda h. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= ((h f) x)) ((h g) x))))))) (Data.Bool.?! \lambda f. (Data.Bool.! \lambda x. ((= (f x)) ((h f) x)))))))) ;)

def type_52 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_19 A) (type_19 A).

def term_209 : A : hol.type -> f_1 : hol.term (type_19 A) -> hol.term (type_19 A) :=
  A : hol.type => f_1 : hol.term (type_19 A) => f_1.

def term_210 : A : hol.type -> g_1 : hol.term (type_19 A) -> hol.term (type_19 A) :=
  A : hol.type => g_1 : hol.term (type_19 A) => g_1.

def term_211 : A : hol.type -> h_1 : hol.term (type_52 A) -> hol.term (type_52 A) :=
  A : hol.type => h_1 : hol.term (type_52 A) => h_1.

def term_212 : A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_19 A) -> h_3 : hol.term (type_52 A) -> hol.term type_8 :=
  A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_19 A) => h_3 : hol.term (type_52 A) => term_211 A h_3 (term_209 A f_2) (term_49 A x_1).

def term_213 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_58 (Data_2EBool_2E_21 (hol.arr (hol.arr (type_52 A) type_1) type_1) (h_2 : hol.term (type_52 A) => term_58 (term_31 A (f_3 : hol.term (type_19 A) => term_31 A (g_4 : hol.term (type_19 A) => term_47 A (x_5 : hol.term (type_0 A) => term_58 (term_47 A (z_6 : hol.term (type_0 A) => term_194 A x_5 z_6 r_1 (term_88 (term_209 A f_3 (term_162 A z_6)) (term_210 A g_4 (term_162 A z_6))))) (term_88 (term_212 A x_5 f_3 h_2) (term_211 A h_2 (term_210 A g_4) (term_49 A x_5))))))) (Data_2EBool_2E_3F (type_20 A) (f_3 : hol.term (type_19 A) => term_47 A (x_4 : hol.term (type_0 A) => term_88 (term_209 A f_3 (term_49 A x_4)) (term_212 A x_4 f_3 h_2)))))) (term_59 A r_1)).

(; axiom ;)

thm_61 : A : hol.type -> hol.proof (term_213 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Data.Bool.! \lambda h. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= ((h f) x)) ((h g) x))))))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((= (f x)) ((h f) x))))))) (Relation.wellFounded r))) ;)

def term_214 : A : hol.type -> x2_1 : hol.term (type_0 A) -> x1_2 : hol.term (type_0 A) -> r_3 : hol.term (type_3 A) -> hol.term type_30 :=
  A : hol.type => x2_1 : hol.term (type_0 A) => x1_2 : hol.term (type_0 A) => r_3 : hol.term (type_3 A) => term_159 (term_190 A x2_1 x1_2 r_3).

def term_215 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => hol.eq (type_0 A).

def term_216 : A : hol.type -> x2_1 : hol.term (type_0 A) -> x1_2 : hol.term (type_0 A) -> hol.term type_30 :=
  A : hol.type => x2_1 : hol.term (type_0 A) => x1_2 : hol.term (type_0 A) => term_91 (term_215 A (term_183 A x1_2) (term_187 A x2_1)).

def term_217 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_110 B (s_2 : hol.term (type_39 B) => term_180 B A s_2 r_1 (term_181 B A (term_182 B A (f_3 : hol.term (type_46 B A) => term_47 A (x1_4 : hol.term (type_0 A) => term_48 B (y1_5 : hol.term (type_5 B) => term_185 B A y1_5 x1_4 f_3 (term_186 B A (f_6 : hol.term (type_45 B A) => term_47 A (x2_7 : hol.term (type_0 A) => term_48 B (y2_8 : hol.term (type_5 B) => term_189 B A y2_8 x2_7 f_6 (term_214 A x2_7 x1_4 r_1 (term_216 A x2_7 x1_4 (term_191 B y2_8 y1_5 s_2)))))))))))))).

(; axiom ;)

thm_62 : B : hol.type -> A : hol.type -> hol.proof (term_217 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Relation.wellFounded r)) (Relation.wellFounded s))) (Relation.wellFounded (select \lambda f. (Data.Bool.! \lambda x1. (Data.Bool.! \lambda y1. ((= (f ((Data.Pair., x1) y1))) (select \lambda f. (Data.Bool.! \lambda x2. (Data.Bool.! \lambda y2. ((= (f ((Data.Pair., x2) y2))) ((Data.Bool.\/ ((r x1) x2)) ((Data.Bool./\ ((= x1) x2)) ((s y1) y2))))))))))))))) ;)

def type_53 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_0 A).

(; Constant Set.finite ;)

Set_2Efinite : A : hol.type -> hol.term (type_0 A).

def term_218 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_58 (term_91 (term_83 A r_1) (term_91 (term_163 A r_1) (term_47 A (x_2 : hol.term (type_0 A) => Set_2Efinite (hol.arr (type_53 A) type_1) (Set_2EfromPredicate (hol.arr (type_2 A) (type_53 A)) (v_3 : hol.term (type_0 A) => term_141 A (y_4 : hol.term (type_0 A) => term_91 (term_215 A v_3 (term_115 A y_4)) (term_169 A x_2 y_4 r_1)))))))) (term_59 A r_1)).

(; axiom ;)

thm_63 : A : hol.type -> hol.proof (term_218 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) ((r y) x))))))))) (Relation.wellFounded r))) ;)

def type_54 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_39 B).

def term_219 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_54 B A) -> hol.term (type_54 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_54 B A) => s_1.

def term_220 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_54 B A) type_1) type_1) (s_2 : hol.term (type_54 B A) => term_58 (term_178 A r_1 (term_47 A (a_3 : hol.term (type_0 A) => term_112 B (term_219 B A s_2 (term_166 A a_3))))) (term_181 B A (term_182 B A (f_3 : hol.term (type_46 B A) => term_47 A (x1_4 : hol.term (type_0 A) => term_48 B (y1_5 : hol.term (type_5 B) => term_185 B A y1_5 x1_4 f_3 (term_186 B A (f_6 : hol.term (type_45 B A) => term_47 A (x2_7 : hol.term (type_0 A) => term_48 B (y2_8 : hol.term (type_5 B) => term_189 B A y2_8 x2_7 f_6 (term_214 A x2_7 x1_4 r_1 (term_216 A x2_7 x1_4 (term_219 B A s_2 (term_183 A x1_4) (term_184 B y1_5) (term_188 B y2_8))))))))))))))).

(; axiom ;)

thm_64 : B : hol.type -> A : hol.type -> hol.proof (term_220 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Relation.wellFounded r)) (Data.Bool.! \lambda a. (Relation.wellFounded (s a))))) (Relation.wellFounded (select \lambda f. (Data.Bool.! \lambda x1. (Data.Bool.! \lambda y1. ((= (f ((Data.Pair., x1) y1))) (select \lambda f. (Data.Bool.! \lambda x2. (Data.Bool.! \lambda y2. ((= (f ((Data.Pair., x2) y2))) ((Data.Bool.\/ ((r x1) x2)) ((Data.Bool./\ ((= x1) x2)) (((s x1) y1) y2))))))))))))))) ;)

def term_221 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (term_193 B A (h_2 : hol.term (type_51 B A) => term_39 B A (s_3 : hol.term (type_7 B A) => term_58 (term_111 B A (f_4 : hol.term (type_41 B A) => term_111 B A (g_5 : hol.term (type_41 B A) => term_47 A (x_6 : hol.term (type_0 A) => term_58 (term_47 A (z_7 : hol.term (type_0 A) => term_194 A x_6 z_7 r_1 (term_91 (term_197 A B g_5 z_7 f_4) (term_97 B A s_3 (term_162 A z_7) (term_195 B A z_7 f_4))))) (term_91 (term_202 A B g_5 x_6 f_4 h_2) (term_137 B A x_6 s_3 (term_200 B A x_6 f_4 h_2))))))) (term_206 B A h_2))))).

(; axiom ;)

thm_65 : B : hol.type -> A : hol.type -> hol.proof (term_221 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Data.Bool.! \lambda h. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((Data.Bool./\ ((= (f z)) (g z))) ((s z) (f z)))))) ((Data.Bool./\ ((= ((h f) x)) ((h g) x))) ((s x) ((h f) x)))))))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. ((= (f x)) ((h f) x))))))))) ;)

def term_222 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (term_193 B A (h_2 : hol.term (type_51 B A) => term_203 B A h_2 r_1 (term_111 B A (f_3 : hol.term (type_41 B A) => term_111 B A (g_4 : hol.term (type_41 B A) => term_58 (term_91 (term_204 B A h_2 f_3) (term_47 A (x_5 : hol.term (type_0 A) => term_149 B (term_196 B A g_4 (term_49 A x_5)) (term_201 B A x_5 g_4 h_2)))) (hol.eq (type_41 B A) (term_150 B A f_3) (term_196 B A g_4)))))))).

(; axiom ;)

thm_66 : B : hol.type -> A : hol.type -> hol.proof (term_222 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Data.Bool.! \lambda h. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= ((h f) x)) ((h g) x))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((= (f x)) ((h f) x)))) (Data.Bool.! \lambda x. ((= (g x)) ((h g) x))))) ((= f) g)))))))) ;)

def type_55 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) (type_2 A).

def term_223 : A : hol.type -> f_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => f_1 : hol.term (type_2 A) => f_1.

def term_224 : A : hol.type -> g_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => g_1 : hol.term (type_2 A) => g_1.

def term_225 : A : hol.type -> h_1 : hol.term (type_55 A) -> hol.term (type_55 A) :=
  A : hol.type => h_1 : hol.term (type_55 A) => h_1.

def term_226 : A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_2 A) -> h_3 : hol.term (type_55 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_2 A) => h_3 : hol.term (type_55 A) => term_225 A h_3 (term_223 A f_2) (term_49 A x_1).

def term_227 : A : hol.type -> x_1 : hol.term (type_0 A) -> g_2 : hol.term (type_2 A) -> h_3 : hol.term (type_55 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => g_2 : hol.term (type_2 A) => h_3 : hol.term (type_55 A) => term_225 A h_3 (term_224 A g_2) (term_49 A x_1).

def term_228 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_58 (Data_2EBool_2E_21 (hol.arr (hol.arr (type_55 A) type_1) type_1) (h_2 : hol.term (type_55 A) => term_58 (term_147 A (f_3 : hol.term (type_2 A) => term_147 A (g_4 : hol.term (type_2 A) => term_47 A (x_5 : hol.term (type_0 A) => term_58 (term_47 A (z_6 : hol.term (type_0 A) => term_194 A x_5 z_6 r_1 (term_71 (term_223 A f_3 (term_162 A z_6)) (term_224 A g_4 (term_162 A z_6))))) (term_71 (term_226 A x_5 f_3 h_2) (term_227 A x_5 g_4 h_2)))))) (term_147 A (f_3 : hol.term (type_2 A) => term_147 A (g_4 : hol.term (type_2 A) => term_58 (term_91 (term_47 A (x_5 : hol.term (type_0 A) => term_71 (term_223 A f_3 (term_49 A x_5)) (term_226 A x_5 f_3 h_2))) (term_47 A (x_5 : hol.term (type_0 A) => term_71 (term_224 A g_4 (term_49 A x_5)) (term_227 A x_5 g_4 h_2)))) (hol.eq (type_2 A) (term_223 A f_3) (term_224 A g_4))))))) (term_59 A r_1)).

(; axiom ;)

thm_67 : A : hol.type -> hol.proof (term_228 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Data.Bool.! \lambda h. ((Data.Bool.==> (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= ((h f) x)) ((h g) x))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((= (f x)) ((h f) x)))) (Data.Bool.! \lambda x. ((= (g x)) ((h g) x))))) ((= f) g))))))) (Relation.wellFounded r))) ;)

def type_56 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_41 B A) (type_7 B A).

def term_229 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_56 B A) -> hol.term (type_56 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_56 B A) => p_1.

def term_230 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_41 B A) -> p_2 : hol.term (type_56 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_41 B A) => p_2 : hol.term (type_56 B A) => term_229 B A p_2 (term_150 B A f_1).

def term_231 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_41 B A) -> p_3 : hol.term (type_56 B A) -> hol.term (type_6 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_41 B A) => p_3 : hol.term (type_56 B A) => term_230 B A f_2 p_3 (term_49 A x_1).

def term_232 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> f_3 : hol.term (type_41 B A) -> p_4 : hol.term (type_56 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => f_3 : hol.term (type_41 B A) => p_4 : hol.term (type_56 B A) => term_231 B A x_2 f_3 p_4 (term_50 B y_1).

def term_233 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_35 A (r_1 : hol.term (type_3 A) => term_60 A r_1 (Data_2EBool_2E_21 (hol.arr (hol.arr (type_56 B A) type_1) type_1) (p_2 : hol.term (type_56 B A) => term_58 (term_91 (term_111 B A (f_3 : hol.term (type_41 B A) => term_111 B A (g_4 : hol.term (type_41 B A) => term_47 A (x_5 : hol.term (type_0 A) => term_48 B (y_6 : hol.term (type_5 B) => term_198 B A g_4 f_3 x_5 r_1 (term_71 (term_232 B A y_6 x_5 f_3 p_2) (term_229 B A p_2 (term_196 B A g_4) (term_49 A x_5) (term_50 B y_6)))))))) (term_111 B A (f_3 : hol.term (type_41 B A) => term_47 A (x_4 : hol.term (type_0 A) => term_58 (term_47 A (z_5 : hol.term (type_0 A) => term_194 A x_4 z_5 r_1 (term_230 B A f_3 p_2 (term_162 A z_5) (term_195 B A z_5 f_3)))) (term_142 B (y_5 : hol.term (type_5 B) => term_232 B A y_5 x_4 f_3 p_2)))))) (term_148 B A (f_3 : hol.term (type_41 B A) => term_47 A (x_4 : hol.term (type_0 A) => term_231 B A x_4 f_3 p_2 (term_151 B A x_4 f_3))))))).

(; axiom ;)

thm_68 : B : hol.type -> A : hol.type -> hol.proof (term_233 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Data.Bool.==> (Relation.wellFounded r)) (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) ((= (f z)) (g z))))) ((= (((p f) x) y)) (((p g) x) y)))))))) (Data.Bool.! \lambda f. (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.! \lambda z. ((Data.Bool.==> ((r z) x)) (((p f) z) (f z))))) (Data.Bool.? \lambda y. (((p f) x) y))))))) (Data.Bool.? \lambda f. (Data.Bool.! \lambda x. (((p f) x) (f x)))))))) ;)

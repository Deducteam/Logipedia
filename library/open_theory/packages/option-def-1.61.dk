
(; This file was generated by Holide. ;)

#NAME option_2Ddef_2D1_2E61.

def type_0 : hol.type :=
  hol.bool.

def type_1 : hol.type :=
  hol.arr type_0 type_0.

def type_2 : hol.type -> hol.type :=
  A : hol.type => A.

def type_3 : hol.type :=
  hol.arr type_0 type_1.

(; Constant option-def-1.61 ;)

option_2Ddef_2D1_2E61 : A : hol.type -> hol.term (type_2 A).

def term_0 : hol.term type_0 :=
  option_2Ddef_2D1_2E61 type_0.

def term_1 : A : hol.type -> hol.term type_1 :=
  A : hol.type => (y_1 : hol.term (hol.arr (type_2 A) (type_2 A)) => hol.eq type_0 term_0) (x_1 : hol.term (type_2 A) => x_1).

(; dict ;)

thm thm_0 : A : hol.type -> hol.proof (hol.eq type_1 (term_1 A) (term_1 A)) :=
  A : hol.type => hol.REFL type_1 (term_1 A).

(; dict ;)

thm thm_1 : hol.proof (hol.eq type_0 term_0 term_0) :=
  hol.REFL type_0 term_0.

Data_2EOption_2Eoption : hol.type -> hol.type.

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr type_0 (Data_2EOption_2Eoption (type_2 A))).

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr (Data_2EOption_2Eoption (type_2 A)) type_0).

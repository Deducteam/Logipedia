
(; This file was generated by Holide. ;)

#NAME axiom_2Dextensionality.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) B.

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_2.

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.T ;)

Data_2EBool_2ET : A : hol.type -> hol.term (type_0 A).

def term_0 : hol.term type_2 :=
  Data_2EBool_2ET type_2.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (hol.eq (type_4 A) (Data_2EBool_2E_21 (type_4 A)) (p_1 : hol.term (type_3 A) => hol.eq (type_3 A) p_1 (x_2 : hol.term (type_0 A) => term_0))).

def type_5 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_1 B A) type_2.

def type_6 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_5 B A) type_2.

def term_1 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_5 B A) (type_6 B A)) :=
  B : hol.type => A : hol.type => hol.eq (type_5 B A).

def type_7 : hol.type :=
  hol.arr type_2 type_2.

def term_2 : hol.term (hol.arr type_7 (hol.arr type_7 type_2)) :=
  hol.eq type_7.

def term_3 : hol.term type_7 :=
  p_1 : hol.term type_2 => p_1.

(; axiom ;)

thm_1 : hol.proof (hol.eq type_2 term_0 (term_2 term_3 term_3)).

(; dict ;)

thm thm_2 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (type_6 B A) (Data_2EBool_2E_21 (type_6 B A)) (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3))) :=
  B : hol.type => A : hol.type => hol.TRANS (type_6 B A) (Data_2EBool_2E_21 (type_6 B A)) (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_0)) (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3)) ((A : hol.type => thm_0 A) (type_1 B A)) (hol.ABS_THM (type_5 B A) type_2 (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_0)) (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3)) (p_1 : hol.term (type_5 B A) => hol.APP_THM (type_5 B A) type_2 (term_1 B A p_1) (term_1 B A p_1) (x_2 : hol.term (type_1 B A) => term_0) (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3) (hol.REFL (type_6 B A) (term_1 B A p_1)) (hol.ABS_THM (type_1 B A) type_2 (x_2 : hol.term (type_1 B A) => term_0) (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3) (x_2 : hol.term (type_1 B A) => thm_1)))).

def term_4 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_1 B A) (type_5 B A)) :=
  B : hol.type => A : hol.type => hol.eq (type_1 B A).

def term_5 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_1 B A) -> hol.term (type_1 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_1 B A) => t_1.

def term_6 : B : hol.type -> A : hol.type -> hol.term (type_5 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_1 B A) => term_4 B A (x_2 : hol.term (type_0 A) => term_5 B A t_1 x_2) (term_5 B A t_1).

(; dict ;)

thm thm_3 : B : hol.type -> A : hol.type -> hol.proof (hol.eq type_2 ((p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3)) (term_6 B A)) (Data_2EBool_2E_21 (type_6 B A) (term_6 B A))) :=
  B : hol.type => A : hol.type => hol.SYM type_2 (Data_2EBool_2E_21 (type_6 B A) (term_6 B A)) ((p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3)) (term_6 B A)) (hol.APP_THM (type_5 B A) type_2 (Data_2EBool_2E_21 (type_6 B A)) (p_1 : hol.term (type_5 B A) => term_1 B A p_1 (x_2 : hol.term (type_1 B A) => term_2 term_3 term_3)) (term_6 B A) (term_6 B A) (thm_2 B A) (hol.REFL (type_5 B A) (term_6 B A))).

def term_7 : hol.term type_7 :=
  c_1 : hol.term type_2 => c_1.

def term_8 : B : hol.type -> A : hol.type -> d_1 : hol.term (type_1 B A) -> hol.term (type_1 B A) :=
  B : hol.type => A : hol.type => d_1 : hol.term (type_1 B A) => d_1.

(; axiom ;)

thm_4 : B : hol.type -> A : hol.type -> hol.proof ((a_1 : hol.term (type_5 B A) => term_1 B A a_1 (b_2 : hol.term (type_1 B A) => term_2 term_7 term_7)) (d_1 : hol.term (type_1 B A) => term_4 B A (e_2 : hol.term (type_0 A) => term_8 B A d_1 e_2) (term_8 B A d_1))).

(; Theorem: |- (Data.Bool.! \lambda t. ((= \lambda x. (t x)) t)) ;)

(; thm ;)

thm thm_5 : B : hol.type -> A : hol.type -> hol.proof (Data_2EBool_2E_21 (type_6 B A) (term_6 B A)) :=
  B : hol.type => A : hol.type => hol.EQ_MP ((a_1 : hol.term (type_5 B A) => term_1 B A a_1 (b_2 : hol.term (type_1 B A) => term_2 term_7 term_7)) (d_1 : hol.term (type_1 B A) => term_4 B A (e_2 : hol.term (type_0 A) => term_8 B A d_1 e_2) (term_8 B A d_1))) (Data_2EBool_2E_21 (type_6 B A) (term_6 B A)) (thm_3 B A) (thm_4 B A).


(; This file was generated by Holide. ;)

#NAME list_2Dtake_2Ddrop_2Dthm_2D1_2E63.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Data_2EList_2Elist : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (hol.arr (type_3 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) type_2).

def term_1 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_3 A)) :=
  A : hol.type => hol.eq (type_1 A).

Number_2ENatural_2Enatural : hol.type.

def type_4 : hol.type :=
  Number_2ENatural_2Enatural.

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_4 (hol.arr (type_1 A) (type_1 A)).

(; Constant Data.List.drop ;)

Data_2EList_2Edrop : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EList_2Edrop (type_5 A).

(; Constant Data.List.length ;)

Data_2EList_2Elength : A : hol.type -> hol.term (type_0 A).

def term_3 : A : hol.type -> hol.term (hol.arr (type_1 A) type_4) :=
  A : hol.type => Data_2EList_2Elength (hol.arr (type_1 A) type_4).

def term_4 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => l_1.

def term_5 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term type_4 :=
  A : hol.type => l_1 : hol.term (type_1 A) => term_3 A (term_4 A l_1).

(; Constant Data.List.[] ;)

Data_2EList_2E_5B_5D : A : hol.type -> hol.term (type_0 A).

def term_6 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Data_2EList_2E_5B_5D (type_1 A).

def term_7 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_1 A (term_2 A (term_5 A l_1) (term_4 A l_1)) (term_6 A)).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_7 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((Data.List.drop (Data.List.length l)) l)) Data.List.[])) ;)

(; Constant Data.List.take ;)

Data_2EList_2Etake : A : hol.type -> hol.term (type_0 A).

def term_8 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EList_2Etake (type_5 A).

def term_9 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_1 A (term_8 A (term_5 A l_1) (term_4 A l_1)) (term_4 A l_1)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_9 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((Data.List.take (Data.List.length l)) l)) l)) ;)

def term_10 : A : hol.type -> l1_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l1_1 : hol.term (type_1 A) => l1_1.

def term_11 : A : hol.type -> l1_1 : hol.term (type_1 A) -> hol.term type_4 :=
  A : hol.type => l1_1 : hol.term (type_1 A) => term_3 A (term_10 A l1_1).

(; Constant Data.List.@ ;)

Data_2EList_2E_40 : A : hol.type -> hol.term (type_0 A).

def term_12 : A : hol.type -> hol.term (hol.arr (type_1 A) (hol.arr (type_1 A) (type_1 A))) :=
  A : hol.type => Data_2EList_2E_40 (hol.arr (type_1 A) (hol.arr (type_1 A) (type_1 A))).

def term_13 : A : hol.type -> l2_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l2_1 : hol.term (type_1 A) => l2_1.

def term_14 : A : hol.type -> l2_1 : hol.term (type_1 A) -> l1_2 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l2_1 : hol.term (type_1 A) => l1_2 : hol.term (type_1 A) => term_12 A (term_10 A l1_2) (term_13 A l2_1).

def term_15 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l1_1 : hol.term (type_1 A) => term_0 A (l2_2 : hol.term (type_1 A) => term_1 A (term_2 A (term_11 A l1_1) (term_14 A l2_2 l1_1)) (term_13 A l2_2))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_15 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= ((Data.List.drop (Data.List.length l1)) ((Data.List.@ l1) l2))) l2))) ;)

def term_16 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l1_1 : hol.term (type_1 A) => term_0 A (l2_2 : hol.term (type_1 A) => term_1 A (term_8 A (term_11 A l1_1) (term_14 A l2_2 l1_1)) (term_10 A l1_1))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_16 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((= ((Data.List.take (Data.List.length l1)) ((Data.List.@ l1) l2))) l1))) ;)

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_2.

def term_17 : A : hol.type -> hol.term (hol.arr (type_6 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 A) type_2).

def type_7 : hol.type :=
  hol.arr type_4 type_4.

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term (type_0 A).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_18 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (hol.arr (type_1 A) (type_1 A)) :=
  A : hol.type => h_1 : hol.term (type_0 A) => Data_2EList_2E_3A_3A (hol.arr (type_0 A) (hol.arr (type_1 A) (type_1 A))) h_1.

def term_19 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_17 A (h_1 : hol.term (type_0 A) => term_0 A (t_2 : hol.term (type_1 A) => term_1 A (term_8 A (Number_2ENatural_2Ebit1 type_7 (Number_2ENatural_2Ezero type_4)) (term_18 A h_1 t_2)) (term_18 A h_1 (term_6 A)))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_19 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.take (Number.Natural.bit1 Number.Natural.zero)) ((Data.List.:: h) t))) ((Data.List.:: h) Data.List.[])))) ;)

def type_8 : hol.type :=
  hol.arr type_4 type_2.

def term_20 : hol.term (hol.arr type_8 type_2) :=
  Data_2EBool_2E_21 (hol.arr type_8 type_2).

def type_9 : hol.type :=
  hol.arr type_2 (hol.arr type_2 type_2).

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_21 : hol.term type_9 :=
  Data_2EBool_2E_3D_3D_3E type_9.

def type_10 : hol.type :=
  hol.arr type_4 type_8.

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_0 A).

def term_22 : hol.term type_10 :=
  Number_2ENatural_2E_3C_3D type_10.

def term_23 : n_1 : hol.term type_4 -> hol.term type_4 :=
  n_1 : hol.term type_4 => n_1.

def term_24 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_22 (term_23 n_2) (term_5 A l_1).

def term_25 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term (hol.arr type_2 type_2) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_21 (term_24 A l_1 n_2).

def term_26 : hol.term type_10 :=
  hol.eq type_4.

def term_27 : A : hol.type -> n_1 : hol.term type_4 -> hol.term (hol.arr (type_1 A) (type_1 A)) :=
  A : hol.type => n_1 : hol.term type_4 => term_8 A (term_23 n_1).

def term_28 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_27 A n_2 (term_4 A l_1).

def term_29 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_25 A l_2 n_1 (term_26 (term_3 A (term_28 A l_2 n_1)) (term_23 n_1)))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_29 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= n) (Data.List.length l))) ((= (Data.List.length ((Data.List.take n) l))) n)))) ;)

def term_30 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_2 A (term_23 n_2) (term_4 A l_1).

def term_31 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term type_4 :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_3 A (term_30 A l_1 n_2).

def type_11 : hol.type :=
  hol.arr type_4 type_7.

(; Constant Number.Natural.- ;)

Number_2ENatural_2E_2D : A : hol.type -> hol.term (type_0 A).

def term_32 : hol.term type_11 :=
  Number_2ENatural_2E_2D type_11.

def term_33 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_25 A l_2 n_1 (term_26 (term_31 A l_2 n_1) (term_32 (term_5 A l_2) (term_23 n_1))))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_33 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= n) (Data.List.length l))) ((= (Data.List.length ((Data.List.drop n) l))) ((Number.Natural.- (Data.List.length l)) n))))) ;)

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_0 A).

def term_34 : hol.term type_11 :=
  Number_2ENatural_2E_2B type_11.

def term_35 : n_1 : hol.term type_4 -> hol.term type_7 :=
  n_1 : hol.term type_4 => term_34 (term_23 n_1).

def term_36 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_25 A l_2 n_1 (term_26 (term_35 n_1 (term_31 A l_2 n_1)) (term_5 A l_2)))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_36 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= n) (Data.List.length l))) ((= ((Number.Natural.+ n) (Data.List.length ((Data.List.drop n) l)))) (Data.List.length l))))) ;)

def term_37 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_25 A l_2 n_1 (term_1 A (term_12 A (term_28 A l_2 n_1) (term_30 A l_2 n_1)) (term_4 A l_2)))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_37 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= n) (Data.List.length l))) ((= ((Data.List.@ ((Data.List.take n) l)) ((Data.List.drop n) l))) l)))) ;)

def term_38 : m_1 : hol.term type_4 -> hol.term type_4 :=
  m_1 : hol.term type_4 => m_1.

def term_39 : n_1 : hol.term type_4 -> m_2 : hol.term type_4 -> hol.term (hol.arr type_2 type_2) :=
  n_1 : hol.term type_4 => m_2 : hol.term type_4 => term_21 (term_22 (term_38 m_2) (term_23 n_1)).

def term_40 : A : hol.type -> m_1 : hol.term type_4 -> hol.term (hol.arr (type_1 A) (type_1 A)) :=
  A : hol.type => m_1 : hol.term type_4 => term_8 A (term_38 m_1).

(; Constant Data.List.replicate ;)

Data_2EList_2Ereplicate : A : hol.type -> hol.term (type_0 A).

def term_41 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (hol.arr type_4 (type_1 A)) :=
  A : hol.type => x_1 : hol.term (type_0 A) => Data_2EList_2Ereplicate (hol.arr (type_0 A) (hol.arr type_4 (type_1 A))) x_1.

def term_42 : A : hol.type -> n_1 : hol.term type_4 -> x_2 : hol.term (type_0 A) -> hol.term (type_1 A) :=
  A : hol.type => n_1 : hol.term type_4 => x_2 : hol.term (type_0 A) => term_41 A x_2 (term_23 n_1).

def term_43 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (m_1 : hol.term type_4 => term_20 (n_2 : hol.term type_4 => term_17 A (x_3 : hol.term (type_0 A) => term_39 n_2 m_1 (term_1 A (term_40 A m_1 (term_42 A n_2 x_3)) (term_41 A x_3 (term_38 m_1)))))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (term_43 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Number.Natural.<= m) n)) ((= ((Data.List.take m) ((Data.List.replicate x) n))) ((Data.List.replicate x) m)))))) ;)

def term_44 : A : hol.type -> m_1 : hol.term type_4 -> hol.term (hol.arr (type_1 A) (type_1 A)) :=
  A : hol.type => m_1 : hol.term type_4 => term_2 A (term_38 m_1).

def term_45 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (m_1 : hol.term type_4 => term_20 (n_2 : hol.term type_4 => term_17 A (x_3 : hol.term (type_0 A) => term_39 n_2 m_1 (term_1 A (term_44 A m_1 (term_42 A n_2 x_3)) (term_41 A x_3 (term_32 (term_23 n_2) (term_38 m_1))))))).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (term_45 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Number.Natural.<= m) n)) ((= ((Data.List.drop m) ((Data.List.replicate x) n))) ((Data.List.replicate x) ((Number.Natural.- n) m))))))) ;)

def term_46 : n_1 : hol.term type_4 -> m_2 : hol.term type_4 -> hol.term type_4 :=
  n_1 : hol.term type_4 => m_2 : hol.term type_4 => term_34 (term_38 m_2) (term_23 n_1).

def term_47 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> m_3 : hol.term type_4 -> hol.term (hol.arr type_2 type_2) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => m_3 : hol.term type_4 => term_21 (term_22 (term_46 n_2 m_3) (term_5 A l_1)).

def term_48 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (m_1 : hol.term type_4 => term_20 (n_2 : hol.term type_4 => term_0 A (l_3 : hol.term (type_1 A) => term_47 A l_3 n_2 m_1 (term_1 A (term_2 A (term_46 n_2 m_1) (term_4 A l_3)) (term_44 A m_1 (term_30 A l_3 n_2)))))).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (term_48 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= ((Number.Natural.+ m) n)) (Data.List.length l))) ((= ((Data.List.drop ((Number.Natural.+ m) n)) l)) ((Data.List.drop m) ((Data.List.drop n) l))))))) ;)

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_0 A).

def term_49 : hol.term type_10 :=
  Number_2ENatural_2E_3C type_10.

def term_50 : i_1 : hol.term type_4 -> hol.term type_4 :=
  i_1 : hol.term type_4 => i_1.

def term_51 : i_1 : hol.term type_4 -> n_2 : hol.term type_4 -> hol.term type_4 :=
  i_1 : hol.term type_4 => n_2 : hol.term type_4 => term_35 n_2 (term_50 i_1).

def term_52 : A : hol.type -> hol.term (hol.arr (type_0 A) (type_6 A)) :=
  A : hol.type => hol.eq (type_0 A).

(; Constant Data.List.nth ;)

Data_2EList_2Enth : A : hol.type -> hol.term (type_0 A).

def term_53 : A : hol.type -> hol.term (hol.arr (type_1 A) (hol.arr type_4 (type_0 A))) :=
  A : hol.type => Data_2EList_2Enth (hol.arr (type_1 A) (hol.arr type_4 (type_0 A))).

def term_54 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term (hol.arr type_4 (type_0 A)) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => term_53 A (term_30 A l_1 n_2).

def term_55 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (hol.arr type_4 (type_0 A)) :=
  A : hol.type => l_1 : hol.term (type_1 A) => term_53 A (term_4 A l_1).

def term_56 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_20 (i_3 : hol.term type_4 => term_21 (term_49 (term_51 i_3 n_1) (term_5 A l_2)) (term_52 A (term_54 A l_2 n_1 (term_50 i_3)) (term_55 A l_2 (term_51 i_3 n_1)))))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_56 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Number.Natural.< ((Number.Natural.+ n) i)) (Data.List.length l))) ((= ((Data.List.nth ((Data.List.drop n) l)) i)) ((Data.List.nth l) ((Number.Natural.+ n) i))))))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_57 : A : hol.type -> l_1 : hol.term (type_1 A) -> n_2 : hol.term type_4 -> hol.term (hol.arr type_2 type_2) :=
  A : hol.type => l_1 : hol.term (type_1 A) => n_2 : hol.term type_4 => Data_2EBool_2E_2F_5C type_9 (term_24 A l_1 n_2).

def term_58 : i_1 : hol.term type_4 -> hol.term type_8 :=
  i_1 : hol.term type_4 => term_49 (term_50 i_1).

def term_59 : n_1 : hol.term type_4 -> i_2 : hol.term type_4 -> hol.term type_2 :=
  n_1 : hol.term type_4 => i_2 : hol.term type_4 => term_58 i_2 (term_23 n_1).

def term_60 : A : hol.type -> i_1 : hol.term type_4 -> l_2 : hol.term (type_1 A) -> n_3 : hol.term type_4 -> hol.term (type_0 A) :=
  A : hol.type => i_1 : hol.term type_4 => l_2 : hol.term (type_1 A) => n_3 : hol.term type_4 => term_53 A (term_28 A l_2 n_3) (term_50 i_1).

def term_61 : A : hol.type -> i_1 : hol.term type_4 -> l_2 : hol.term (type_1 A) -> hol.term (type_0 A) :=
  A : hol.type => i_1 : hol.term type_4 => l_2 : hol.term (type_1 A) => term_55 A l_2 (term_50 i_1).

def term_62 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_20 (i_3 : hol.term type_4 => term_21 (term_57 A l_2 n_1 (term_59 n_1 i_3)) (term_52 A (term_60 A i_3 l_2 n_1) (term_61 A i_3 l_2))))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (term_62 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.<= n) (Data.List.length l))) ((Number.Natural.< i) n))) ((= ((Data.List.nth ((Data.List.take n) l)) i)) ((Data.List.nth l) i)))))) ;)

def term_63 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (m_1 : hol.term type_4 => term_20 (n_2 : hol.term type_4 => term_0 A (l_3 : hol.term (type_1 A) => term_47 A l_3 n_2 m_1 (term_1 A (term_8 A (term_46 n_2 m_1) (term_4 A l_3)) (term_12 A (term_40 A m_1 (term_4 A l_3)) (term_27 A n_2 (term_44 A m_1 (term_4 A l_3)))))))).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_63 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Number.Natural.<= ((Number.Natural.+ m) n)) (Data.List.length l))) ((= ((Data.List.take ((Number.Natural.+ m) n)) l)) ((Data.List.@ ((Data.List.take m) l)) ((Data.List.take n) ((Data.List.drop m) l)))))))) ;)

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_0 A).

def term_64 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_20 (n_1 : hol.term type_4 => term_0 A (l_2 : hol.term (type_1 A) => term_20 (i_3 : hol.term type_4 => term_21 (term_57 A l_2 n_1 (term_58 i_3 (term_5 A l_2))) (term_52 A (term_61 A i_3 l_2) (Data_2EBool_2Econd (hol.arr type_2 (hol.arr (type_0 A) (hol.arr (type_0 A) (type_0 A)))) (term_59 n_1 i_3) (term_60 A i_3 l_2 n_1) (term_54 A l_2 n_1 (term_32 (term_50 i_3) (term_23 n_1)))))))).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (term_64 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda l. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.<= n) (Data.List.length l))) ((Number.Natural.< i) (Data.List.length l)))) ((= ((Data.List.nth l) i)) (((Data.Bool.cond ((Number.Natural.< i) n)) ((Data.List.nth ((Data.List.take n) l)) i)) ((Data.List.nth ((Data.List.drop n) l)) ((Number.Natural.- i) n)))))))) ;)

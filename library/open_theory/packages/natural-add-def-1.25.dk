
(; This file was generated by Holide. ;)

#NAME natural_2Dadd_2Ddef_2D1_2E25.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.arr type_0 hol.bool.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_1 hol.bool) :=
  Data_2EBool_2E_21 (hol.arr type_1 hol.bool).

def term_1 : hol.term (hol.arr type_0 type_1) :=
  hol.eq type_0.

def type_2 : hol.type :=
  hol.arr type_0 type_0.

def type_3 : hol.type :=
  hol.arr type_0 type_2.

(; Constant natural-add-def-1.25 ;)

natural_2Dadd_2Ddef_2D1_2E25 : A : hol.type -> hol.term A.

(; Constant Number.Natural.+ ;)

def Number_2ENatural_2E_2B : hol.term type_3 :=
  natural_2Dadd_2Ddef_2D1_2E25 type_3.

def term_2 : hol.term type_3 :=
  Number_2ENatural_2E_2B.

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

def term_3 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_4 : hol.term hol.bool :=
  term_0 (n_1 : hol.term type_0 => term_1 (term_2 (Number_2ENatural_2Ezero type_0) (term_3 n_1)) (term_3 n_1)).

(; axiom ;)

thm_0 : hol.proof term_4.

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Number.Natural.+ Number.Natural.zero) n)) n)) ;)

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

def term_5 : hol.term type_2 :=
  Number_2ENatural_2Esuc type_2.

def term_6 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_7 : hol.term hol.bool :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_1 (term_2 (term_5 (term_6 m_1)) (term_3 n_2)) (term_5 (term_2 (term_6 m_1) (term_3 n_2))))).

(; axiom ;)

thm_1 : hol.proof term_7.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.+ (Number.Natural.suc m)) n)) (Number.Natural.suc ((Number.Natural.+ m) n))))) ;)

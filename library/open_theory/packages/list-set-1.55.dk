
(; This file was generated by Holide. ;)

#NAME list_2Dset_2D1_2E55.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Set_2Eset : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

def term_0 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_3 A)) :=
  A : hol.type => hol.eq (type_1 A).

Data_2EList_2Elist : hol.type -> hol.type.

def type_4 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) (type_1 A).

(; Constant list-set-1.55 ;)

list_2Dset_2D1_2E55 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.toSet ;)

def Data_2EList_2EtoSet : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => list_2Dset_2D1_2E55 (type_5 A).

def term_1 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EList_2EtoSet (type_0 A).

(; Constant Data.List.[] ;)

Data_2EList_2E_5B_5D : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Data_2EList_2E_5B_5D (type_4 A).

(; Constant Set.{} ;)

Set_2E_7B_7D : A : hol.type -> hol.term (type_0 A).

def term_3 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Set_2E_7B_7D (type_1 A).

def term_4 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (term_1 A (term_2 A)) (term_3 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_4 A).

(; Theorem: |- ((= (Data.List.toSet Data.List.[])) Set.{}) ;)

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_5 : A : hol.type -> hol.term (hol.arr (type_6 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 A) type_2).

(; Constant Set.finite ;)

Set_2Efinite : A : hol.type -> hol.term (type_0 A).

def term_6 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Set_2Efinite (type_3 A).

def term_7 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => l_1 : hol.term (type_4 A) => l_1.

def term_8 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_4 A) => term_1 A (term_7 A l_1).

def term_9 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_6 A (term_8 A l_1)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_9 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Set.finite (Data.List.toSet l))) ;)

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_2.

def type_8 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_7 A) type_2.

def term_10 : A : hol.type -> hol.term (hol.arr (type_8 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_8 A) type_2).

def type_9 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_7 A) (type_6 A).

def term_11 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => list_2Dset_2D1_2E55 (type_9 A).

(; Constant Data.List.all ;)

def Data_2EList_2Eall : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => term_11 A.

def term_12 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EList_2Eall (type_0 A).

def term_13 : A : hol.type -> p_1 : hol.term (type_7 A) -> hol.term (type_7 A) :=
  A : hol.type => p_1 : hol.term (type_7 A) => p_1.

def term_14 : A : hol.type -> p_1 : hol.term (type_7 A) -> hol.term (type_6 A) :=
  A : hol.type => p_1 : hol.term (type_7 A) => term_12 A (term_13 A p_1).

def term_15 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_14 A p_1 (term_2 A)).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_15 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.List.all p) Data.List.[])) ;)

(; Constant Data.Bool.T ;)

Data_2EBool_2ET : A : hol.type -> hol.term (type_0 A).

def term_16 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_12 A (x_2 : hol.term (type_0 A) => Data_2EBool_2ET type_2) (term_7 A l_1)).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_16 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((Data.List.all \lambda x. Data.Bool.T) l)) ;)

def term_17 : A : hol.type -> hol.term (type_8 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_8 A).

def type_10 : hol.type :=
  hol.arr type_2 type_2.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

def term_18 : hol.term type_10 :=
  Data_2EBool_2E_7E type_10.

def type_11 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_6 A).

(; Constant Data.List.member ;)

def Data_2EList_2Emember : A : hol.type -> hol.term (type_11 A) :=
  A : hol.type => list_2Dset_2D1_2E55 (type_11 A).

def term_19 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_20 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_6 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => Data_2EList_2Emember (type_0 A) (term_19 A x_1).

def term_21 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_17 A (x_1 : hol.term (type_0 A) => term_18 (term_20 A x_1 (term_2 A))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_21 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.~ ((Data.List.member x) Data.List.[]))) ;)

(; Constant Data.List.any ;)

def Data_2EList_2Eany : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => term_11 A.

def term_22 : A : hol.type -> hol.term (type_9 A) :=
  A : hol.type => Data_2EList_2Eany (type_0 A).

def term_23 : A : hol.type -> p_1 : hol.term (type_7 A) -> hol.term (type_6 A) :=
  A : hol.type => p_1 : hol.term (type_7 A) => term_22 A (term_13 A p_1).

def term_24 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_18 (term_23 A p_1 (term_2 A))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_24 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.~ ((Data.List.any p) Data.List.[]))) ;)

Number_2ENatural_2Enatural : hol.type.

def type_12 : hol.type :=
  Number_2ENatural_2Enatural.

def type_13 : hol.type :=
  hol.arr type_12 (hol.arr type_12 type_2).

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_0 A).

(; Constant Set.size ;)

Set_2Esize : A : hol.type -> hol.term (type_0 A).

def term_25 : A : hol.type -> hol.term (hol.arr (type_1 A) type_12) :=
  A : hol.type => Set_2Esize (hol.arr (type_1 A) type_12).

(; Constant Data.List.length ;)

Data_2EList_2Elength : A : hol.type -> hol.term (type_0 A).

def term_26 : A : hol.type -> hol.term (hol.arr (type_4 A) type_12) :=
  A : hol.type => Data_2EList_2Elength (hol.arr (type_4 A) type_12).

def term_27 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => Number_2ENatural_2E_3C_3D type_13 (term_25 A (term_8 A l_1)) (term_26 A (term_7 A l_1))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_27 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((Number.Natural.<= (Set.size (Data.List.toSet l))) (Data.List.length l))) ;)

def type_14 : hol.type :=
  hol.arr type_2 type_10.

def term_28 : hol.term type_14 :=
  hol.eq type_2.

(; Constant Data.Bool.F ;)

Data_2EBool_2EF : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.null ;)

Data_2EList_2Enull : A : hol.type -> hol.term (type_0 A).

def term_29 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => Data_2EList_2Enull (type_6 A) (term_7 A l_1).

def term_30 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_28 (term_12 A (x_2 : hol.term (type_0 A) => Data_2EBool_2EF type_2) (term_7 A l_1)) (term_29 A l_1)).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_30 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((Data.List.all \lambda x. Data.Bool.F) l)) (Data.List.null l))) ;)

def term_31 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term type_10 :=
  A : hol.type => l_1 : hol.term (type_4 A) => term_28 (term_0 A (term_8 A l_1) (term_3 A)).

def term_32 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_31 A l_1 (term_29 A l_1)).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_32 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((= (Data.List.toSet l)) Set.{})) (Data.List.null l))) ;)

def term_33 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_31 A l_1 (hol.eq (type_4 A) (term_7 A l_1) (term_2 A))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (term_33 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((= (Data.List.toSet l)) Set.{})) ((= l) Data.List.[]))) ;)

def term_34 : A : hol.type -> hol.term (hol.arr (type_3 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) type_2).

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_35 : hol.term type_14 :=
  Data_2EBool_2E_3D_3D_3E type_14.

def term_36 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => s_1 : hol.term (type_1 A) => s_1.

def term_37 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_10 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_35 (term_6 A (term_36 A s_1)).

def type_15 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_4 A).

(; Constant Data.List.fromSet ;)

def Data_2EList_2EfromSet : A : hol.type -> hol.term (type_15 A) :=
  A : hol.type => list_2Dset_2D1_2E55 (type_15 A).

def term_38 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term (type_4 A) :=
  A : hol.type => s_1 : hol.term (type_1 A) => Data_2EList_2EfromSet (type_0 A) (term_36 A s_1).

def term_39 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_0 A (term_1 A (term_38 A s_1)) (term_36 A s_1).

def term_40 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_34 A (s_1 : hol.term (type_1 A) => term_37 A s_1 (term_39 A s_1)).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (term_40 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Data.List.toSet (Data.List.fromSet s))) s))) ;)

def term_41 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => hol.eq type_12 (term_26 A (term_38 A s_1)) (term_25 A (term_36 A s_1)).

def term_42 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_34 A (s_1 : hol.term (type_1 A) => term_37 A s_1 (term_41 A s_1)).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (term_42 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Data.List.length (Data.List.fromSet s))) (Set.size s)))) ;)

def term_43 : A : hol.type -> l_1 : hol.term (type_4 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => x_2 : hol.term (type_0 A) => term_20 A x_2 (term_7 A l_1).

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_0 A).

def term_44 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_3 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => Set_2Emember (hol.arr (type_0 A) (type_3 A)) (term_19 A x_1).

def term_45 : A : hol.type -> l_1 : hol.term (type_4 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => x_2 : hol.term (type_0 A) => term_44 A x_2 (term_8 A l_1).

def term_46 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_5 A (l_1 : hol.term (type_4 A) => term_17 A (x_2 : hol.term (type_0 A) => term_28 (term_43 A l_1 x_2) (term_45 A l_1 x_2))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_46 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Data.Bool.! \lambda x. ((= ((Data.List.member x) l)) ((Set.member x) (Data.List.toSet l))))) ;)

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_47 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => h_1 : hol.term (type_0 A) => h_1.

def term_48 : A : hol.type -> t_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => t_1 : hol.term (type_4 A) => t_1.

def term_49 : A : hol.type -> t_1 : hol.term (type_4 A) -> h_2 : hol.term (type_0 A) -> hol.term (type_4 A) :=
  A : hol.type => t_1 : hol.term (type_4 A) => h_2 : hol.term (type_0 A) => Data_2EList_2E_3A_3A (hol.arr (type_0 A) (hol.arr (type_4 A) (type_4 A))) (term_47 A h_2) (term_48 A t_1).

(; Constant Set.insert ;)

Set_2Einsert : A : hol.type -> hol.term (type_0 A).

def term_50 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_17 A (h_1 : hol.term (type_0 A) => term_5 A (t_2 : hol.term (type_4 A) => term_0 A (term_1 A (term_49 A t_2 h_1)) (Set_2Einsert (hol.arr (type_0 A) (hol.arr (type_1 A) (type_1 A))) (term_47 A h_1) (term_1 A (term_48 A t_2))))).

(; axiom ;)

thm_13 : A : hol.type -> hol.proof (term_50 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (Data.List.toSet ((Data.List.:: h) t))) ((Set.insert h) (Data.List.toSet t))))) ;)

def term_51 : A : hol.type -> l_1 : hol.term (type_4 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => p_2 : hol.term (type_7 A) => term_14 A p_2 (term_7 A l_1).

def term_52 : A : hol.type -> x_1 : hol.term (type_0 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => x_1 : hol.term (type_0 A) => p_2 : hol.term (type_7 A) => term_13 A p_2 (term_19 A x_1).

def term_53 : A : hol.type -> p_1 : hol.term (type_7 A) -> hol.term (type_7 A) :=
  A : hol.type => p_1 : hol.term (type_7 A) => x_2 : hol.term (type_0 A) => term_18 (term_52 A x_2 p_1).

def term_54 : A : hol.type -> l_1 : hol.term (type_4 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => p_2 : hol.term (type_7 A) => term_22 A (term_53 A p_2) (term_7 A l_1).

def term_55 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_18 (term_51 A l_2 p_1)) (term_54 A l_2 p_1))).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_55 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.~ ((Data.List.all p) l))) ((Data.List.any \lambda x. (Data.Bool.~ (p x))) l)))) ;)

def term_56 : A : hol.type -> l_1 : hol.term (type_4 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => p_2 : hol.term (type_7 A) => term_23 A p_2 (term_7 A l_1).

def term_57 : A : hol.type -> l_1 : hol.term (type_4 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => p_2 : hol.term (type_7 A) => term_12 A (term_53 A p_2) (term_7 A l_1).

def term_58 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_18 (term_56 A l_2 p_1)) (term_57 A l_2 p_1))).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (term_58 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.~ ((Data.List.any p) l))) ((Data.List.all \lambda x. (Data.Bool.~ (p x))) l)))) ;)

def term_59 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_18 (term_57 A l_2 p_1)) (term_56 A l_2 p_1))).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (term_59 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.~ ((Data.List.all \lambda x. (Data.Bool.~ (p x))) l))) ((Data.List.any p) l)))) ;)

def term_60 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_18 (term_54 A l_2 p_1)) (term_51 A l_2 p_1))).

(; axiom ;)

thm_17 : A : hol.type -> hol.proof (term_60 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.~ ((Data.List.any \lambda x. (Data.Bool.~ (p x))) l))) ((Data.List.all p) l)))) ;)

def term_61 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_34 A (s_1 : hol.term (type_1 A) => term_37 A s_1 (term_17 A (x_2 : hol.term (type_0 A) => term_28 (term_20 A x_2 (term_38 A s_1)) (term_44 A x_2 (term_36 A s_1))))).

(; axiom ;)

thm_18 : A : hol.type -> hol.proof (term_61 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.! \lambda x. ((= ((Data.List.member x) (Data.List.fromSet s))) ((Set.member x) s))))) ;)

def term_62 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_17 A (x_3 : hol.term (type_0 A) => term_35 (term_43 A l_2 x_3) (term_52 A x_3 p_1))) (term_51 A l_2 p_1))).

(; axiom ;)

thm_19 : A : hol.type -> hol.proof (term_62 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.List.member x) l)) (p x)))) ((Data.List.all p) l)))) ;)

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_63 : A : hol.type -> hol.term (type_8 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_8 A).

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_64 : hol.term type_14 :=
  Data_2EBool_2E_2F_5C type_14.

def term_65 : A : hol.type -> p_1 : hol.term (type_7 A) -> l_2 : hol.term (type_4 A) -> x_3 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => p_1 : hol.term (type_7 A) => l_2 : hol.term (type_4 A) => x_3 : hol.term (type_0 A) => term_64 (term_43 A l_2 x_3) (term_52 A x_3 p_1).

def term_66 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_63 A (x_3 : hol.term (type_0 A) => term_65 A p_1 l_2 x_3)) (term_56 A l_2 p_1))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (term_66 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.? \lambda x. ((Data.Bool./\ ((Data.List.member x) l)) (p x)))) ((Data.List.any p) l)))) ;)

def term_67 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_51 A l_2 p_1) (term_17 A (x_3 : hol.term (type_0 A) => term_35 (term_45 A l_2 x_3) (term_52 A x_3 p_1))))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (term_67 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= ((Data.List.all p) l)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) (Data.List.toSet l))) (p x)))))) ;)

def term_68 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_5 A (l_2 : hol.term (type_4 A) => term_28 (term_56 A l_2 p_1) (term_63 A (x_3 : hol.term (type_0 A) => term_64 (term_45 A l_2 x_3) (term_52 A x_3 p_1))))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_68 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= ((Data.List.any p) l)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) (Data.List.toSet l))) (p x)))))) ;)

def term_69 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_34 A (s_1 : hol.term (type_1 A) => term_37 A s_1 (term_64 (term_39 A s_1) (term_41 A s_1))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (term_69 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((Data.Bool./\ ((= (Data.List.toSet (Data.List.fromSet s))) s)) ((= (Data.List.length (Data.List.fromSet s))) (Set.size s))))) ;)

def term_70 : A : hol.type -> h_1 : hol.term (type_0 A) -> p_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => h_1 : hol.term (type_0 A) => p_2 : hol.term (type_7 A) => term_13 A p_2 (term_47 A h_1).

def term_71 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_17 A (h_2 : hol.term (type_0 A) => term_5 A (t_3 : hol.term (type_4 A) => term_28 (term_14 A p_1 (term_49 A t_3 h_2)) (term_64 (term_70 A h_2 p_1) (term_14 A p_1 (term_48 A t_3)))))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (term_71 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.all p) ((Data.List.:: h) t))) ((Data.Bool./\ (p h)) ((Data.List.all p) t)))))) ;)

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_0 A).

def term_72 : hol.term type_14 :=
  Data_2EBool_2E_5C_2F type_14.

def term_73 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_17 A (h_2 : hol.term (type_0 A) => term_5 A (t_3 : hol.term (type_4 A) => term_28 (term_23 A p_1 (term_49 A t_3 h_2)) (term_72 (term_70 A h_2 p_1) (term_23 A p_1 (term_48 A t_3)))))).

(; axiom ;)

thm_25 : A : hol.type -> hol.proof (term_73 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.any p) ((Data.List.:: h) t))) ((Data.Bool.\/ (p h)) ((Data.List.any p) t)))))) ;)

def type_16 : hol.type -> hol.type :=
  B : hol.type => B.

def type_17 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_16 B) type_2.

def type_18 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_17 B).

def term_74 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_18 B A) type_2) type_2) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_18 B A) type_2) type_2).

def type_19 : hol.type -> hol.type :=
  B : hol.type => Data_2EList_2Elist (type_16 B).

def type_20 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_19 B) type_2.

def term_75 : B : hol.type -> hol.term (hol.arr (type_20 B) type_2) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_20 B) type_2).

def type_21 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_17 B) (type_20 B).

def term_76 : B : hol.type -> hol.term (type_21 B) :=
  B : hol.type => Data_2EList_2Eall (type_16 B).

def term_77 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> p_2 : hol.term (type_18 B A) -> hol.term (type_17 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => p_2 : hol.term (type_18 B A) => p_2 (term_19 A x_1).

def term_78 : B : hol.type -> l_1 : hol.term (type_19 B) -> hol.term (type_19 B) :=
  B : hol.type => l_1 : hol.term (type_19 B) => l_1.

def term_79 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_16 B) -> p_2 : hol.term (type_18 B A) -> hol.term (type_7 A) :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_16 B) => p_2 : hol.term (type_18 B A) => x_3 : hol.term (type_0 A) => term_77 B A x_3 p_2 y_1.

def term_80 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_74 B A (p_1 : hol.term (type_18 B A) => term_75 B (l_2 : hol.term (type_19 B) => term_28 (term_17 A (x_3 : hol.term (type_0 A) => term_76 B (term_77 B A x_3 p_1) (term_78 B l_2))) (term_76 B (y_3 : hol.term (type_16 B) => term_17 A (term_79 B A y_3 p_1)) (term_78 B l_2)))).

(; axiom ;)

thm_26 : B : hol.type -> A : hol.type -> hol.proof (term_80 B A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.! \lambda x. ((Data.List.all (p x)) l))) ((Data.List.all \lambda y. (Data.Bool.! \lambda x. ((p x) y))) l)))) ;)

def term_81 : B : hol.type -> hol.term (type_21 B) :=
  B : hol.type => Data_2EList_2Eany (type_16 B).

def term_82 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_74 B A (p_1 : hol.term (type_18 B A) => term_75 B (l_2 : hol.term (type_19 B) => term_28 (term_63 A (x_3 : hol.term (type_0 A) => term_81 B (term_77 B A x_3 p_1) (term_78 B l_2))) (term_81 B (y_3 : hol.term (type_16 B) => term_63 A (term_79 B A y_3 p_1)) (term_78 B l_2)))).

(; axiom ;)

thm_27 : B : hol.type -> A : hol.type -> hol.proof (term_82 B A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= (Data.Bool.? \lambda x. ((Data.List.any (p x)) l))) ((Data.List.any \lambda y. (Data.Bool.? \lambda x. ((p x) y))) l)))) ;)

def term_83 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_17 A (x_1 : hol.term (type_0 A) => term_17 A (h_2 : hol.term (type_0 A) => term_5 A (t_3 : hol.term (type_4 A) => term_28 (term_20 A x_1 (term_49 A t_3 h_2)) (term_72 (hol.eq (type_0 A) (term_19 A x_1) (term_47 A h_2)) (term_20 A x_1 (term_48 A t_3)))))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (term_83 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.member x) ((Data.List.:: h) t))) ((Data.Bool.\/ ((= x) h)) ((Data.List.member x) t)))))) ;)

def term_84 : A : hol.type -> q_1 : hol.term (type_7 A) -> hol.term (type_7 A) :=
  A : hol.type => q_1 : hol.term (type_7 A) => q_1.

def term_85 : A : hol.type -> x_1 : hol.term (type_0 A) -> q_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => x_1 : hol.term (type_0 A) => q_2 : hol.term (type_7 A) => term_84 A q_2 (term_19 A x_1).

def term_86 : A : hol.type -> l_1 : hol.term (type_4 A) -> q_2 : hol.term (type_7 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_4 A) => q_2 : hol.term (type_7 A) => term_12 A (term_84 A q_2) (term_7 A l_1).

def term_87 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_10 A (q_2 : hol.term (type_7 A) => term_5 A (l_3 : hol.term (type_4 A) => term_28 (term_12 A (x_4 : hol.term (type_0 A) => term_64 (term_52 A x_4 p_1) (term_85 A x_4 q_2)) (term_7 A l_3)) (term_64 (term_51 A l_3 p_1) (term_86 A l_3 q_2))))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (term_87 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda l. ((= ((Data.List.all \lambda x. ((Data.Bool./\ (p x)) (q x))) l)) ((Data.Bool./\ ((Data.List.all p) l)) ((Data.List.all q) l)))))) ;)

def term_88 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_10 A (q_2 : hol.term (type_7 A) => term_5 A (l_3 : hol.term (type_4 A) => term_35 (term_64 (term_12 A (x_4 : hol.term (type_0 A) => term_35 (term_52 A x_4 p_1) (term_85 A x_4 q_2)) (term_7 A l_3)) (term_51 A l_3 p_1)) (term_86 A l_3 q_2)))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_88 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Data.Bool./\ ((Data.List.all \lambda x. ((Data.Bool.==> (p x)) (q x))) l)) ((Data.List.all p) l))) ((Data.List.all q) l))))) ;)

def term_89 : A : hol.type -> q_1 : hol.term (type_7 A) -> p_2 : hol.term (type_7 A) -> l_3 : hol.term (type_4 A) -> hol.term type_10 :=
  A : hol.type => q_1 : hol.term (type_7 A) => p_2 : hol.term (type_7 A) => l_3 : hol.term (type_4 A) => term_64 (term_17 A (x_4 : hol.term (type_0 A) => term_35 (term_65 A p_2 l_3 x_4) (term_85 A x_4 q_1))).

def term_90 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_10 A (q_2 : hol.term (type_7 A) => term_5 A (l_3 : hol.term (type_4 A) => term_35 (term_89 A q_2 p_1 l_3 (term_51 A l_3 p_1)) (term_86 A l_3 q_2)))).

(; axiom ;)

thm_31 : A : hol.type -> hol.proof (term_90 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Data.List.member x) l)) (p x))) (q x)))) ((Data.List.all p) l))) ((Data.List.all q) l))))) ;)

def term_91 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_10 A (p_1 : hol.term (type_7 A) => term_10 A (q_2 : hol.term (type_7 A) => term_5 A (l_3 : hol.term (type_4 A) => term_35 (term_89 A q_2 p_1 l_3 (term_56 A l_3 p_1)) (term_22 A (term_84 A q_2) (term_7 A l_3))))).

(; axiom ;)

thm_32 : A : hol.type -> hol.proof (term_91 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. (Data.Bool.! \lambda l. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Data.Bool./\ ((Data.List.member x) l)) (p x))) (q x)))) ((Data.List.any p) l))) ((Data.List.any q) l))))) ;)

gcd_sttfa : THEORY
BEGIN
IMPORTING bool_sttfa,connectives_sttfa,div_mod_sttfa,leibniz_sttfa,logic_sttfa,nat_sttfa,primes_sttfa

gcd_aux : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

gcd_aux_body : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]

axiom_gcd_aux  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))

eq_gcd_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))

%|- eq_gcd_aux : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))" "p"
%|- (sttfa-lemma "gcd_sttfa.axiom_gcd_aux")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(p)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(p)) => P(y)))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(p)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "gcd_sttfa.gcd_aux(p)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_gcd_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))(gcd_sttfa.gcd_aux(p)))

%|- sym_eq_gcd_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))(gcd_sttfa.gcd_aux(p)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))" "p"
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))(gcd_sttfa.gcd_aux(p)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux(p))))" "nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux(p))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "gcd_sttfa.gcd_aux(p)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

axiom_gcd_aux_body_O  : AXIOM connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))

eq_gcd_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))

%|- eq_gcd_aux_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))"
%|- (sttfa-lemma "gcd_sttfa.axiom_gcd_aux_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

sym_eq_gcd_aux_body_O  : LEMMA leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))

%|- sym_eq_gcd_aux_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))"
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))
%|- QED

axiom_gcd_aux_body_S  : AXIOM (FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))

eq_gcd_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))

%|- eq_gcd_aux_body_S : PROOF
%|- (sttfa-conv "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))))" "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))"
%|- (sttfa-conv "connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.axiom_gcd_aux_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(connectives_sttfa.equal[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => (FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y))))))" "gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]"))))))))
%|- QED

sym_eq_gcd_aux_body_S  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))

%|- sym_eq_gcd_aux_body_S : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))" "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m))))"
%|- (sttfa-conv "(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](x)(y) => leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](y)(x))))" "gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))
%|- QED

gcd  : [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] = (LAMBDA(n:nat_sttfa.sttfa_nat):(LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))

commutative_gcd  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))))

%|- commutative_gcd : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))))" () ("gcd_sttfa.gcd" "gcd_sttfa.gcd")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_true))" "nat_sttfa.le(m)(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(n) => nat_sttfa.le(m)(n))" "nat_sttfa.lt(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" "n"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(m)(n) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(m0))(bool_sttfa.sttfa_true)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(m0))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_true))))" "m"
%|- (sttfa-lemma "nat_sttfa.le_to_leb_true"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x))))" "nat_sttfa.leb(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => P(gcd_sttfa.gcd_aux(m)(n)(m))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => P(y))))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false))(case_false))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => P(gcd_sttfa.gcd_aux(m)(n)(m))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)) => P(y))))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false))(case_false))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false))(case_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))(case_false)))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_true)))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))))" "(nat_sttfa.le(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(x)(m)(x))(gcd_sttfa.gcd_aux(m)(x)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(x)(m))(gcd_sttfa.gcd_aux(x)(m)(x))(nat_sttfa.leb(m)(x)))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(nat_sttfa.leb(m)(m))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(x)(m)(x))(gcd_sttfa.gcd_aux(m)(x)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(x)(m))(gcd_sttfa.gcd_aux(x)(m)(x))(nat_sttfa.leb(m)(x))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(nat_sttfa.leb(m)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(nat_sttfa.leb(m)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(z)))" "nat_sttfa.leb(m)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false)) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(z))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))(gcd_sttfa.gcd_aux(m)(m)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)) => P(gcd_sttfa.gcd_aux(m)(m)(m))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)) => P(y))))(gcd_sttfa.gcd_aux(m)(m)(m))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(case_false)(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m)))" "gcd_sttfa.gcd_aux(m)(m)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(case_false)(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(m)(m)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "gcd_sttfa.gcd_aux(m)(m)(m)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))(gcd_sttfa.gcd_aux(m)(m)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(m)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(m)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(m)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(m)(m)(m)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_false)) => (FORALL(z:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(z)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(sttfa___)))(bool_sttfa.sttfa_true) => ((LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(sttfa___)))(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(sttfa___)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[bool_sttfa.sttfa_bool -> bool]):(return(bool_sttfa.sttfa_true) => (return(bool_sttfa.sttfa_false) => (FORALL(z:bool_sttfa.sttfa_bool):return(z)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(m)(m))(gcd_sttfa.gcd_aux(m)(m)(m))(sttfa___)))"
%|- (sttfa-lemma "bool_sttfa.match_bool_prop")))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(x)(m)(x))(gcd_sttfa.gcd_aux(m)(x)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(x)(m))(gcd_sttfa.gcd_aux(x)(m)(x))(nat_sttfa.leb(m)(x))))(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(x0)(m)(x0))(gcd_sttfa.gcd_aux(m)(x0)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(x0)(m))(gcd_sttfa.gcd_aux(x0)(m)(x0))(nat_sttfa.leb(m)(x0))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(x)(m)(x))(gcd_sttfa.gcd_aux(m)(x)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(x)(m))(gcd_sttfa.gcd_aux(x)(m)(x))(nat_sttfa.leb(m)(x))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "m"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))))" "(nat_sttfa.lt(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-impl-i "nat_sttfa.lt(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n))"
%|- (sttfa-impl-e "(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" "nat_sttfa.lt(n)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m0)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)))))" "n"
%|- (sttfa-lemma "nat_sttfa.lt_to_not_le"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(n)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(m0))(bool_sttfa.sttfa_false)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(m)(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(m0))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(n)(m))(bool_sttfa.sttfa_false))))" "m"
%|- (sttfa-lemma "nat_sttfa.not_le_to_leb_false"))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](nat_sttfa.leb(m)(n))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x))))" "nat_sttfa.leb(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false)) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))(gcd_sttfa.gcd_aux(n)(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)) => P(gcd_sttfa.gcd_aux(n)(m)(n))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)) => P(y))))(gcd_sttfa.gcd_aux(n)(m)(n))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true))(gcd_sttfa.gcd_aux(n)(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))(gcd_sttfa.gcd_aux(n)(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(x)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(n)(m)(n))(nat_sttfa.leb(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim"))))))))))))
%|- QED

gcd_O_l  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))

%|- gcd_O_l : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" () ("gcd_sttfa.gcd")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => P(y))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "gcd_sttfa.gcd_aux_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_leb")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_leb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(y))(m))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => P(m)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => P(y))))(m)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(case_false)(bool_sttfa.sttfa_true))(m))" "gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(case_false)(bool_sttfa.sttfa_true))(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "m"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]"))))))))))))
%|- QED

divides_mod_to_divides  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))))))

%|- divides_mod_to_divides : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n))" "(primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))" "primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))))" "(FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q1)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))))"
%|- (then@ (sttfa-forall-i "q1")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q1))" "(primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(n)" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))" "primes_sttfa.sttfa_divides(p)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m))) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))" "(FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q2)) => primes_sttfa.sttfa_divides(p)(m)))"
%|- (then@ (sttfa-forall-i "q2")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q2))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1))) => primes_sttfa.sttfa_divides(p)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(z)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(z))))" "q1"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(z)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" "nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x)))" "nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(y))))" "nat_sttfa.times(p)(q1)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(z))(nat_sttfa.times(p)(nat_sttfa.times(q2)(z))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(z))(nat_sttfa.times(p)(nat_sttfa.times(q2)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" "q2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q2))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.times(p)(q2)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(m)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(sttfa___)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x_1)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x_1)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(x_1)(div_mod_sttfa.div(m)(n)))(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(x_1)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(x_1)(div_mod_sttfa.mod(m)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(x_1)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(p)(q2))(div_mod_sttfa.div(m)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(x_1)))(div_mod_sttfa.mod(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(div_mod_sttfa.mod(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(p)(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(p)(q1))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1))) => primes_sttfa.sttfa_divides(p)(m))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" "nat_sttfa.plus(nat_sttfa.times(q2)(div_mod_sttfa.div(m)(n)))(q1)"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => primes_sttfa.sttfa_divides(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.quotient"))))))))))
%|- (sttfa-conv "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m))) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(n) => return_type)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(n) => return_type)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => return_type)) => (primes_sttfa.sttfa_divides(n)(m) => return_type)))))" "p"
%|- (sttfa-lemma "primes_sttfa.match_divides_prop"))))))))))))
%|- (sttfa-conv "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => return_type)))" "(primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-conv "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => return_type)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => return_type)) => (primes_sttfa.sttfa_divides(n)(m) => return_type)))))" "p"
%|- (sttfa-lemma "primes_sttfa.match_divides_prop"))))))))))))))
%|- QED

divides_to_gcd_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(m)(n))(n)))))))

%|- divides_to_gcd_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(m)(n))(n)))"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(m0))(m)(n))(n)))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(m)(n))(n))))" "(FORALL(l:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l))(m)(n))(n))))"
%|- (then@ (sttfa-forall-i "l")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))(m)(n))(n))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l))(m)(n))(n))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))(m)(n))(n)))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))(m)(n))(n))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))(m)(n))(n))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))(m)(n))(n)))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))(m)(n))(n))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(n)(m)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m0))(bool_sttfa.sttfa_true))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m0) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m0))(bool_sttfa.sttfa_true))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true)))))" "n"
%|- (sttfa-lemma "primes_sttfa.divides_to_dividesb_true")))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x))(n)))" "primes_sttfa.dividesb(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(n) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(l)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](n)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(bool_sttfa.sttfa_true))(n) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x))(n))))" ("div_mod_sttfa.mod") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x))(n))(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x0))(n))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(l)(n)(div_mod_sttfa.mod(m)(n)))(x))(n))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_true) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_true) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_true"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => P(y))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(l)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))" "l"
%|- (sttfa-lemma "gcd_sttfa.sym_eq_gcd_aux_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(l)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(n0))))" "l"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "gcd_sttfa.gcd_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))) => P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(n))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l))) => P(y))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(l)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(l)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))(gcd_sttfa.gcd_aux(p)))" "nat_sttfa.sttfa_S(l)"
%|- (sttfa-lemma "gcd_sttfa.sym_eq_gcd_aux"))))))))))
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(sttfa___)(m)(n))(n))))(nat_sttfa.sttfa_S(m0))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(sttfa___)(m)(n))(n))))(p))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m0:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m0))) => P(p)))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(sttfa___)(m)(n))(n))))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m0:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m0))) => P(p))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(p)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m0:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m0))) => P(p))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((FORALL(m:nat_sttfa.sttfa_nat):P(nat_sttfa.sttfa_S(m))) => P(n)))))" "p"
%|- (sttfa-lemma "nat_sttfa.lt_O_n_elim")))))))))))
%|- QED

not_divides_to_gcd_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))))

%|- not_divides_to_gcd_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m0))(bool_sttfa.sttfa_false))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m0)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m0))(bool_sttfa.sttfa_false))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false)))))" "n"
%|- (sttfa-lemma "primes_sttfa.not_divides_to_dividesb_false")))))))
%|- (sttfa-conv "(logic_sttfa.eq[bool_sttfa.sttfa_bool](primes_sttfa.dividesb(n)(m))(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))))" "primes_sttfa.dividesb(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))) => (LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n)))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(p)(n)(nat_sttfa.match_nat_type[nat_sttfa.sttfa_nat](m)((LAMBDA(p0:nat_sttfa.sttfa_nat):div_mod_sttfa.mod_aux(m)(m)(p0)))(n))"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "n"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(bool_sttfa.sttfa_false))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))" ("div_mod_sttfa.mod" "div_mod_sttfa.mod") ()
%|- (sttfa-conv "((LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => (LAMBDA(x0:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x0))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" "(LAMBDA(x:bool_sttfa.sttfa_bool):logic_sttfa.eq[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(x))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(bool_sttfa.sttfa_false) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(bool_sttfa.sttfa_false) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:bool_sttfa.sttfa_bool):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):(P(a) => (FORALL(x:bool_sttfa.sttfa_bool):(logic_sttfa.eq[bool_sttfa.sttfa_bool](x)(a) => P(x))))))" "bool_sttfa.sttfa_false"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[bool_sttfa.sttfa_bool]"))))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0))))) => P(y))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n0)(gcd_sttfa.gcd_aux(p)(n0)(div_mod_sttfa.mod(m0)(n0)))(primes_sttfa.dividesb(n0)(m0)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n)))(primes_sttfa.dividesb(n)(m)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))))" "p"
%|- (sttfa-lemma "gcd_sttfa.sym_eq_gcd_aux_body_S")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p))) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(p)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(n0))))" "p"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):(FORALL(n0:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return(nat_sttfa.sttfa_S(n0)))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_S(n0)))))" "gcd_sttfa.gcd_aux_body"
%|- (sttfa-lemma "nat_sttfa.sym_eq_filter_nat_type_S[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))) => P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p))) => P(y))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_S(p)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p)))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p))(gcd_sttfa.gcd_aux(p)))" "nat_sttfa.sttfa_S(p)"
%|- (sttfa-lemma "gcd_sttfa.sym_eq_gcd_aux"))))))))))))
%|- QED

divides_gcd_aux_mn  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(n))))))))

%|- divides_gcd_aux_mn : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(n))))))))" "p"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(n))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n))(n))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(n)))))))))" "(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(n))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))))))))"
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(n)))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))"
%|- (sttfa-impl-e "(logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" "logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))))" "n"
%|- (sttfa-lemma "primes_sttfa.decidable_divides")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))))" "q"
%|- (sttfa-lemma "gcd_sttfa.not_divides_to_gcd_aux")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n))))" "gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))))" "nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q))" "nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(m0)))" "q"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(y) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(y)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(y) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m0)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m0)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))))" "n"
%|- (sttfa-lemma "primes_sttfa.mod_O_to_divides")))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(n)(m) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => return))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(n0))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(n0))(n0))))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(n0))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(n0))(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(m)(n))(n)))))))" "n"
%|- (propax))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))))" "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)" "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n0)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n0) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n0)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n0) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m0)(n0)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n0) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m0)(n0)) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n0) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(p)(div_mod_sttfa.mod(m)(n)) => (primes_sttfa.sttfa_divides(p)(n) => primes_sttfa.sttfa_divides(p)(m)))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "gcd_sttfa.divides_mod_to_divides"))))))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))) => return)))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n)) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(B) => return))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x0)(m))(primes_sttfa.sttfa_divides(x0)(n)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))))" "(primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(n)(m)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "q"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(n0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(m)(n))(n)))))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "gcd_sttfa.divides_to_gcd_aux"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n))))" "gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(n)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(n))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(n)))" "primes_sttfa.sttfa_divides(n)(n)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(n))" "n"
%|- (sttfa-lemma "primes_sttfa.divides_n_n")))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => (primes_sttfa.sttfa_divides(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(n))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(n)(m) => (primes_sttfa.sttfa_divides(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(n)(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(B))))" "primes_sttfa.sttfa_divides(n)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(n)(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(n)(m))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x0)(m))(primes_sttfa.sttfa_divides(x0)(n)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x)(m))(primes_sttfa.sttfa_divides(x)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => return))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(B) => return)))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(n))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n))(n))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(x)(m)(n))(n))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n)))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_O)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m0)(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m0)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_not_lt"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))(n))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(n))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(n))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(n))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(n))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n))(n))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

divides_gcd_nm  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))

%|- divides_gcd_nm : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(y)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(y)(m))(y))))" "n"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(y)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(y)(m))(y)))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))" "gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "primes_sttfa.divides_n_O")))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(m)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(m))" "primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)))" "primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)(m))))" "primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(n))" "gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "primes_sttfa.divides_n_n")))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))" () ("gcd_sttfa.gcd")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux(p))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(p)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O)) => P(y))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "gcd_sttfa.gcd_aux_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):(LAMBDA(n0:nat_sttfa.sttfa_nat):m0)))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](y(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(P:[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]] -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]](gcd_sttfa.gcd_aux_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):(LAMBDA(n:nat_sttfa.sttfa_nat):m)))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "gcd_sttfa.eq_gcd_aux_body_O")))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m))) => primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)(m))))" () ("gcd_sttfa.gcd")
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(nat_sttfa.sttfa_O)) => P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(nat_sttfa.sttfa_O))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb(n))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.eq_leb"))))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(nat_sttfa.leb_body(nat_sttfa.sttfa_O))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O)) => P(y))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body)(nat_sttfa.sttfa_O))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(return:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]):leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.filter_nat_type[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](return)(nat_sttfa.sttfa_O))(return(nat_sttfa.sttfa_O)))" "nat_sttfa.leb_body"
%|- (sttfa-lemma "nat_sttfa.eq_filter_nat_type_O[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]]")))))))))
%|- (sttfa-conv "((LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => (LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))((LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P((LAMBDA(m0:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))))" "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(y(m))))"
%|- (sttfa-conv "(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(nat_sttfa.leb_body(nat_sttfa.sttfa_O)) => P(y))))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(LAMBDA(y:[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]):(FORALL(P:[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool] -> bool]):(P(x) => P(y)))))(nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[[nat_sttfa.sttfa_nat -> bool_sttfa.sttfa_bool]](nat_sttfa.leb_body(nat_sttfa.sttfa_O))((LAMBDA(m:nat_sttfa.sttfa_nat):bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-lemma "nat_sttfa.eq_leb_body_O")))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(y))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => (LAMBDA(y:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(y))(m))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => P(m)))" "(LAMBDA(y:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(nat_sttfa.leb(nat_sttfa.sttfa_O)(m)))(y))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true)) => P(y))))(m)" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m))(bool_sttfa.sttfa_true))(m)" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(case_false)(bool_sttfa.sttfa_true))(m))" "gcd_sttfa.gcd_aux(m)(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](m)(case_false)(bool_sttfa.sttfa_true))(m))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))(case_true)))" "m"
%|- (sttfa-lemma "bool_sttfa.eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O))))" ("gcd_sttfa.gcd") ()
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m)"
%|- (sttfa-lemma "connectives_sttfa.conj"))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(x_1)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(x_1)(m))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(y))(y))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(y))(n))))" "m"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(y))(y))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(y))(n)))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n)" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))" "n"
%|- (sttfa-lemma "gcd_sttfa.gcd_O_l")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(y)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m0))(gcd_sttfa.gcd(m0)(n)))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m0))(gcd_sttfa.gcd(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))))" "n"
%|- (sttfa-lemma "gcd_sttfa.commutative_gcd")))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(y))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))))" "gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(y))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(sttfa___))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(n))" "gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "primes_sttfa.divides_n_n")))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(B) => B)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))" "gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "primes_sttfa.divides_n_O")))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(x_1))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(x_1))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(x_1))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(x_1))(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(n)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(n))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(n)))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(n)))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(n))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)))" "nat_sttfa.le(m)(m)"
%|- (sttfa-conv "nat_sttfa.le(m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))))" "nat_sttfa.le(m)(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(n) => nat_sttfa.le(m)(n))" "nat_sttfa.lt(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" "n"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(n0))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(n0))(n0))))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(n0))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(n0))(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(m0)(n0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(m0)(n0))(n0)))))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(m0)(n0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(m0)(n0))(n0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(n))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_aux_mn"))))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))" "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)" "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => (B => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)) => return)))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(B) => return))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(m)(n)(m))(n))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(y)(n))))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(y)(n))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(y)(n))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(n))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))(n))) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))(n))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(n)))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))) => (nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(n))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n)))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))) => (nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n)))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n)))" "nat_sttfa.le(n)(n)"
%|- (sttfa-conv "nat_sttfa.le(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n0))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n0))(n0))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n0))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n0))(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m0)(n0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m0)(n0))(n0)))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m0)(n0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m0)(n0))(n0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(p)(m)(n))(n))))))))" "n"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_aux_mn")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))))(gcd_sttfa.gcd_aux(n)(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd_aux(n)(m)(n))(n))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(y)(n))))(gcd_sttfa.gcd_aux(n)(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(y)(n))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))(m))(primes_sttfa.sttfa_divides(y)(n))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(n)))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(n)))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(n)))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(m))(primes_sttfa.sttfa_divides(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))(n)))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))))" ("gcd_sttfa.gcd" "gcd_sttfa.gcd") ()
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => return))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => return))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- QED

divides_gcd_l  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))

%|- divides_gcd_l : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-conv "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))" "n"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_nm")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => B))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => B))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(connectives_sttfa.sttfa_And(A)(B) => B)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.proj2"))))))))
%|- QED

divides_gcd_r  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)))

%|- divides_gcd_r : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-conv "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))" "n"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_nm")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(connectives_sttfa.sttfa_And(A)(B) => A)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.proj1"))))))))
%|- QED

let_clause_1544  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))

%|- let_clause_1544 : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))))))))))))
%|- QED

let_clause_15441  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))

%|- let_clause_15441 : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))))))))))))
%|- QED

eq_minus_gcd_aux  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(p)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(p)(m)(n)))))))))))))

%|- eq_minus_gcd_aux : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (sttfa-conv "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(p)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(p)(m)(n))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(x)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(x)(m)(n)))))))))))))" "p"
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(x)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(x)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n)))))))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(x)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(x)(m)(n))))))))))))))" "(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))))))))"
%|- (then@ (sttfa-forall-i "q")
%|- (sttfa-impl-i "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))"
%|- (sttfa-impl-e "(logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" "logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m0)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))))" "n"
%|- (sttfa-lemma "primes_sttfa.decidable_divides")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(p))(m)(n))(gcd_sttfa.gcd_aux(p)(n)(div_mod_sttfa.mod(m)(n))))))))" "q"
%|- (sttfa-lemma "gcd_sttfa.not_divides_to_gcd_aux")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x))))))))" "gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q))" "nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" () ("nat_sttfa.lt")
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(n) => (nat_sttfa.le(n)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(q)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(m0)))" "q"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(div_mod_sttfa.mod(m)(n)))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_S(n))(nat_sttfa.sttfa_S(m)) => nat_sttfa.le(n)(m))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.le_S_S_to_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(div_mod_sttfa.mod(m)(m0))(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(div_mod_sttfa.mod(n)(m))(m))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.lt_mod_m_m"))))))
%|- (sttfa-conv "(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(n) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(y) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(y)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(div_mod_sttfa.mod(m)(n))(y) => nat_sttfa.le(div_mod_sttfa.mod(m)(n))(y)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(nat_sttfa.lt(x)(y) => nat_sttfa.le(x)(y))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.lt_to_le"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m0)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m0)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](div_mod_sttfa.mod(m)(n))(nat_sttfa.sttfa_O) => primes_sttfa.sttfa_divides(n)(m)))))" "n"
%|- (sttfa-lemma "primes_sttfa.mod_O_to_divides")))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(n)(m) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (propax))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => return))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(div_mod_sttfa.mod(m)(n)) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(n) => (nat_sttfa.le(div_mod_sttfa.mod(m)(n))(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(q)(n)(n0)))))))))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(q)(n)(n0)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))" "n"
%|- (propax))))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(y))))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(y)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(c)(n))))" "nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b0)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b0)(n))(nat_sttfa.times(c)(n)))))" "b"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b0)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b0)(n))(nat_sttfa.times(c)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))))" "n"
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus_r")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(x)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(x)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(z)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(z))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(z)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(x))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(x))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(z))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(z))))" "n"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(z))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(x))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(x))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))))" "nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(m0))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(m0)(p0)))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(m0))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(m0)(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" "nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(n0)(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(n0)(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "nat_sttfa.plus_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-lemma "nat_sttfa.times_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(y)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(y)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-lemma "nat_sttfa.times_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(y))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(y))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "nat_sttfa.minus_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(n)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "b"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))" "a"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.let_clause_15441")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "b"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))" "a"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n0)(b0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.let_clause_15441")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(y)))" "nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(x))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(x0))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(x))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(x))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(x0))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(x))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(x)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(x0)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)))(nat_sttfa.times(a)(x)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x0)(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(b)(n))(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-lemma "connectives_sttfa.or_introl"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(y))))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(y)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(y)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(y)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(c))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(c)(n))))" "b"
%|- (sttfa-conv "(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(c))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(c)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b0)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b0)(n))(nat_sttfa.times(c)(n)))))" "nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-conv "(FORALL(b0:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b0)(c))(n))(nat_sttfa.plus(nat_sttfa.times(b0)(n))(nat_sttfa.times(c)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(b:nat_sttfa.sttfa_nat):(FORALL(c:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(b)(c))(a))(nat_sttfa.plus(nat_sttfa.times(b)(a))(nat_sttfa.times(c)(a))))))" "n"
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus_r")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(x))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(x))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(m0))(m0))(div_mod_sttfa.mod(m)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(n)(m))(m))(div_mod_sttfa.mod(n)(m)))))" "m"
%|- (sttfa-lemma "div_mod_sttfa.div_mod")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(z))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(z))))" "n"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(z))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(x)(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(x)(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(y))(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(y))(nat_sttfa.plus(y)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(z)))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(z))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(z)))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" "div_mod_sttfa.mod(m)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.plus(y)(z)))(nat_sttfa.plus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.plus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_plus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(a)(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(m0))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(m0)(p0)))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(m0))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(m0)(p0)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(n)(nat_sttfa.plus(m)(p))))))" "nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-lemma "nat_sttfa.minus_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" "nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y))(nat_sttfa.plus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" "nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))))" "nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-conv "(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(n0)(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(FORALL(p0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(n0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n0)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(p0))(nat_sttfa.minus(nat_sttfa.plus(n0)(p0))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(p:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(n)(m))(p))(nat_sttfa.minus(nat_sttfa.plus(n)(p))(m))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "nat_sttfa.plus_minus"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-lemma "nat_sttfa.times_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(y)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(y))(nat_sttfa.times(y)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(y)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(y)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" "div_mod_sttfa.div(m)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(z)))(nat_sttfa.times(n)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(a)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.times(y)(z)))(nat_sttfa.times(y)(nat_sttfa.times(x)(z))))))" "a"
%|- (sttfa-lemma "nat_sttfa.times_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(y))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(y))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(n)(n)))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "nat_sttfa.minus_n_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(y)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.plus(nat_sttfa.sttfa_O)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "b"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))" "a"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1544")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" "nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (propax)
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))" "b"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))" "a"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" "nat_sttfa.le(n)(nat_sttfa.sttfa_S(q))"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b0)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m)(n0)))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))" "m"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n))))))))))))"
%|- (propax)
%|- (sttfa-conv "((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q)(n0)(div_mod_sttfa.mod(m0)(n0)))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" "q"
%|- (sttfa-conv "(FORALL(q0:nat_sttfa.sttfa_nat):((FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(q0) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n0))(nat_sttfa.times(b0)(m0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m0))(nat_sttfa.times(a0)(n0)))(gcd_sttfa.gcd_aux(q0)(m0)(n0)))))))))))) => (FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(nat_sttfa.sttfa_S(q0)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n0)(m0)) => (FORALL(a0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))))) => (FORALL(b0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(n0))(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0))))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(b0)(n0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(div_mod_sttfa.mod(m0)(n0)))(nat_sttfa.times(n0)(b0)))(gcd_sttfa.gcd_aux(q0)(n0)(div_mod_sttfa.mod(m0)(n0))))))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(q) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(q)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => (FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1544")))))))))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(y)))" "nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(n)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___)))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(sttfa___))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(sttfa___)(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(sttfa___))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(nat_sttfa.times(a)(sttfa___)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(sttfa___))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(div_mod_sttfa.div(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x_1)(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(x_1)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x_1)(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.minus(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))))(nat_sttfa.times(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x0)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(x)(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.plus(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(div_mod_sttfa.mod(m)(n))(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(x)(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(x0)(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))))(nat_sttfa.plus(x)(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(a)(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x0))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(x))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(div_mod_sttfa.div(m)(n))(n))(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(x))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(x0))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(x))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.plus(nat_sttfa.times(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(n))(nat_sttfa.times(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x_1)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x_1)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x_1)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))(b)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))"
%|- (sttfa-lemma "connectives_sttfa.or_intror"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(a)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(x)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n))))(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))))))" "nat_sttfa.plus(b)(nat_sttfa.times(a)(div_mod_sttfa.div(m)(n)))"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(x_1)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n)))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(div_mod_sttfa.mod(m)(n))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n)))))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x0)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "gcd_sttfa.gcd_aux(q)(n)(div_mod_sttfa.mod(m)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))))" "(primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(n)(m)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "q"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n0))(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(n0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(q)) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (primes_sttfa.sttfa_divides(n0)(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m0)(n0))(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(p) => (nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(p)(m)(n))(n)))))))" "nat_sttfa.sttfa_S(q)"
%|- (sttfa-lemma "gcd_sttfa.divides_to_gcd_aux"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x))))))))" "gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(n)))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n)))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)))" "nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m0)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m0))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m0)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)))" "nat_sttfa.times(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.sttfa_O))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)))" "nat_sttfa.plus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(n)))" "nat_sttfa.times(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(n)))" "nat_sttfa.times(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.sttfa_O))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n)))" "nat_sttfa.minus(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "n"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.times(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n)"
%|- (sttfa-lemma "connectives_sttfa.or_introl"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x0)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n)))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(n)))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n)))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(n)))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x0)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(x)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(q))(m)(n)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(B) => return)))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(n)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(n)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))))))))
%|- (sttfa-impl-e "((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))))))))))) => ((FORALL(x:nat_sttfa.sttfa_nat):((FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(x)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(x)(m)(n)))))))))))) => (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_S(x)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_S(x))(m)(n)))))))))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(x)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(x)(m)(n)))))))))))))))" "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))))))))))))"
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(nat_sttfa.sttfa_O)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))))))))" "connectives_sttfa.sttfa_False"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False)" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.le(n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m0)(n))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m0) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m0)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(m)(n)))))" "n"
%|- (sttfa-lemma "nat_sttfa.le_to_not_lt"))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_False))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(A => (connectives_sttfa.sttfa_Not(A) => connectives_sttfa.sttfa_False)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.absurd")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_False => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(t:bool):(connectives_sttfa.sttfa_False => t))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(nat_sttfa.sttfa_O)(m)(n)))))))"
%|- (sttfa-lemma "connectives_sttfa.falsity")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))))))))))))(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))))))))))))(x) => (LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))))))))))))(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))))))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(Q:[nat_sttfa.sttfa_nat -> bool]):(Q(nat_sttfa.sttfa_O) => ((FORALL(x:nat_sttfa.sttfa_nat):(Q(x) => Q(nat_sttfa.sttfa_S(x)))) => (FORALL(x:nat_sttfa.sttfa_nat):Q(x)))))" "(LAMBDA(sttfa__x_365:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(sttfa__x_365) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(sttfa__x_365)(m)(n)))))))))))))"
%|- (sttfa-lemma "nat_sttfa.nat_ind"))))))))
%|- QED

let_clause_1549  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))))

%|- let_clause_1549 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)" "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))"
%|- (then@ (sttfa-forall-i "x1106")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(y))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "x1106"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]"))))))))))))))
%|- QED

let_clause_15491  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))))

%|- let_clause_15491 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)" "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n)))"
%|- (then@ (sttfa-forall-i "x1106")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(y))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "x1106"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))
%|- QED

let_clause_1551  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))))

%|- let_clause_1551 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)" "(FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n)))"
%|- (then@ (sttfa-forall-i "x347")
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(y))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "x347"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(x347)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))))))
%|- QED

eq_minus_gcd  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))

%|- eq_minus_gcd : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(y)(m))(m)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(y)(m))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m)" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))" "m"
%|- (sttfa-lemma "gcd_sttfa.gcd_O_l")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(m))(m))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(m))(m))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(m))(m))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(y))))" "gcd_sttfa.gcd(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(y)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_15491"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.minus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(y))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(y))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(n))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(n))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.times(nat_sttfa.sttfa_S(n))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(m0)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(m0))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(m0)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(x347)(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(x347)(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1551"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.times(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(y))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.plus_n_O")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))))" "nat_sttfa.plus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(y)(n)))(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(n)(n)))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(y)(n)))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(n)(n)))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(n)(n)))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(x347)(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(x347)(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x347:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(x347)(n))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1551"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(n)(n)))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(y))(m))))" "nat_sttfa.times(n)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(y))(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n0)))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n0) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n0)))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(n))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_15491"))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(n))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m))))" "nat_sttfa.minus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(sttfa___))(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(sttfa___))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(sttfa___))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(sttfa___)(n)))(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(sttfa___)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(m)(nat_sttfa.times(sttfa___)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(nat_sttfa.plus(m)(nat_sttfa.times(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.times(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(nat_sttfa.times(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(m)(nat_sttfa.times(m)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(m)(nat_sttfa.times(m)(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(sttfa___)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-lemma "connectives_sttfa.or_intror"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd(n)(m))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(n) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "n"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" "connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))" "nat_sttfa.le(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_Or(nat_sttfa.lt(n)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.le_to_or_lt_eq"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(y)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1549")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(y))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(y))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_S(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(m))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.times(nat_sttfa.sttfa_S(m))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m0)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m0)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))))" "n"
%|- (sttfa-lemma "nat_sttfa.times_n_Sm")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(y))(nat_sttfa.times(y)(n)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(y))(nat_sttfa.times(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.times(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(y)(n))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(y)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.times_O_n")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(nat_sttfa.times(m)(n)))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.times(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(y))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(m))(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(m))(nat_sttfa.plus(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(m))(nat_sttfa.plus(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(y))(nat_sttfa.plus(y)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(x)(y))(nat_sttfa.plus(y)(x))))" "n"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.plus)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.plus)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_plus")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(m))(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(m))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.plus(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(n))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(y)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(nat_sttfa.sttfa_O)(n)))" "n"
%|- (sttfa-lemma "nat_sttfa.plus_O_n")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(sttfa___)(n)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.plus(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(m)(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.plus(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(m)))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(m)))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(m)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.times(m)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(y))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => (FORALL(x1106:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x1106)(nat_sttfa.minus(x1106)(m)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1549")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(m)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(m))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(n)(m)))))" "nat_sttfa.minus(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m0))(gcd_sttfa.gcd(m0)(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m0))(gcd_sttfa.gcd(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))))" "n"
%|- (sttfa-lemma "gcd_sttfa.commutative_gcd")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "gcd_sttfa.gcd(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(m)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(m)(n)) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(m)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(y)(n))(n)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(y)(n))(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(n))(n)" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(nat_sttfa.sttfa_O)(m))(m))" "n"
%|- (sttfa-lemma "gcd_sttfa.gcd_O_l")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(n))(n))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(n))(n))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(sttfa___)(n))(n))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(gcd_sttfa.gcd(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "gcd_sttfa.gcd(m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))))" "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))"
%|- (sttfa-conv "logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(m)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(m)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd(m)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd(m)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd(n)(m))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(gcd_sttfa.gcd(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(sttfa___))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(sttfa___)(m)))(gcd_sttfa.gcd(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(sttfa___)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(n)(nat_sttfa.times(sttfa___)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(nat_sttfa.plus(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.plus(m)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.plus(m)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(nat_sttfa.times(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(n)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(n)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.plus(n)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(nat_sttfa.plus(n)(nat_sttfa.times(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.plus(n)(nat_sttfa.times(n)(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.plus(n)(nat_sttfa.times(n)(m)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.plus(n)(nat_sttfa.times(n)(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(sttfa___))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-lemma "nat_sttfa.minus_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(B) => B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)) => (logic_sttfa.eq[bool](logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O)))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.minus(n)(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-lemma "connectives_sttfa.or_introl"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(nat_sttfa.sttfa_O)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_O)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m)))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(y)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd(n)(m))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(m) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "m"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]"))))))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))))))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m)))))))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))))))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))"
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => (connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "nat_sttfa.le(m)(m)"
%|- (sttfa-conv "nat_sttfa.le(m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "nat_sttfa.le(m)(n)"
%|- (sttfa-impl-e "(nat_sttfa.lt(m)(n) => nat_sttfa.le(m)(n))" "nat_sttfa.lt(m)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" "connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m))"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => nat_sttfa.lt(m0)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => nat_sttfa.lt(m)(n))))" "n"
%|- (sttfa-lemma "nat_sttfa.not_le_to_lt"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))"
%|- (sttfa-conv "nat_sttfa.le(m)(nat_sttfa.sttfa_S(m))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(nat_sttfa.sttfa_S(n)))" "m"
%|- (sttfa-lemma "nat_sttfa.le_n_Sn")))
%|- (sttfa-conv "(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(n) => nat_sttfa.le(m)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" "n"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(nat_sttfa.sttfa_S(m)) => (nat_sttfa.le(nat_sttfa.sttfa_S(m))(z) => nat_sttfa.le(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" "nat_sttfa.sttfa_S(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(m)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(m)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(nat_sttfa.le(x)(y) => (nat_sttfa.le(y)(z) => nat_sttfa.le(x)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(R:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> bool]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):(R(x)(y) => (R(y)(z) => R(x)(z)))))))(nat_sttfa.le)" () ()
%|- (sttfa-conv "relations_sttfa.transitive[nat_sttfa.sttfa_nat](nat_sttfa.le)" ("relations_sttfa.transitive") ()
%|- (sttfa-lemma "nat_sttfa.transitive_le"))))))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => (nat_sttfa.le(m)(n) => (nat_sttfa.le(m)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(m)(n)(n0)))))))))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(n) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(m)(n)(n0)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m0)))(gcd_sttfa.gcd_aux(m)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m0))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(m)(m0)(n0))))))))))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m0)))(gcd_sttfa.gcd_aux(m)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m0))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(m)(m0)(n0))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(p)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(p)(m)(n)))))))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.eq_minus_gcd_aux"))))))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(y))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(a)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(y))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(y))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(m)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(y))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.minus(nat_sttfa.times(n)(b))(nat_sttfa.times(m)(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(b))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-lemma "connectives_sttfa.or_introl"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "b"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(y)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(y)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(a)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(y))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(y))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(nat_sttfa.times(n)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(y))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(y))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(nat_sttfa.times(m)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.times(m)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b)))(gcd_sttfa.gcd_aux(m)(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m))))" "nat_sttfa.minus(nat_sttfa.times(m)(a))(nat_sttfa.times(n)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(gcd_sttfa.gcd_aux(m)(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(m)(a))(sttfa___))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(b)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(b)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(b)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(a)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-lemma "connectives_sttfa.or_intror"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))" "a"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]"))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" "b"
%|- (sttfa-conv "(FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(x:nat_sttfa.sttfa_nat):(P(x) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))"
%|- (sttfa-lemma "connectives_sttfa.ex_intro[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b0)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b0)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(x)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a0)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a0)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m))))))))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(x)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))) => return)))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(m))(nat_sttfa.times(b)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(n))(nat_sttfa.times(a)(m)))(gcd_sttfa.gcd_aux(m)(n)(m))))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]"))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(m)(n)(m)))))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))(gcd_sttfa.gcd_aux(m)(n)(m)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(m)(n)(m)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_false)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_false)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_false))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_false[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))))))) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_false)))))))) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(nat_sttfa.leb(n)(m))))))))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))) => (nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))))))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n))))))))"
%|- (sttfa-impl-e "((nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))) => (nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))))" "(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n))))))))"
%|- (sttfa-impl-i "nat_sttfa.le(n)(m)" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))"
%|- (sttfa-impl-e "(nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n))))))))" "nat_sttfa.le(n)(n)"
%|- (sttfa-conv "nat_sttfa.le(n)(n)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(n)(n))" "n"
%|- (sttfa-lemma "nat_sttfa.le_n")))
%|- (sttfa-impl-e "(nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))))" "nat_sttfa.le(n)(m)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n))))))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(n)(m)(n0)))))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(n)(m)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(n)(m)(n0)))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m0)))(gcd_sttfa.gcd_aux(n)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m0))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(n)(m0)(n0))))))))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (nat_sttfa.le(n0)(m0) => (nat_sttfa.le(n0)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(m0)))(gcd_sttfa.gcd_aux(n)(m0)(n0)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m0))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd_aux(n)(m0)(n0))))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(p:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (nat_sttfa.le(n)(m) => (nat_sttfa.le(n)(p) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd_aux(p)(m)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(p)(m)(n)))))))))))))" "n"
%|- (sttfa-lemma "gcd_sttfa.eq_minus_gcd_aux")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))))(gcd_sttfa.gcd_aux(n)(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd_aux(n)(m)(n)))))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))(gcd_sttfa.gcd_aux(n)(m)(n)) => (LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))))" "(LAMBDA(y:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(y))))))))"
%|- (sttfa-conv "(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd_aux(n)(m)(n)) => P(y))))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "(LAMBDA(x:nat_sttfa.sttfa_nat):(LAMBDA(y:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y)))))(gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" ("leibniz_sttfa.leibniz") ()
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(bool_sttfa.sttfa_true))" () ()
%|- (sttfa-forall-e "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" "gcd_sttfa.gcd_aux(m)(n)(m)"
%|- (sttfa-conv "(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(case_false)(bool_sttfa.sttfa_true)))" () ()
%|- (sttfa-forall-e "(FORALL(case_true:nat_sttfa.sttfa_nat):(FORALL(case_false:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](case_true)(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](case_true)(case_false)(bool_sttfa.sttfa_true))))" "gcd_sttfa.gcd_aux(n)(m)(n)"
%|- (sttfa-lemma "bool_sttfa.sym_eq_match_bool_type_true[nat_sttfa.sttfa_nat]")))))))))))
%|- (sttfa-conv "((nat_sttfa.le(n)(m) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))))))))(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))))))))(bool_sttfa.sttfa_false)) => (LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))))))))(nat_sttfa.leb(n)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" "(LAMBDA(sttfa___:bool_sttfa.sttfa_bool):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(bool_sttfa.match_bool_type[nat_sttfa.sttfa_nat](gcd_sttfa.gcd_aux(n)(m)(n))(gcd_sttfa.gcd_aux(m)(n)(m))(sttfa___))))))))"
%|- (sttfa-conv "(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m0) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m0)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m0))))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(P:[bool_sttfa.sttfa_bool -> bool]):((nat_sttfa.le(n)(m) => P(bool_sttfa.sttfa_true)) => ((connectives_sttfa.sttfa_Not(nat_sttfa.le(n)(m)) => P(bool_sttfa.sttfa_false)) => P(nat_sttfa.leb(n)(m)))))))" "n"
%|- (sttfa-lemma "nat_sttfa.leb_elim"))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" ("gcd_sttfa.gcd" "gcd_sttfa.gcd") ()
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(m))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m))))))))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => return))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n) => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(n)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- QED

let_clause_1545  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))))

%|- let_clause_1545 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)" "(FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))"
%|- (then@ (sttfa-forall-i "q1")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)" "(FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))"
%|- (then@ (sttfa-forall-i "q2")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.times(q2)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(q2)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(q2)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]"))))))))))))))))))
%|- QED

gcd_O_to_eq_O  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))))

%|- gcd_O_to_eq_O : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(n))(primes_sttfa.sttfa_divides(y)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(y) => connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(y)(n))(primes_sttfa.sttfa_divides(y)(m)))))" "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(m))"
%|- (sttfa-conv "connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(n))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(n))(m))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(m0))(m)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(m0))(m0))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(m)(m0))(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n))))" "m"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_nm")))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x_1)(n))(primes_sttfa.sttfa_divides(x_1)(m)))(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x_1)(n))(primes_sttfa.sttfa_divides(x_1)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(x_1)(n))(primes_sttfa.sttfa_divides(x_1)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(m)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "gcd_sttfa.gcd(m)(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))))" "(FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))))"
%|- (then@ (sttfa-forall-i "q1")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" "(FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))"
%|- (then@ (sttfa-forall-i "q2")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(q1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "q1"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1545"))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(y)(q1))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(y)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "q1"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1545"))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(nat_sttfa.sttfa_O)(n)))" "q1"
%|- (sttfa-lemma "nat_sttfa.times_O_n")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(q1)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(q1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(sttfa___)(q1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(q1)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(q1))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(q1)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "q1"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1545"))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(m)(q1)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(y)(q1))))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(y)(q1)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(sttfa___)(q1)))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(sttfa___)(q1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(sttfa___)(q1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(nat_sttfa.times(m)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(q1)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(q1)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(q1)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(m)(q1)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(m)(q1)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "q1"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n0) => (FORALL(q10:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q10)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q20:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q20)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (FORALL(q1:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q1)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => (FORALL(q2:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1545"))))))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(n)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-lemma "nat_sttfa.times_n_O")))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" "q2"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(y))(nat_sttfa.times(y)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.sttfa_O"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.times(q2)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q2))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.sttfa_O)(q2)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.sttfa_O)(q2))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.sttfa_O)(q2)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(q2)(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(q2)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(B))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (B => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(B))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.conj")))))))))
%|- (sttfa-conv "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => return_type)))" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => return_type)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m0) => return_type))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m0) => return_type))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => return_type)) => (primes_sttfa.sttfa_divides(n)(m) => return_type)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "primes_sttfa.match_divides_prop"))))))))))))
%|- (sttfa-conv "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => return_type)))" "(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => return_type)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m0) => return_type))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(nat_sttfa.sttfa_O)(q)) => return_type)) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m0) => return_type))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => return_type)) => (primes_sttfa.sttfa_divides(n)(m) => return_type)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "primes_sttfa.match_divides_prop"))))))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)) => return)))" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m) => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(B) => return))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n) => (B => return)) => (connectives_sttfa.sttfa_And(primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "primes_sttfa.sttfa_divides(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))))
%|- QED

let_clause_1571  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))))

%|- let_clause_1571 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

let_clause_1572  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))

%|- let_clause_1572 : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n0))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1571")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O)))" "m"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](sttfa___)(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))))))))
%|- QED

lt_O_gcd  : LEMMA (FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n)))))

%|- lt_O_gcd : PROOF
%|- (then@ (sttfa-forall-i "m")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)" "nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n))"
%|- (sttfa-impl-e "((FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n)))" "(FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))))"
%|- (then@ (sttfa-forall-i "m0")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))"
%|- (sttfa-conv "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(n)))" "m0"
%|- (sttfa-lemma "nat_sttfa.lt_O_S")))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" "connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)))))" "m"
%|- (sttfa-lemma "gcd_sttfa.gcd_O_to_eq_O"))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1572")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(y)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n0))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n0))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1571")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(n) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(y))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))))" "n"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(y))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1572")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(y)(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(y)(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O)"
%|- (propax)
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n0))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n0)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)))))))" "m"
%|- (sttfa-lemma "gcd_sttfa.let_clause_1572")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(y))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(y)))))" "logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "nat_sttfa.lt(m)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(sttfa___)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(sttfa___)(nat_sttfa.sttfa_O)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(sttfa___)(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(m))(nat_sttfa.lt(sttfa___)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(m)(sttfa___))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](nat_sttfa.lt(sttfa___)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (propax)
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => B)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => (logic_sttfa.eq[bool](nat_sttfa.lt(nat_sttfa.sttfa_O)(n))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(n)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc")))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O))) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => return)) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)) => return)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => return)) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (B => return)) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(B) => return))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O) => (B => return)) => (connectives_sttfa.sttfa_And(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop"))))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_O)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => nat_sttfa.lt(nat_sttfa.sttfa_O)(nat_sttfa.sttfa_S(m0)))) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => P(nat_sttfa.sttfa_S(m0)))) => P(gcd_sttfa.gcd(m)(n)))))" "nat_sttfa.lt(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m0:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(m)(n))(nat_sttfa.sttfa_S(m0)) => P(nat_sttfa.sttfa_S(m0)))) => P(gcd_sttfa.gcd(m)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):((logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_O) => P(nat_sttfa.sttfa_O)) => ((FORALL(m:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.sttfa_S(m)) => P(nat_sttfa.sttfa_S(m)))) => P(n)))))" "gcd_sttfa.gcd(m)(n)"
%|- (sttfa-lemma "nat_sttfa.nat_case"))))))))))
%|- QED

prime_to_gcd_1  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))

%|- prime_to_gcd_1 : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "primes_sttfa.prime(n)" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-e "(primes_sttfa.prime(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "primes_sttfa.prime(n)"
%|- (propax)
%|- (sttfa-conv "(connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ("primes_sttfa.prime")
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => ((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n)))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => ((FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m0)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(n)))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (sttfa-impl-i "nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)" "((FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m0)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(n)))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-impl-i "(FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m0)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(n))))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-impl-e "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(m)))" "nat_sttfa.lt(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-impl-e "(nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m))" "nat_sttfa.le(nat_sttfa.sttfa_O)(m)"
%|- (sttfa-conv "nat_sttfa.le(nat_sttfa.sttfa_O)(m)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):nat_sttfa.le(nat_sttfa.sttfa_O)(n))" "m"
%|- (sttfa-lemma "nat_sttfa.le_O_n")))
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => (nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => primes_sttfa.sttfa_divides(n)(m)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(y))(primes_sttfa.sttfa_divides(n)(m))))" "nat_sttfa.sttfa_O"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(y))(primes_sttfa.sttfa_divides(n)(m)))))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(sttfa___))(primes_sttfa.sttfa_divides(n)(m)))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(sttfa___))(primes_sttfa.sttfa_divides(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(sttfa___))(primes_sttfa.sttfa_divides(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(m) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m)))" "primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O)" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))" "n"
%|- (sttfa-lemma "primes_sttfa.divides_n_O")))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(B) => B)))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "primes_sttfa.sttfa_divides(n)(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => primes_sttfa.sttfa_divides(n)(m)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m)) => (nat_sttfa.le(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0)) => (nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_O)(m0)) => (nat_sttfa.le(nat_sttfa.sttfa_O)(m0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)) => (nat_sttfa.le(n)(m) => nat_sttfa.lt(n)(m)))))" "nat_sttfa.sttfa_O"
%|- (sttfa-lemma "nat_sttfa.not_eq_to_le_to_lt")))))))
%|- (sttfa-conv "(nat_sttfa.lt(nat_sttfa.sttfa_O)(m) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(n0))))" "m"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n0) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(n)(n0))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(nat_sttfa.lt(nat_sttfa.sttfa_O)(n) => nat_sttfa.lt(nat_sttfa.sttfa_O)(gcd_sttfa.gcd(m)(n)))))" "n"
%|- (sttfa-lemma "gcd_sttfa.lt_O_gcd"))))))
%|- (sttfa-conv "(nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ("nat_sttfa.lt")
%|- (sttfa-impl-e "(nat_sttfa.le(gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.le(gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))) => nat_sttfa.le(gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))))" "connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => primes_sttfa.sttfa_divides(n)(m)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(n)(m))))" "gcd_sttfa.gcd(n)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(y)(m))(primes_sttfa.sttfa_divides(n)(m)))))" "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m))"
%|- (sttfa-conv "logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(n)(m))(primes_sttfa.sttfa_divides(n)(m))" () ()
%|- (sttfa-forall-e "(FORALL(x:bool):logic_sttfa.eq[bool](x)(x))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-lemma "logic_sttfa.refl[bool]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(sttfa___)(m))(primes_sttfa.sttfa_divides(n)(m)))(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(sttfa___)(m))(primes_sttfa.sttfa_divides(n)(m)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(sttfa___)(m))(primes_sttfa.sttfa_divides(n)(m)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(n) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(n) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "n"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(m0))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)))" "n"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_r")))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(primes_sttfa.sttfa_divides(n)(m)) => primes_sttfa.sttfa_divides(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => B)))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m) => (logic_sttfa.eq[bool](primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m))(B) => B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => (logic_sttfa.eq[bool](A)(B) => B))))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_coerc"))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => primes_sttfa.sttfa_divides(n)(m)) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)))))" "primes_sttfa.sttfa_divides(n)(m)"
%|- (sttfa-conv "(FORALL(B:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-impl-e "((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)))))" "(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)))" "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)"
%|- (sttfa-conv "primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m0))(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n)))" "n"
%|- (sttfa-lemma "gcd_sttfa.divides_gcd_l")))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(gcd_sttfa.gcd(n)(m))(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m0)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(n))))" "gcd_sttfa.gcd(n)(m)"
%|- (propax))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)) => (connectives_sttfa.sttfa_Not(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(n)"
%|- (sttfa-conv "(FORALL(B:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):((A => B) => (connectives_sttfa.sttfa_Not(B) => connectives_sttfa.sttfa_Not(A)))))" "nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))"
%|- (sttfa-lemma "logic_sttfa.not_to_not")))))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m))) => nat_sttfa.le(gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0)) => nat_sttfa.le(m0)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "gcd_sttfa.gcd(n)(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m0)) => nat_sttfa.le(m0)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Not(nat_sttfa.lt(n)(m)) => nat_sttfa.le(m)(n))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "nat_sttfa.not_lt_to_le"))))))
%|- (sttfa-conv "(nat_sttfa.le(gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (nat_sttfa.le(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(gcd_sttfa.gcd(n)(m))(m0) => (nat_sttfa.le(m0)(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m0))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(nat_sttfa.le(gcd_sttfa.gcd(n)(m))(m0) => (nat_sttfa.le(m0)(gcd_sttfa.gcd(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(nat_sttfa.le(n)(m) => (nat_sttfa.le(m)(n) => logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(m)))))" "gcd_sttfa.gcd(n)(m)"
%|- (sttfa-lemma "nat_sttfa.le_to_le_to_eq")))))))))))
%|- (sttfa-conv "((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => ((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n)))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => ((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n)))) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))) => return)))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => ((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n)))) => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))((FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(B) => return))))" "(FORALL(m1:nat_sttfa.sttfa_nat):(primes_sttfa.sttfa_divides(m1)(n) => (nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(m1) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m1)(n))))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n) => (B => return)) => (connectives_sttfa.sttfa_And(nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n))(B) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))" "nat_sttfa.lt(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(n)"
%|- (sttfa-lemma "connectives_sttfa.match_And_prop")))))))))))))
%|- QED

divides_times_to_divides  : LEMMA (FORALL(p:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))))

%|- divides_times_to_divides : PROOF
%|- (then@ (sttfa-forall-i "p")
%|- (then@ (sttfa-forall-i "n")
%|- (then@ (sttfa-forall-i "m")
%|- (sttfa-impl-i "primes_sttfa.prime(p)" "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" "primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(q)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))" "(FORALL(c:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))"
%|- (then@ (sttfa-forall-i "c")
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-e "(logic_sttfa.decidable(primes_sttfa.sttfa_divides(p)(n)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" "logic_sttfa.decidable(primes_sttfa.sttfa_divides(p)(n))"
%|- (sttfa-conv "logic_sttfa.decidable(primes_sttfa.sttfa_divides(p)(n))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(p)(m0)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(p)(m0)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.decidable(primes_sttfa.sttfa_divides(n)(m))))" "p"
%|- (sttfa-lemma "primes_sttfa.decidable_divides")))))
%|- (sttfa-conv "(connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" () ("logic_sttfa.decidable")
%|- (sttfa-impl-e "((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))" "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))"
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(m) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => primes_sttfa.sttfa_divides(p)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))"
%|- (propax)
%|- (sttfa-impl-e "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "primes_sttfa.prime(p)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(m0))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(primes_sttfa.prime(p) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(m0)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(m0))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(primes_sttfa.prime(n) => (connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(n)(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.prime_to_gcd_1")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(y))))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(p)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(p)(n))))))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(y) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(y))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(y)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(p)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(p)(n)))))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(gcd_sttfa.gcd(n)(p)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(p)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(p)(n))))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(gcd_sttfa.gcd(n)(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(gcd_sttfa.gcd(n)(p))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(m0))(gcd_sttfa.gcd(m0)(p)))" "n"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(m0))(gcd_sttfa.gcd(m0)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(n)(m))(gcd_sttfa.gcd(m)(n))))" "p"
%|- (sttfa-lemma "gcd_sttfa.commutative_gcd")))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(gcd_sttfa.gcd(n)(p)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(p)(n)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(p)(n))))))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd(n)(p)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x))))))))" "gcd_sttfa.gcd(p)(n)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(n)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(p))))))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd(n)(p)) => connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x)))))))))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(n)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(p)))))))"
%|- (sttfa-conv "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(n)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(p)))))))" () ()
%|- (sttfa-forall-e "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(n0)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd(n0)(p))))))))" "n"
%|- (sttfa-conv "(FORALL(n0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n0))(nat_sttfa.times(b)(p)))(gcd_sttfa.gcd(n0)(p)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n0)))(gcd_sttfa.gcd(n0)(p))))))))" () ()
%|- (sttfa-forall-e "(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(m)))(gcd_sttfa.gcd(n)(m)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(n)))(gcd_sttfa.gcd(n)(m)))))))))" "p"
%|- (sttfa-lemma "gcd_sttfa.eq_minus_gcd")))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x)))))))(gcd_sttfa.gcd(n)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd(n)(p)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x0))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x0)))))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(n)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd(n)(p)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(n)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(gcd_sttfa.gcd(n)(p)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a) => P(x))))))" "gcd_sttfa.gcd(n)(p)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x_1)))))))(gcd_sttfa.gcd(p)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x_1)))))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(p)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(x_1))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(x_1)))))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(gcd_sttfa.gcd(p)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](gcd_sttfa.gcd(p)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "gcd_sttfa.gcd(p)(n)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(x)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => primes_sttfa.sttfa_divides(p)(m)))" "(FORALL(a:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m)))"
%|- (then@ (sttfa-forall-i "a")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m))" "connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))"
%|- (propax)
%|- (sttfa-impl-e "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(x)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m)))" "(FORALL(b:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m)))"
%|- (then@ (sttfa-forall-i "b")
%|- (sttfa-impl-i "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m))" "connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (propax)
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m)))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c)))) => primes_sttfa.sttfa_divides(p)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(z)))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(z))))" "nat_sttfa.times(a)(c)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(z)))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" "nat_sttfa.times(b)(m)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x)))" "nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(z))(nat_sttfa.times(p)(nat_sttfa.times(b)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(z))(nat_sttfa.times(p)(nat_sttfa.times(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(a)(c))))))" "nat_sttfa.times(p)(nat_sttfa.times(b)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(z))(nat_sttfa.times(p)(nat_sttfa.times(a)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(z))(nat_sttfa.times(p)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y))))" "nat_sttfa.times(p)(nat_sttfa.times(a)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(p)(a))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(p)(a))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(nat_sttfa.times(p)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(p)(a))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(nat_sttfa.times(p)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(nat_sttfa.times(p)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(nat_sttfa.times(p)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(p)(a))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(y)(c)))))" "nat_sttfa.times(p)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(p))(c))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(y)(c))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(p))(c)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(p))(c))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(z))(nat_sttfa.times(a)(nat_sttfa.times(p)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(z))(nat_sttfa.times(a)(nat_sttfa.times(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(p))(c))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x))))" "nat_sttfa.times(nat_sttfa.times(a)(p))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(y)))))" "nat_sttfa.times(p)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(z))(nat_sttfa.times(a)(nat_sttfa.times(n)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(z))(nat_sttfa.times(a)(nat_sttfa.times(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(y))(nat_sttfa.times(y)(m)))" "nat_sttfa.times(p)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(y))(nat_sttfa.times(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.times(a)(n))(m)))))" "nat_sttfa.times(nat_sttfa.times(p)(b))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(y))(nat_sttfa.times(y)(nat_sttfa.times(a)(n))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(y))(nat_sttfa.times(y)(nat_sttfa.times(a)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(x))))" "nat_sttfa.times(nat_sttfa.times(a)(n))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(z)))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(z))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(z)))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(m)(y))(nat_sttfa.times(m)(z)))))" "nat_sttfa.times(p)(b)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(m)(y))(nat_sttfa.times(m)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(y)))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(y))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.times(n)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.times(p)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y))))" "nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_1")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(n)(a)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))))(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(sttfa___))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(p)(b))(nat_sttfa.times(a)(n)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(x)))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(m)(nat_sttfa.times(a)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(a)(n))(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(p)(b)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.times(p)(b))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(a)(n))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(x_1))))(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(x_1))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(a)(x_1))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(n)(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x)))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(a)(nat_sttfa.times(p)(c))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(x_1)(c))))(nat_sttfa.times(a)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(x_1)(c))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(x_1)(c))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(p)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(b))(m))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(p)(a))(c)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(p)(b))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c)))) => primes_sttfa.sttfa_divides(p)(m))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" "nat_sttfa.minus(nat_sttfa.times(b)(m))(nat_sttfa.times(a)(c))"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => primes_sttfa.sttfa_divides(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.quotient")))))))))
%|- (sttfa-impl-e "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m))))" "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-i "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m)))) => primes_sttfa.sttfa_divides(p)(m))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(z)))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(z))))" "nat_sttfa.times(b)(m)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(z)))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" "nat_sttfa.times(a)(c)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(p)(y))(nat_sttfa.times(p)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x)))" "nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(z))(nat_sttfa.times(p)(nat_sttfa.times(a)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(z))(nat_sttfa.times(p)(nat_sttfa.times(a)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(a)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))))" "nat_sttfa.times(p)(nat_sttfa.times(a)(c))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(a))(nat_sttfa.times(a)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(a))(nat_sttfa.times(a)(p))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(a))(nat_sttfa.times(a)(p))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(y))(nat_sttfa.times(y)(p)))" "a"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(y))(nat_sttfa.times(y)(p)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(p)(a))(nat_sttfa.times(a)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(p)(a))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(x)(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))))" "nat_sttfa.times(p)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(p)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(x)(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(z))(nat_sttfa.times(a)(nat_sttfa.times(p)(z))))" "c"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(z))(nat_sttfa.times(a)(nat_sttfa.times(p)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(p))(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x)(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))))" "nat_sttfa.times(nat_sttfa.times(a)(p))(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c))"
%|- (propax)
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(c)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(p)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))))" "nat_sttfa.times(p)(c)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(y))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(z))(nat_sttfa.times(a)(nat_sttfa.times(n)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(z))(nat_sttfa.times(a)(nat_sttfa.times(n)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(y))(z))(nat_sttfa.times(a)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(a)(nat_sttfa.times(n)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(nat_sttfa.times(n)(m)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))))" "nat_sttfa.times(a)(nat_sttfa.times(n)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(z))(nat_sttfa.times(p)(nat_sttfa.times(b)(z))))" "m"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(z))(nat_sttfa.times(p)(nat_sttfa.times(b)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" "b"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(y))(z))(nat_sttfa.times(p)(nat_sttfa.times(y)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(x)(y))(z))(nat_sttfa.times(x)(nat_sttfa.times(y)(z))))))" "p"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(f(x)(y))(z))(f(x)(f(y)(z)))))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.associative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.associative") ()
%|- (sttfa-lemma "nat_sttfa.associative_times")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y))))" "nat_sttfa.times(p)(nat_sttfa.times(b)(m))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(y))(nat_sttfa.times(y)(m)))" "nat_sttfa.times(a)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(y))(nat_sttfa.times(y)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "m"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.times(p)(b))(m)))))" "nat_sttfa.times(nat_sttfa.times(a)(n))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(y)(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(y))(nat_sttfa.times(y)(nat_sttfa.times(p)(b))))" "m"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(y))(nat_sttfa.times(y)(nat_sttfa.times(p)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "nat_sttfa.times(p)(b)"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(x))))" "nat_sttfa.times(nat_sttfa.times(p)(b))(m)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(x)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))))" () ()
%|- (sttfa-forall-e "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(z)))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(z))))" "nat_sttfa.times(p)(b)"
%|- (sttfa-conv "(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(z)))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(z))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(m)(y))(nat_sttfa.times(m)(z)))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(m)(y))(nat_sttfa.times(m)(z)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(nat_sttfa.minus(y)(z)))(nat_sttfa.minus(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z))))))" "m"
%|- (sttfa-conv "(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(g(y)(z)))(g(nat_sttfa.times(x)(y))(nat_sttfa.times(x)(z)))))))(nat_sttfa.minus)" () ()
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(LAMBDA(g:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(FORALL(z:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(g(y)(z)))(g(f(x)(y))(f(x)(z))))))))(nat_sttfa.times)(nat_sttfa.minus)" () ()
%|- (sttfa-conv "relations_sttfa.distributive[nat_sttfa.sttfa_nat](nat_sttfa.times)(nat_sttfa.minus)" ("relations_sttfa.distributive") ()
%|- (sttfa-lemma "nat_sttfa.distributive_times_minus"))))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(b))))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(y)(nat_sttfa.times(p)(b)))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b))))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" "p"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(y))(nat_sttfa.times(y)(b)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "b"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(nat_sttfa.times(p)(b)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.times(p)(b)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(y))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" "n"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(y))(nat_sttfa.times(y)(a)))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(x)(y))(nat_sttfa.times(y)(x))))" "a"
%|- (sttfa-conv "(LAMBDA(f:[nat_sttfa.sttfa_nat -> [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]]):(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](f(x)(y))(f(y)(x)))))(nat_sttfa.times)" () ()
%|- (sttfa-conv "relations_sttfa.commutative[nat_sttfa.sttfa_nat](nat_sttfa.times)" ("relations_sttfa.commutative") ()
%|- (sttfa-lemma "nat_sttfa.commutative_times")))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(nat_sttfa.times(n)(a)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "nat_sttfa.times(n)(a)"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(y)(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (propax)
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(sttfa___)(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(n)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(a)(n))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(a)(n)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(sttfa___))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(b)(p)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(b)(p))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(b)(p)"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y))))" "nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(y)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](n)(nat_sttfa.times(n)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" "m"
%|- (sttfa-lemma "nat_sttfa.times_n_1")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(sttfa___)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y)))" "nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(n)(a))(nat_sttfa.times(p)(b)))"
%|- (sttfa-impl-e "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)"
%|- (sttfa-conv "logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(m)" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(x))" "m"
%|- (sttfa-lemma "logic_sttfa.refl[nat_sttfa.sttfa_nat]")))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(sttfa___))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(m) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "m"
%|- (sttfa-lemma "logic_sttfa.rewrite_l[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(sttfa___)(nat_sttfa.times(p)(b)))))(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => (LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(sttfa___)(nat_sttfa.times(p)(b)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => P(y)))))" "(LAMBDA(sttfa___:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(m)(nat_sttfa.minus(sttfa___)(nat_sttfa.times(p)(b)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(a)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(nat_sttfa.times(n)(a)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](y)(x) => P(y))))))" "nat_sttfa.times(n)(a)"
%|- (sttfa-lemma "logic_sttfa.rewrite_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x_1))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b))))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(p)(b)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(x)))(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(x0)))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(x)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(m)(nat_sttfa.times(p)(b))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(m)(nat_sttfa.times(p)(b))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(nat_sttfa.times(p)(b))(m))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(m)(nat_sttfa.times(a)(n))) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(m)(nat_sttfa.times(a)(n)))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(m)(nat_sttfa.times(a)(n))"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(x_1)))(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(x_1)))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(nat_sttfa.times(a)(n))(m))(x_1)))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(b))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(b))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(p)(b))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(a)(n))(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(a)(n))(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(a)(n))(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(a)(x_1))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(n)(m)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(n)(m)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x0)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(nat_sttfa.times(p)(c))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(a)(nat_sttfa.times(p)(c))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(x)(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(nat_sttfa.times(a)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(p)) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(x0)(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(p)) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(nat_sttfa.times(x)(c))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(a)(p)) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.times(a)(p)) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.times(a)(p)"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => (LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))(y))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => P(y)))))" "(LAMBDA(x_1:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.minus(x_1)(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.times(nat_sttfa.times(p)(a))(c)) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(nat_sttfa.times(p)(a))(c))(y) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => (FORALL(y:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(y) => P(y))))))" "nat_sttfa.times(nat_sttfa.times(p)(a))(c)"
%|- (sttfa-lemma "logic_sttfa.eq_ind[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (LAMBDA(x0:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x0))(x))))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => P(x)))))" "(LAMBDA(x:nat_sttfa.sttfa_nat):logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(x))"
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))) => P(x)))))" () ()
%|- (sttfa-forall-e "(FORALL(a0:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(a0) => (FORALL(x:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](x)(a0) => P(x))))))" "nat_sttfa.minus(nat_sttfa.times(p)(nat_sttfa.times(a)(c)))(nat_sttfa.times(p)(nat_sttfa.times(b)(m)))"
%|- (sttfa-lemma "logic_sttfa.eq_ind_r[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m)))) => primes_sttfa.sttfa_divides(p)(m))" () ()
%|- (sttfa-forall-e "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" "nat_sttfa.minus(nat_sttfa.times(a)(c))(nat_sttfa.times(b)(m))"
%|- (sttfa-conv "(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" "m"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => primes_sttfa.sttfa_divides(p)(m0))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => primes_sttfa.sttfa_divides(n)(m)))))" "p"
%|- (sttfa-lemma "primes_sttfa.quotient")))))))))
%|- (sttfa-conv "((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m)) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => primes_sttfa.sttfa_divides(p)(m)) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return))))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => ((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(B) => return)))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop"))))))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(x)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(x)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => return)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))))
%|- (sttfa-conv "((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(x)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(x)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(x)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => return)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))) => return)))" () ()
%|- (sttfa-forall-e "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(FORALL(return:bool):((FORALL(x:nat_sttfa.sttfa_nat):(P(x) => return)) => (connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat](P) => return))))" "(LAMBDA(a:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_ex[nat_sttfa.sttfa_nat]((LAMBDA(b:nat_sttfa.sttfa_nat):connectives_sttfa.sttfa_Or(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(a)(n))(nat_sttfa.times(b)(p)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.minus(nat_sttfa.times(b)(p))(nat_sttfa.times(a)(n)))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))))"
%|- (sttfa-lemma "connectives_sttfa.match_ex_prop[nat_sttfa.sttfa_nat]")))))))
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(m) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))" "primes_sttfa.sttfa_divides(p)(n)"
%|- (sttfa-lemma "connectives_sttfa.or_intror")))))))
%|- (sttfa-impl-e "((primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))" "(primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))"
%|- (sttfa-impl-i "primes_sttfa.sttfa_divides(p)(n)" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-impl-e "(primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" "primes_sttfa.sttfa_divides(p)(n)"
%|- (propax)
%|- (sttfa-conv "(primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B)))" "primes_sttfa.sttfa_divides(p)(m)"
%|- (sttfa-conv "(FORALL(B:bool):(primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B)))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))" "primes_sttfa.sttfa_divides(p)(n)"
%|- (sttfa-lemma "connectives_sttfa.or_introl")))))))
%|- (sttfa-conv "((primes_sttfa.sttfa_divides(p)(n) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))))" () ()
%|- (sttfa-forall-e "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(n) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => return))))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-conv "(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(n) => return) => ((connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n)) => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))) => return))))" () ()
%|- (sttfa-forall-e "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B) => return)))))" "connectives_sttfa.sttfa_Not(primes_sttfa.sttfa_divides(p)(n))"
%|- (sttfa-conv "(FORALL(B:bool):(FORALL(return:bool):((primes_sttfa.sttfa_divides(p)(n) => return) => ((B => return) => (connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(B) => return)))))" () ()
%|- (sttfa-forall-e "(FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))" "primes_sttfa.sttfa_divides(p)(n)"
%|- (sttfa-lemma "connectives_sttfa.match_Or_prop")))))))))))))
%|- (sttfa-conv "((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(q)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m)))) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))))" () ()
%|- (sttfa-forall-e "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => return_type)))" "connectives_sttfa.sttfa_Or(primes_sttfa.sttfa_divides(p)(n))(primes_sttfa.sttfa_divides(p)(m))"
%|- (sttfa-conv "(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](nat_sttfa.times(n)(m))(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(nat_sttfa.times(n)(m)) => return_type)))" () ()
%|- (sttfa-forall-e "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" "nat_sttfa.times(n)(m)"
%|- (sttfa-conv "(FORALL(m0:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m0)(nat_sttfa.times(p)(q)) => return_type)) => (primes_sttfa.sttfa_divides(p)(m0) => return_type))))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(m:nat_sttfa.sttfa_nat):(FORALL(return_type:bool):((FORALL(q:nat_sttfa.sttfa_nat):(logic_sttfa.eq[nat_sttfa.sttfa_nat](m)(nat_sttfa.times(n)(q)) => return_type)) => (primes_sttfa.sttfa_divides(n)(m) => return_type)))))" "p"
%|- (sttfa-lemma "primes_sttfa.match_divides_prop"))))))))))))))
%|- QED

END gcd_sttfa

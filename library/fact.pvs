fact_sttfa : THEORY
BEGIN
IMPORTING connectives_sttfa,leibniz_sttfa,nat_sttfa

sttfa_fact : [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]

fact_body : [nat_sttfa.sttfa_nat -> nat_sttfa.sttfa_nat]

axiom_fact  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))

eq_fact  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))

%|- eq_fact : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(n)) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(n)) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))))" "connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))"
%|- (sttfa-conv "connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))" "n"
%|- (sttfa-lemma "fact_sttfa.axiom_fact")))
%|- (sttfa-conv "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(n)) => P(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(n)) => P(y)))))" "nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.sttfa_fact(n)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](x)(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y))))))" "fact_sttfa.sttfa_fact(n)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[nat_sttfa.sttfa_nat]"))))))))
%|- QED

sym_eq_fact  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))

%|- sym_eq_fact : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))" "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)))" "n"
%|- (sttfa-lemma "fact_sttfa.eq_fact")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n))(fact_sttfa.sttfa_fact(n)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.sttfa_fact(n))))" "nat_sttfa.filter_nat_type[nat_sttfa.sttfa_nat](fact_sttfa.fact_body)(n)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.sttfa_fact(n))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.sttfa_fact(n))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](x)(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(x))))" "fact_sttfa.sttfa_fact(n)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[nat_sttfa.sttfa_nat]")))))))
%|- QED

axiom_fact_body_O  : AXIOM connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))

eq_fact_body_O  : LEMMA leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))

%|- eq_fact_body_O : PROOF
%|- (sttfa-conv "(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))))" () ("leibniz_sttfa.leibniz")
%|- (sttfa-impl-e "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" "connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "fact_sttfa.axiom_fact_body_O")
%|- (sttfa-conv "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(y)))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_O)) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](x)(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y))))))" "fact_sttfa.fact_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[nat_sttfa.sttfa_nat]")))))))
%|- QED

sym_eq_fact_body_O  : LEMMA leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O))

%|- sym_eq_fact_body_O : PROOF
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))" "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))"
%|- (sttfa-lemma "fact_sttfa.eq_fact_body_O")
%|- (sttfa-conv "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.sttfa_S(nat_sttfa.sttfa_O))(fact_sttfa.fact_body(nat_sttfa.sttfa_O)))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.fact_body(nat_sttfa.sttfa_O))))" "nat_sttfa.sttfa_S(nat_sttfa.sttfa_O)"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_O))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.fact_body(nat_sttfa.sttfa_O))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](x)(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(x))))" "fact_sttfa.fact_body(nat_sttfa.sttfa_O)"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[nat_sttfa.sttfa_nat]"))))))
%|- QED

axiom_fact_body_S  : AXIOM (FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))

eq_fact_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))

%|- eq_fact_body_S : PROOF
%|- (sttfa-conv "(FORALL(n:nat_sttfa.sttfa_nat):(FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))))" () ("leibniz_sttfa.leibniz")
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))))" "connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "fact_sttfa.axiom_fact_body_S")))
%|- (sttfa-conv "(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))) => P(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))) => P(y)))))" "nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))) => P(y)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(connectives_sttfa.equal[nat_sttfa.sttfa_nat](x)(y) => (FORALL(P:[nat_sttfa.sttfa_nat -> bool]):(P(x) => P(y))))))" "fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "connectives_sttfa.equal_leibniz[nat_sttfa.sttfa_nat]"))))))))
%|- QED

sym_eq_fact_body_S  : LEMMA (FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))))

%|- sym_eq_fact_body_S : PROOF
%|- (then@ (sttfa-forall-i "n")
%|- (sttfa-impl-e "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))))" "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))"
%|- (sttfa-conv "leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))" () ()
%|- (sttfa-forall-e "(FORALL(n:nat_sttfa.sttfa_nat):leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))))" "n"
%|- (sttfa-lemma "fact_sttfa.eq_fact_body_S")))
%|- (sttfa-conv "(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n)))(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))))" () ()
%|- (sttfa-forall-e "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))))" "nat_sttfa.times(fact_sttfa.sttfa_fact(n))(nat_sttfa.sttfa_S(n))"
%|- (sttfa-conv "(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(fact_sttfa.fact_body(nat_sttfa.sttfa_S(n)))))" () ()
%|- (sttfa-forall-e "(FORALL(x:nat_sttfa.sttfa_nat):(FORALL(y:nat_sttfa.sttfa_nat):(leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](x)(y) => leibniz_sttfa.leibniz[nat_sttfa.sttfa_nat](y)(x))))" "fact_sttfa.fact_body(nat_sttfa.sttfa_S(n))"
%|- (sttfa-lemma "leibniz_sttfa.sym_leibniz[nat_sttfa.sttfa_nat]")))))))
%|- QED

END fact_sttfa

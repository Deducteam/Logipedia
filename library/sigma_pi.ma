include "basics/pts.ma".
include "bigops.ma".
include "bool.ma".
include "exp.ma".
include "logic.ma".
include "nat.ma".
definition exp_pi_l : \forall (n:(nat) ). \forall (a:(nat) ). \forall (f:((nat) ) -> (nat) ). (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (n))) (((((((bigop) ((nat) )) (n)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((((((bigop) ((nat) )) (n)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))) := \lambda n : (nat) . \lambda a : (nat) . \lambda f : ((nat) ) -> (nat) . ((((nat_ind) (\lambda j_x_365 : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (j_x_365))) (((((((bigop) ((nat) )) (j_x_365)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((((((bigop) ((nat) )) (j_x_365)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))))) ((((sym_eq_bigop_O) ((nat) )) (\lambda y : (((nat) ) -> (bool) ) -> ((nat) ) -> (((nat) ) -> ((nat) ) -> (nat) ) -> (((nat) ) -> (nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((((y) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))))) ((((sym_eq_bigop_body_O) ((nat) )) (\lambda y : (((nat) ) -> (bool) ) -> ((nat) ) -> (((nat) ) -> ((nat) ) -> (nat) ) -> (((nat) ) -> (nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((((y) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))))) (((eq_times_body_O) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) (((S) ) ((O) )))))) (((((eq_filter_nat_type_O) (((nat) ) -> (nat) )) ((times_body) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) (((S) ) ((O) )))))) ((((eq_times) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) (((S) ) ((O) )))))) (((eq_plus_body_O) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) ((((times) ) ((O) )) (((S) ) ((O) ))))))) (((((eq_filter_nat_type_O) (((nat) ) -> (nat) )) ((plus_body) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) ((((times) ) ((O) )) (((S) ) ((O) ))))))) ((((eq_plus) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) (((S) ) ((y) ((((times) ) ((O) )) (((S) ) ((O) ))))))) ((((eq_plus_body_S) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) ((((times) ) ((O) )) (((S) ) ((O) )))))) ((((((eq_filter_nat_type_S) (((nat) ) -> (nat) )) ((plus_body) )) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) ((((times) ) ((O) )) (((S) ) ((O) )))))) ((((eq_plus) (((S) ) ((O) ))) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) ((((times) ) ((O) )) (((S) ) ((O) )))))) ((((eq_times_body_S) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) (((S) ) ((O) ))))) ((((((eq_filter_nat_type_S) (((nat) ) -> (nat) )) ((times_body) )) ((O) )) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) (((S) ) ((O) ))))) ((((eq_times) (((S) ) ((O) ))) (\lambda y : ((nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((y) (((S) ) ((O) ))))) ((((((eq_match_nat_type_O) ((nat) )) (((S) ) ((O) ))) (\lambda k : (nat) . ((((match_bool_type) ((nat) )) ((((times) ) ((((times) ) (a)) ((f) (k)))) (((((((bigop) ((nat) )) (k)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))))) (((((((bigop) ((nat) )) (k)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i))))) ((true) ))) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) (((S) ) ((O) ))) (y)))) ((((eq_exp_body_O) (a)) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) (y)) (((((\lambda p : ((nat) ) -> (bool) . \lambda nil : (nat) . \lambda op : ((nat) ) -> ((nat) ) -> (nat) . \lambda f0 : ((nat) ) -> (nat) . ((((match_nat_type) ((nat) )) (nil)) (\lambda k : (nat) . ((((match_bool_type) ((nat) )) (((op) ((f0) (k))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0)))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0))) ((p) (k)))) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i))))))) (((((eq_filter_nat_type_O) ((nat) )) (((exp_body) ) (a))) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) (y)) (((((\lambda p : ((nat) ) -> (bool) . \lambda nil : (nat) . \lambda op : ((nat) ) -> ((nat) ) -> (nat) . \lambda f0 : ((nat) ) -> (nat) . ((((match_nat_type) ((nat) )) (nil)) (\lambda k : (nat) . ((((match_bool_type) ((nat) )) (((op) ((f0) (k))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0)))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0))) ((p) (k)))) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i))))))) (((((eq_exp) (a)) ((O) )) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) (y)) (((((\lambda p : ((nat) ) -> (bool) . \lambda nil : (nat) . \lambda op : ((nat) ) -> ((nat) ) -> (nat) . \lambda f0 : ((nat) ) -> (nat) . ((((match_nat_type) ((nat) )) (nil)) (\lambda k : (nat) . ((((match_bool_type) ((nat) )) (((op) ((f0) (k))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0)))) (((((((bigop) ((nat) )) (k)) (p)) (nil)) (op)) (f0))) ((p) (k)))) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i))))))) ((((((sym_eq_match_nat_type_O) ((nat) )) (((S) ) ((O) ))) (\lambda k : (nat) . ((((match_bool_type) ((nat) )) ((((times) ) ((((times) ) (a)) ((f) (k)))) (((((((bigop) ((nat) )) (k)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i)))))) (((((((bigop) ((nat) )) (k)) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) (i))))) ((true) ))) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) ((((exp) ) (a)) ((O) ))) (y)))) ((((eq_bigop_body_O) ((nat) )) (\lambda y : (((nat) ) -> (bool) ) -> ((nat) ) -> (((nat) ) -> ((nat) ) -> (nat) ) -> (((nat) ) -> (nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((y) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i)))))) ((((eq_bigop_O) ((nat) )) (\lambda y : (((nat) ) -> (bool) ) -> ((nat) ) -> (((nat) ) -> ((nat) ) -> (nat) ) -> (((nat) ) -> (nat) ) -> (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((y) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i)))))) (((refl) ((nat) )) ((((times) ) ((((exp) ) (a)) ((O) ))) (((((((bigop) ((nat) )) ((O) )) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) (i))))))))))))))))))))))))))) (\lambda i : (nat) . \lambda Hind : (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (((times) ) (a)) ((f) (i0)))). (((((((eq_ind_r) ((nat) )) ((((times) ) ((f) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) (x))) (((((((bigop) ((nat) )) (((S) ) (i))) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (((times) ) (a)) ((f) (i0)))))) (((((((eq_ind_r) ((nat) )) ((((times) ) ((((times) ) (a)) ((f) (i)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (((times) ) (a)) ((f) (i0)))))) (\lambda x : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((((times) ) ((f) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) (x))) (((((((eq_ind) ((nat) )) ((((times) ) ((((exp) ) (a)) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((((times) ) ((f) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) ((((times) ) ((((times) ) (a)) ((f) (i)))) (x_1)))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((f) (i)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) (x_1)) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((times) ) ((((exp) ) (a)) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))))) (((((((eq_ind) ((nat) )) ((((times) ) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (\lambda x_1 : (nat) . (((eq) ((nat) )) ((((times) ) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((f) (i)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0))))) (x_1))) (((((((((((eq_f2) ((nat) )) ((nat) )) ((nat) )) ((times) )) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((f) (i)))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))) (((((sym_eq_exp) (a)) (((S) ) (i))) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) (y)) ((f) (i)))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) ((((((sym_eq_filter_nat_type_S) ((nat) )) (((exp_body) ) (a))) (i)) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) (y)) ((f) (i)))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) (((((sym_eq_exp_body_S) (a)) (i)) (\lambda y : (nat) . (((eq) ((nat) )) ((((times) ) (y)) ((f) (i)))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) (((((((rewrite_r) ((nat) )) ((((times) ) (a)) ((((exp) ) (a)) (i)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (j__)) ((f) (i)))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((f) (i))) ((((times) ) (a)) ((((exp) ) (a)) (i))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) (((((((rewrite_r) ((nat) )) ((((times) ) (a)) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i))))) (\lambda j__ : (nat) . (((eq) ((nat) )) (j__)) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) (((((((rewrite_r) ((nat) )) ((((times) ) ((((exp) ) (a)) (i))) ((((times) ) (a)) ((f) (i))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (a)) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i))))) (j__))) (((((((rewrite_r) ((nat) )) ((((times) ) (a)) ((((times) ) ((((exp) ) (a)) (i))) ((f) (i))))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (a)) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i))))) (j__))) (((((((rewrite_r) ((nat) )) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i)))) (\lambda j__ : (nat) . (((eq) ((nat) )) ((((times) ) (a)) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i))))) ((((times) ) (a)) (j__)))) (((refl) ((nat) )) ((((times) ) (a)) ((((times) ) ((f) (i))) ((((exp) ) (a)) (i)))))) ((((times) ) ((((exp) ) (a)) (i))) ((f) (i)))) (((commutative_times) ((((exp) ) (a)) (i))) ((f) (i))))) ((((times) ) ((((exp) ) (a)) (i))) ((((times) ) (a)) ((f) (i))))) ((((times_times) ((((exp) ) (a)) (i))) (a)) ((f) (i))))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i)))) (((commutative_times) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))))) ((((times) ) ((f) (i))) ((((times) ) (a)) ((((exp) ) (a)) (i))))) ((((times_times) ((f) (i))) (a)) ((((exp) ) (a)) (i))))) ((((times) ) ((((times) ) (a)) ((((exp) ) (a)) (i)))) ((f) (i)))) (((commutative_times) ((((times) ) (a)) ((((exp) ) (a)) (i)))) ((f) (i))))) ((((times) ) ((((exp) ) (a)) (i))) (a))) (((commutative_times) ((((exp) ) (a)) (i))) (a))))))) (((refl) ((nat) )) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) ((((times) ) ((((times) ) (a)) ((f) (i)))) ((((times) ) ((((exp) ) (a)) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) ((((associative_times) ((((times) ) (a)) ((f) (i)))) ((((exp) ) (a)) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) ((((times) ) ((((exp) ) (a)) (((S) ) (i)))) ((((times) ) ((f) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) ((((associative_times) ((((exp) ) (a)) (((S) ) (i)))) ((f) (i))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))))) (((((((bigop) ((nat) )) (i)) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (((times) ) (a)) ((f) (i0))))) (Hind))) (((((((bigop) ((nat) )) (((S) ) (i))) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (((times) ) (a)) ((f) (i0))))) ((((((((bigop_Strue) ((nat) )) (i)) (\lambda j__ : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda j__ : (nat) . (((times) ) (a)) ((f) (j__)))) (((refl) ((bool) )) ((true) ))))) (((((((bigop) ((nat) )) (((S) ) (i))) (\lambda i0 : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i0 : (nat) . (f) (i0)))) ((((((((bigop_Strue) ((nat) )) (i)) (\lambda j__ : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (f)) (((refl) ((bool) )) ((true) )))))) (n).
definition exp_pi_bc : \forall (a:(nat) ). \forall (b:(nat) ). \forall (c:(nat) ). \forall (f:((nat) ) -> (nat) ). (((eq) ((nat) )) ((((times) ) ((((exp) ) (a)) ((((minus) ) (c)) (b)))) (((((((bigop) ((nat) )) ((((minus) ) (c)) (b))) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (f) ((((plus) ) (i)) (b)))))) (((((((bigop) ((nat) )) ((((minus) ) (c)) (b))) (\lambda i : (nat) . (true) )) (((S) ) ((O) ))) ((times) )) (\lambda i : (nat) . (((times) ) (a)) ((f) ((((plus) ) (i)) (b))))) := \lambda a : (nat) . \lambda b : (nat) . \lambda c : (nat) . \lambda f : ((nat) ) -> (nat) . (((exp_pi_l) ((((minus) ) (c)) (b))) (a)) (\lambda j__ : (nat) . (f) ((((plus) ) (j__)) (b))).

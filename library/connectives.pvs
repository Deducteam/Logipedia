connectives_sttfa : THEORY
BEGIN

sttfa_True : bool

sttfa_False : bool

sttfa_Not : [bool -> bool]

sttfa_And : [bool -> [bool -> bool]]

sttfa_Or : [bool -> [bool -> bool]]

sttfa_ex [A:TYPE+]: [[A -> bool] -> bool]

equal [A:TYPE+]: [A -> [A -> bool]]

I  : AXIOM connectives_sttfa.sttfa_True

falsity  : AXIOM (FORALL(t:bool):(connectives_sttfa.sttfa_False => t))

nmk  : AXIOM (FORALL(A:bool):((A => connectives_sttfa.sttfa_False) => connectives_sttfa.sttfa_Not(A)))

Not_ind  : AXIOM (FORALL(A:bool):(FORALL(Q:bool):(((A => connectives_sttfa.sttfa_False) => Q) => (connectives_sttfa.sttfa_Not(A) => Q))))

conj  : AXIOM (FORALL(A:bool):(FORALL(B:bool):(A => (B => connectives_sttfa.sttfa_And(A)(B)))))

match_And_prop  : AXIOM (FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => (B => return)) => (connectives_sttfa.sttfa_And(A)(B) => return)))))

or_introl  : AXIOM (FORALL(A:bool):(FORALL(B:bool):(A => connectives_sttfa.sttfa_Or(A)(B))))

or_intror  : AXIOM (FORALL(A:bool):(FORALL(B:bool):(B => connectives_sttfa.sttfa_Or(A)(B))))

match_Or_prop  : AXIOM (FORALL(A:bool):(FORALL(B:bool):(FORALL(return:bool):((A => return) => ((B => return) => (connectives_sttfa.sttfa_Or(A)(B) => return))))))

ex_intro [A:TYPE+] : AXIOM (FORALL(P:[A -> bool]):(FORALL(x:A):(P(x) => connectives_sttfa.sttfa_ex[A](P))))

match_ex_prop [A:TYPE+] : AXIOM (FORALL(P:[A -> bool]):(FORALL(return:bool):((FORALL(x:A):(P(x) => return)) => (connectives_sttfa.sttfa_ex[A](P) => return))))

refl_equal [A:TYPE+] : AXIOM (FORALL(x:A):connectives_sttfa.equal[A](x)(x))

equal_leibniz [A:TYPE+] : AXIOM (FORALL(x:A):(FORALL(y:A):(connectives_sttfa.equal[A](x)(y) => (FORALL(P:[A -> bool]):(P(x) => P(y))))))

END connectives_sttfa

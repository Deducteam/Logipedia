import .connectives
import .leibniz
import .nat
constant exp.exp : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) .
constant exp.exp_body : ((nat.nat) ) -> ((nat.nat) ) -> (nat.nat) .
axiom exp.axiom_exp : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((connectives.equal) ((nat.nat) )) ((((exp.exp) ) (n)) (m))) ((((nat.filter_nat_type) ((nat.nat) )) (((exp.exp_body) ) (n))) (m)).
theorem exp.eq_exp : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) ((((exp.exp) ) (n)) (m))) ((((nat.filter_nat_type) ((nat.nat) )) (((exp.exp_body) ) (n))) (m)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((@connectives.equal_leibniz) ((nat.nat) )) ((((exp.exp) ) (n)) (m))) ((((nat.filter_nat_type) ((nat.nat) )) (((exp.exp_body) ) (n))) (m))) (((@exp.axiom_exp) (n)) (m)).
theorem exp.sym_eq_exp : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) ((((nat.filter_nat_type) ((nat.nat) )) (((exp.exp_body) ) (n))) (m))) ((((exp.exp) ) (n)) (m)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((@leibniz.sym_leibniz) ((nat.nat) )) ((((exp.exp) ) (n)) (m))) ((((nat.filter_nat_type) ((nat.nat) )) (((exp.exp_body) ) (n))) (m))) (((@exp.eq_exp) (n)) (m)).
axiom exp.axiom_exp_body_O : forall (n:(nat.nat) ) , (((connectives.equal) ((nat.nat) )) ((((exp.exp_body) ) (n)) ((nat.O) ))) (((nat.S) ) ((nat.O) )).
theorem exp.eq_exp_body_O : forall (n:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) ((nat.O) ))) (((nat.S) ) ((nat.O) )) := fun (n : (nat.nat) ) , ((((@connectives.equal_leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) ((nat.O) ))) (((nat.S) ) ((nat.O) ))) ((@exp.axiom_exp_body_O) (n)).
theorem exp.sym_eq_exp_body_O : forall (n:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) (((nat.S) ) ((nat.O) ))) ((((exp.exp_body) ) (n)) ((nat.O) )) := fun (n : (nat.nat) ) , ((((@leibniz.sym_leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) ((nat.O) ))) (((nat.S) ) ((nat.O) ))) ((@exp.eq_exp_body_O) (n)).
axiom exp.axiom_exp_body_S : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((connectives.equal) ((nat.nat) )) ((((exp.exp_body) ) (n)) (((nat.S) ) (m)))) ((((nat.times) ) ((((exp.exp) ) (n)) (m))) (n)).
theorem exp.eq_exp_body_S : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) (((nat.S) ) (m)))) ((((nat.times) ) ((((exp.exp) ) (n)) (m))) (n)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((@connectives.equal_leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) (((nat.S) ) (m)))) ((((nat.times) ) ((((exp.exp) ) (n)) (m))) (n))) (((@exp.axiom_exp_body_S) (n)) (m)).
theorem exp.sym_eq_exp_body_S : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , (((leibniz.leibniz) ((nat.nat) )) ((((nat.times) ) ((((exp.exp) ) (n)) (m))) (n))) ((((exp.exp_body) ) (n)) (((nat.S) ) (m))) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((@leibniz.sym_leibniz) ((nat.nat) )) ((((exp.exp_body) ) (n)) (((nat.S) ) (m)))) ((((nat.times) ) ((((exp.exp) ) (n)) (m))) (n))) (((@exp.eq_exp_body_S) (n)) (m)).
theorem exp.lt_O_exp : forall (n:(nat.nat) ) , forall (m:(nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((exp.exp) ) (n)) (m)) := fun (n : (nat.nat) ) , fun (m : (nat.nat) ) , ((((@nat.nat_ind) (fun (_x_365 : (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((exp.exp) ) (n)) (_x_365)))) (((((@exp.sym_eq_exp) (n)) ((nat.O) )) (fun (y : (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) (((((@nat.sym_eq_filter_nat_type_O) ((nat.nat) )) (((exp.exp_body) ) (n))) (fun (y : (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) ((((@exp.sym_eq_exp_body_O) (n)) (fun (y : (nat.nat) ) , ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) (fun (auto : (((nat.le_) ) (((nat.S) ) ((nat.O) ))) (n)) , ((@nat.lt_O_S) ((nat.O) ))))))) (fun (a : (nat.nat) ) , ((((@exp.sym_eq_exp) (n)) (((nat.S) ) (a))) (fun (y : (nat.nat) ) , (((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((exp.exp) ) (n)) (a))) -> ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) ((((((@nat.sym_eq_filter_nat_type_S) ((nat.nat) )) (((exp.exp_body) ) (n))) (a)) (fun (y : (nat.nat) ) , (((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((exp.exp) ) (n)) (a))) -> ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) (((((@exp.sym_eq_exp_body_S) (n)) (a)) (fun (y : (nat.nat) ) , (((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) ((((exp.exp) ) (n)) (a))) -> ((((nat.lt_) ) ((nat.O) )) (n)) -> (((nat.lt_) ) ((nat.O) )) (y))) (fun (Hind : ((((nat.le_) ) (((nat.S) ) ((nat.O) ))) (n)) -> (((nat.le_) ) (((nat.S) ) ((nat.O) ))) ((((exp.exp) ) (n)) (a))) , (fun (posn : (((nat.le_) ) (((nat.S) ) ((nat.O) ))) (n)) , (((@nat.eq_times_body_O) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> (nat.nat) )) ((nat.times_body) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_times) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) (((@nat.eq_plus_body_O) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) )))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) (((((@nat.eq_filter_nat_type_O) (((nat.nat) ) -> (nat.nat) )) ((nat.plus_body) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) )))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_plus) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) (((nat.S) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) )))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_plus_body_S) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((((@nat.eq_filter_nat_type_S) (((nat.nat) ) -> (nat.nat) )) ((nat.plus_body) )) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_plus) (((nat.S) ) ((nat.O) ))) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) ((((nat.times) ) ((nat.O) )) (((nat.S) ) ((nat.O) ))))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_times_body_S) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) (((nat.S) ) ((nat.O) )))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((((@nat.eq_filter_nat_type_S) (((nat.nat) ) -> (nat.nat) )) ((nat.times_body) )) ((nat.O) )) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) (((nat.S) ) ((nat.O) )))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) ((((@nat.eq_times) (((nat.S) ) ((nat.O) ))) (fun (y : ((nat.nat) ) -> (nat.nat) ) , (((nat.le_) ) ((y) (((nat.S) ) ((nat.O) )))) ((((nat.times) ) ((((exp.exp) ) (n)) (a))) (n)))) (((((((@nat.le_times) (((nat.S) ) ((nat.O) ))) ((((exp.exp) ) (n)) (a))) (((nat.S) ) ((nat.O) ))) (n)) ((Hind) (posn))) (posn)))))))))))))))))))) (m).

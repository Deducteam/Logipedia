version: 2.1

ocaml_img: &ocaml_img
    docker:
      - image: ocaml/opam2:alpine

opam_deps: &opam_deps
  run:
    name: opam_deps
    command: |
      opam switch 4.07
      opam update
      opam pin add dedukti git+https://github.com/Deducteam/Dedukti.git -qy
      opam pin ocaml-migrate-parsetree 1.3.1            
      opam install dune yojson ppx_deriving_yojson
  

jobs:
  build_logipedia:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4 git
      - <<: *opam_deps
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat dedukti

  coq_export:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4
      - <<: *opam_deps
#      - run: opam install coq=8.9.1 -qy
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export coq
      - run: pwd && ls export && ls export/coq
      - run: cp -r export /tmp
      - store_artifacts:
          path: /tmp/export/coq
      - persist_to_workspace:
          root: /tmp
          paths: 
            - export/coq

  lean_export:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4
      - <<: *opam_deps
      - run:
          command: |
            echo Installing lean prover
            pushd /tmp
            wget https://github.com/leanprover/lean/releases/download/v3.4.2/lean-3.4.2-linux.tar.gz
            tar zxf lean-3.4.2-linux.tar.gz
            sudo ln -s /tmp/lean-3.4.2-linux/bin/lean /usr/bin/lean
            popd
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export lean
      - run: cp -r export /tmp
      - store_artifacts:
          path: /tmp/export/lean
      - persist_to_workspace:
          root: /tmp
          paths: 
            - export/lean   

  pvs_export:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4
      - <<: *opam_deps
      - run:
          command: |
            echo Installing pvs prover
            mkdir -p /tmp/pvs
            pushd /tmp/pvs
            wget http://pvs.csl.sri.com/download-open/pvs-6.0-ix86_64-Linux-sbclisp.tgz
            tar zxf pvs-6.0-ix86_64-Linux-sbclisp.tgz
            ./bin/relocate
            sudo ln -s /tmp/pvs/pvs /usr/bin/pvs
            popd
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export pvs
      - run: cp -r export /tmp
      - store_artifacts:
          path: /tmp/export/pvs
      - persist_to_workspace:
          root: /tmp
          paths: 
            - export/pvs   

  matita_export:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4
      - <<: *opam_deps
#      - run: here install matita
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export matita
      - run: cp -r export /tmp
      - store_artifacts:
          path: /tmp/export/matita
      - persist_to_workspace:
          root: /tmp
          paths: 
            - export/matita

  hollight_export:
    <<: *ocaml_img
    steps:
      - run: sudo apk add m4
      - <<: *opam_deps
#      - run: here install hollight
      - checkout
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export hollight
      - run: cp -r export /tmp
      - store_artifacts:
          path: /tmp/export/hollight
      - persist_to_workspace:
          root: /tmp
          paths: 
            - export/hollight

            
  json_export:
    <<: *ocaml_img
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: sudo apk add m4 git
      - <<: *opam_deps
      - checkout
      - run: cp -r /tmp/workspace/export ./
      - run: eval $(opam env) && make THEORY=sttfa PKG=arith_fermat EXPDIR=export json
      - run: cp -r export/json /tmp
      - store_artifacts:
          path: /tmp/json
      - persist_to_workspace:
          root: /tmp
          paths: 
            - json
 
  build_website:
    docker:
      - image: circleci/python:3.7-buster
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          command: |
              echo Installing logipp-latex
              sudo apt install -y guile-2.2 guile-2.2-dev
              pushd /tmp
              wget http://download.savannah.gnu.org/releases/guile-json/guile-json-3.2.0.tar.gz
              tar xzf guile-json-3.2.0.tar.gz
              pushd guile-json-3.2.0
              ./configure --prefix=/usr && make && sudo make install
              popd
              git clone https://github.com/gabrielhdt/LogiPPedia.git
              pushd LogiPPedia/scheme
              sudo make install
              popd
              popd
      - checkout
      - run: pip install --user ./logigen
      - run: logigen -i /tmp/workspace/json --pp-extra "--uriconv /tmp/LogiPPedia/scheme/uri2syms/sttfa-latex.scm"
      - run: cp -r /tmp/workspace/export gen_website/
      - run: cp -r gen_website /tmp/
      - store_artifacts:
          path: /tmp/gen_website
      - persist_to_workspace:
          root: /tmp
          paths: 
            - gen_website

          
  deploy_staging:
    docker:
      - image: circleci/python:3.7-buster
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: mkdir web && cp -r /tmp/workspace/gen_website/* ./web/
      - run: tar -zcf web.tar.gz web
      - run: cp web.tar.gz /tmp/
      - store_artifacts:
          path: /tmp/web.tar.gz
      - deploy:
          command: |
            curl -X POST \
            -F token=$DEPLOY_TOKEN \
            -F "ref=master"  \
            -F "variables[DEPLOY]=staging" \
            -F "variables[BUILD_NUM]=$CIRCLE_BUILD_NUM" \
            https://gitlab.inria.fr/api/v4/projects/17529/trigger/pipeline
      

  deploy_prod:
    docker:
      - image: circleci/python:3.7-buster
    steps:
      - deploy:
          command: |
            curl -X POST \
            -F token=$DEPLOY_TOKEN \
            -F "ref=master"  \
            -F "variables[DEPLOY]=prod" \
            https://gitlab.inria.fr/api/v4/projects/17529/trigger/pipeline


workflows:
  version: 2.1
  build:
    jobs:
      - build_logipedia
      - lean_export:
          requires:
            - build_logipedia
      - pvs_export:
          requires:
            - build_logipedia
      - matita_export:
          requires:
            - build_logipedia
      - hollight_export:
          requires:
            - build_logipedia
      - coq_export:
          requires:
            - build_logipedia
      - json_export:
          requires:
            - lean_export
            - pvs_export
            - matita_export
            - hollight_export
            - coq_export
      - build_website:
          requires:
            - json_export
      - deploy_staging:
          requires:
            - build_website
          filters:
            branches:
              only: master
      - hold:
          type: approval
          requires:
            - deploy_staging
          filters:
            # tags:
            #   only: /^v[0-9]+(\.[0-9]+)*$/
            branches:
              only: master
      - deploy_prod:
          requires:
            - hold
          

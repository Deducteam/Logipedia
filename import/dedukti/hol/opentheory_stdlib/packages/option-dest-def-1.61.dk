
(; This file was generated by Holide. ;)

#NAME option_2Ddest_2Ddef_2D1_2E61.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Data_2EOption_2Eoption : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Data_2EOption_2Eoption (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

(; Constant option-dest-def-1.61 ;)

option_2Ddest_2Ddef_2D1_2E61 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => option_2Ddest_2Ddef_2D1_2E61 (type_3 A).

(; Constant Data.Option.isNone ;)

def Data_2EOption_2EisNone : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => term_0 A.

def term_1 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Data_2EOption_2EisNone (type_0 A).

(; Constant Data.Option.none ;)

Data_2EOption_2Enone : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Data_2EOption_2Enone (type_1 A).

def term_3 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_1 A (term_2 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_3 A).

(; Theorem: |- (Data.Option.isNone Data.Option.none) ;)

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

def term_4 : hol.term (hol.arr type_2 type_2) :=
  Data_2EBool_2E_7E (hol.arr type_2 type_2).

(; Constant Data.Option.isSome ;)

def Data_2EOption_2EisSome : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => term_0 A.

def term_5 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Data_2EOption_2EisSome (type_0 A).

def term_6 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_4 (term_5 A (term_2 A)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_6 A).

(; Theorem: |- (Data.Bool.~ (Data.Option.isSome Data.Option.none)) ;)

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_7 : A : hol.type -> hol.term (hol.arr (hol.arr (type_0 A) type_2) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_0 A) type_2) type_2).

(; Constant Data.Option.some ;)

Data_2EOption_2Esome : A : hol.type -> hol.term (type_0 A).

def term_8 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => a_1.

def term_9 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_1 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => Data_2EOption_2Esome (hol.arr (type_0 A) (type_1 A)) (term_8 A a_1).

def term_10 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_7 A (a_1 : hol.term (type_0 A) => term_5 A (term_9 A a_1)).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_10 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Option.isSome (Data.Option.some a))) ;)

def term_11 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_7 A (a_1 : hol.term (type_0 A) => term_4 (term_1 A (term_9 A a_1))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.~ (Data.Option.isNone (Data.Option.some a)))) ;)

def type_4 : hol.type -> hol.type :=
  B : hol.type => B.

def type_5 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_4 B) type_2.

def term_12 : B : hol.type -> hol.term (hol.arr (type_5 B) type_2) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_5 B) type_2).

def type_6 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_4 B).

def term_13 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_6 B A) type_2) type_2) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_6 B A) type_2) type_2).

def term_14 : B : hol.type -> hol.term (hol.arr (type_4 B) (type_5 B)) :=
  B : hol.type => hol.eq (type_4 B).

def type_7 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (type_4 B) (hol.arr (type_6 B A) (hol.arr (type_1 A) (type_4 B))).

(; Constant Data.Option.case.none.some ;)

def Data_2EOption_2Ecase_2Enone_2Esome : A : hol.type -> B : hol.type -> hol.term (type_7 A B) :=
  A : hol.type => B : hol.type => option_2Ddest_2Ddef_2D1_2E61 (type_7 A B).

def term_15 : B : hol.type -> b_1 : hol.term (type_4 B) -> hol.term (type_4 B) :=
  B : hol.type => b_1 : hol.term (type_4 B) => b_1.

def term_16 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_6 B A) -> hol.term (type_6 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_6 B A) => f_1.

def term_17 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_6 B A) -> b_2 : hol.term (type_4 B) -> hol.term (hol.arr (type_1 A) (type_4 B)) :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_6 B A) => b_2 : hol.term (type_4 B) => Data_2EOption_2Ecase_2Enone_2Esome (type_0 A) (type_4 B) (term_15 B b_2) (term_16 B A f_1).

def term_18 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_12 B (b_1 : hol.term (type_4 B) => term_13 B A (f_2 : hol.term (type_6 B A) => term_14 B (term_17 A B f_2 b_1 (term_2 A)) (term_15 B b_1))).

(; axiom ;)

thm_4 : A : hol.type -> B : hol.type -> hol.proof (term_18 A B).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. ((= (((Data.Option.case.none.some b) f) Data.Option.none)) b))) ;)

def term_19 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_12 B (b_1 : hol.term (type_4 B) => term_13 B A (f_2 : hol.term (type_6 B A) => term_7 A (a_3 : hol.term (type_0 A) => term_14 B (term_17 A B f_2 b_1 (term_9 A a_3)) (term_16 B A f_2 (term_8 A a_3))))).

(; axiom ;)

thm_5 : A : hol.type -> B : hol.type -> hol.proof (term_19 A B).

(; Theorem: |- (Data.Bool.! \lambda b. (Data.Bool.! \lambda f. (Data.Bool.! \lambda a. ((= (((Data.Option.case.none.some b) f) (Data.Option.some a))) (f a))))) ;)

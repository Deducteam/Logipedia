
(; This file was generated by Holide. ;)

#NAME axiom_2Dinfinity_2D1_2E12.

def type_0 : hol.type :=
  hol.ind.

def type_1 : hol.type :=
  hol.arr type_0 type_0.

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type :=
  hol.arr type_1 type_2.

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term A.

def type_4 : hol.type :=
  hol.arr type_2 type_2.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term A.

(; Constant Function.injective ;)

Function_2Einjective : A : hol.type -> hol.term A.

def term_0 : f_1 : hol.term type_1 -> hol.term type_1 :=
  f_1 : hol.term type_1 => f_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

(; Constant Function.surjective ;)

Function_2Esurjective : A : hol.type -> hol.term A.

def term_1 : hol.term type_2 :=
  Data_2EBool_2E_3F (hol.arr type_3 type_2) (f_1 : hol.term type_1 => Data_2EBool_2E_2F_5C (hol.arr type_2 type_4) (Function_2Einjective type_3 (term_0 f_1)) (Data_2EBool_2E_7E type_4 (Function_2Esurjective type_3 (term_0 f_1)))).

(; axiom ;)

thm_0 : hol.proof term_1.

(; Theorem: |- (Data.Bool.? \lambda f. ((Data.Bool./\ (Function.injective f)) (Data.Bool.~ (Function.surjective f)))) ;)

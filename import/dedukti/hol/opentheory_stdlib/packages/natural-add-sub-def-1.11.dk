
(; This file was generated by Holide. ;)

#NAME natural_2Dadd_2Dsub_2Ddef_2D1_2E11.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.arr type_0 hol.bool.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_1 hol.bool) :=
  Data_2EBool_2E_21 (hol.arr type_1 hol.bool).

def type_2 : hol.type :=
  hol.arr type_0 (hol.arr type_0 type_0).

(; Constant natural-add-sub-def-1.11 ;)

natural_2Dadd_2Dsub_2Ddef_2D1_2E11 : A : hol.type -> hol.term A.

(; Constant Number.Natural.- ;)

def Number_2ENatural_2E_2D : hol.term type_2 :=
  natural_2Dadd_2Dsub_2Ddef_2D1_2E11 type_2.

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term A.

def term_1 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_2 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_3 : hol.term hol.bool :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => hol.eq type_0 (Number_2ENatural_2E_2D (Number_2ENatural_2E_2B type_2 (term_1 m_1) (term_2 n_2)) (term_2 n_2)) (term_1 m_1))).

(; axiom ;)

thm_0 : hol.proof term_3.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.- ((Number.Natural.+ m) n)) n)) m))) ;)

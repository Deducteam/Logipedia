
(; This file was generated by Holide. ;)

#NAME natural_2Ddest_2D1_2E18.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.arr type_0 hol.bool.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def type_2 : hol.type :=
  hol.arr type_0 type_0.

(; Constant natural-dest-1.18 ;)

natural_2Ddest_2D1_2E18 : A : hol.type -> hol.term A.

(; Constant Number.Natural.pre ;)

def Number_2ENatural_2Epre : hol.term type_2 :=
  natural_2Ddest_2D1_2E18 type_2.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

def term_0 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_1 : hol.term hol.bool :=
  Data_2EBool_2E_21 (hol.arr type_1 hol.bool) (n_1 : hol.term type_0 => hol.eq type_0 (Number_2ENatural_2Epre (Number_2ENatural_2Esuc type_2 (term_0 n_1))) (term_0 n_1)).

(; axiom ;)

thm_0 : hol.proof term_1.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.pre (Number.Natural.suc n))) n)) ;)

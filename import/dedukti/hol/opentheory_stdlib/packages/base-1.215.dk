
(; This file was generated by Holide. ;)

#NAME base_2D1_2E215.

def type_0 : hol.type :=
  hol.bool.

(; Constant base-1.215 ;)

base_2D1_2E215 : A : hol.type -> hol.term A.

def term_0 : hol.term type_0 :=
  base_2D1_2E215 type_0.

(; Constant Data.Bool.T ;)

def Data_2EBool_2ET : hol.term type_0 :=
  term_0.

def term_1 : hol.term type_0 :=
  Data_2EBool_2ET.

(; axiom ;)

thm_0 : hol.proof term_1.

(; Theorem: |- Data.Bool.T ;)

def type_1 : hol.type :=
  hol.arr type_0 type_0.

def type_2 : hol.type :=
  hol.arr type_1 type_0.

def term_2 : hol.term (hol.arr type_1 type_2) :=
  hol.eq type_1.

(; dict ;)

thm thm_1 : hol.proof (hol.eq (hol.arr type_1 type_2) term_2 term_2) :=
  hol.REFL (hol.arr type_1 type_2) term_2.

def type_3 : hol.type -> hol.type :=
  A : hol.type => A.

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) (type_3 A).

def type_5 : hol.type :=
  hol.arr type_0 type_1.

def term_3 : hol.term type_5 :=
  hol.eq type_0.

def term_4 : hol.term type_1 :=
  term_3 term_0.

def term_5 : A : hol.type -> x_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => x_1 : hol.term (type_3 A) => x_1.

def term_6 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => x_1 : hol.term (type_3 A) => term_5 A x_1.

def term_7 : A : hol.type -> hol.term type_1 :=
  A : hol.type => (y_1 : hol.term (type_4 A) => term_4) (term_6 A).

(; dict ;)

thm thm_2 : A : hol.type -> hol.proof (term_2 (term_7 A) (term_7 A)) :=
  A : hol.type => hol.REFL type_1 (term_7 A).

(; dict ;)

thm thm_3 : hol.proof (term_4 term_0) :=
  hol.REFL type_0 term_0.

(; dict ;)

thm thm_4 : A : hol.type -> hol.proof (term_7 A term_0) :=
  A : hol.type => hol.EQ_MP (term_4 term_0) (term_7 A term_0) (hol.APP_THM type_0 type_0 term_4 (term_7 A) term_0 term_0 (hol.EQ_MP (term_2 (term_7 A) (term_7 A)) (term_2 term_4 (term_7 A)) (hol.APP_THM type_1 type_0 (term_2 (term_7 A)) (term_2 term_4) (term_7 A) (term_7 A) (hol.APP_THM type_1 type_2 term_2 term_2 (term_7 A) term_4 thm_1 (hol.BETA_CONV (type_4 A) type_1 (y_1 : hol.term (type_4 A) => term_4) (term_6 A))) (thm_2 A)) (thm_2 A)) thm_3) thm_3.

Data_2EList_2Elist : hol.type -> hol.type.

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr type_0 (Data_2EList_2Elist (type_3 A))).

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr (Data_2EList_2Elist (type_3 A)) type_0).

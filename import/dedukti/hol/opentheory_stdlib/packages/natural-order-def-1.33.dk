
(; This file was generated by Holide. ;)

#NAME natural_2Dorder_2Ddef_2D1_2E33.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def type_3 : hol.type :=
  hol.arr type_1 type_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

def type_4 : hol.type :=
  hol.arr type_0 type_2.

(; Constant natural-order-def-1.33 ;)

natural_2Dorder_2Ddef_2D1_2E33 : A : hol.type -> hol.term A.

def term_1 : hol.term type_4 :=
  natural_2Dorder_2Ddef_2D1_2E33 type_4.

(; Constant Number.Natural.< ;)

def Number_2ENatural_2E_3C : hol.term type_4 :=
  term_1.

def term_2 : hol.term type_4 :=
  Number_2ENatural_2E_3C.

def term_3 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_4 : m_1 : hol.term type_0 -> hol.term type_2 :=
  m_1 : hol.term type_0 => term_2 (term_3 m_1).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

def term_5 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_6 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => Data_2EBool_2E_7E type_3 (term_4 m_1 term_5)).

(; axiom ;)

thm_0 : hol.proof term_6.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.~ ((Number.Natural.< m) Number.Natural.zero))) ;)

def type_5 : hol.type :=
  hol.arr type_1 type_3.

def term_7 : hol.term type_5 :=
  hol.eq type_1.

(; Constant Number.Natural.<= ;)

def Number_2ENatural_2E_3C_3D : hol.term type_4 :=
  term_1.

def term_8 : hol.term type_4 :=
  Number_2ENatural_2E_3C_3D.

def term_9 : m_1 : hol.term type_0 -> hol.term type_2 :=
  m_1 : hol.term type_0 => term_8 (term_3 m_1).

def term_10 : m_1 : hol.term type_0 -> hol.term type_2 :=
  m_1 : hol.term type_0 => hol.eq type_0 (term_3 m_1).

def term_11 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_7 (term_9 m_1 term_5) (term_10 m_1 term_5)).

(; axiom ;)

thm_1 : hol.proof term_11.

(; Theorem: |- (Data.Bool.! \lambda m. ((= ((Number.Natural.<= m) Number.Natural.zero)) ((= m) Number.Natural.zero))) ;)

(; Constant Number.Natural.> ;)

def Number_2ENatural_2E_3E : hol.term type_4 :=
  term_1.

def term_12 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_13 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_7 (Number_2ENatural_2E_3E (term_3 m_1) (term_12 n_2)) (term_2 (term_12 n_2) (term_3 m_1)))).

(; axiom ;)

thm_2 : hol.proof term_13.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.> m) n)) ((Number.Natural.< n) m)))) ;)

(; Constant Number.Natural.>= ;)

def Number_2ENatural_2E_3E_3D : hol.term type_4 :=
  term_1.

def term_14 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_7 (Number_2ENatural_2E_3E_3D (term_3 m_1) (term_12 n_2)) (term_8 (term_12 n_2) (term_3 m_1)))).

(; axiom ;)

thm_3 : hol.proof term_14.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.>= m) n)) ((Number.Natural.<= n) m)))) ;)

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

def term_15 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => Number_2ENatural_2Esuc (hol.arr type_0 type_0) (term_12 n_1).

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term A.

def term_16 : hol.term type_5 :=
  Data_2EBool_2E_5C_2F type_5.

def term_17 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_7 (term_4 m_1 (term_15 n_2)) (term_16 (term_10 m_1 (term_12 n_2)) (term_4 m_1 (term_12 n_2))))).

(; axiom ;)

thm_4 : hol.proof term_17.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.< m) (Number.Natural.suc n))) ((Data.Bool.\/ ((= m) n)) ((Number.Natural.< m) n))))) ;)

def term_18 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_7 (term_9 m_1 (term_15 n_2)) (term_16 (term_10 m_1 (term_15 n_2)) (term_9 m_1 (term_12 n_2))))).

(; axiom ;)

thm_5 : hol.proof term_18.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.<= m) (Number.Natural.suc n))) ((Data.Bool.\/ ((= m) (Number.Natural.suc n))) ((Number.Natural.<= m) n))))) ;)


(; This file was generated by Holide. ;)

#NAME relation_2Dnatural_2Ddef_2D1_2E26.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def term_1 : hol.term (hol.arr type_1 (hol.arr type_1 type_1)) :=
  hol.eq type_1.

def type_3 : hol.type :=
  hol.arr type_0 type_2.

(; Constant relation-natural-def-1.26 ;)

relation_2Dnatural_2Ddef_2D1_2E26 : A : hol.type -> hol.term A.

(; Constant Number.Natural.isSuc ;)

def Number_2ENatural_2EisSuc : hol.term type_3 :=
  relation_2Dnatural_2Ddef_2D1_2E26 type_3.

def term_2 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_3 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

def term_4 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_1 (Number_2ENatural_2EisSuc (term_2 m_1) (term_3 n_2)) (hol.eq type_0 (Number_2ENatural_2Esuc (hol.arr type_0 type_0) (term_2 m_1)) (term_3 n_2)))).

(; axiom ;)

thm_0 : hol.proof term_4.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Number.Natural.isSuc m) n)) ((= (Number.Natural.suc m)) n)))) ;)

def type_4 : hol.type -> hol.type :=
  A : hol.type => A.

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_0.

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_1.

def term_5 : A : hol.type -> hol.term (hol.arr (type_6 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 A) type_1).

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) (hol.arr (type_4 A) (type_6 A)).

(; Constant Relation.measure ;)

def Relation_2Emeasure : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => relation_2Dnatural_2Ddef_2D1_2E26 (type_7 A).

def term_6 : A : hol.type -> m_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => m_1 : hol.term (type_5 A) => m_1.

def term_7 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => x_1.

def term_8 : A : hol.type -> y_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => y_1 : hol.term (type_4 A) => y_1.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_4 A).

def term_9 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_5 A) type_1) type_1) (m_1 : hol.term (type_5 A) => term_5 A (x_2 : hol.term (type_4 A) => term_5 A (y_3 : hol.term (type_4 A) => term_1 (Relation_2Emeasure (type_4 A) (term_6 A m_1) (term_7 A x_2) (term_8 A y_3)) (Number_2ENatural_2E_3C type_3 (term_6 A m_1 (term_7 A x_2)) (term_6 A m_1 (term_8 A y_3)))))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_9 A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.measure m) x) y)) ((Number.Natural.< (m x)) (m y)))))) ;)

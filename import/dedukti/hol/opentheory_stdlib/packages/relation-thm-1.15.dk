
(; This file was generated by Holide. ;)

#NAME relation_2Dthm_2D1_2E15.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_1.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_2 A).

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) type_1.

(; Constant Relation.irreflexive ;)

Relation_2Eirreflexive : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Eirreflexive (type_4 A).

(; Constant Relation.empty ;)

Relation_2Eempty : A : hol.type -> hol.term (type_0 A).

def term_1 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Relation_2Eempty (type_3 A).

def term_2 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 A (term_1 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_2 A).

(; Theorem: |- (Relation.irreflexive Relation.empty) ;)

(; Constant Relation.reflexive ;)

Relation_2Ereflexive : A : hol.type -> hol.term (type_0 A).

def term_3 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Ereflexive (type_4 A).

(; Constant Relation.universe ;)

Relation_2Euniverse : A : hol.type -> hol.term (type_0 A).

def term_4 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Relation_2Euniverse (type_3 A).

def term_5 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_3 A (term_4 A).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_5 A).

(; Theorem: |- (Relation.reflexive Relation.universe) ;)

(; Constant Relation.transitive ;)

Relation_2Etransitive : A : hol.type -> hol.term (type_0 A).

def term_6 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Relation_2Etransitive (type_4 A).

def term_7 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_6 A (term_1 A).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_7 A).

(; Theorem: |- (Relation.transitive Relation.empty) ;)

def term_8 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_6 A (term_4 A).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_8 A).

(; Theorem: |- (Relation.transitive Relation.universe) ;)

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_9 : A : hol.type -> hol.term (hol.arr (type_4 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_4 A) type_1).

(; Constant Relation.transitiveClosure ;)

Relation_2EtransitiveClosure : A : hol.type -> hol.term (type_0 A).

def term_10 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => r_1.

def term_11 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => Relation_2EtransitiveClosure (hol.arr (type_3 A) (type_3 A)) (term_10 A r_1).

def term_12 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_9 A (r_1 : hol.term (type_3 A) => term_6 A (term_11 A r_1)).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_12 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Relation.transitive (Relation.transitiveClosure r))) ;)

def type_5 : hol.type -> hol.type :=
  B : hol.type => B.

def type_6 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_5 B) type_1.

def type_7 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_6 B).

def type_8 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) type_1.

def type_9 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_8 B A) type_1.

def term_13 : B : hol.type -> A : hol.type -> hol.term (type_9 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_9 B A).

def type_10 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) (type_8 B A).

(; Constant Relation.subrelation ;)

Relation_2Esubrelation : A : hol.type -> hol.term (type_0 A).

def term_14 : B : hol.type -> A : hol.type -> hol.term (type_10 B A) :=
  B : hol.type => A : hol.type => Relation_2Esubrelation (type_10 B A).

def term_15 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => r_1.

def term_16 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_8 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => term_14 B A (term_15 B A r_1).

def term_17 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_16 B A r_1 (term_15 B A r_1)).

(; axiom ;)

thm_5 : B : hol.type -> A : hol.type -> hol.proof (term_17 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Relation.subrelation r) r)) ;)

def term_18 : A : hol.type -> hol.term (hol.arr (type_3 A) (type_4 A)) :=
  A : hol.type => Relation_2Esubrelation (hol.arr (type_3 A) (type_4 A)).

def term_19 : A : hol.type -> r_1 : hol.term (type_3 A) -> hol.term (type_4 A) :=
  A : hol.type => r_1 : hol.term (type_3 A) => term_18 A (term_10 A r_1).

def term_20 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_9 A (r_1 : hol.term (type_3 A) => term_19 A r_1 (term_11 A r_1)).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_20 A).

(; Theorem: |- (Data.Bool.! \lambda r. ((Relation.subrelation r) (Relation.transitiveClosure r))) ;)

def term_21 : A : hol.type -> hol.term (hol.arr (type_2 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_2 A) type_1).

def term_22 : B : hol.type -> hol.term (hol.arr (type_6 B) type_1) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 B) type_1).

def term_23 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_24 : B : hol.type -> y_1 : hol.term (type_5 B) -> hol.term (type_5 B) :=
  B : hol.type => y_1 : hol.term (type_5 B) => y_1.

def term_25 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_21 A (x_1 : hol.term (type_0 A) => term_22 B (y_2 : hol.term (type_5 B) => Relation_2Euniverse (type_7 B A) (term_23 A x_1) (term_24 B y_2))).

(; axiom ;)

thm_7 : B : hol.type -> A : hol.type -> hol.proof (term_25 B A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Relation.universe x) y))) ;)

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_11 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_5 B).

Set_2Eset : hol.type -> hol.type.

def type_12 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_11 B A).

def type_13 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_12 B A) type_1.

def term_26 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_12 B A) (type_13 B A)) :=
  B : hol.type => A : hol.type => hol.eq (type_12 B A).

(; Constant Relation.toSet ;)

Relation_2EtoSet : A : hol.type -> hol.term (type_0 A).

def term_27 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_7 B A) (type_12 B A)) :=
  B : hol.type => A : hol.type => Relation_2EtoSet (hol.arr (type_7 B A) (type_12 B A)).

(; Constant Relation.fromSet ;)

Relation_2EfromSet : A : hol.type -> hol.term (type_0 A).

def term_28 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_12 B A) (type_7 B A)) :=
  B : hol.type => A : hol.type => Relation_2EfromSet (hol.arr (type_12 B A) (type_7 B A)).

def term_29 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_12 B A) -> hol.term (type_12 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_12 B A) => s_1.

def term_30 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_13 B A) type_1) (s_1 : hol.term (type_12 B A) => term_26 B A (term_27 B A (term_28 B A (term_29 B A s_1))) (term_29 B A s_1)).

(; axiom ;)

thm_8 : B : hol.type -> A : hol.type -> hol.proof (term_30 B A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Relation.toSet (Relation.fromSet s))) s)) ;)

def term_31 : B : hol.type -> A : hol.type -> hol.term (type_10 B A) :=
  B : hol.type => A : hol.type => hol.eq (type_7 B A).

def term_32 : B : hol.type -> A : hol.type -> r_1 : hol.term (type_7 B A) -> hol.term (type_12 B A) :=
  B : hol.type => A : hol.type => r_1 : hol.term (type_7 B A) => term_27 B A (term_15 B A r_1).

def term_33 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_31 B A (term_28 B A (term_32 B A r_1)) (term_15 B A r_1)).

(; axiom ;)

thm_9 : B : hol.type -> A : hol.type -> hol.proof (term_33 B A).

(; Theorem: |- (Data.Bool.! \lambda r. ((= (Relation.fromSet (Relation.toSet r))) r)) ;)

def type_14 : hol.type :=
  hol.arr type_1 type_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

def term_34 : hol.term type_14 :=
  Data_2EBool_2E_7E type_14.

def term_35 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_21 A (x_1 : hol.term (type_0 A) => term_22 B (y_2 : hol.term (type_5 B) => term_34 (Relation_2Eempty (type_7 B A) (term_23 A x_1) (term_24 B y_2)))).

(; axiom ;)

thm_10 : B : hol.type -> A : hol.type -> hol.proof (term_35 B A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.~ ((Relation.empty x) y)))) ;)

def type_15 : hol.type :=
  hol.arr type_1 type_14.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_36 : hol.term type_15 :=
  Data_2EBool_2E_3D_3D_3E type_15.

def term_37 : A : hol.type -> x_1 : hol.term (type_0 A) -> r_2 : hol.term (type_3 A) -> hol.term type_1 :=
  A : hol.type => x_1 : hol.term (type_0 A) => r_2 : hol.term (type_3 A) => term_10 A r_2 (term_23 A x_1) (term_23 A x_1).

def term_38 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_9 A (r_1 : hol.term (type_3 A) => term_21 A (x_2 : hol.term (type_0 A) => term_36 (term_3 A (term_10 A r_1)) (term_37 A x_2 r_1))).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (term_38 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. ((Data.Bool.==> (Relation.reflexive r)) ((r x) x)))) ;)

def term_39 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_9 A (r_1 : hol.term (type_3 A) => term_21 A (x_2 : hol.term (type_0 A) => term_36 (term_0 A (term_10 A r_1)) (term_34 (term_37 A x_2 r_1)))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_39 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. ((Data.Bool.==> (Relation.irreflexive r)) (Data.Bool.~ ((r x) x))))) ;)

def term_40 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => s_1.

def term_41 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_31 B A (term_15 B A r_2) (term_40 B A s_1).

def term_42 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_36 (term_26 B A (term_32 B A r_1) (term_27 B A (term_40 B A s_2))) (term_41 B A s_2 r_1))).

(; axiom ;)

thm_13 : B : hol.type -> A : hol.type -> hol.proof (term_42 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((= (Relation.toSet r)) (Relation.toSet s))) ((= r) s)))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_43 : hol.term type_15 :=
  Data_2EBool_2E_2F_5C type_15.

def term_44 : A : hol.type -> s_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => s_1 : hol.term (type_3 A) => s_1.

def term_45 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_9 A (r_1 : hol.term (type_3 A) => term_9 A (s_2 : hol.term (type_3 A) => term_36 (term_43 (term_19 A r_1 (term_44 A s_2)) (term_6 A (term_44 A s_2))) (term_18 A (term_11 A r_1) (term_44 A s_2)))).

(; axiom ;)

thm_14 : A : hol.type -> hol.proof (term_45 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) (Relation.transitive s))) ((Relation.subrelation (Relation.transitiveClosure r)) s)))) ;)

def term_46 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_16 B A r_2 (term_40 B A s_1).

def term_47 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_14 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_43 (term_46 B A s_1 r_2).

def term_48 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_7 B A) -> hol.term (type_8 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_7 B A) => term_14 B A (term_40 B A s_1).

def term_49 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_36 (term_47 B A s_2 r_1 (term_48 B A s_2 (term_15 B A r_1))) (term_41 B A s_2 r_1))).

(; axiom ;)

thm_15 : B : hol.type -> A : hol.type -> hol.proof (term_49 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) ((Relation.subrelation s) r))) ((= r) s)))) ;)

def term_50 : hol.term type_15 :=
  hol.eq type_1.

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_0 A).

def term_51 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> r_3 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => r_3 : hol.term (type_7 B A) => term_15 B A r_3 (term_23 A x_2) (term_24 B y_1).

def term_52 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_21 A (x_2 : hol.term (type_0 A) => term_22 B (y_3 : hol.term (type_5 B) => term_50 (Set_2Emember (hol.arr (type_11 B A) (type_13 B A)) (Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_5 B) (type_11 B A))) (term_23 A x_2) (term_24 B y_3)) (term_32 B A r_1)) (term_51 B A y_3 x_2 r_1)))).

(; axiom ;)

thm_16 : B : hol.type -> A : hol.type -> hol.proof (term_52 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((Set.member ((Data.Pair., x) y)) (Relation.toSet r))) ((r x) y))))) ;)

def term_53 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_7 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_7 B A) => t_1.

def term_54 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_7 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_7 B A) => r_2 : hol.term (type_7 B A) => term_16 B A r_2 (term_53 B A t_1).

def term_55 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_13 B A (t_3 : hol.term (type_7 B A) => term_36 (term_47 B A s_2 r_1 (term_48 B A s_2 (term_53 B A t_3))) (term_54 B A t_3 r_1)))).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (term_55 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Relation.subrelation r) s)) ((Relation.subrelation s) t))) ((Relation.subrelation r) t))))) ;)

def type_16 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_7 B A).

def type_17 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) type_1.

def term_56 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_17 B A) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_17 B A) type_1).

def type_18 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_16 B A) (type_7 B A).

(; Constant Relation.bigIntersect ;)

Relation_2EbigIntersect : A : hol.type -> hol.term (type_0 A).

def term_57 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_16 B A) -> hol.term (type_16 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_16 B A) => s_1.

def term_58 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_16 B A) -> hol.term (type_7 B A) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_16 B A) => Relation_2EbigIntersect (type_18 B A) (term_57 B A s_1).

def term_59 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_7 B A) (type_17 B A)) :=
  B : hol.type => A : hol.type => Set_2Emember (hol.arr (type_7 B A) (type_17 B A)).

def term_60 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_56 B A (s_2 : hol.term (type_16 B A) => term_50 (term_16 B A r_1 (term_58 B A s_2)) (term_13 B A (t_3 : hol.term (type_7 B A) => term_36 (term_59 B A (term_53 B A t_3) (term_57 B A s_2)) (term_54 B A t_3 r_1))))).

(; axiom ;)

thm_18 : B : hol.type -> A : hol.type -> hol.proof (term_60 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) (Relation.bigIntersect s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) ((Relation.subrelation r) t)))))) ;)

def term_61 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_5 B) -> x_2 : hol.term (type_0 A) -> s_3 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_5 B) => x_2 : hol.term (type_0 A) => s_3 : hol.term (type_7 B A) => term_40 B A s_3 (term_23 A x_2) (term_24 B y_1).

def term_62 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_50 (term_46 B A s_2 r_1) (term_21 A (x_3 : hol.term (type_0 A) => term_22 B (y_4 : hol.term (type_5 B) => term_36 (term_51 B A y_4 x_3 r_1) (term_61 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_19 : B : hol.type -> A : hol.type -> hol.proof (term_62 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((= ((Relation.subrelation r) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((r x) y)) ((s x) y))))))) ;)

def term_63 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_36 (term_21 A (x_3 : hol.term (type_0 A) => term_22 B (y_4 : hol.term (type_5 B) => term_50 (term_51 B A y_4 x_3 r_1) (term_61 B A y_4 x_3 s_2)))) (term_41 B A s_2 r_1))).

(; axiom ;)

thm_20 : B : hol.type -> A : hol.type -> hol.proof (term_63 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((r x) y)) ((s x) y))))) ((= r) s)))) ;)

def term_64 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_16 B A) -> r_2 : hol.term (type_7 B A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_16 B A) => r_2 : hol.term (type_7 B A) => term_59 B A (term_15 B A r_2) (term_57 B A s_1).

def term_65 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_56 B A (s_1 : hol.term (type_16 B A) => term_21 A (x_2 : hol.term (type_0 A) => term_22 B (y_3 : hol.term (type_5 B) => term_50 (term_58 B A s_1 (term_23 A x_2) (term_24 B y_3)) (term_13 B A (r_4 : hol.term (type_7 B A) => term_36 (term_64 B A s_1 r_4) (term_51 B A y_3 x_2 r_4)))))).

(; axiom ;)

thm_21 : B : hol.type -> A : hol.type -> hol.proof (term_65 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.bigIntersect s) x) y)) (Data.Bool.! \lambda r. ((Data.Bool.==> ((Set.member r) s)) ((r x) y))))))) ;)

(; Constant Relation.bigUnion ;)

Relation_2EbigUnion : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_66 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_56 B A (s_1 : hol.term (type_16 B A) => term_21 A (x_2 : hol.term (type_0 A) => term_22 B (y_3 : hol.term (type_5 B) => term_50 (Relation_2EbigUnion (type_18 B A) (term_57 B A s_1) (term_23 A x_2) (term_24 B y_3)) (Data_2EBool_2E_3F (type_9 B A) (r_4 : hol.term (type_7 B A) => term_43 (term_64 B A s_1 r_4) (term_51 B A y_3 x_2 r_4)))))).

(; axiom ;)

thm_22 : B : hol.type -> A : hol.type -> hol.proof (term_66 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (((Relation.bigUnion s) x) y)) (Data.Bool.? \lambda r. ((Data.Bool./\ ((Set.member r) s)) ((r x) y))))))) ;)

def type_19 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_7 B A) (hol.arr (type_7 B A) (type_7 B A)).

(; Constant Relation.intersect ;)

Relation_2Eintersect : A : hol.type -> hol.term (type_0 A).

def term_67 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_21 A (x_3 : hol.term (type_0 A) => term_22 B (y_4 : hol.term (type_5 B) => term_50 (Relation_2Eintersect (type_19 B A) (term_15 B A r_1) (term_40 B A s_2) (term_23 A x_3) (term_24 B y_4)) (term_43 (term_51 B A y_4 x_3 r_1) (term_61 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_23 : B : hol.type -> A : hol.type -> hol.proof (term_67 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((((Relation.intersect r) s) x) y)) ((Data.Bool./\ ((r x) y)) ((s x) y))))))) ;)

(; Constant Relation.union ;)

Relation_2Eunion : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_0 A).

def term_68 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_13 B A (r_1 : hol.term (type_7 B A) => term_13 B A (s_2 : hol.term (type_7 B A) => term_21 A (x_3 : hol.term (type_0 A) => term_22 B (y_4 : hol.term (type_5 B) => term_50 (Relation_2Eunion (type_19 B A) (term_15 B A r_1) (term_40 B A s_2) (term_23 A x_3) (term_24 B y_4)) (Data_2EBool_2E_5C_2F type_15 (term_51 B A y_4 x_3 r_1) (term_61 B A y_4 x_3 s_2)))))).

(; axiom ;)

thm_24 : B : hol.type -> A : hol.type -> hol.proof (term_68 B A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= ((((Relation.union r) s) x) y)) ((Data.Bool.\/ ((r x) y)) ((s x) y))))))) ;)

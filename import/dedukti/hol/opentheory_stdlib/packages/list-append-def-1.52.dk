
(; This file was generated by Holide. ;)

#NAME list_2Dappend_2Ddef_2D1_2E52.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Data_2EList_2Elist : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) hol.bool.

def term_0 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_2 A)) :=
  A : hol.type => hol.eq (type_1 A).

def type_3 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_1 A).

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) (type_1 A).

(; Constant list-append-def-1.52 ;)

list_2Dappend_2Ddef_2D1_2E52 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.concat ;)

def Data_2EList_2Econcat : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => list_2Dappend_2Ddef_2D1_2E52 (type_4 A).

def term_1 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Data_2EList_2Econcat (type_0 A).

(; Constant Data.List.[] ;)

Data_2EList_2E_5B_5D : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Data_2EList_2E_5B_5D (type_1 A).

def term_3 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_0 A (term_1 A (Data_2EList_2E_5B_5D (type_3 A))) (term_2 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_3 A).

(; Theorem: |- ((= (Data.List.concat Data.List.[])) Data.List.[]) ;)

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_4 : A : hol.type -> hol.term (hol.arr (type_2 A) hol.bool) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_2 A) hol.bool).

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (hol.arr (type_1 A) (type_1 A)).

(; Constant Data.List.@ ;)

def Data_2EList_2E_40 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => list_2Dappend_2Ddef_2D1_2E52 (type_5 A).

def term_5 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EList_2E_40 (type_0 A).

def term_6 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => l_1.

def term_7 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_4 A (l_1 : hol.term (type_1 A) => term_0 A (term_5 A (term_2 A) (term_6 A l_1)) (term_6 A l_1)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_7 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= ((Data.List.@ Data.List.[]) l)) l)) ;)

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_8 : A : hol.type -> h_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => h_1 : hol.term (type_1 A) => h_1.

def term_9 : A : hol.type -> t_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => t_1 : hol.term (type_3 A) => t_1.

def term_10 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_4 A (h_1 : hol.term (type_1 A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_3 A) hol.bool) hol.bool) (t_2 : hol.term (type_3 A) => term_0 A (term_1 A (Data_2EList_2E_3A_3A (hol.arr (type_1 A) (hol.arr (type_3 A) (type_3 A))) (term_8 A h_1) (term_9 A t_2))) (term_5 A (term_8 A h_1) (term_1 A (term_9 A t_2))))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_10 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (Data.List.concat ((Data.List.:: h) t))) ((Data.List.@ h) (Data.List.concat t))))) ;)

def term_11 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (hol.arr (type_1 A) (type_1 A)) :=
  A : hol.type => h_1 : hol.term (type_0 A) => Data_2EList_2E_3A_3A (hol.arr (type_0 A) (hol.arr (type_1 A) (type_1 A))) h_1.

def term_12 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => t_1.

def term_13 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_4 A (l_1 : hol.term (type_1 A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_0 A) hol.bool) hol.bool) (h_2 : hol.term (type_0 A) => term_4 A (t_3 : hol.term (type_1 A) => term_0 A (term_5 A (term_11 A h_2 (term_12 A t_3)) (term_6 A l_1)) (term_11 A h_2 (term_5 A (term_12 A t_3) (term_6 A l_1)))))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_13 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.@ ((Data.List.:: h) t)) l)) ((Data.List.:: h) ((Data.List.@ t) l)))))) ;)

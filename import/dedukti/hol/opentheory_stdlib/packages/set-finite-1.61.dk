
(; This file was generated by Holide. ;)

#NAME set_2Dfinite_2D1_2E61.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Set_2Eset : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

(; Constant set-finite-1.61 ;)

set_2Dfinite_2D1_2E61 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => set_2Dfinite_2D1_2E61 (type_3 A).

(; Constant Set.finite ;)

def Set_2Efinite : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => term_0 A.

def term_1 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Set_2Efinite (type_0 A).

(; Constant Set.{} ;)

Set_2E_7B_7D : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Set_2E_7B_7D (type_1 A).

def term_3 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_1 A (term_2 A).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_3 A).

(; Theorem: |- (Set.finite Set.{}) ;)

def type_4 : hol.type :=
  Set_2Eset type_2.

(; Constant Set.universe ;)

Set_2Euniverse : A : hol.type -> hol.term (type_0 A).

def term_4 : hol.term type_2 :=
  Set_2Efinite type_2 (Set_2Euniverse type_4).

(; axiom ;)

thm_1 : hol.proof term_4.

(; Theorem: |- (Set.finite Set.universe) ;)

(; Constant Set.infinite ;)

def Set_2Einfinite : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => term_0 A.

Number_2ENatural_2Enatural : hol.type.

def type_5 : hol.type :=
  Number_2ENatural_2Enatural.

def type_6 : hol.type :=
  Set_2Eset type_5.

def type_7 : hol.type :=
  hol.arr type_6 type_2.

def term_5 : hol.term type_7 :=
  Set_2Einfinite type_5.

def term_6 : hol.term type_6 :=
  Set_2Euniverse type_6.

def term_7 : hol.term type_2 :=
  term_5 term_6.

(; axiom ;)

thm_2 : hol.proof term_7.

(; Theorem: |- (Set.infinite Set.universe) ;)

def type_8 : hol.type :=
  hol.arr type_2 type_2.

def type_9 : hol.type :=
  hol.arr type_2 type_8.

def term_8 : hol.term type_9 :=
  hol.eq type_2.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_10 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (Data_2EPair_2E_2A (type_0 A) (type_0 A)).

def type_11 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_10 A) type_2.

def term_9 : A : hol.type -> hol.term (type_10 A) :=
  A : hol.type => Set_2Euniverse (type_10 A).

def term_10 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Set_2Euniverse (type_1 A).

def term_11 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_8 (Set_2Efinite (Data_2EPair_2E_2A (type_0 A) (type_0 A)) (term_9 A)) (term_1 A (term_10 A)).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- ((= (Set.finite Set.universe)) (Set.finite Set.universe)) ;)

def term_12 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Set_2Einfinite (type_0 A).

def term_13 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_8 (Set_2Einfinite (Data_2EPair_2E_2A (type_0 A) (type_0 A)) (term_9 A)) (term_12 A (term_10 A)).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_13 A).

(; Theorem: |- ((= (Set.infinite Set.universe)) (Set.infinite Set.universe)) ;)

def type_12 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_2.

def type_13 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_12 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_14 : A : hol.type -> hol.term (type_13 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_13 A).

(; Constant Set.insert ;)

Set_2Einsert : A : hol.type -> hol.term (type_0 A).

def term_15 : A : hol.type -> hol.term (hol.arr (type_0 A) (hol.arr (type_1 A) (type_1 A))) :=
  A : hol.type => Set_2Einsert (hol.arr (type_0 A) (hol.arr (type_1 A) (type_1 A))).

def term_16 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => a_1.

def term_17 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_14 A (a_1 : hol.term (type_0 A) => term_1 A (term_15 A (term_16 A a_1) (term_2 A))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_17 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Set.finite ((Set.insert a) Set.{}))) ;)

def type_14 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) type_2.

def term_18 : A : hol.type -> hol.term (type_14 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_14 A).

def term_19 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => s_1 : hol.term (type_1 A) => s_1.

def term_20 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_12 A (term_19 A s_1).

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

def term_21 : hol.term type_8 :=
  Data_2EBool_2E_7E type_8.

def term_22 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_1 A (term_19 A s_1).

def term_23 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_8 (term_20 A s_1) (term_21 (term_22 A s_1))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_23 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.infinite s)) (Data.Bool.~ (Set.finite s)))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_24 : hol.term type_9 :=
  Data_2EBool_2E_3D_3D_3E type_9.

def type_15 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_3 A).

def term_25 : A : hol.type -> hol.term (type_15 A) :=
  A : hol.type => hol.eq (type_1 A).

def term_26 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_25 A (term_19 A s_1) (term_2 A).

def term_27 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_24 (term_20 A s_1) (term_21 (term_26 A s_1))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_27 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.infinite s)) (Data.Bool.~ ((= s) Set.{})))) ;)

def term_28 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_24 (term_22 A s_1).

def term_29 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_30 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term (type_1 A) :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_15 A (term_29 A x_2) (term_19 A s_1).

def term_31 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_1 A (term_30 A s_1 x_2).

def term_32 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_14 A (x_1 : hol.term (type_0 A) => term_18 A (s_2 : hol.term (type_1 A) => term_28 A s_2 (term_31 A s_2 x_1))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_32 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.insert x) s))))) ;)

(; Constant Set.delete ;)

Set_2Edelete : A : hol.type -> hol.term (type_0 A).

def term_33 : A : hol.type -> x_1 : hol.term (type_0 A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => x_1 : hol.term (type_0 A) => s_2 : hol.term (type_1 A) => term_1 A (Set_2Edelete (hol.arr (type_1 A) (hol.arr (type_0 A) (type_1 A))) (term_19 A s_2) (term_29 A x_1)).

def term_34 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_14 A (x_2 : hol.term (type_0 A) => term_28 A s_1 (term_33 A x_2 s_1))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (term_34 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.delete s) x))))) ;)

def term_35 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_14 A (x_2 : hol.term (type_0 A) => term_8 (term_33 A x_2 s_1) (term_22 A s_1))).

(; axiom ;)

thm_10 : A : hol.type -> hol.proof (term_35 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((= (Set.finite ((Set.delete s) x))) (Set.finite s)))) ;)

def term_36 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_14 A (x_2 : hol.term (type_0 A) => term_8 (term_31 A s_1 x_2) (term_22 A s_1))).

(; axiom ;)

thm_11 : A : hol.type -> hol.proof (term_36 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda x. ((= (Set.finite ((Set.insert x) s))) (Set.finite s)))) ;)

def type_16 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (hol.arr (type_1 A) (type_1 A)).

(; Constant Set.difference ;)

Set_2Edifference : A : hol.type -> hol.term (type_0 A).

def term_37 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => t_1.

def term_38 : A : hol.type -> t_1 : hol.term (type_1 A) -> s_2 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => s_2 : hol.term (type_1 A) => Set_2Edifference (type_16 A) (term_19 A s_2) (term_37 A t_1).

def term_39 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_28 A s_1 (term_1 A (term_38 A t_2 s_1)))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_39 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.difference s) t))))) ;)

def term_40 : hol.term (hol.arr type_7 type_2) :=
  Data_2EBool_2E_21 (hol.arr type_7 type_2).

def term_41 : hol.term type_7 :=
  Set_2Efinite type_5.

def term_42 : s_1 : hol.term type_6 -> hol.term type_6 :=
  s_1 : hol.term type_6 => s_1.

def term_43 : s_1 : hol.term type_6 -> hol.term type_2 :=
  s_1 : hol.term type_6 => term_41 (term_42 s_1).

def type_17 : hol.type :=
  hol.arr type_5 type_2.

def type_18 : hol.type :=
  hol.arr type_17 type_2.

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_44 : hol.term type_18 :=
  Data_2EBool_2E_3F type_18.

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_0 A).

def term_45 : hol.term (hol.arr type_5 type_7) :=
  Set_2Emember (hol.arr type_5 type_7).

def term_46 : a_1 : hol.term type_5 -> hol.term type_5 :=
  a_1 : hol.term type_5 => a_1.

def term_47 : hol.term type_2 :=
  term_40 (s_1 : hol.term type_6 => term_24 (term_43 s_1) (term_44 (a_2 : hol.term type_5 => term_21 (term_45 (term_46 a_2) (term_42 s_1))))).

(; axiom ;)

thm_13 : hol.proof term_47.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Data.Bool.? \lambda a. (Data.Bool.~ ((Set.member a) s))))) ;)

def type_19 : hol.type -> hol.type :=
  B : hol.type => B.

def type_20 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_19 B).

def type_21 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_20 B A) type_2.

def type_22 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_21 B A) type_2.

def term_48 : B : hol.type -> A : hol.type -> hol.term (type_22 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_22 B A).

def type_23 : hol.type -> hol.type :=
  B : hol.type => Set_2Eset (type_19 B).

def type_24 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_23 B) type_2.

def term_49 : B : hol.type -> hol.term (type_24 B) :=
  B : hol.type => Set_2Efinite (type_19 B).

(; Constant Set.image ;)

Set_2Eimage : A : hol.type -> hol.term (type_0 A).

def term_50 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> hol.term (type_20 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => f_1.

def term_51 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> hol.term (hol.arr (type_1 A) (type_23 B)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => Set_2Eimage (hol.arr (type_20 B A) (hol.arr (type_1 A) (type_23 B))) (term_50 B A f_1).

def term_52 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_23 B) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => term_51 B A f_2 (term_19 A s_1).

def term_53 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => term_49 B (term_52 B A s_1 f_2).

def term_54 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_28 A s_2 (term_53 A B s_2 f_1))).

(; axiom ;)

thm_14 : B : hol.type -> A : hol.type -> hol.proof (term_54 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite ((Set.image f) s))))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_55 : hol.term type_9 :=
  Data_2EBool_2E_2F_5C type_9.

def term_56 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_1 A) => term_1 A (term_37 A t_1).

def term_57 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => t_1 : hol.term (type_1 A) => term_55 (term_56 A t_1).

(; Constant Set.subset ;)

Set_2Esubset : A : hol.type -> hol.term (type_0 A).

def term_58 : A : hol.type -> hol.term (type_15 A) :=
  A : hol.type => Set_2Esubset (type_15 A).

def term_59 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term (type_3 A) :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_58 A (term_19 A s_1).

def term_60 : A : hol.type -> t_1 : hol.term (type_1 A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_1 A) => s_2 : hol.term (type_1 A) => term_59 A s_2 (term_37 A t_1).

def term_61 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_57 A t_2 (term_60 A t_2 s_1)) (term_22 A s_1))).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (term_61 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) (Set.finite s)))) ;)

def term_62 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_55 (term_20 A s_1).

def term_63 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_62 A s_1 (term_60 A t_2 s_1)) (term_12 A (term_37 A t_2)))).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (term_63 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) ((Set.subset s) t))) (Set.infinite t)))) ;)

def term_64 : hol.term type_18 :=
  Data_2EBool_2E_21 type_18.

(; Constant Set.fromPredicate ;)

Set_2EfromPredicate : A : hol.type -> hol.term (type_0 A).

def term_65 : hol.term (hol.arr type_17 type_6) :=
  Set_2EfromPredicate (hol.arr type_17 type_6).

def type_25 : hol.type :=
  hol.arr type_5 type_17.

def term_66 : m_1 : hol.term type_5 -> hol.term type_5 :=
  m_1 : hol.term type_5 => m_1.

def term_67 : m_1 : hol.term type_5 -> v_2 : hol.term type_5 -> hol.term type_8 :=
  m_1 : hol.term type_5 => v_2 : hol.term type_5 => term_55 (hol.eq type_5 v_2 (term_66 m_1)).

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_0 A).

def term_68 : hol.term type_25 :=
  Number_2ENatural_2E_3C type_25.

def term_69 : n_1 : hol.term type_5 -> hol.term type_5 :=
  n_1 : hol.term type_5 => n_1.

def term_70 : n_1 : hol.term type_5 -> m_2 : hol.term type_5 -> hol.term type_2 :=
  n_1 : hol.term type_5 => m_2 : hol.term type_5 => term_68 (term_66 m_2) (term_69 n_1).

def term_71 : hol.term type_2 :=
  term_64 (n_1 : hol.term type_5 => term_41 (term_65 (v_2 : hol.term type_5 => term_44 (m_3 : hol.term type_5 => term_67 m_3 v_2 (term_70 n_1 m_3))))).

(; axiom ;)

thm_17 : hol.proof term_71.

(; Theorem: |- (Data.Bool.! \lambda n. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.< m) n)))))) ;)

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_0 A).

def term_72 : hol.term type_25 :=
  Number_2ENatural_2E_3C_3D type_25.

def term_73 : hol.term type_2 :=
  term_64 (n_1 : hol.term type_5 => term_41 (term_65 (v_2 : hol.term type_5 => term_44 (m_3 : hol.term type_5 => term_67 m_3 v_2 (term_72 (term_66 m_3) (term_69 n_1)))))).

(; axiom ;)

thm_18 : hol.proof term_73.

(; Theorem: |- (Data.Bool.! \lambda n. (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.<= m) n)))))) ;)

(; Constant Set.union ;)

Set_2Eunion : A : hol.type -> hol.term (type_0 A).

def term_74 : A : hol.type -> t_1 : hol.term (type_1 A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_1 A) => s_2 : hol.term (type_1 A) => term_1 A (Set_2Eunion (type_16 A) (term_19 A s_2) (term_37 A t_1)).

def term_75 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_55 (term_22 A s_1).

def term_76 : A : hol.type -> t_1 : hol.term (type_1 A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_1 A) => s_2 : hol.term (type_1 A) => term_75 A s_2 (term_56 A t_1).

def term_77 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_8 (term_74 A t_2 s_1) (term_76 A t_2 s_1))).

(; axiom ;)

thm_19 : A : hol.type -> hol.proof (term_77 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.union s) t))) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))) ;)

def term_78 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_76 A t_2 s_1) (term_74 A t_2 s_1))).

(; axiom ;)

thm_20 : A : hol.type -> hol.proof (term_78 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.union s) t))))) ;)

def term_79 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_62 A s_1 (term_56 A t_2)) (term_12 A (term_38 A t_2 s_1)))).

(; axiom ;)

thm_21 : A : hol.type -> hol.proof (term_79 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) (Set.finite t))) (Set.infinite ((Set.difference s) t))))) ;)

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_0 A).

def term_80 : hol.term type_9 :=
  Data_2EBool_2E_5C_2F type_9.

(; Constant Set.intersect ;)

Set_2Eintersect : A : hol.type -> hol.term (type_0 A).

def term_81 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_80 (term_22 A s_1) (term_56 A t_2)) (term_1 A (Set_2Eintersect (type_16 A) (term_19 A s_1) (term_37 A t_2))))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_81 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool.\/ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.intersect s) t))))) ;)

def type_26 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_24 B) type_2.

def term_82 : B : hol.type -> hol.term (type_26 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_26 B).

def term_83 : B : hol.type -> t_1 : hol.term (type_23 B) -> hol.term (type_23 B) :=
  B : hol.type => t_1 : hol.term (type_23 B) => t_1.

def term_84 : B : hol.type -> t_1 : hol.term (type_23 B) -> hol.term type_2 :=
  B : hol.type => t_1 : hol.term (type_23 B) => term_49 B (term_83 B t_1).

def term_85 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_23 B) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_23 B) => s_2 : hol.term (type_1 A) => term_75 A s_2 (term_84 B t_1).

def term_86 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_23 B) -> s_2 : hol.term (type_1 A) -> hol.term type_8 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_23 B) => s_2 : hol.term (type_1 A) => term_24 (term_85 B A t_1 s_2).

def type_27 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_19 B).

def type_28 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_27 B A).

def term_87 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_28 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2Efinite (type_27 B A).

(; Constant Set.cross ;)

Set_2Ecross : A : hol.type -> hol.term (type_0 A).

def term_88 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_23 B) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_23 B) => s_2 : hol.term (type_1 A) => term_87 B A (Set_2Ecross (hol.arr (type_1 A) (hol.arr (type_23 B) (type_28 B A))) (term_19 A s_2) (term_83 B t_1)).

def term_89 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_82 B (t_2 : hol.term (type_23 B) => term_86 B A t_2 s_1 (term_88 B A t_2 s_1))).

(; axiom ;)

thm_23 : B : hol.type -> A : hol.type -> hol.proof (term_89 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite ((Set.cross s) t))))) ;)

def term_90 : x_1 : hol.term type_5 -> hol.term type_5 :=
  x_1 : hol.term type_5 => x_1.

def term_91 : hol.term type_2 :=
  term_40 (s_1 : hol.term type_6 => term_8 (term_43 s_1) (term_44 (a_2 : hol.term type_5 => term_64 (x_3 : hol.term type_5 => term_24 (term_45 (term_90 x_3) (term_42 s_1)) (term_72 (term_90 x_3) (term_46 a_2)))))).

(; axiom ;)

thm_24 : hol.proof term_91.

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite s)) (Data.Bool.? \lambda a. (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Number.Natural.<= x) a)))))) ;)

def term_92 : s_1 : hol.term type_6 -> hol.term type_2 :=
  s_1 : hol.term type_6 => term_5 (term_42 s_1).

def term_93 : hol.term type_2 :=
  term_40 (s_1 : hol.term type_6 => term_8 (term_92 s_1) (term_64 (N_2 : hol.term type_5 => term_44 (n_3 : hol.term type_5 => term_55 (term_72 N_2 (term_69 n_3)) (term_45 (term_69 n_3) (term_42 s_1)))))).

(; axiom ;)

thm_25 : hol.proof term_93.

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.infinite s)) (Data.Bool.! \lambda N. (Data.Bool.? \lambda n. ((Data.Bool./\ ((Number.Natural.<= N) n)) ((Set.member n) s)))))) ;)

def type_29 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_1 A).

def type_30 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_29 A) type_2.

def term_94 : A : hol.type -> hol.term (type_30 A) :=
  A : hol.type => Set_2Efinite (type_1 A).

def term_95 : A : hol.type -> hol.term (hol.arr (type_3 A) (type_29 A)) :=
  A : hol.type => Set_2EfromPredicate (hol.arr (type_3 A) (type_29 A)).

def term_96 : A : hol.type -> hol.term (type_14 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_14 A).

def term_97 : A : hol.type -> t_1 : hol.term (type_1 A) -> v_2 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => t_1 : hol.term (type_1 A) => v_2 : hol.term (type_1 A) => term_55 (term_25 A v_2 (term_37 A t_1)).

def term_98 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term (type_3 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => term_58 A (term_37 A t_1).

def term_99 : A : hol.type -> s_1 : hol.term (type_1 A) -> t_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => t_2 : hol.term (type_1 A) => term_98 A t_2 (term_19 A s_1).

def term_100 : A : hol.type -> s_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => term_94 A (term_95 A (v_2 : hol.term (type_1 A) => term_96 A (t_3 : hol.term (type_1 A) => term_97 A t_3 v_2 (term_99 A s_1 t_3)))).

def term_101 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_28 A s_1 (term_100 A s_1)).

(; axiom ;)

thm_26 : A : hol.type -> hol.proof (term_101 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))))) ;)

def term_102 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_8 (term_100 A s_1) (term_22 A s_1)).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (term_102 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) (Set.finite s))) ;)

def type_31 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_30 A) type_2.

def term_103 : A : hol.type -> hol.term (type_31 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_31 A).

def term_104 : A : hol.type -> s_1 : hol.term (type_29 A) -> hol.term (type_29 A) :=
  A : hol.type => s_1 : hol.term (type_29 A) => s_1.

def term_105 : A : hol.type -> s_1 : hol.term (type_29 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_29 A) => term_94 A (term_104 A s_1).

def type_32 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_29 A) (type_1 A).

(; Constant Set.bigUnion ;)

Set_2EbigUnion : A : hol.type -> hol.term (type_0 A).

def term_106 : A : hol.type -> hol.term (type_32 A) :=
  A : hol.type => Set_2EbigUnion (type_32 A).

def term_107 : A : hol.type -> s_1 : hol.term (type_29 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_29 A) => term_8 (term_1 A (term_106 A (term_104 A s_1))).

def term_108 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_30 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_1 A) (type_30 A)).

def term_109 : A : hol.type -> t_1 : hol.term (type_1 A) -> hol.term (type_30 A) :=
  A : hol.type => t_1 : hol.term (type_1 A) => term_108 A (term_37 A t_1).

def term_110 : A : hol.type -> s_1 : hol.term (type_29 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_29 A) => term_18 A (t_2 : hol.term (type_1 A) => term_24 (term_109 A t_2 (term_104 A s_1)) (term_56 A t_2)).

def term_111 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (s_1 : hol.term (type_29 A) => term_24 (term_105 A s_1) (term_107 A s_1 (term_110 A s_1))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (term_111 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.finite (Set.bigUnion s))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

def term_112 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (s_1 : hol.term (type_29 A) => term_107 A s_1 (term_55 (term_105 A s_1) (term_110 A s_1))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (term_112 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite (Set.bigUnion s))) ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) s)) (Set.finite t)))))) ;)

def term_113 : A : hol.type -> a_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => a_1 : hol.term (type_1 A) => a_1.

def term_114 : A : hol.type -> a_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => a_1 : hol.term (type_1 A) => term_1 A (term_113 A a_1).

def term_115 : A : hol.type -> a_1 : hol.term (type_1 A) -> hol.term (type_3 A) :=
  A : hol.type => a_1 : hol.term (type_1 A) => term_25 A (term_113 A a_1).

def term_116 : A : hol.type -> hol.term (type_13 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_13 A).

def term_117 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (a_1 : hol.term (type_1 A) => term_8 (term_114 A a_1) (term_80 (term_115 A a_1 (term_2 A)) (term_116 A (x_2 : hol.term (type_0 A) => term_96 A (s_3 : hol.term (type_1 A) => term_55 (term_115 A a_1 (term_30 A s_3 x_2)) (term_22 A s_3)))))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_117 A).

(; Theorem: |- (Data.Bool.! \lambda a. ((= (Set.finite a)) ((Data.Bool.\/ ((= a) Set.{})) (Data.Bool.? \lambda x. (Data.Bool.? \lambda s. ((Data.Bool./\ ((= a) ((Set.insert x) s))) (Set.finite s))))))) ;)

def term_118 : A : hol.type -> hol.term (hol.arr (type_12 A) (type_1 A)) :=
  A : hol.type => Set_2EfromPredicate (hol.arr (type_12 A) (type_1 A)).

def type_33 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_12 A).

def term_119 : A : hol.type -> hol.term (type_33 A) :=
  A : hol.type => hol.eq (type_0 A).

def term_120 : A : hol.type -> x_1 : hol.term (type_0 A) -> v_2 : hol.term (type_0 A) -> hol.term type_8 :=
  A : hol.type => x_1 : hol.term (type_0 A) => v_2 : hol.term (type_0 A) => term_55 (term_119 A v_2 (term_29 A x_1)).

def term_121 : A : hol.type -> hol.term (hol.arr (type_0 A) (type_3 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_0 A) (type_3 A)).

def term_122 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_3 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => term_121 A (term_29 A x_1).

def term_123 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_122 A x_2 (term_19 A s_1).

def term_124 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_55 (term_123 A s_1 x_2).

def term_125 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => Data_2EBool_2E_21 (hol.arr (type_13 A) type_2) (p_2 : hol.term (type_12 A) => term_28 A s_1 (term_1 A (term_118 A (v_3 : hol.term (type_0 A) => term_116 A (x_4 : hol.term (type_0 A) => term_120 A x_4 v_3 (term_124 A s_1 x_4 (p_2 (term_29 A x_4))))))))).

(; axiom ;)

thm_31 : A : hol.type -> hol.proof (term_125 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda p. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) s)) (p x))))))))) ;)

def type_34 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_23 B) (type_24 B).

def term_126 : B : hol.type -> hol.term (type_34 B) :=
  B : hol.type => hol.eq (type_23 B).

def term_127 : B : hol.type -> t_1 : hol.term (type_23 B) -> hol.term (type_24 B) :=
  B : hol.type => t_1 : hol.term (type_23 B) => term_126 B (term_83 B t_1).

def term_128 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_82 B (t_2 : hol.term (type_23 B) => term_8 (term_88 B A t_2 s_1) (term_80 (term_26 A s_1) (term_80 (term_127 B t_2 (Set_2E_7B_7D (type_23 B))) (term_85 B A t_2 s_1))))).

(; axiom ;)

thm_32 : B : hol.type -> A : hol.type -> hol.proof (term_128 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= (Set.finite ((Set.cross s) t))) ((Data.Bool.\/ ((= s) Set.{})) ((Data.Bool.\/ ((= t) Set.{})) ((Data.Bool./\ (Set.finite s)) (Set.finite t))))))) ;)

def term_129 : A : hol.type -> hol.term (hol.arr (type_14 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_14 A) type_2).

def term_130 : A : hol.type -> p_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => p_1 : hol.term (type_3 A) => p_1.

def term_131 : A : hol.type -> p_1 : hol.term (type_3 A) -> hol.term type_8 :=
  A : hol.type => p_1 : hol.term (type_3 A) => term_55 (term_130 A p_1 (term_2 A)).

def term_132 : A : hol.type -> s_1 : hol.term (type_1 A) -> p_2 : hol.term (type_3 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => p_2 : hol.term (type_3 A) => term_130 A p_2 (term_19 A s_1).

def term_133 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> p_3 : hol.term (type_3 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => p_3 : hol.term (type_3 A) => term_130 A p_3 (term_30 A s_1 x_2).

def term_134 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_129 A (p_1 : hol.term (type_3 A) => term_24 (term_131 A p_1 (term_14 A (x_2 : hol.term (type_0 A) => term_18 A (s_3 : hol.term (type_1 A) => term_24 (term_132 A s_3 p_1) (term_133 A s_3 x_2 p_1))))) (term_18 A (a_2 : hol.term (type_1 A) => term_24 (term_114 A a_2) (term_130 A p_1 (term_113 A a_2))))).

(; axiom ;)

thm_33 : A : hol.type -> hol.proof (term_134 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (p s)) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda a. ((Data.Bool.==> (Set.finite a)) (p a))))) ;)

def type_35 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_19 B) type_2.

def term_135 : B : hol.type -> hol.term (hol.arr (type_19 B) (type_35 B)) :=
  B : hol.type => hol.eq (type_19 B).

def term_136 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_19 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_20 B A) => term_50 B A f_2 (term_29 A x_1).

def term_137 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_35 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_20 B A) => term_135 B (term_136 B A x_1 f_2).

def term_138 : A : hol.type -> y_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => y_1 : hol.term (type_0 A) => y_1.

def term_139 : A : hol.type -> B : hol.type -> y_1 : hol.term (type_0 A) -> x_2 : hol.term (type_0 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => y_1 : hol.term (type_0 A) => x_2 : hol.term (type_0 A) => f_3 : hol.term (type_20 B A) => term_137 A B x_2 f_3 (term_50 B A f_3 (term_138 A y_1)).

def term_140 : A : hol.type -> y_1 : hol.term (type_0 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => y_1 : hol.term (type_0 A) => x_2 : hol.term (type_0 A) => term_119 A (term_29 A x_2) (term_138 A y_1).

def term_141 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => term_14 A (x_2 : hol.term (type_0 A) => term_14 A (y_3 : hol.term (type_0 A) => term_24 (term_139 A B y_3 x_2 f_1) (term_140 A y_3 x_2))).

def term_142 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => Set_2Einfinite (type_19 B) (term_52 B A s_1 f_2).

def term_143 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_24 (term_141 B A f_1) (term_18 A (s_2 : hol.term (type_1 A) => term_8 (term_142 A B s_2 f_1) (term_20 A s_2)))).

(; axiom ;)

thm_34 : B : hol.type -> A : hol.type -> hol.proof (term_143 B A).

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Data.Bool.! \lambda s. ((= (Set.infinite ((Set.image f) s))) (Set.infinite s))))) ;)

def type_36 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_35 B) type_2.

def term_144 : B : hol.type -> hol.term (type_36 B) :=
  B : hol.type => Data_2EBool_2E_3F (type_36 B).

def term_145 : B : hol.type -> y_1 : hol.term (type_19 B) -> hol.term (type_19 B) :=
  B : hol.type => y_1 : hol.term (type_19 B) => y_1.

def term_146 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_28 A s_2 (term_49 B (Set_2EfromPredicate (hol.arr (type_35 B) (type_23 B)) (v_3 : hol.term (type_19 B) => term_144 B (y_4 : hol.term (type_19 B) => term_55 (term_135 B v_3 (term_145 B y_4)) (term_116 A (x_5 : hol.term (type_0 A) => term_124 A s_2 x_5 (term_135 B (term_145 B y_4) (term_136 B A x_5 f_1)))))))))).

(; axiom ;)

thm_35 : B : hol.type -> A : hol.type -> hol.proof (term_146 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) y)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= y) (f x))))))))))) ;)

def term_147 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term type_8 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => term_8 (term_53 A B s_1 f_2).

def term_148 : A : hol.type -> s_1 : hol.term (type_1 A) -> t_2 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => t_2 : hol.term (type_1 A) => term_55 (term_99 A s_1 t_2).

def term_149 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_23 B) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => term_51 B A f_2 (term_37 A t_1).

def term_150 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_1 A) -> s_2 : hol.term (type_1 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_1 A) => s_2 : hol.term (type_1 A) => f_3 : hol.term (type_20 B A) => term_126 B (term_52 B A s_2 f_3) (term_149 B A t_1 f_3).

def term_151 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_147 A B s_2 f_1 (term_96 A (t_3 : hol.term (type_1 A) => term_57 A t_3 (term_148 A s_2 t_3 (term_150 A B t_3 s_2 f_1)))))).

(; axiom ;)

thm_36 : B : hol.type -> A : hol.type -> hol.proof (term_151 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Set.finite ((Set.image f) s))) (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) s)) ((= ((Set.image f) s)) ((Set.image f) t)))))))) ;)

def term_152 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term (type_29 A) :=
  A : hol.type => f_1 : hol.term (type_29 A) => f_1.

def term_153 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term (type_1 A) :=
  A : hol.type => f_1 : hol.term (type_29 A) => term_106 A (term_152 A f_1).

def term_154 : A : hol.type -> f_1 : hol.term (type_29 A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => f_1 : hol.term (type_29 A) => s_2 : hol.term (type_1 A) => term_59 A s_2 (term_153 A f_1).

def term_155 : A : hol.type -> g_1 : hol.term (type_29 A) -> hol.term (type_29 A) :=
  A : hol.type => g_1 : hol.term (type_29 A) => g_1.

def type_37 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_29 A) (type_30 A).

def term_156 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (f_1 : hol.term (type_29 A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_75 A s_2 (term_154 A f_1 s_2)) (Data_2EBool_2E_3F (type_31 A) (g_3 : hol.term (type_29 A) => term_55 (term_94 A (term_155 A g_3)) (term_55 (Set_2Esubset (type_37 A) (term_155 A g_3) (term_152 A f_1)) (term_59 A s_2 (term_106 A (term_155 A g_3)))))))).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (term_156 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Set.subset s) (Set.bigUnion f)))) (Data.Bool.? \lambda g. ((Data.Bool./\ (Set.finite g)) ((Data.Bool./\ ((Set.subset g) f)) ((Set.subset s) (Set.bigUnion g)))))))) ;)

def type_38 : hol.type :=
  hol.arr type_5 type_5.

def term_157 : r_1 : hol.term type_38 -> hol.term type_38 :=
  r_1 : hol.term type_38 => r_1.

def term_158 : hol.term type_2 :=
  term_40 (s_1 : hol.term type_6 => term_24 (term_92 s_1) (Data_2EBool_2E_3F (hol.arr (hol.arr type_38 type_2) type_2) (r_2 : hol.term type_38 => term_55 (term_64 (m_3 : hol.term type_5 => term_64 (n_4 : hol.term type_5 => term_24 (term_70 n_4 m_3) (term_68 (term_157 r_2 (term_66 m_3)) (term_157 r_2 (term_69 n_4)))))) (hol.eq type_6 (Set_2Eimage (hol.arr type_38 (hol.arr type_6 type_6)) (term_157 r_2) term_6) (term_42 s_1))))).

(; axiom ;)

thm_38 : hol.proof term_158.

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.infinite s)) (Data.Bool.? \lambda r. ((Data.Bool./\ (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< m) n)) ((Number.Natural.< (r m)) (r n)))))) ((= ((Set.image r) Set.universe)) s))))) ;)

def term_159 : B : hol.type -> t_1 : hol.term (type_23 B) -> hol.term type_8 :=
  B : hol.type => t_1 : hol.term (type_23 B) => term_55 (term_84 B t_1).

def term_160 : B : hol.type -> hol.term (type_34 B) :=
  B : hol.type => Set_2Esubset (type_34 B).

def term_161 : B : hol.type -> t_1 : hol.term (type_23 B) -> hol.term (type_24 B) :=
  B : hol.type => t_1 : hol.term (type_23 B) => term_160 B (term_83 B t_1).

def term_162 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> t_3 : hol.term (type_23 B) -> hol.term type_2 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => t_3 : hol.term (type_23 B) => term_161 B t_3 (term_52 B A s_1 f_2).

def term_163 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> t_3 : hol.term (type_23 B) -> hol.term type_2 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => t_3 : hol.term (type_23 B) => term_159 B t_3 (term_162 A B s_1 f_2 t_3).

def term_164 : A : hol.type -> s_27_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => s_27_1 : hol.term (type_1 A) => s_27_1.

def term_165 : A : hol.type -> s_27_1 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_27_1 : hol.term (type_1 A) => term_55 (term_1 A (term_164 A s_27_1)).

def term_166 : A : hol.type -> s_1 : hol.term (type_1 A) -> s_27_2 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => s_27_2 : hol.term (type_1 A) => term_55 (term_58 A (term_164 A s_27_2) (term_19 A s_1)).

def term_167 : B : hol.type -> A : hol.type -> s_27_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_23 B) :=
  B : hol.type => A : hol.type => s_27_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => term_51 B A f_2 (term_164 A s_27_1).

def term_168 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_82 B (t_3 : hol.term (type_23 B) => term_8 (term_163 A B s_2 f_1 t_3) (term_96 A (s_27_4 : hol.term (type_1 A) => term_165 A s_27_4 (term_166 A s_2 s_27_4 (term_127 B t_3 (term_167 B A s_27_4 f_1)))))))).

(; axiom ;)

thm_39 : B : hol.type -> A : hol.type -> hol.proof (term_168 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((= ((Data.Bool./\ (Set.finite t)) ((Set.subset t) ((Set.image f) s)))) (Data.Bool.? \lambda s'. ((Data.Bool./\ (Set.finite s')) ((Data.Bool./\ ((Set.subset s') s)) ((= t) ((Set.image f) s'))))))))) ;)

def term_169 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> t_3 : hol.term (type_23 B) -> hol.term type_8 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => t_3 : hol.term (type_23 B) => term_24 (term_163 A B s_1 f_2 t_3).

def term_170 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_82 B (t_3 : hol.term (type_23 B) => term_169 A B s_2 f_1 t_3 (term_96 A (s_27_4 : hol.term (type_1 A) => term_165 A s_27_4 (term_166 A s_2 s_27_4 (term_161 B t_3 (term_167 B A s_27_4 f_1)))))))).

(; axiom ;)

thm_40 : B : hol.type -> A : hol.type -> hol.proof (term_170 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset t) ((Set.image f) s)))) (Data.Bool.? \lambda s'. ((Data.Bool./\ (Set.finite s')) ((Data.Bool./\ ((Set.subset s') s)) ((Set.subset t) ((Set.image f) s'))))))))) ;)

def type_39 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_27 B A) type_2.

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_0 A).

def term_171 : B : hol.type -> hol.term (hol.arr (type_19 B) (type_24 B)) :=
  B : hol.type => Set_2Emember (hol.arr (type_19 B) (type_24 B)).

def term_172 : B : hol.type -> y_1 : hol.term (type_19 B) -> hol.term (type_24 B) :=
  B : hol.type => y_1 : hol.term (type_19 B) => term_171 B (term_145 B y_1).

def term_173 : B : hol.type -> t_1 : hol.term (type_23 B) -> y_2 : hol.term (type_19 B) -> hol.term type_2 :=
  B : hol.type => t_1 : hol.term (type_23 B) => y_2 : hol.term (type_19 B) => term_172 B y_2 (term_83 B t_1).

def term_174 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_82 B (t_2 : hol.term (type_23 B) => term_86 B A t_2 s_1 (term_87 B A (Set_2EfromPredicate (hol.arr (type_39 B A) (type_28 B A)) (v_3 : hol.term (type_27 B A) => term_116 A (x_4 : hol.term (type_0 A) => term_144 B (y_5 : hol.term (type_19 B) => term_55 (hol.eq (type_27 B A) v_3 (Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_19 B) (type_27 B A))) (term_29 A x_4) (term_145 B y_5))) (term_124 A s_1 x_4 (term_173 B t_2 y_5))))))))).

(; axiom ;)

thm_41 : B : hol.type -> A : hol.type -> hol.proof (term_174 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))))) ;)

def term_175 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term type_2 :=
  A : hol.type => f_1 : hol.term (type_29 A) => term_94 A (term_152 A f_1).

def term_176 : A : hol.type -> f_1 : hol.term (type_29 A) -> t_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => f_1 : hol.term (type_29 A) => t_2 : hol.term (type_1 A) => term_109 A t_2 (term_152 A f_1).

def term_177 : A : hol.type -> f_1 : hol.term (type_29 A) -> t_2 : hol.term (type_1 A) -> hol.term type_8 :=
  A : hol.type => f_1 : hol.term (type_29 A) => t_2 : hol.term (type_1 A) => term_55 (term_176 A f_1 t_2).

def term_178 : A : hol.type -> u_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => u_1 : hol.term (type_1 A) => u_1.

def term_179 : A : hol.type -> f_1 : hol.term (type_29 A) -> u_2 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => f_1 : hol.term (type_29 A) => u_2 : hol.term (type_1 A) => term_108 A (term_178 A u_2) (term_152 A f_1).

(; Constant Set.properSubset ;)

Set_2EproperSubset : A : hol.type -> hol.term (type_0 A).

def term_180 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (f_1 : hol.term (type_29 A) => term_24 (term_175 A f_1) (term_25 A (term_106 A (term_95 A (v_2 : hol.term (type_1 A) => term_96 A (t_3 : hol.term (type_1 A) => term_97 A t_3 v_2 (term_177 A f_1 t_3 (term_18 A (u_4 : hol.term (type_1 A) => term_24 (term_179 A f_1 u_4) (term_21 (Set_2EproperSubset (type_15 A) (term_37 A t_3) (term_178 A u_4)))))))))) (term_153 A f_1))).

(; axiom ;)

thm_42 : A : hol.type -> hol.proof (term_180 A).

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> (Set.finite f)) ((= (Set.bigUnion (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Data.Bool./\ ((Set.member t) f)) (Data.Bool.! \lambda u. ((Data.Bool.==> ((Set.member u) f)) (Data.Bool.~ ((Set.properSubset t) u)))))))))) (Set.bigUnion f)))) ;)

def term_181 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_21 (term_123 A s_1 x_2).

def term_182 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_129 A (p_1 : hol.term (type_3 A) => term_24 (term_131 A p_1 (term_14 A (x_2 : hol.term (type_0 A) => term_18 A (s_3 : hol.term (type_1 A) => term_24 (term_55 (term_132 A s_3 p_1) (term_55 (term_181 A s_3 x_2) (term_22 A s_3))) (term_133 A s_3 x_2 p_1))))) (term_18 A (s_2 : hol.term (type_1 A) => term_28 A s_2 (term_132 A s_2 p_1)))).

(; axiom ;)

thm_43 : A : hol.type -> hol.proof (term_182 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (p s)) ((Data.Bool./\ (Data.Bool.~ ((Set.member x) s))) (Set.finite s)))) (p ((Set.insert x) s))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

def term_183 : B : hol.type -> hol.term (hol.arr (type_26 B) type_2) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_26 B) type_2).

def term_184 : B : hol.type -> p_1 : hol.term (type_24 B) -> hol.term (type_24 B) :=
  B : hol.type => p_1 : hol.term (type_24 B) => p_1.

def term_185 : B : hol.type -> t_1 : hol.term (type_23 B) -> p_2 : hol.term (type_24 B) -> hol.term type_2 :=
  B : hol.type => t_1 : hol.term (type_23 B) => p_2 : hol.term (type_24 B) => term_184 B p_2 (term_83 B t_1).

def term_186 : A : hol.type -> B : hol.type -> p_1 : hol.term (type_24 B) -> s_2 : hol.term (type_1 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_8 :=
  A : hol.type => B : hol.type => p_1 : hol.term (type_24 B) => s_2 : hol.term (type_1 A) => f_3 : hol.term (type_20 B A) => term_8 (term_82 B (t_4 : hol.term (type_23 B) => term_169 A B s_2 f_3 t_4 (term_185 B t_4 p_1))).

def term_187 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_1 A) -> f_2 : hol.term (type_20 B A) -> p_3 : hol.term (type_24 B) -> hol.term type_2 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_1 A) => f_2 : hol.term (type_20 B A) => p_3 : hol.term (type_24 B) => term_184 B p_3 (term_149 B A t_1 f_2).

def term_188 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_183 B (p_1 : hol.term (type_24 B) => term_48 B A (f_2 : hol.term (type_20 B A) => term_18 A (s_3 : hol.term (type_1 A) => term_186 A B p_1 s_3 f_2 (term_18 A (t_4 : hol.term (type_1 A) => term_24 (term_57 A t_4 (term_99 A s_3 t_4)) (term_187 A B t_4 f_2 p_1)))))).

(; axiom ;)

thm_44 : A : hol.type -> B : hol.type -> hol.proof (term_188 A B).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset t) ((Set.image f) s)))) (p t)))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset t) s))) (p ((Set.image f) t)))))))) ;)

def term_189 : A : hol.type -> B : hol.type -> p_1 : hol.term (type_24 B) -> s_2 : hol.term (type_1 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_8 :=
  A : hol.type => B : hol.type => p_1 : hol.term (type_24 B) => s_2 : hol.term (type_1 A) => f_3 : hol.term (type_20 B A) => term_8 (Data_2EBool_2E_3F (type_26 B) (t_4 : hol.term (type_23 B) => term_159 B t_4 (term_55 (term_162 A B s_2 f_3 t_4) (term_185 B t_4 p_1)))).

def term_190 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_183 B (p_1 : hol.term (type_24 B) => term_48 B A (f_2 : hol.term (type_20 B A) => term_18 A (s_3 : hol.term (type_1 A) => term_189 A B p_1 s_3 f_2 (term_96 A (t_4 : hol.term (type_1 A) => term_57 A t_4 (term_148 A s_3 t_4 (term_187 A B t_4 f_2 p_1))))))).

(; axiom ;)

thm_45 : A : hol.type -> B : hol.type -> hol.proof (term_190 A B).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) ((Set.image f) s))) (p t))))) (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) s)) (p ((Set.image f) t))))))))) ;)

def term_191 : A : hol.type -> y_1 : hol.term (type_0 A) -> hol.term (type_3 A) :=
  A : hol.type => y_1 : hol.term (type_0 A) => term_121 A (term_138 A y_1).

def term_192 : A : hol.type -> s_1 : hol.term (type_1 A) -> y_2 : hol.term (type_0 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => y_2 : hol.term (type_0 A) => term_55 (term_191 A y_2 (term_19 A s_1)).

def term_193 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> s_2 : hol.term (type_1 A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => s_2 : hol.term (type_1 A) => term_14 A (x_3 : hol.term (type_0 A) => term_14 A (y_4 : hol.term (type_0 A) => term_24 (term_124 A s_2 x_3 (term_192 A s_2 y_4 (term_139 A B y_4 x_3 f_1))) (term_140 A y_4 x_3))).

def term_194 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_193 B A f_1 s_2) (term_147 A B s_2 f_1 (term_22 A s_2)))).

(; axiom ;)

thm_46 : B : hol.type -> A : hol.type -> hol.proof (term_194 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ((= (Set.finite ((Set.image f) s))) (Set.finite s))))) ;)

def term_195 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_62 A s_2 (term_193 B A f_1 s_2)) (term_142 A B s_2 f_1))).

(; axiom ;)

thm_47 : B : hol.type -> A : hol.type -> hol.proof (term_195 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))) (Set.infinite ((Set.image f) s))))) ;)

def term_196 : B : hol.type -> A_1 : hol.term (type_23 B) -> hol.term (type_23 B) :=
  B : hol.type => A_1 : hol.term (type_23 B) => A_1.

def term_197 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_0 A) -> f_2 : hol.term (type_20 B A) -> hol.term (type_24 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_0 A) => f_2 : hol.term (type_20 B A) => term_171 B (term_136 B A x_1 f_2).

def term_198 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_82 B (A_2 : hol.term (type_23 B) => term_24 (term_55 (term_141 B A f_1) (term_49 B (term_196 B A_2))) (term_1 A (term_118 A (v_3 : hol.term (type_0 A) => term_116 A (x_4 : hol.term (type_0 A) => term_120 A x_4 v_3 (term_197 A B x_4 f_1 (term_196 B A_2)))))))).

(; axiom ;)

thm_48 : B : hol.type -> A : hol.type -> hol.proof (term_198 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda A. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((= (f x)) (f y))) ((= x) y))))) (Set.finite A))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Set.member (f x)) A)))))))) ;)

def term_199 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term type_8 :=
  A : hol.type => f_1 : hol.term (type_29 A) => term_55 (term_21 (hol.eq (type_29 A) (term_152 A f_1) (Set_2E_7B_7D (type_29 A)))).

def term_200 : A : hol.type -> f_1 : hol.term (type_29 A) -> hol.term type_8 :=
  A : hol.type => f_1 : hol.term (type_29 A) => term_24 (term_55 (term_175 A f_1) (term_199 A f_1 (term_18 A (s_2 : hol.term (type_1 A) => term_18 A (t_3 : hol.term (type_1 A) => term_24 (term_55 (term_108 A (term_19 A s_2) (term_152 A f_1)) (term_176 A f_1 t_3)) (term_80 (term_60 A t_3 s_2) (term_99 A s_2 t_3))))))).

(; Constant Set.bigIntersect ;)

Set_2EbigIntersect : A : hol.type -> hol.term (type_0 A).

def term_201 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (f_1 : hol.term (type_29 A) => term_200 A f_1 (term_108 A (Set_2EbigIntersect (type_32 A) (term_152 A f_1)) (term_152 A f_1))).

(; axiom ;)

thm_49 : A : hol.type -> hol.proof (term_201 A).

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite f)) ((Data.Bool./\ (Data.Bool.~ ((= f) Set.{}))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.member s) f)) ((Set.member t) f))) ((Data.Bool.\/ ((Set.subset s) t)) ((Set.subset t) s)))))))) ((Set.member (Set.bigIntersect f)) f))) ;)

def term_202 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (f_1 : hol.term (type_29 A) => term_200 A f_1 (term_108 A (term_153 A f_1) (term_152 A f_1))).

(; axiom ;)

thm_50 : A : hol.type -> hol.proof (term_202 A).

(; Theorem: |- (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite f)) ((Data.Bool./\ (Data.Bool.~ ((= f) Set.{}))) (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ ((Set.member s) f)) ((Set.member t) f))) ((Data.Bool.\/ ((Set.subset s) t)) ((Set.subset t) s)))))))) ((Set.member (Set.bigUnion f)) f))) ;)

def term_203 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_62 A s_2 (term_53 A B s_2 f_1)) (term_116 A (a_3 : hol.term (type_0 A) => term_55 (term_121 A (term_16 A a_3) (term_19 A s_2)) (term_12 A (term_118 A (v_4 : hol.term (type_0 A) => term_116 A (x_5 : hol.term (type_0 A) => term_120 A x_5 v_4 (term_124 A s_2 x_5 (term_137 A B x_5 f_1 (term_50 B A f_1 (term_16 A a_3)))))))))))).

(; axiom ;)

thm_51 : B : hol.type -> A : hol.type -> hol.proof (term_203 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.infinite s)) (Set.finite ((Set.image f) s)))) (Data.Bool.? \lambda a. ((Data.Bool./\ ((Set.member a) s)) (Set.infinite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) (f a)))))))))))) ;)

def term_204 : B : hol.type -> hol.term (type_36 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_36 B).

def term_205 : B : hol.type -> t_1 : hol.term (type_23 B) -> y_2 : hol.term (type_19 B) -> hol.term type_8 :=
  B : hol.type => t_1 : hol.term (type_23 B) => y_2 : hol.term (type_19 B) => term_24 (term_173 B t_1 y_2).

def term_206 : A : hol.type -> B : hol.type -> y_1 : hol.term (type_19 B) -> x_2 : hol.term (type_0 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => y_1 : hol.term (type_19 B) => x_2 : hol.term (type_0 A) => f_3 : hol.term (type_20 B A) => term_137 A B x_2 f_3 (term_145 B y_1).

def term_207 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_23 B) -> x_2 : hol.term (type_0 A) -> f_3 : hol.term (type_20 B A) -> hol.term type_2 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_23 B) => x_2 : hol.term (type_0 A) => f_3 : hol.term (type_20 B A) => term_197 A B x_2 f_3 (term_83 B t_1).

def term_208 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_82 B (t_2 : hol.term (type_23 B) => term_24 (term_159 B t_2 (term_204 B (y_3 : hol.term (type_19 B) => term_205 B t_2 y_3 (term_1 A (term_118 A (v_4 : hol.term (type_0 A) => term_116 A (x_5 : hol.term (type_0 A) => term_120 A x_5 v_4 (term_206 A B y_3 x_5 f_1)))))))) (term_1 A (term_118 A (v_3 : hol.term (type_0 A) => term_116 A (x_4 : hol.term (type_0 A) => term_120 A x_4 v_3 (term_207 A B t_2 x_4 f_1))))))).

(; axiom ;)

thm_52 : B : hol.type -> A : hol.type -> hol.proof (term_208 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((= (f x)) y))))))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Set.member (f x)) t)))))))) ;)

def type_40 : hol.type -> hol.type :=
  C : hol.type => C.

def type_41 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_0 A) (hol.arr (type_19 B) (type_40 C)).

def type_42 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_23 B).

def term_209 : A : hol.type -> s_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_8 :=
  A : hol.type => s_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_24 (term_123 A s_1 x_2).

def term_210 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_0 A) -> t_2 : hol.term (type_42 B A) -> hol.term (type_23 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_0 A) => t_2 : hol.term (type_42 B A) => t_2 (term_29 A x_1).

def type_43 : hol.type -> hol.type :=
  C : hol.type => Set_2Eset (type_40 C).

def type_44 : hol.type -> hol.type :=
  C : hol.type => hol.arr (type_40 C) type_2.

def term_211 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_2 :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_41 C B A) type_2) type_2) (f_1 : hol.term (type_41 C B A) => term_18 A (s_2 : hol.term (type_1 A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_42 B A) type_2) type_2) (t_3 : hol.term (type_42 B A) => term_24 (term_75 A s_2 (term_14 A (x_4 : hol.term (type_0 A) => term_209 A s_2 x_4 (term_49 B (term_210 B A x_4 t_3))))) (Set_2Efinite (type_40 C) (Set_2EfromPredicate (hol.arr (type_44 C) (type_43 C)) (v_4 : hol.term (type_40 C) => term_116 A (x_5 : hol.term (type_0 A) => term_144 B (y_6 : hol.term (type_19 B) => term_55 (hol.eq (type_40 C) v_4 (f_1 (term_29 A x_5) (term_145 B y_6))) (term_124 A s_2 x_5 (term_172 B y_6 (term_210 B A x_5 t_3))))))))))).

(; axiom ;)

thm_53 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_211 C B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Set.finite (t x)))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((f x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) (t x)))))))))))) ;)

def type_45 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_20 B A).

def term_212 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_45 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2Efinite (type_20 B A).

def term_213 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_21 B A) (type_45 B A)) :=
  B : hol.type => A : hol.type => Set_2EfromPredicate (hol.arr (type_21 B A) (type_45 B A)).

def term_214 : B : hol.type -> A : hol.type -> hol.term (type_22 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_22 B A).

def term_215 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> v_2 : hol.term (type_20 B A) -> hol.term type_8 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => v_2 : hol.term (type_20 B A) => term_55 (hol.eq (type_20 B A) v_2 (term_50 B A f_1)).

def term_216 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_204 B (d_1 : hol.term (type_19 B) => term_18 A (s_2 : hol.term (type_1 A) => term_82 B (t_3 : hol.term (type_23 B) => term_86 B A t_3 s_2 (term_212 B A (term_213 B A (v_4 : hol.term (type_20 B A) => term_214 B A (f_5 : hol.term (type_20 B A) => term_215 B A f_5 v_4 (term_55 (term_14 A (x_6 : hol.term (type_0 A) => term_209 A s_2 x_6 (term_207 A B t_3 x_6 f_5))) (term_14 A (x_6 : hol.term (type_0 A) => term_24 (term_181 A s_2 x_6) (term_137 A B x_6 f_5 d_1))))))))))).

(; axiom ;)

thm_54 : A : hol.type -> B : hol.type -> hol.proof (term_216 A B).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))))))) ;)

def term_217 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_18 A (s_1 : hol.term (type_1 A) => term_82 B (t_2 : hol.term (type_23 B) => term_48 B A (k_3 : hol.term (type_20 B A) => term_86 B A t_2 s_1 (term_212 B A (term_213 B A (v_4 : hol.term (type_20 B A) => term_214 B A (f_5 : hol.term (type_20 B A) => term_215 B A f_5 v_4 (term_55 (term_160 B (term_52 B A s_1 f_5) (term_83 B t_2)) (term_58 A (term_118 A (v_6 : hol.term (type_0 A) => term_116 A (x_7 : hol.term (type_0 A) => term_120 A x_7 v_6 (term_21 (term_137 A B x_7 f_5 (k_3 (term_29 A x_7))))))) (term_19 A s_1)))))))))).

(; axiom ;)

thm_55 : B : hol.type -> A : hol.type -> hol.proof (term_217 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda k. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ ((Set.subset ((Set.image f) s)) t)) ((Set.subset (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) (Data.Bool.~ ((= (f x)) (k x))))))) s)))))))))) ;)

def term_218 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_103 A (f_1 : hol.term (type_29 A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_75 A s_2 (term_55 (term_154 A f_1 s_2) (term_199 A f_1 (term_18 A (t_3 : hol.term (type_1 A) => term_18 A (u_4 : hol.term (type_1 A) => term_24 (term_177 A f_1 t_3 (term_179 A f_1 u_4)) (term_80 (term_98 A t_3 (term_178 A u_4)) (term_58 A (term_178 A u_4) (term_37 A t_3))))))))) (term_96 A (t_3 : hol.term (type_1 A) => term_177 A f_1 t_3 (term_60 A t_3 s_2))))).

(; axiom ;)

thm_56 : A : hol.type -> hol.proof (term_218 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ ((Set.subset s) (Set.bigUnion f))) ((Data.Bool./\ (Data.Bool.~ ((= f) Set.{}))) (Data.Bool.! \lambda t. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ ((Set.member t) f)) ((Set.member u) f))) ((Data.Bool.\/ ((Set.subset t) u)) ((Set.subset u) t))))))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.member t) f)) ((Set.subset s) t)))))) ;)

def term_219 : A : hol.type -> t_1 : hol.term (type_1 A) -> x_2 : hol.term (type_0 A) -> hol.term type_8 :=
  A : hol.type => t_1 : hol.term (type_1 A) => x_2 : hol.term (type_0 A) => term_55 (term_122 A x_2 (term_37 A t_1)).

def term_220 : A : hol.type -> t_1 : hol.term (type_1 A) -> y_2 : hol.term (type_0 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_1 A) => y_2 : hol.term (type_0 A) => term_191 A y_2 (term_37 A t_1).

def term_221 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_147 A B s_2 f_1 (term_96 A (t_3 : hol.term (type_1 A) => term_57 A t_3 (term_148 A s_2 t_3 (term_55 (term_150 A B t_3 s_2 f_1) (term_14 A (x_4 : hol.term (type_0 A) => term_14 A (y_5 : hol.term (type_0 A) => term_24 (term_219 A t_3 x_4 (term_220 A t_3 y_5)) (term_8 (term_139 A B y_5 x_4 f_1) (term_140 A y_5 x_4))))))))))).

(; axiom ;)

thm_57 : B : hol.type -> A : hol.type -> hol.proof (term_221 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Set.finite ((Set.image f) s))) (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ ((= ((Set.image f) s)) ((Set.image f) t))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Set.member y) t))) ((= ((= (f x)) (f y))) ((= x) y)))))))))))) ;)

def term_222 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_23 B) -> f_2 : hol.term (type_20 B A) -> s_3 : hol.term (type_1 A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_23 B) => f_2 : hol.term (type_20 B A) => s_3 : hol.term (type_1 A) => term_1 A (term_118 A (v_4 : hol.term (type_0 A) => term_116 A (x_5 : hol.term (type_0 A) => term_120 A x_5 v_4 (term_124 A s_3 x_5 (term_207 A B t_1 x_5 f_2))))).

def term_223 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_82 B (t_2 : hol.term (type_23 B) => term_18 A (s_3 : hol.term (type_1 A) => term_24 (term_55 (term_193 B A f_1 s_3) (term_84 B t_2)) (term_222 B A t_2 f_1 s_3)))).

(; axiom ;)

thm_58 : B : hol.type -> A : hol.type -> hol.proof (term_223 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda t. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Set.finite t))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) s)) ((Set.member (f x)) t)))))))))) ;)

def term_224 : B : hol.type -> A : hol.type -> hol.term type_2 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_20 B A) => term_18 A (s_2 : hol.term (type_1 A) => term_82 B (t_3 : hol.term (type_23 B) => term_24 (term_159 B t_3 (term_204 B (y_4 : hol.term (type_19 B) => term_205 B t_3 y_4 (term_1 A (term_118 A (v_5 : hol.term (type_0 A) => term_116 A (x_6 : hol.term (type_0 A) => term_120 A x_6 v_5 (term_124 A s_2 x_6 (term_206 A B y_4 x_6 f_1))))))))) (term_222 B A t_3 f_1 s_2)))).

(; axiom ;)

thm_59 : B : hol.type -> A : hol.type -> hol.proof (term_224 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))))) (Set.finite (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) x)) ((Data.Bool./\ ((Set.member x) s)) ((Set.member (f x)) t)))))))))) ;)

def term_225 : A : hol.type -> r_1 : hol.term (type_33 A) -> hol.term (type_33 A) :=
  A : hol.type => r_1 : hol.term (type_33 A) => r_1.

def term_226 : A : hol.type -> x_1 : hol.term (type_0 A) -> r_2 : hol.term (type_33 A) -> hol.term (type_12 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => r_2 : hol.term (type_33 A) => term_225 A r_2 (term_29 A x_1).

def term_227 : A : hol.type -> y_1 : hol.term (type_0 A) -> x_2 : hol.term (type_0 A) -> r_3 : hol.term (type_33 A) -> hol.term type_2 :=
  A : hol.type => y_1 : hol.term (type_0 A) => x_2 : hol.term (type_0 A) => r_3 : hol.term (type_33 A) => term_226 A x_2 r_3 (term_138 A y_1).

def term_228 : A : hol.type -> z_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => z_1 : hol.term (type_0 A) => z_1.

def term_229 : A : hol.type -> hol.term type_2 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_33 A) type_2) type_2) (r_1 : hol.term (type_33 A) => term_18 A (s_2 : hol.term (type_1 A) => term_24 (term_75 A s_2 (term_55 (term_14 A (x_3 : hol.term (type_0 A) => term_21 (term_226 A x_3 r_1 (term_29 A x_3)))) (term_55 (term_14 A (x_3 : hol.term (type_0 A) => term_14 A (y_4 : hol.term (type_0 A) => term_14 A (z_5 : hol.term (type_0 A) => term_24 (term_55 (term_227 A y_4 x_3 r_1) (term_225 A r_1 (term_138 A y_4) (term_228 A z_5))) (term_226 A x_3 r_1 (term_228 A z_5)))))) (term_14 A (x_3 : hol.term (type_0 A) => term_209 A s_2 x_3 (term_116 A (y_4 : hol.term (type_0 A) => term_192 A s_2 y_4 (term_227 A y_4 x_3 r_1)))))))) (term_26 A s_2))).

(; axiom ;)

thm_60 : A : hol.type -> hol.proof (term_229 A).

(; Theorem: |- (Data.Bool.! \lambda r. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.~ ((r x) x)))) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((Data.Bool.==> ((Data.Bool./\ ((r x) y)) ((r y) z))) ((r x) z)))))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.? \lambda y. ((Data.Bool./\ ((Set.member y) s)) ((r x) y))))))))) ((= s) Set.{})))) ;)

def term_230 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> t_2 : hol.term (type_1 A) -> hol.term type_2 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => t_2 : hol.term (type_1 A) => term_14 A (x_3 : hol.term (type_0 A) => term_14 A (y_4 : hol.term (type_0 A) => term_24 (term_219 A t_2 x_3 (term_55 (term_220 A t_2 y_4) (term_139 A B y_4 x_3 f_1))) (term_140 A y_4 x_3))).

def term_231 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_183 B (p_1 : hol.term (type_24 B) => term_48 B A (f_2 : hol.term (type_20 B A) => term_18 A (s_3 : hol.term (type_1 A) => term_186 A B p_1 s_3 f_2 (term_18 A (t_4 : hol.term (type_1 A) => term_24 (term_57 A t_4 (term_148 A s_3 t_4 (term_230 B A f_2 t_4))) (term_187 A B t_4 f_2 p_1)))))).

(; axiom ;)

thm_61 : A : hol.type -> B : hol.type -> hol.proof (term_231 A B).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset t) ((Set.image f) s)))) (p t)))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) s)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))))) (p ((Set.image f) t)))))))) ;)

def term_232 : A : hol.type -> B : hol.type -> hol.term type_2 :=
  A : hol.type => B : hol.type => term_183 B (p_1 : hol.term (type_24 B) => term_48 B A (f_2 : hol.term (type_20 B A) => term_18 A (s_3 : hol.term (type_1 A) => term_189 A B p_1 s_3 f_2 (term_96 A (t_4 : hol.term (type_1 A) => term_57 A t_4 (term_148 A s_3 t_4 (term_55 (term_230 B A f_2 t_4) (term_187 A B t_4 f_2 p_1)))))))).

(; axiom ;)

thm_62 : A : hol.type -> B : hol.type -> hol.proof (term_232 A B).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((= (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) ((Set.image f) s))) (p t))))) (Data.Bool.? \lambda t. ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((Set.subset t) s)) ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) t)) ((Data.Bool./\ ((Set.member y) t)) ((= (f x)) (f y))))) ((= x) y))))) (p ((Set.image f) t)))))))))) ;)

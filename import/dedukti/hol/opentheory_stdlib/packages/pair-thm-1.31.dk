
(; This file was generated by Holide. ;)

#NAME pair_2Dthm_2D1_2E31.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type -> hol.type :=
  B : hol.type => B.

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_2 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_1 B).

def type_3 : hol.type :=
  hol.bool.

def type_4 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_2 B A) type_3.

def type_5 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 B A) type_3.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : B : hol.type -> A : hol.type -> hol.term (type_5 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_5 B A).

def term_1 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_2 B A) (type_4 B A)) :=
  B : hol.type => A : hol.type => hol.eq (type_2 B A).

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_0 A).

def term_2 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_0 A) (hol.arr (type_1 B) (type_2 B A))) :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_1 B) (type_2 B A))).

(; Constant Data.Pair.fst ;)

Data_2EPair_2Efst : A : hol.type -> hol.term (type_0 A).

def term_3 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_2 B A) (type_0 A)) :=
  B : hol.type => A : hol.type => Data_2EPair_2Efst (hol.arr (type_2 B A) (type_0 A)).

def term_4 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_2 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_2 B A) => x_1.

def term_5 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_2 B A) -> hol.term (type_0 A) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_2 B A) => term_3 B A (term_4 B A x_1).

(; Constant Data.Pair.snd ;)

Data_2EPair_2Esnd : A : hol.type -> hol.term (type_0 A).

def term_6 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_2 B A) (type_1 B)) :=
  B : hol.type => A : hol.type => Data_2EPair_2Esnd (hol.arr (type_2 B A) (type_1 B)).

def term_7 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_2 B A) -> hol.term (type_1 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_2 B A) => term_6 B A (term_4 B A x_1).

def term_8 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_0 B A (x_1 : hol.term (type_2 B A) => term_1 B A (term_2 B A (term_5 B A x_1) (term_7 B A x_1)) (term_4 B A x_1)).

(; axiom ;)

thm_0 : B : hol.type -> A : hol.type -> hol.proof (term_8 B A).

(; Theorem: |- (Data.Bool.! \lambda x. ((= ((Data.Pair., (Data.Pair.fst x)) (Data.Pair.snd x))) x)) ;)

def term_9 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_5 B A) type_3) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_5 B A) type_3).

def type_6 : hol.type :=
  hol.arr type_3 (hol.arr type_3 type_3).

def term_10 : hol.term type_6 :=
  hol.eq type_3.

def term_11 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_4 B A) -> hol.term (type_4 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_4 B A) => p_1.

def term_12 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_4 B A) -> hol.term (type_4 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_4 B A) => x_2 : hol.term (type_2 B A) => term_11 B A p_1 (term_4 B A x_2).

def term_13 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_4 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_4 B A) => term_0 B A (term_12 B A p_1).

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (hol.arr (type_0 A) type_3) type_3.

def term_14 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_7 A).

def type_8 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_1 B) type_3.

def type_9 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_8 B) type_3.

def term_15 : B : hol.type -> hol.term (type_9 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_9 B).

def term_16 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => a_1.

def term_17 : B : hol.type -> b_1 : hol.term (type_1 B) -> hol.term (type_1 B) :=
  B : hol.type => b_1 : hol.term (type_1 B) => b_1.

def term_18 : B : hol.type -> A : hol.type -> b_1 : hol.term (type_1 B) -> a_2 : hol.term (type_0 A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => b_1 : hol.term (type_1 B) => a_2 : hol.term (type_0 A) => term_2 B A (term_16 A a_2) (term_17 B b_1).

def term_19 : A : hol.type -> B : hol.type -> a_1 : hol.term (type_0 A) -> p_2 : hol.term (type_4 B A) -> hol.term (type_8 B) :=
  A : hol.type => B : hol.type => a_1 : hol.term (type_0 A) => p_2 : hol.term (type_4 B A) => b_3 : hol.term (type_1 B) => term_11 B A p_2 (term_18 B A b_3 a_1).

def term_20 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_4 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_4 B A) => term_14 A (a_2 : hol.term (type_0 A) => term_15 B (term_19 A B a_2 p_1)).

def term_21 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_9 B A (p_1 : hol.term (type_4 B A) => term_10 (term_13 B A p_1) (term_20 B A p_1)).

(; axiom ;)

thm_1 : B : hol.type -> A : hol.type -> hol.proof (term_21 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda x. (p x))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (p ((Data.Pair., a) b)))))) ;)

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_22 : B : hol.type -> A : hol.type -> hol.term (type_5 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_5 B A).

def term_23 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_7 A).

def term_24 : B : hol.type -> hol.term (type_9 B) :=
  B : hol.type => Data_2EBool_2E_3F (type_9 B).

def term_25 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_9 B A (p_1 : hol.term (type_4 B A) => term_10 (term_22 B A (term_12 B A p_1)) (term_23 A (a_2 : hol.term (type_0 A) => term_24 B (term_19 A B a_2 p_1)))).

(; axiom ;)

thm_2 : B : hol.type -> A : hol.type -> hol.proof (term_25 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda x. (p x))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (p ((Data.Pair., a) b)))))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_26 : hol.term type_6 :=
  Data_2EBool_2E_3D_3D_3E type_6.

def term_27 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_9 B A (p_1 : hol.term (type_4 B A) => term_26 (term_20 B A p_1) (term_13 B A p_1)).

(; axiom ;)

thm_3 : B : hol.type -> A : hol.type -> hol.proof (term_27 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (p ((Data.Pair., a) b))))) (Data.Bool.! \lambda x. (p x)))) ;)

def type_10 : hol.type -> hol.type :=
  C : hol.type => C.

def type_11 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_0 A) (hol.arr (type_1 B) (type_10 C)).

def type_12 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_11 C B A) type_3.

def type_13 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_12 C B A) type_3.

def term_28 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_13 C B A) type_3) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_13 C B A) type_3).

def term_29 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_13 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_13 C B A).

def term_30 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_12 C B A) -> hol.term (type_12 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_12 C B A) => p_1.

def term_31 : C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_11 C B A) -> hol.term (type_11 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_11 C B A) => f_1.

def term_32 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_12 C B A) -> hol.term (type_12 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_12 C B A) => f_2 : hol.term (type_11 C B A) => term_30 C B A p_1 (term_31 C B A f_2).

def type_14 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_2 B A) (type_10 C).

def type_15 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_14 C B A) type_3.

def type_16 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_15 C B A) type_3.

def term_33 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_16 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_16 C B A).

def term_34 : C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_14 C B A) -> hol.term (type_14 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_14 C B A) => f_1.

def term_35 : C : hol.type -> B : hol.type -> A : hol.type -> b_1 : hol.term (type_1 B) -> a_2 : hol.term (type_0 A) -> f_3 : hol.term (type_14 C B A) -> hol.term (type_10 C) :=
  C : hol.type => B : hol.type => A : hol.type => b_1 : hol.term (type_1 B) => a_2 : hol.term (type_0 A) => f_3 : hol.term (type_14 C B A) => term_34 C B A f_3 (term_18 B A b_1 a_2).

def term_36 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_12 C B A) -> hol.term (type_15 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_12 C B A) => f_2 : hol.term (type_14 C B A) => term_30 C B A p_1 (a_3 : hol.term (type_0 A) => b_4 : hol.term (type_1 B) => term_35 C B A b_4 a_3 f_2).

def term_37 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_28 C B A (p_1 : hol.term (type_12 C B A) => term_10 (term_29 C B A (term_32 C B A p_1)) (term_33 C B A (term_36 C B A p_1))).

(; axiom ;)

thm_4 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_37 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda f. (p f))) (Data.Bool.! \lambda f. (p \lambda a. \lambda b. (f ((Data.Pair., a) b)))))) ;)

def term_38 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_13 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_13 C B A).

def term_39 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_16 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_16 C B A).

def term_40 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_28 C B A (p_1 : hol.term (type_12 C B A) => term_10 (term_38 C B A (term_32 C B A p_1)) (term_39 C B A (term_36 C B A p_1))).

(; axiom ;)

thm_5 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_40 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda f. (p f))) (Data.Bool.? \lambda f. (p \lambda a. \lambda b. (f ((Data.Pair., a) b)))))) ;)

def type_17 : hol.type -> hol.type :=
  C : hol.type => hol.arr (type_10 C) type_3.

def term_41 : C : hol.type -> hol.term (hol.arr (type_10 C) (type_17 C)) :=
  C : hol.type => hol.eq (type_10 C).

def term_42 : C : hol.type -> B : hol.type -> A : hol.type -> b_1 : hol.term (type_1 B) -> a_2 : hol.term (type_0 A) -> f_3 : hol.term (type_11 C B A) -> hol.term (type_10 C) :=
  C : hol.type => B : hol.type => A : hol.type => b_1 : hol.term (type_1 B) => a_2 : hol.term (type_0 A) => f_3 : hol.term (type_11 C B A) => term_31 C B A f_3 (term_16 A a_2) (term_17 B b_1).

def term_43 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_29 C B A (f_1 : hol.term (type_11 C B A) => term_39 C B A (fn_2 : hol.term (type_14 C B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_41 C (fn_2 (term_18 B A b_4 a_3)) (term_42 C B A b_4 a_3 f_1))))).

(; axiom ;)

thm_6 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_43 C B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.? \lambda fn. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (fn ((Data.Pair., a) b))) ((f a) b)))))) ;)

def type_18 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_8 B).

def term_44 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_18 B A) type_3) type_3) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_18 B A) type_3) type_3).

def term_45 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_18 B A) -> hol.term (type_18 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_18 B A) => p_1.

def term_46 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_47 : B : hol.type -> y_1 : hol.term (type_1 B) -> hol.term (type_1 B) :=
  B : hol.type => y_1 : hol.term (type_1 B) => y_1.

def term_48 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_0 A) -> p_2 : hol.term (type_18 B A) -> hol.term (type_8 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_0 A) => p_2 : hol.term (type_18 B A) => y_3 : hol.term (type_1 B) => term_45 B A p_2 (term_46 A x_1) (term_47 B y_3).

def term_49 : B : hol.type -> A : hol.type -> z_1 : hol.term (type_2 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => z_1 : hol.term (type_2 B A) => z_1.

def term_50 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_18 B A) -> hol.term (type_4 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_18 B A) => z_2 : hol.term (type_2 B A) => term_45 B A p_1 (term_3 B A (term_49 B A z_2)) (term_6 B A (term_49 B A z_2)).

def term_51 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_10 (term_14 A (x_2 : hol.term (type_0 A) => term_15 B (term_48 A B x_2 p_1))) (term_0 B A (term_50 B A p_1))).

(; axiom ;)

thm_7 : B : hol.type -> A : hol.type -> hol.proof (term_51 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((p x) y)))) (Data.Bool.! \lambda z. ((p (Data.Pair.fst z)) (Data.Pair.snd z))))) ;)

def term_52 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_10 (term_23 A (x_2 : hol.term (type_0 A) => term_24 B (term_48 A B x_2 p_1))) (term_22 B A (term_50 B A p_1))).

(; axiom ;)

thm_8 : B : hol.type -> A : hol.type -> hol.proof (term_52 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((p x) y)))) (Data.Bool.? \lambda z. ((p (Data.Pair.fst z)) (Data.Pair.snd z))))) ;)

def type_19 : hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => Data_2EPair_2E_2A (type_1 B) (type_10 C).

def type_20 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_0 A) (type_19 C B).

def type_21 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_20 C B A) type_3.

def type_22 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_21 C B A) type_3.

def term_53 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_22 C B A) type_3) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_22 C B A) type_3).

def term_54 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_22 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_22 C B A).

def term_55 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_21 C B A) -> hol.term (type_21 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_21 C B A) => p_1.

def term_56 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_21 C B A) -> hol.term (type_21 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_21 C B A) => f_2 : hol.term (type_20 C B A) => term_55 C B A p_1 f_2.

def type_23 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_1 B).

def type_24 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (hol.arr (type_23 B A) type_3) type_3.

def term_57 : B : hol.type -> A : hol.type -> hol.term (type_24 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_24 B A).

def type_25 : hol.type -> hol.type -> hol.type :=
  C : hol.type => A : hol.type => hol.arr (type_0 A) (type_10 C).

def type_26 : hol.type -> hol.type -> hol.type :=
  C : hol.type => A : hol.type => hol.arr (type_25 C A) type_3.

def type_27 : hol.type -> hol.type -> hol.type :=
  C : hol.type => A : hol.type => hol.arr (type_26 C A) type_3.

def term_58 : C : hol.type -> A : hol.type -> hol.term (type_27 C A) :=
  C : hol.type => A : hol.type => Data_2EBool_2E_21 (type_27 C A).

def term_59 : C : hol.type -> B : hol.type -> hol.term (hol.arr (type_1 B) (hol.arr (type_10 C) (type_19 C B))) :=
  C : hol.type => B : hol.type => Data_2EPair_2E_2C (hol.arr (type_1 B) (hol.arr (type_10 C) (type_19 C B))).

def term_60 : B : hol.type -> C : hol.type -> A : hol.type -> g_1 : hol.term (type_23 B A) -> p_2 : hol.term (type_21 C B A) -> hol.term (type_26 C A) :=
  B : hol.type => C : hol.type => A : hol.type => g_1 : hol.term (type_23 B A) => p_2 : hol.term (type_21 C B A) => h_3 : hol.term (type_25 C A) => term_55 C B A p_2 (a_4 : hol.term (type_0 A) => term_59 C B (g_1 (term_16 A a_4)) (h_3 (term_16 A a_4))).

def term_61 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_53 C B A (p_1 : hol.term (type_21 C B A) => term_10 (term_54 C B A (term_56 C B A p_1)) (term_57 B A (g_2 : hol.term (type_23 B A) => term_58 C A (term_60 B C A g_2 p_1)))).

(; axiom ;)

thm_9 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_61 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda f. (p f))) (Data.Bool.! \lambda g. (Data.Bool.! \lambda h. (p \lambda a. ((Data.Pair., (g a)) (h a))))))) ;)

def term_62 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (type_22 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_22 C B A).

def term_63 : B : hol.type -> A : hol.type -> hol.term (type_24 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_24 B A).

def term_64 : C : hol.type -> A : hol.type -> hol.term (type_27 C A) :=
  C : hol.type => A : hol.type => Data_2EBool_2E_3F (type_27 C A).

def term_65 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_53 C B A (p_1 : hol.term (type_21 C B A) => term_10 (term_62 C B A (term_56 C B A p_1)) (term_63 B A (g_2 : hol.term (type_23 B A) => term_64 C A (term_60 B C A g_2 p_1)))).

(; axiom ;)

thm_10 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_65 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda f. (p f))) (Data.Bool.? \lambda g. (Data.Bool.? \lambda h. (p \lambda a. ((Data.Pair., (g a)) (h a))))))) ;)

def type_28 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_23 B A) (type_26 C A).

def term_66 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_28 C B A) type_3) type_3) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_28 C B A) type_3) type_3).

def term_67 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_28 C B A) -> hol.term (type_28 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_28 C B A) => p_1.

def term_68 : B : hol.type -> C : hol.type -> A : hol.type -> f_1 : hol.term (type_23 B A) -> p_2 : hol.term (type_28 C B A) -> hol.term (type_26 C A) :=
  B : hol.type => C : hol.type => A : hol.type => f_1 : hol.term (type_23 B A) => p_2 : hol.term (type_28 C B A) => g_3 : hol.term (type_25 C A) => term_67 C B A p_2 f_1 g_3.

def type_29 : hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => hol.arr (type_19 C B) (type_1 B).

(; Constant Function.o ;)

Function_2Eo : A : hol.type -> hol.term (type_0 A).

def term_69 : C : hol.type -> B : hol.type -> hol.term (type_29 C B) :=
  C : hol.type => B : hol.type => Data_2EPair_2Efst (type_29 C B).

def term_70 : C : hol.type -> B : hol.type -> A : hol.type -> h_1 : hol.term (type_20 C B A) -> hol.term (type_20 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => h_1 : hol.term (type_20 C B A) => h_1.

def type_30 : hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => hol.arr (type_19 C B) (type_10 C).

def term_71 : C : hol.type -> B : hol.type -> hol.term (type_30 C B) :=
  C : hol.type => B : hol.type => Data_2EPair_2Esnd (type_30 C B).

def term_72 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_28 C B A) -> hol.term (type_21 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_28 C B A) => h_2 : hol.term (type_20 C B A) => term_67 C B A p_1 (Function_2Eo (hol.arr (type_29 C B) (hol.arr (type_20 C B A) (type_23 B A))) (term_69 C B) (term_70 C B A h_2)) (Function_2Eo (hol.arr (type_30 C B) (hol.arr (type_20 C B A) (type_25 C A))) (term_71 C B) (term_70 C B A h_2)).

def term_73 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_66 C B A (p_1 : hol.term (type_28 C B A) => term_10 (term_57 B A (f_2 : hol.term (type_23 B A) => term_58 C A (term_68 B C A f_2 p_1))) (term_54 C B A (term_72 C B A p_1))).

(; axiom ;)

thm_11 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_73 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((p f) g)))) (Data.Bool.! \lambda h. ((p ((Function.o Data.Pair.fst) h)) ((Function.o Data.Pair.snd) h))))) ;)

def term_74 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_66 C B A (p_1 : hol.term (type_28 C B A) => term_10 (term_63 B A (f_2 : hol.term (type_23 B A) => term_64 C A (term_68 B C A f_2 p_1))) (term_62 C B A (term_72 C B A p_1))).

(; axiom ;)

thm_12 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_74 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda f. (Data.Bool.? \lambda g. ((p f) g)))) (Data.Bool.? \lambda h. ((p ((Function.o Data.Pair.fst) h)) ((Function.o Data.Pair.snd) h))))) ;)

def term_75 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_14 C B A) (type_15 C B A)) :=
  C : hol.type => B : hol.type => A : hol.type => hol.eq (type_14 C B A).

def term_76 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_15 C B A) (type_14 C B A)) :=
  C : hol.type => B : hol.type => A : hol.type => hol.select (type_14 C B A).

def term_77 : C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_14 C B A) -> hol.term (type_14 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_14 C B A) => term_76 C B A (f_27_2 : hol.term (type_14 C B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_41 C (f_27_2 (term_18 B A b_4 a_3)) (term_35 C B A b_4 a_3 f_1)))).

def term_78 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_33 C B A (f_1 : hol.term (type_14 C B A) => term_75 C B A (x_2 : hol.term (type_2 B A) => term_34 C B A f_1 (term_4 B A x_2)) (term_77 C B A f_1)).

(; axiom ;)

thm_13 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_78 C B A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= \lambda x. (f x)) (select \lambda f'. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f' ((Data.Pair., a) b))) (f ((Data.Pair., a) b)))))))) ;)

def term_79 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_2 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_2 B A) => p_1.

def term_80 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_29 C B A (f_1 : hol.term (type_11 C B A) => term_75 C B A (term_76 C B A (f_2 : hol.term (type_14 C B A) => term_14 A (x_3 : hol.term (type_0 A) => term_15 B (y_4 : hol.term (type_1 B) => term_41 C (term_34 C B A f_2 (term_2 B A (term_46 A x_3) (term_47 B y_4))) (term_31 C B A f_1 (term_46 A x_3) (term_47 B y_4)))))) (p_2 : hol.term (type_2 B A) => term_31 C B A f_1 (term_3 B A (term_79 B A p_2)) (term_6 B A (term_79 B A p_2)))).

(; axiom ;)

thm_14 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_80 C B A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (select \lambda f. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((= (f ((Data.Pair., x) y))) ((f x) y)))))) \lambda p. ((f (Data.Pair.fst p)) (Data.Pair.snd p)))) ;)

def term_81 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_16 C B A) type_3) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_16 C B A) type_3).

def term_82 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_15 C B A) -> hol.term (type_15 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_15 C B A) => p_1.

def term_83 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_15 C B A) -> hol.term (type_15 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_15 C B A) => f_2 : hol.term (type_14 C B A) => term_82 C B A p_1 (term_34 C B A f_2).

def term_84 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_15 C B A) -> hol.term (type_12 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_15 C B A) => f_2 : hol.term (type_11 C B A) => term_82 C B A p_1 (term_76 C B A (f_3 : hol.term (type_14 C B A) => term_14 A (a_4 : hol.term (type_0 A) => term_15 B (b_5 : hol.term (type_1 B) => term_41 C (term_35 C B A b_5 a_4 f_3) (term_42 C B A b_5 a_4 f_2))))).

def term_85 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_81 C B A (p_1 : hol.term (type_15 C B A) => term_10 (term_33 C B A (term_83 C B A p_1)) (term_29 C B A (term_84 C B A p_1))).

(; axiom ;)

thm_15 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_85 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! \lambda f. (p f))) (Data.Bool.! \lambda f. (p (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((f a) b))))))))) ;)

def term_86 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_81 C B A (p_1 : hol.term (type_15 C B A) => term_10 (term_39 C B A (term_83 C B A p_1)) (term_38 C B A (term_84 C B A p_1))).

(; axiom ;)

thm_16 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_86 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? \lambda f. (p f))) (Data.Bool.? \lambda f. (p (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((f a) b))))))))) ;)

def term_87 : B : hol.type -> A : hol.type -> b_1 : hol.term (type_1 B) -> a_2 : hol.term (type_0 A) -> p_3 : hol.term (type_18 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => b_1 : hol.term (type_1 B) => a_2 : hol.term (type_0 A) => p_3 : hol.term (type_18 B A) => term_45 B A p_3 (term_16 A a_2) (term_17 B b_1).

def term_88 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_18 B A) -> hol.term (type_4 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_18 B A) => hol.select (type_4 B A) (f_2 : hol.term (type_4 B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_10 (f_2 (term_18 B A b_4 a_3)) (term_87 B A b_4 a_3 p_1)))).

def term_89 : A : hol.type -> B : hol.type -> a_1 : hol.term (type_0 A) -> p_2 : hol.term (type_18 B A) -> hol.term (type_8 B) :=
  A : hol.type => B : hol.type => a_1 : hol.term (type_0 A) => p_2 : hol.term (type_18 B A) => b_3 : hol.term (type_1 B) => term_87 B A b_3 a_1 p_2.

def term_90 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_10 (term_0 B A (term_88 B A p_1)) (term_14 A (a_2 : hol.term (type_0 A) => term_15 B (term_89 A B a_2 p_1)))).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (term_90 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((p a) b))))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((p a) b))))) ;)

def term_91 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_18 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_18 B A) => term_23 A (a_2 : hol.term (type_0 A) => term_24 B (term_89 A B a_2 p_1)).

def term_92 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_10 (term_22 B A (term_88 B A p_1)) (term_91 B A p_1)).

(; axiom ;)

thm_18 : B : hol.type -> A : hol.type -> hol.proof (term_92 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((p a) b))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((p a) b))))) ;)

def term_93 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_4 B A) (type_2 B A)) :=
  B : hol.type => A : hol.type => hol.select (type_2 B A).

def term_94 : B : hol.type -> A : hol.type -> p_1 : hol.term (type_18 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => p_1 : hol.term (type_18 B A) => term_93 B A (term_88 B A p_1).

def term_95 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_1 B A (term_94 B A p_1) (term_93 B A (x_2 : hol.term (type_2 B A) => term_45 B A p_1 (term_5 B A x_2) (term_7 B A x_2)))).

(; axiom ;)

thm_19 : B : hol.type -> A : hol.type -> hol.proof (term_95 B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (select (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((p a) b))))))) (select \lambda x. ((p (Data.Pair.fst x)) (Data.Pair.snd x))))) ;)

def type_31 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_19 C B).

def type_32 : hol.type -> hol.type :=
  D : hol.type => D.

def type_33 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.arr (type_31 C B A) (type_32 D).

def type_34 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.arr (type_33 D C B A) type_3.

def term_96 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_34 D C B A) type_3) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_34 D C B A) type_3).

def term_97 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_33 D C B A) (type_34 D C B A)) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.eq (type_33 D C B A).

def term_98 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_33 D C B A) -> hol.term (type_33 D C B A) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_33 D C B A) => f_1.

def term_99 : C : hol.type -> B : hol.type -> A : hol.type -> t_1 : hol.term (type_31 C B A) -> hol.term (type_31 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => t_1 : hol.term (type_31 C B A) => t_1.

def term_100 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_34 D C B A) (type_33 D C B A)) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.select (type_33 D C B A).

def type_35 : hol.type -> hol.type :=
  C : hol.type => hol.arr (type_17 C) type_3.

def term_101 : C : hol.type -> hol.term (type_35 C) :=
  C : hol.type => Data_2EBool_2E_21 (type_35 C).

def type_36 : hol.type -> hol.type :=
  D : hol.type => hol.arr (type_32 D) type_3.

def term_102 : D : hol.type -> hol.term (hol.arr (type_32 D) (type_36 D)) :=
  D : hol.type => hol.eq (type_32 D).

def term_103 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> f_27_1 : hol.term (type_33 D C B A) -> hol.term (type_33 D C B A) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => f_27_1 : hol.term (type_33 D C B A) => f_27_1.

def term_104 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_0 A) (hol.arr (type_19 C B) (type_31 C B A))) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_19 C B) (type_31 C B A))).

def term_105 : C : hol.type -> z_1 : hol.term (type_10 C) -> hol.term (type_10 C) :=
  C : hol.type => z_1 : hol.term (type_10 C) => z_1.

def term_106 : C : hol.type -> B : hol.type -> A : hol.type -> z_1 : hol.term (type_10 C) -> y_2 : hol.term (type_1 B) -> x_3 : hol.term (type_0 A) -> hol.term (type_31 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => z_1 : hol.term (type_10 C) => y_2 : hol.term (type_1 B) => x_3 : hol.term (type_0 A) => term_104 C B A (term_46 A x_3) (term_59 C B (term_47 B y_2) (term_105 C z_1)).

def term_107 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> z_1 : hol.term (type_10 C) -> y_2 : hol.term (type_1 B) -> x_3 : hol.term (type_0 A) -> f_4 : hol.term (type_33 D C B A) -> hol.term (type_32 D) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => z_1 : hol.term (type_10 C) => y_2 : hol.term (type_1 B) => x_3 : hol.term (type_0 A) => f_4 : hol.term (type_33 D C B A) => term_98 D C B A f_4 (term_106 C B A z_1 y_2 x_3).

def term_108 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => term_96 D C B A (f_1 : hol.term (type_33 D C B A) => term_97 D C B A (t_2 : hol.term (type_31 C B A) => term_98 D C B A f_1 (term_99 C B A t_2)) (term_100 D C B A (f_27_2 : hol.term (type_33 D C B A) => term_14 A (x_3 : hol.term (type_0 A) => term_15 B (y_4 : hol.term (type_1 B) => term_101 C (z_5 : hol.term (type_10 C) => term_102 D (term_103 D C B A f_27_2 (term_106 C B A z_5 y_4 x_3)) (term_107 D C B A z_5 y_4 x_3 f_1))))))).

(; axiom ;)

thm_20 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_108 D C B A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= \lambda t. (f t)) (select \lambda f'. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((= (f' ((Data.Pair., x) ((Data.Pair., y) z)))) (f ((Data.Pair., x) ((Data.Pair., y) z)))))))))) ;)

def type_37 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.arr (type_0 A) (hol.arr (type_1 B) (hol.arr (type_10 C) (type_32 D))).

def term_109 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_37 D C B A) -> hol.term (type_37 D C B A) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_37 D C B A) => f_1.

def term_110 : C : hol.type -> B : hol.type -> A : hol.type -> t_1 : hol.term (type_31 C B A) -> hol.term (type_19 C B) :=
  C : hol.type => B : hol.type => A : hol.type => t_1 : hol.term (type_31 C B A) => Data_2EPair_2Esnd (hol.arr (type_31 C B A) (type_19 C B)) (term_99 C B A t_1).

def term_111 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_37 D C B A) type_3) type_3) (f_1 : hol.term (type_37 D C B A) => term_97 D C B A (term_100 D C B A (f_2 : hol.term (type_33 D C B A) => term_14 A (x_3 : hol.term (type_0 A) => term_15 B (y_4 : hol.term (type_1 B) => term_101 C (z_5 : hol.term (type_10 C) => term_102 D (term_107 D C B A z_5 y_4 x_3 f_2) (term_109 D C B A f_1 (term_46 A x_3) (term_47 B y_4) (term_105 C z_5))))))) (t_2 : hol.term (type_31 C B A) => term_109 D C B A f_1 (Data_2EPair_2Efst (hol.arr (type_31 C B A) (type_0 A)) (term_99 C B A t_2)) (term_69 C B (term_110 C B A t_2)) (term_71 C B (term_110 C B A t_2)))).

(; axiom ;)

thm_21 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_111 D C B A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (select \lambda f. (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. (Data.Bool.! \lambda z. ((= (f ((Data.Pair., x) ((Data.Pair., y) z)))) (((f x) y) z))))))) \lambda t. (((f (Data.Pair.fst t)) (Data.Pair.fst (Data.Pair.snd t))) (Data.Pair.snd (Data.Pair.snd t))))) ;)

def type_38 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_0 A) (hol.arr (type_1 B) (type_17 C)).

def term_112 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_38 C B A) type_3) type_3) :=
  C : hol.type => B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_38 C B A) type_3) type_3).

def type_39 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_31 C B A) type_3.

def type_40 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_39 C B A) type_3.

def term_113 : C : hol.type -> c_1 : hol.term (type_10 C) -> hol.term (type_10 C) :=
  C : hol.type => c_1 : hol.term (type_10 C) => c_1.

def term_114 : C : hol.type -> B : hol.type -> A : hol.type -> c_1 : hol.term (type_10 C) -> b_2 : hol.term (type_1 B) -> a_3 : hol.term (type_0 A) -> hol.term (type_31 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => c_1 : hol.term (type_10 C) => b_2 : hol.term (type_1 B) => a_3 : hol.term (type_0 A) => term_104 C B A (term_16 A a_3) (term_59 C B (term_17 B b_2) (term_113 C c_1)).

def term_115 : C : hol.type -> B : hol.type -> A : hol.type -> c_1 : hol.term (type_10 C) -> b_2 : hol.term (type_1 B) -> a_3 : hol.term (type_0 A) -> p_4 : hol.term (type_38 C B A) -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => c_1 : hol.term (type_10 C) => b_2 : hol.term (type_1 B) => a_3 : hol.term (type_0 A) => p_4 : hol.term (type_38 C B A) => p_4 (term_16 A a_3) (term_17 B b_2) (term_113 C c_1).

def term_116 : C : hol.type -> B : hol.type -> A : hol.type -> p_1 : hol.term (type_38 C B A) -> hol.term (type_39 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => p_1 : hol.term (type_38 C B A) => hol.select (type_39 C B A) (f_2 : hol.term (type_39 C B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_101 C (c_5 : hol.term (type_10 C) => term_10 (f_2 (term_114 C B A c_5 b_4 a_3)) (term_115 C B A c_5 b_4 a_3 p_1))))).

def term_117 : B : hol.type -> A : hol.type -> C : hol.type -> b_1 : hol.term (type_1 B) -> a_2 : hol.term (type_0 A) -> p_3 : hol.term (type_38 C B A) -> hol.term (type_17 C) :=
  B : hol.type => A : hol.type => C : hol.type => b_1 : hol.term (type_1 B) => a_2 : hol.term (type_0 A) => p_3 : hol.term (type_38 C B A) => c_4 : hol.term (type_10 C) => term_115 C B A c_4 b_1 a_2 p_3.

def term_118 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_112 C B A (p_1 : hol.term (type_38 C B A) => term_10 (Data_2EBool_2E_21 (type_40 C B A) (term_116 C B A p_1)) (term_14 A (a_2 : hol.term (type_0 A) => term_15 B (b_3 : hol.term (type_1 B) => term_101 C (term_117 B A C b_3 a_2 p_1))))).

(; axiom ;)

thm_22 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_118 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.! (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.! \lambda c. ((= (f ((Data.Pair., a) ((Data.Pair., b) c)))) (((p a) b) c)))))))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.! \lambda c. (((p a) b) c)))))) ;)

def term_119 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  C : hol.type => B : hol.type => A : hol.type => term_112 C B A (p_1 : hol.term (type_38 C B A) => term_10 (Data_2EBool_2E_3F (type_40 C B A) (term_116 C B A p_1)) (term_23 A (a_2 : hol.term (type_0 A) => term_24 B (b_3 : hol.term (type_1 B) => Data_2EBool_2E_3F (type_35 C) (term_117 B A C b_3 a_2 p_1))))).

(; axiom ;)

thm_23 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_119 C B A).

(; Theorem: |- (Data.Bool.! \lambda p. ((= (Data.Bool.? (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.! \lambda c. ((= (f ((Data.Pair., a) ((Data.Pair., b) c)))) (((p a) b) c)))))))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. (Data.Bool.? \lambda c. (((p a) b) c)))))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_120 : hol.term type_6 :=
  Data_2EBool_2E_2F_5C type_6.

def term_121 : B : hol.type -> A : hol.type -> q_1 : hol.term (type_4 B A) -> hol.term (type_4 B A) :=
  B : hol.type => A : hol.type => q_1 : hol.term (type_4 B A) => q_1.

def term_122 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_44 B A (p_1 : hol.term (type_18 B A) => term_9 B A (q_2 : hol.term (type_4 B A) => term_26 (term_120 (term_91 B A p_1) (term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_26 (term_87 B A b_4 a_3 p_1) (term_121 B A q_2 (term_18 B A b_4 a_3)))))) (term_121 B A q_2 (term_94 B A p_1)))).

(; axiom ;)

thm_24 : B : hol.type -> A : hol.type -> hol.proof (term_122 B A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda q. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.? \lambda a. (Data.Bool.? \lambda b. ((p a) b)))) (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((p a) b)) (q ((Data.Pair., a) b))))))) (q (select (select \lambda f. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f ((Data.Pair., a) b))) ((p a) b)))))))))) ;)

def type_41 : hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => Data_2EPair_2E_2A (type_10 C) (type_32 D).

def type_42 : hol.type -> hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => B : hol.type => Data_2EPair_2E_2A (type_1 B) (type_41 D C).

def type_43 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_0 A) (type_42 D C B).

def type_44 : hol.type -> hol.type :=
  E : hol.type => E.

def type_45 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  E : hol.type => D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.arr (type_43 D C B A) (type_44 E).

def type_46 : hol.type -> hol.type -> hol.type -> hol.type -> hol.type -> hol.type :=
  E : hol.type => D : hol.type => C : hol.type => B : hol.type => A : hol.type => hol.arr (type_45 E D C B A) type_3.

def term_123 : D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> d_1 : hol.term (type_32 D) -> c_2 : hol.term (type_10 C) -> b_3 : hol.term (type_1 B) -> a_4 : hol.term (type_0 A) -> hol.term (type_43 D C B A) :=
  D : hol.type => C : hol.type => B : hol.type => A : hol.type => d_1 : hol.term (type_32 D) => c_2 : hol.term (type_10 C) => b_3 : hol.term (type_1 B) => a_4 : hol.term (type_0 A) => Data_2EPair_2E_2C (hol.arr (type_0 A) (hol.arr (type_42 D C B) (type_43 D C B A))) (term_16 A a_4) (Data_2EPair_2E_2C (hol.arr (type_1 B) (hol.arr (type_41 D C) (type_42 D C B))) (term_17 B b_3) (Data_2EPair_2E_2C (hol.arr (type_10 C) (hol.arr (type_32 D) (type_41 D C))) (term_113 C c_2) d_1)).

def term_124 : E : hol.type -> D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_45 E D C B A) -> hol.term (type_45 E D C B A) :=
  E : hol.type => D : hol.type => C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_45 E D C B A) => f_1.

def term_125 : E : hol.type -> D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.term type_3 :=
  E : hol.type => D : hol.type => C : hol.type => B : hol.type => A : hol.type => term_120 (term_33 C B A (f_1 : hol.term (type_14 C B A) => term_75 C B A (term_77 C B A f_1) (term_34 C B A f_1))) (term_120 (term_96 D C B A (f_1 : hol.term (type_33 D C B A) => term_97 D C B A (term_100 D C B A (f_27_2 : hol.term (type_33 D C B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_101 C (c_5 : hol.term (type_10 C) => term_102 D (term_103 D C B A f_27_2 (term_114 C B A c_5 b_4 a_3)) (term_98 D C B A f_1 (term_114 C B A c_5 b_4 a_3))))))) (term_98 D C B A f_1))) (Data_2EBool_2E_21 (hol.arr (type_46 E D C B A) type_3) (f_1 : hol.term (type_45 E D C B A) => hol.eq (type_45 E D C B A) (hol.select (type_45 E D C B A) (f_27_2 : hol.term (type_45 E D C B A) => term_14 A (a_3 : hol.term (type_0 A) => term_15 B (b_4 : hol.term (type_1 B) => term_101 C (c_5 : hol.term (type_10 C) => Data_2EBool_2E_21 (hol.arr (type_36 D) type_3) (d_6 : hol.term (type_32 D) => hol.eq (type_44 E) (f_27_2 (term_123 D C B A d_6 c_5 b_4 a_3)) (term_124 E D C B A f_1 (term_123 D C B A d_6 c_5 b_4 a_3)))))))) (term_124 E D C B A f_1)))).

(; axiom ;)

thm_25 : E : hol.type -> D : hol.type -> C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (term_125 E D C B A).

(; Theorem: |- ((Data.Bool./\ (Data.Bool.! \lambda f. ((= (select \lambda f'. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= (f' ((Data.Pair., a) b))) (f ((Data.Pair., a) b))))))) f))) ((Data.Bool./\ (Data.Bool.! \lambda f. ((= (select \lambda f'. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.! \lambda c. ((= (f' ((Data.Pair., a) ((Data.Pair., b) c)))) (f ((Data.Pair., a) ((Data.Pair., b) c))))))))) f))) (Data.Bool.! \lambda f. ((= (select \lambda f'. (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. (Data.Bool.! \lambda c. (Data.Bool.! \lambda d. ((= (f' ((Data.Pair., a) ((Data.Pair., b) ((Data.Pair., c) d))))) (f ((Data.Pair., a) ((Data.Pair., b) ((Data.Pair., c) d))))))))))) f)))) ;)

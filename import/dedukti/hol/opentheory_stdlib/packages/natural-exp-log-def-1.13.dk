
(; This file was generated by Holide. ;)

#NAME natural_2Dexp_2Dlog_2Ddef_2D1_2E13.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def type_3 : hol.type :=
  hol.arr type_1 (hol.arr type_1 type_1).

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term A.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term A.

def type_4 : hol.type :=
  hol.arr type_0 type_2.

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term A.

def type_5 : hol.type :=
  hol.arr type_0 type_0.

def type_6 : hol.type :=
  hol.arr type_0 type_5.

(; Constant Number.Natural.^ ;)

Number_2ENatural_2E_5E : A : hol.type -> hol.term A.

def term_1 : k_1 : hol.term type_0 -> hol.term type_0 :=
  k_1 : hol.term type_0 => k_1.

def term_2 : k_1 : hol.term type_0 -> hol.term type_5 :=
  k_1 : hol.term type_0 => Number_2ENatural_2E_5E type_6 (term_1 k_1).

def term_3 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_4 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term A.

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term A.

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

(; Constant natural-exp-log-def-1.13 ;)

natural_2Dexp_2Dlog_2Ddef_2D1_2E13 : A : hol.type -> hol.term A.

(; Constant Number.Natural.log ;)

def Number_2ENatural_2Elog : hol.term type_6 :=
  natural_2Dexp_2Dlog_2Ddef_2D1_2E13 type_6.

def term_5 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_0 (m_3 : hol.term type_0 => Data_2EBool_2E_3D_3D_3E type_3 (Data_2EBool_2E_2F_5C type_3 (Number_2ENatural_2E_3C_3D type_4 (term_2 k_1 (term_3 m_3)) (term_4 n_2)) (Number_2ENatural_2E_3C type_4 (term_4 n_2) (term_2 k_1 (Number_2ENatural_2E_2B type_6 (term_3 m_3) (Number_2ENatural_2Ebit1 type_5 (Number_2ENatural_2Ezero type_0)))))) (hol.eq type_0 (Number_2ENatural_2Elog (term_1 k_1) (term_4 n_2)) (term_3 m_3))))).

(; axiom ;)

thm_0 : hol.proof term_5.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.<= ((Number.Natural.^ k) m)) n)) ((Number.Natural.< n) ((Number.Natural.^ k) ((Number.Natural.+ m) (Number.Natural.bit1 Number.Natural.zero)))))) ((= ((Number.Natural.log k) n)) m))))) ;)

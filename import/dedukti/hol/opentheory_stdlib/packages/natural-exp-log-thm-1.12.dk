
(; This file was generated by Holide. ;)

#NAME natural_2Dexp_2Dlog_2Dthm_2D1_2E12.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def type_3 : hol.type :=
  hol.arr type_1 type_1.

def type_4 : hol.type :=
  hol.arr type_1 type_3.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term A.

def term_1 : hol.term type_4 :=
  Data_2EBool_2E_3D_3D_3E type_4.

def type_5 : hol.type :=
  hol.arr type_0 type_2.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

def term_2 : hol.term type_5 :=
  Number_2ENatural_2E_3C type_5.

def type_6 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term A.

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

def term_3 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_4 : hol.term type_0 :=
  Number_2ENatural_2Ebit1 type_6 term_3.

def term_5 : k_1 : hol.term type_0 -> hol.term type_0 :=
  k_1 : hol.term type_0 => k_1.

def term_6 : k_1 : hol.term type_0 -> hol.term type_1 :=
  k_1 : hol.term type_0 => term_2 term_4 (term_5 k_1).

def term_7 : k_1 : hol.term type_0 -> hol.term type_3 :=
  k_1 : hol.term type_0 => term_1 (term_6 k_1).

def term_8 : hol.term type_5 :=
  hol.eq type_0.

def type_7 : hol.type :=
  hol.arr type_0 type_6.

(; Constant Number.Natural.log ;)

Number_2ENatural_2Elog : A : hol.type -> hol.term A.

def term_9 : k_1 : hol.term type_0 -> hol.term type_6 :=
  k_1 : hol.term type_0 => Number_2ENatural_2Elog type_7 (term_5 k_1).

def term_10 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_7 k_1 (term_8 (term_9 k_1 term_4) term_3)).

(; axiom ;)

thm_0 : hol.proof term_10.

(; Theorem: |- (Data.Bool.! \lambda k. ((Data.Bool.==> ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((= ((Number.Natural.log k) (Number.Natural.bit1 Number.Natural.zero))) Number.Natural.zero))) ;)

(; Constant Number.Natural.^ ;)

Number_2ENatural_2E_5E : A : hol.type -> hol.term A.

def term_11 : k_1 : hol.term type_0 -> hol.term type_6 :=
  k_1 : hol.term type_0 => Number_2ENatural_2E_5E type_7 (term_5 k_1).

def term_12 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_13 : m_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => k_2 : hol.term type_0 => term_11 k_2 (term_12 m_1).

def term_14 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (m_2 : hol.term type_0 => term_7 k_1 (term_8 (term_9 k_1 (term_13 m_2 k_1)) (term_12 m_2)))).

(; axiom ;)

thm_1 : hol.proof term_14.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((= ((Number.Natural.log k) ((Number.Natural.^ k) m))) m)))) ;)

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term A.

def term_15 : hol.term type_4 :=
  Data_2EBool_2E_2F_5C type_4.

def term_16 : k_1 : hol.term type_0 -> hol.term type_3 :=
  k_1 : hol.term type_0 => term_15 (term_6 k_1).

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

def term_17 : hol.term type_3 :=
  Data_2EBool_2E_7E type_3.

def term_18 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_19 : n_1 : hol.term type_0 -> hol.term type_1 :=
  n_1 : hol.term type_0 => term_17 (term_8 (term_18 n_1) term_3).

def term_20 : n_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_3 :=
  n_1 : hol.term type_0 => k_2 : hol.term type_0 => term_1 (term_16 k_2 (term_19 n_1)).

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term A.

def term_21 : hol.term type_5 :=
  Number_2ENatural_2E_3C_3D type_5.

def term_22 : n_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => k_2 : hol.term type_0 => term_9 k_2 (term_18 n_1).

def term_23 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_20 n_2 k_1 (term_21 (term_11 k_1 (term_22 n_2 k_1)) (term_18 n_2)))).

(; axiom ;)

thm_2 : hol.proof term_23.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) (Data.Bool.~ ((= n) Number.Natural.zero)))) ((Number.Natural.<= ((Number.Natural.^ k) ((Number.Natural.log k) n))) n)))) ;)

def term_24 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> k_3 : hol.term type_0 -> hol.term type_1 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => k_3 : hol.term type_0 => term_21 (term_13 m_2 k_3) (term_18 n_1).

def term_25 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (m_2 : hol.term type_0 => term_0 (n_3 : hol.term type_0 => term_1 (term_16 k_1 (term_24 n_3 m_2 k_1)) (term_21 (term_12 m_2) (term_22 n_3 k_1))))).

(; axiom ;)

thm_3 : hol.proof term_25.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((Number.Natural.<= ((Number.Natural.^ k) m)) n))) ((Number.Natural.<= m) ((Number.Natural.log k) n)))))) ;)

(; Constant Number.Natural.- ;)

Number_2ENatural_2E_2D : A : hol.type -> hol.term A.

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term A.

def term_26 : hol.term type_7 :=
  Number_2ENatural_2E_2B type_7.

def term_27 : m_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => k_2 : hol.term type_0 => term_11 k_2 (term_26 (term_12 m_1) term_4).

def term_28 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (m_2 : hol.term type_0 => term_7 k_1 (term_8 (term_9 k_1 (Number_2ENatural_2E_2D type_7 (term_27 m_2 k_1) term_4)) (term_12 m_2)))).

(; axiom ;)

thm_4 : hol.proof term_28.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((= ((Number.Natural.log k) ((Number.Natural.- ((Number.Natural.^ k) ((Number.Natural.+ m) (Number.Natural.bit1 Number.Natural.zero)))) (Number.Natural.bit1 Number.Natural.zero)))) m)))) ;)

def term_29 : hol.term type_4 :=
  hol.eq type_1.

def term_30 : n_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_2 :=
  n_1 : hol.term type_0 => k_2 : hol.term type_0 => term_8 (term_22 n_1 k_2).

def term_31 : n_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_1 :=
  n_1 : hol.term type_0 => k_2 : hol.term type_0 => term_30 n_1 k_2 term_3.

def term_32 : n_1 : hol.term type_0 -> hol.term type_2 :=
  n_1 : hol.term type_0 => term_2 (term_18 n_1).

def term_33 : k_1 : hol.term type_0 -> n_2 : hol.term type_0 -> hol.term type_1 :=
  k_1 : hol.term type_0 => n_2 : hol.term type_0 => term_32 n_2 (term_5 k_1).

def term_34 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_20 n_2 k_1 (term_29 (term_31 n_2 k_1) (term_33 k_1 n_2)))).

(; axiom ;)

thm_5 : hol.proof term_34.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) (Data.Bool.~ ((= n) Number.Natural.zero)))) ((= ((= ((Number.Natural.log k) n)) Number.Natural.zero)) ((Number.Natural.< n) k))))) ;)

def term_35 : n_1 : hol.term type_0 -> hol.term type_3 :=
  n_1 : hol.term type_0 => term_15 (term_19 n_1).

def term_36 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_1 (term_16 k_1 (term_35 n_2 (term_33 k_1 n_2))) (term_31 n_2 k_1))).

(; axiom ;)

thm_6 : hol.proof term_36.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((Data.Bool./\ (Data.Bool.~ ((= n) Number.Natural.zero))) ((Number.Natural.< n) k)))) ((= ((Number.Natural.log k) n)) Number.Natural.zero)))) ;)

def term_37 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_20 n_2 k_1 (term_32 n_2 (term_11 k_1 (term_26 (term_22 n_2 k_1) term_4))))).

(; axiom ;)

thm_7 : hol.proof term_37.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) (Data.Bool.~ ((= n) Number.Natural.zero)))) ((Number.Natural.< n) ((Number.Natural.^ k) ((Number.Natural.+ ((Number.Natural.log k) n)) (Number.Natural.bit1 Number.Natural.zero))))))) ;)

def term_38 : n1_1 : hol.term type_0 -> hol.term type_0 :=
  n1_1 : hol.term type_0 => n1_1.

def term_39 : n1_1 : hol.term type_0 -> hol.term type_3 :=
  n1_1 : hol.term type_0 => term_15 (term_17 (term_8 (term_38 n1_1) term_3)).

def term_40 : n2_1 : hol.term type_0 -> hol.term type_0 :=
  n2_1 : hol.term type_0 => n2_1.

def term_41 : n1_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_0 :=
  n1_1 : hol.term type_0 => k_2 : hol.term type_0 => term_9 k_2 (term_38 n1_1).

def term_42 : n2_1 : hol.term type_0 -> k_2 : hol.term type_0 -> hol.term type_0 :=
  n2_1 : hol.term type_0 => k_2 : hol.term type_0 => term_9 k_2 (term_40 n2_1).

def term_43 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n1_2 : hol.term type_0 => term_0 (n2_3 : hol.term type_0 => term_1 (term_16 k_1 (term_39 n1_2 (term_21 (term_38 n1_2) (term_40 n2_3)))) (term_21 (term_41 n1_2 k_1) (term_42 n2_3 k_1))))).

(; axiom ;)

thm_8 : hol.proof term_43.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n1. (Data.Bool.! \lambda n2. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((Data.Bool./\ (Data.Bool.~ ((= n1) Number.Natural.zero))) ((Number.Natural.<= n1) n2)))) ((Number.Natural.<= ((Number.Natural.log k) n1)) ((Number.Natural.log k) n2)))))) ;)

def term_44 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (m_2 : hol.term type_0 => term_0 (n_3 : hol.term type_0 => term_1 (term_16 k_1 (term_35 n_3 (term_32 n_3 (term_13 m_2 k_1)))) (term_2 (term_22 n_3 k_1) (term_12 m_2))))).

(; axiom ;)

thm_9 : hol.proof term_44.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((Data.Bool./\ (Data.Bool.~ ((= n) Number.Natural.zero))) ((Number.Natural.< n) ((Number.Natural.^ k) m))))) ((Number.Natural.< ((Number.Natural.log k) n)) m))))) ;)

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term A.

(; Constant Number.Natural.div ;)

Number_2ENatural_2Ediv : A : hol.type -> hol.term A.

def term_45 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_20 n_2 k_1 (term_30 n_2 k_1 (Data_2EBool_2Econd (hol.arr type_1 type_7) (term_33 k_1 n_2) term_3 (term_26 (term_9 k_1 (Number_2ENatural_2Ediv type_7 (term_18 n_2) (term_5 k_1))) term_4))))).

(; axiom ;)

thm_10 : hol.proof term_45.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) (Data.Bool.~ ((= n) Number.Natural.zero)))) ((= ((Number.Natural.log k) n)) (((Data.Bool.cond ((Number.Natural.< n) k)) Number.Natural.zero) ((Number.Natural.+ ((Number.Natural.log k) ((Number.Natural.div n) k))) (Number.Natural.bit1 Number.Natural.zero))))))) ;)

def term_46 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => term_0 (m_3 : hol.term type_0 => term_20 n_2 k_1 (term_29 (term_30 n_2 k_1 (term_12 m_3)) (term_15 (term_24 n_2 m_3 k_1) (term_32 n_2 (term_27 m_3 k_1))))))).

(; axiom ;)

thm_11 : hol.proof term_46.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n. (Data.Bool.! \lambda m. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) (Data.Bool.~ ((= n) Number.Natural.zero)))) ((= ((= ((Number.Natural.log k) n)) m)) ((Data.Bool./\ ((Number.Natural.<= ((Number.Natural.^ k) m)) n)) ((Number.Natural.< n) ((Number.Natural.^ k) ((Number.Natural.+ m) (Number.Natural.bit1 Number.Natural.zero)))))))))) ;)

(; Constant Number.Natural.* ;)

Number_2ENatural_2E_2A : A : hol.type -> hol.term A.

def term_47 : hol.term type_1 :=
  term_0 (k_1 : hol.term type_0 => term_0 (n1_2 : hol.term type_0 => term_0 (n2_3 : hol.term type_0 => term_1 (term_16 k_1 (term_39 n1_2 (term_17 (term_8 (term_40 n2_3) term_3)))) (term_21 (term_9 k_1 (Number_2ENatural_2E_2A type_7 (term_38 n1_2) (term_40 n2_3))) (term_26 (term_41 n1_2 k_1) (term_26 (term_42 n2_3 k_1) term_4)))))).

(; axiom ;)

thm_12 : hol.proof term_47.

(; Theorem: |- (Data.Bool.! \lambda k. (Data.Bool.! \lambda n1. (Data.Bool.! \lambda n2. ((Data.Bool.==> ((Data.Bool./\ ((Number.Natural.< (Number.Natural.bit1 Number.Natural.zero)) k)) ((Data.Bool./\ (Data.Bool.~ ((= n1) Number.Natural.zero))) (Data.Bool.~ ((= n2) Number.Natural.zero))))) ((Number.Natural.<= ((Number.Natural.log k) ((Number.Natural.* n1) n2))) ((Number.Natural.+ ((Number.Natural.log k) n1)) ((Number.Natural.+ ((Number.Natural.log k) n2)) (Number.Natural.bit1 Number.Natural.zero)))))))) ;)

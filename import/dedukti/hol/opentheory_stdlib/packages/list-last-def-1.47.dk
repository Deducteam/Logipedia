
(; This file was generated by Holide. ;)

#NAME list_2Dlast_2Ddef_2D1_2E47.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

Data_2EList_2Elist : hol.type -> hol.type.

def type_3 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) type_1.

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_3 A) (type_0 A).

(; Constant list-last-def-1.47 ;)

list_2Dlast_2Ddef_2D1_2E47 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.last ;)

def Data_2EList_2Elast : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => list_2Dlast_2Ddef_2D1_2E47 (type_5 A).

def term_0 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EList_2Elast (type_0 A).

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_1 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => h_1 : hol.term (type_0 A) => h_1.

def term_2 : A : hol.type -> t_1 : hol.term (type_3 A) -> hol.term (type_3 A) :=
  A : hol.type => t_1 : hol.term (type_3 A) => t_1.

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.null ;)

Data_2EList_2Enull : A : hol.type -> hol.term (type_0 A).

def term_3 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_2 A) type_1) (h_1 : hol.term (type_0 A) => Data_2EBool_2E_21 (hol.arr (type_4 A) type_1) (t_2 : hol.term (type_3 A) => hol.eq (type_0 A) (term_0 A (Data_2EList_2E_3A_3A (hol.arr (type_0 A) (hol.arr (type_3 A) (type_3 A))) (term_1 A h_1) (term_2 A t_2))) (Data_2EBool_2Econd (hol.arr type_1 (hol.arr (type_0 A) (hol.arr (type_0 A) (type_0 A)))) (Data_2EList_2Enull (type_4 A) (term_2 A t_2)) (term_1 A h_1) (term_0 A (term_2 A t_2))))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_3 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= (Data.List.last ((Data.List.:: h) t))) (((Data.Bool.cond (Data.List.null t)) h) (Data.List.last t))))) ;)

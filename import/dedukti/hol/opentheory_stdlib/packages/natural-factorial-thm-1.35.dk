
(; This file was generated by Holide. ;)

#NAME natural_2Dfactorial_2Dthm_2D1_2E35.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def type_3 : hol.type :=
  hol.arr type_0 type_2.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

def term_1 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def type_4 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.factorial ;)

Number_2ENatural_2Efactorial : A : hol.type -> hol.term A.

def term_2 : hol.term type_4 :=
  Number_2ENatural_2Efactorial type_4.

def term_3 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_4 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => term_2 (term_3 n_1).

def term_5 : hol.term type_1 :=
  term_0 (n_1 : hol.term type_0 => Number_2ENatural_2E_3C type_3 term_1 (term_4 n_1)).

(; axiom ;)

thm_0 : hol.proof term_5.

(; Theorem: |- (Data.Bool.! \lambda n. ((Number.Natural.< Number.Natural.zero) (Number.Natural.factorial n))) ;)

def type_5 : hol.type :=
  hol.arr type_1 type_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

def term_6 : hol.term type_1 :=
  term_0 (n_1 : hol.term type_0 => Data_2EBool_2E_7E type_5 (hol.eq type_0 (term_4 n_1) term_1)).

(; axiom ;)

thm_1 : hol.proof term_6.

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.~ ((= (Number.Natural.factorial n)) Number.Natural.zero))) ;)

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term A.

def term_7 : hol.term type_3 :=
  Number_2ENatural_2E_3C_3D type_3.

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term A.

def term_8 : hol.term type_1 :=
  term_0 (n_1 : hol.term type_0 => term_7 (Number_2ENatural_2Ebit1 type_4 term_1) (term_4 n_1)).

(; axiom ;)

thm_2 : hol.proof term_8.

(; Theorem: |- (Data.Bool.! \lambda n. ((Number.Natural.<= (Number.Natural.bit1 Number.Natural.zero)) (Number.Natural.factorial n))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term A.

def term_9 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_10 : hol.term type_1 :=
  term_0 (m_1 : hol.term type_0 => term_0 (n_2 : hol.term type_0 => Data_2EBool_2E_3D_3D_3E (hol.arr type_1 type_5) (term_7 (term_9 m_1) (term_3 n_2)) (term_7 (term_2 (term_9 m_1)) (term_4 n_2)))).

(; axiom ;)

thm_3 : hol.proof term_10.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.<= m) n)) ((Number.Natural.<= (Number.Natural.factorial m)) (Number.Natural.factorial n))))) ;)

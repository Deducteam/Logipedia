
(; This file was generated by Holide. ;)

#NAME function_2Ddef.

def type_0 : hol.type -> hol.type :=
  B : hol.type => B.

def type_1 : hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => hol.arr (type_0 B) C.

def type_2 : hol.type -> hol.type :=
  A : hol.type => A.

def type_3 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_2 A) (type_0 B).

def term_0 : A : hol.type -> x_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => x_1 : hol.term (type_2 A) => x_1.

def term_1 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_2 A) -> g_2 : hol.term (type_3 B A) -> hol.term (type_0 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_2 A) => g_2 : hol.term (type_3 B A) => g_2 (term_0 A x_1).

def term_2 : A : hol.type -> C : hol.type -> B : hol.type -> hol.term (hol.arr (type_1 C B) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) :=
  A : hol.type => C : hol.type => B : hol.type => f_1 : hol.term (type_1 C B) => g_2 : hol.term (type_3 B A) => x_3 : hol.term (type_2 A) => f_1 (term_1 B A x_3 g_2).

(; Constant Function.o ;)

def Function_2Eo : A : hol.type -> C : hol.type -> B : hol.type -> hol.term (hol.arr (type_1 C B) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) :=
  A : hol.type => C : hol.type => B : hol.type => term_2 A C B.

(; dict ;)

thm thm_0 : A : hol.type -> C : hol.type -> B : hol.type -> hol.proof (hol.eq (hol.arr (type_1 C B) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) (Function_2Eo (type_2 A) C (type_0 B)) (term_2 A C B)) :=
  A : hol.type => C : hol.type => B : hol.type => hol.REFL (hol.arr (type_1 C B) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) (Function_2Eo (type_2 A) C (type_0 B)).

def type_4 : hol.type -> hol.type -> hol.type -> hol.type :=
  A : hol.type => C : hol.type => B : hol.type => hol.arr (type_1 C B) (hol.arr (type_3 B A) (hol.arr (type_2 A) C)).

def type_5 : hol.type :=
  hol.bool.

(; Theorem: |- ((= Function.o) \lambda f. \lambda g. \lambda x. (f (g x))) ;)

def term_3 : A : hol.type -> hol.term (hol.arr (type_2 A) (type_2 A)) :=
  A : hol.type => x_1 : hol.term (type_2 A) => term_0 A x_1.

(; Constant Function.id ;)

def Function_2Eid : A : hol.type -> hol.term (hol.arr (type_2 A) (type_2 A)) :=
  A : hol.type => term_3 A.

(; dict ;)

thm thm_1 : A : hol.type -> hol.proof (hol.eq (hol.arr (type_2 A) (type_2 A)) (Function_2Eid (type_2 A)) (term_3 A)) :=
  A : hol.type => hol.REFL (hol.arr (type_2 A) (type_2 A)) (Function_2Eid (type_2 A)).

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) (type_2 A).

(; Theorem: |- ((= Function.id) \lambda x. x) ;)

def term_4 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_2 A) (hol.arr (type_0 B) (type_2 A))) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_2 A) => y_2 : hol.term (type_0 B) => term_0 A x_1.

(; Constant Function.const ;)

def Function_2Econst : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_2 A) (hol.arr (type_0 B) (type_2 A))) :=
  B : hol.type => A : hol.type => term_4 B A.

(; dict ;)

thm thm_2 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (type_2 A) (hol.arr (type_0 B) (type_2 A))) (Function_2Econst (type_0 B) (type_2 A)) (term_4 B A)) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (type_2 A) (hol.arr (type_0 B) (type_2 A))) (Function_2Econst (type_0 B) (type_2 A)).

def type_7 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_2 A) (hol.arr (type_0 B) (type_2 A)).

(; Theorem: |- ((= Function.const) \lambda x. \lambda y. x) ;)

def type_8 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_2 A) (type_1 C B).

def term_5 : C : hol.type -> B : hol.type -> A : hol.type -> f_1 : hol.term (type_8 C B A) -> hol.term (type_8 C B A) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_8 C B A) => f_1.

def term_6 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_8 C B A) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_8 C B A) => g_2 : hol.term (type_3 B A) => x_3 : hol.term (type_2 A) => term_5 C B A f_1 (term_0 A x_3) (term_1 B A x_3 g_2).

(; Constant Function.Combinator.s ;)

def Function_2ECombinator_2Es : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_8 C B A) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) :=
  C : hol.type => B : hol.type => A : hol.type => term_6 C B A.

(; dict ;)

thm thm_3 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (type_8 C B A) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) (Function_2ECombinator_2Es C (type_0 B) (type_2 A)) (term_6 C B A)) :=
  C : hol.type => B : hol.type => A : hol.type => hol.REFL (hol.arr (type_8 C B A) (hol.arr (type_3 B A) (hol.arr (type_2 A) C))) (Function_2ECombinator_2Es C (type_0 B) (type_2 A)).

def type_9 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_8 C B A) (hol.arr (type_3 B A) (hol.arr (type_2 A) C)).

(; Theorem: |- ((= Function.Combinator.s) \lambda f. \lambda g. \lambda x. ((f x) (g x))) ;)

def term_7 : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_8 C B A) (hol.arr (type_0 B) (hol.arr (type_2 A) C))) :=
  C : hol.type => B : hol.type => A : hol.type => f_1 : hol.term (type_8 C B A) => x_2 : hol.term (type_0 B) => y_3 : hol.term (type_2 A) => term_5 C B A f_1 y_3 x_2.

(; Constant Function.flip ;)

def Function_2Eflip : C : hol.type -> B : hol.type -> A : hol.type -> hol.term (hol.arr (type_8 C B A) (hol.arr (type_0 B) (hol.arr (type_2 A) C))) :=
  C : hol.type => B : hol.type => A : hol.type => term_7 C B A.

(; dict ;)

thm thm_4 : C : hol.type -> B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (type_8 C B A) (hol.arr (type_0 B) (hol.arr (type_2 A) C))) (Function_2Eflip C (type_0 B) (type_2 A)) (term_7 C B A)) :=
  C : hol.type => B : hol.type => A : hol.type => hol.REFL (hol.arr (type_8 C B A) (hol.arr (type_0 B) (hol.arr (type_2 A) C))) (Function_2Eflip C (type_0 B) (type_2 A)).

def type_10 : hol.type -> hol.type -> hol.type -> hol.type :=
  C : hol.type => B : hol.type => A : hol.type => hol.arr (type_8 C B A) (hol.arr (type_0 B) (hol.arr (type_2 A) C)).

(; Theorem: |- ((= Function.flip) \lambda f. \lambda x. \lambda y. ((f y) x)) ;)

def type_11 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_2 A) (type_3 B A).

def term_8 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_11 B A) (type_3 B A)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_11 B A) => x_2 : hol.term (type_2 A) => f_1 (term_0 A x_2) (term_0 A x_2).

(; Constant Function.Combinator.w ;)

def Function_2ECombinator_2Ew : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_11 B A) (type_3 B A)) :=
  B : hol.type => A : hol.type => term_8 B A.

(; dict ;)

thm thm_5 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (hol.arr (type_11 B A) (type_3 B A)) (Function_2ECombinator_2Ew (type_0 B) (type_2 A)) (term_8 B A)) :=
  B : hol.type => A : hol.type => hol.REFL (hol.arr (type_11 B A) (type_3 B A)) (Function_2ECombinator_2Ew (type_0 B) (type_2 A)).

def type_12 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_11 B A) (type_3 B A).

(; Theorem: |- ((= Function.Combinator.w) \lambda f. \lambda x. ((f x) x)) ;)

def type_13 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_3 B A) type_5.

def type_14 : hol.type :=
  hol.arr type_5 (hol.arr type_5 type_5).

def term_9 : hol.term type_14 :=
  hol.eq type_5.

def type_15 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) type_5.

def type_16 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_15 A) type_5.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_2 A).

def term_10 : A : hol.type -> hol.term (type_16 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_16 A).

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_2 A).

def term_11 : hol.term type_14 :=
  Data_2EBool_2E_3D_3D_3E type_14.

def type_17 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_0 B) type_5.

def term_12 : B : hol.type -> hol.term (hol.arr (type_0 B) (type_17 B)) :=
  B : hol.type => hol.eq (type_0 B).

def term_13 : B : hol.type -> A : hol.type -> __1861_1 : hol.term (type_3 B A) -> hol.term (type_3 B A) :=
  B : hol.type => A : hol.type => __1861_1 : hol.term (type_3 B A) => __1861_1.

def term_14 : A : hol.type -> x1_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => x1_1 : hol.term (type_2 A) => x1_1.

def term_15 : A : hol.type -> x2_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => x2_1 : hol.term (type_2 A) => x2_1.

def term_16 : A : hol.type -> x2_1 : hol.term (type_2 A) -> x1_2 : hol.term (type_2 A) -> hol.term type_5 :=
  A : hol.type => x2_1 : hol.term (type_2 A) => x1_2 : hol.term (type_2 A) => hol.eq (type_2 A) (term_14 A x1_2) (term_15 A x2_1).

def term_17 : B : hol.type -> A : hol.type -> __1861_1 : hol.term (type_3 B A) -> hol.term type_5 :=
  B : hol.type => A : hol.type => __1861_1 : hol.term (type_3 B A) => term_10 A (x1_2 : hol.term (type_2 A) => term_10 A (x2_3 : hol.term (type_2 A) => term_11 (term_12 B (term_13 B A __1861_1 (term_14 A x1_2)) (term_13 B A __1861_1 (term_15 A x2_3))) (term_16 A x2_3 x1_2))).

def term_18 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => __1861_1 : hol.term (type_3 B A) => term_17 B A __1861_1.

(; Constant Function.injective ;)

def Function_2Einjective : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => term_18 B A.

(; dict ;)

thm thm_6 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (type_13 B A) (Function_2Einjective (type_0 B) (type_2 A)) (term_18 B A)) :=
  B : hol.type => A : hol.type => hol.REFL (type_13 B A) (Function_2Einjective (type_0 B) (type_2 A)).

def term_19 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => Function_2Einjective (type_0 B) (type_2 A).

def term_20 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_3 B A) -> hol.term (type_3 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_3 B A) => f_1.

def term_21 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_3 B A) => term_9 (term_19 B A (term_20 B A f_1)) (term_10 A (x1_2 : hol.term (type_2 A) => term_10 A (x2_3 : hol.term (type_2 A) => term_11 (term_12 B (term_20 B A f_1 (term_14 A x1_2)) (term_20 B A f_1 (term_15 A x2_3))) (term_16 A x2_3 x1_2)))).

def term_22 : A : hol.type -> P_1 : hol.term (type_15 A) -> hol.term (type_15 A) :=
  A : hol.type => P_1 : hol.term (type_15 A) => P_1.

(; Constant Data.Bool.T ;)

Data_2EBool_2ET : A : hol.type -> hol.term (type_2 A).

def term_23 : hol.term type_5 :=
  Data_2EBool_2ET type_5.

def term_24 : A : hol.type -> hol.term (type_16 A) :=
  A : hol.type => p_1 : hol.term (type_15 A) => hol.eq (type_15 A) p_1 (x_2 : hol.term (type_2 A) => term_23).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (hol.eq (type_16 A) (term_10 A) (term_24 A)).

(; dict ;)

thm thm_8 : A : hol.type -> P_1 : hol.term (type_15 A) -> hol.proof (term_9 (hol.eq (type_15 A) (term_22 A P_1) (x_2 : hol.term (type_2 A) => term_23)) (term_10 A (term_22 A P_1))) :=
  A : hol.type => P_1 : hol.term (type_15 A) => hol.SYM type_5 (term_10 A (term_22 A P_1)) (hol.eq (type_15 A) (term_22 A P_1) (x_2 : hol.term (type_2 A) => term_23)) (hol.EQ_MP (term_9 (term_10 A (term_22 A P_1)) (term_24 A (term_22 A P_1))) (term_9 (term_10 A (term_22 A P_1)) (hol.eq (type_15 A) (term_22 A P_1) (x_2 : hol.term (type_2 A) => term_23))) (hol.APP_THM type_5 type_5 (term_9 (term_10 A (term_22 A P_1))) (term_9 (term_10 A (term_22 A P_1))) (term_24 A (term_22 A P_1)) (hol.eq (type_15 A) (term_22 A P_1) (x_2 : hol.term (type_2 A) => term_23)) (hol.REFL (hol.arr type_5 type_5) (term_9 (term_10 A (term_22 A P_1)))) (hol.BETA_CONV (type_15 A) type_5 (p_2 : hol.term (type_15 A) => hol.eq (type_15 A) p_2 (x_3 : hol.term (type_2 A) => term_23)) (term_22 A P_1))) (hol.APP_THM (type_15 A) type_5 (term_10 A) (term_24 A) (term_22 A P_1) (term_22 A P_1) (thm_7 A) (hol.REFL (type_15 A) (term_22 A P_1)))).

(; dict ;)

thm thm_9 : B : hol.type -> A : hol.type -> P_1 : hol.term (type_13 B A) -> hol.proof (term_9 (hol.eq (type_13 B A) P_1 (x_2 : hol.term (type_3 B A) => term_23)) (Data_2EBool_2E_21 (hol.arr (type_13 B A) type_5) P_1)) :=
  B : hol.type => A : hol.type => P_1 : hol.term (type_13 B A) => (A : hol.type => P_1 : hol.term (type_15 A) => thm_8 A P_1) (type_3 B A) P_1.

def term_25 : t_1 : hol.term type_5 -> hol.term type_5 :=
  t_1 : hol.term type_5 => t_1.

(; dict ;)

thm thm_10 : t_1 : hol.term type_5 -> hyp_1 : hol.proof (term_9 (term_25 t_1) term_23) -> hol.proof (term_9 term_23 (term_25 t_1)) :=
  t_1 : hol.term type_5 => hyp_1 : hol.proof (term_9 (term_25 t_1) term_23) => hol.SYM type_5 (term_25 t_1) term_23 hyp_1.

(; axiom ;)

thm_11 : hol.proof term_23.

(; dict ;)

thm thm_12 : t_1 : hol.term type_5 -> hol.proof (term_9 (term_25 t_1) (term_9 (term_25 t_1) term_23)) :=
  t_1 : hol.term type_5 => hol.PROP_EXT (term_25 t_1) (term_9 (term_25 t_1) term_23) (hyp_1 : hol.proof (term_9 (term_25 t_1) term_23) => hol.EQ_MP term_23 (term_25 t_1) (thm_10 t_1 hyp_1) thm_11) (hyp_1 : hol.proof (term_25 t_1) => hol.PROP_EXT (term_25 t_1) term_23 (hyp_2 : hol.proof term_23 => hyp_1) (hyp_2 : hol.proof (term_25 t_1) => thm_11)).

(; dict ;)

thm thm_13 : B : hol.type -> A : hol.type -> __1861_1 : hol.term (type_3 B A) -> hol.proof (term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1)) :=
  B : hol.type => A : hol.type => __1861_1 : hol.term (type_3 B A) => hol.TRANS type_5 (term_19 B A (term_13 B A __1861_1)) (term_18 B A (term_13 B A __1861_1)) (term_17 B A __1861_1) (hol.APP_THM (type_3 B A) type_5 (term_19 B A) (term_18 B A) (term_13 B A __1861_1) (term_13 B A __1861_1) (thm_6 B A) (hol.REFL (type_3 B A) (term_13 B A __1861_1))) (hol.BETA_CONV (type_3 B A) type_5 (__1861_2 : hol.term (type_3 B A) => term_17 B A __1861_2) (term_13 B A __1861_1)).

def term_26 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_13 B A) type_5) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_13 B A) type_5).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Function.injective f)) (Data.Bool.! \lambda x1. (Data.Bool.! \lambda x2. ((Data.Bool.==> ((= (f x1)) (f x2))) ((= x1) x2)))))) ;)

(; thm ;)

thm thm_14 : B : hol.type -> A : hol.type -> hol.proof (term_26 B A (term_21 B A)) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.eq (type_13 B A) (__1861_1 : hol.term (type_3 B A) => term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1)) (__1861_1 : hol.term (type_3 B A) => term_23)) (term_26 B A (term_21 B A)) ((B : hol.type => A : hol.type => P_1 : hol.term (type_13 B A) => thm_9 B A P_1) (type_0 B) (type_2 A) (term_21 B A)) (hol.ABS_THM (type_3 B A) type_5 (__1861_1 : hol.term (type_3 B A) => term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1)) (__1861_1 : hol.term (type_3 B A) => term_23) (__1861_1 : hol.term (type_3 B A) => hol.EQ_MP (term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1)) (term_9 (term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1)) term_23) ((t_1 : hol.term type_5 => thm_12 t_1) (term_9 (term_19 B A (term_13 B A __1861_1)) (term_17 B A __1861_1))) (thm_13 B A __1861_1))).

def term_27 : B : hol.type -> hol.term (hol.arr (type_17 B) type_5) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_17 B) type_5).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_2 A).

def term_28 : A : hol.type -> hol.term (type_16 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_16 A).

def term_29 : B : hol.type -> y_1 : hol.term (type_0 B) -> hol.term (type_17 B) :=
  B : hol.type => y_1 : hol.term (type_0 B) => term_12 B y_1.

def term_30 : B : hol.type -> A : hol.type -> __1866_1 : hol.term (type_3 B A) -> hol.term (type_3 B A) :=
  B : hol.type => A : hol.type => __1866_1 : hol.term (type_3 B A) => __1866_1.

def term_31 : A : hol.type -> B : hol.type -> __1866_1 : hol.term (type_3 B A) -> hol.term type_5 :=
  A : hol.type => B : hol.type => __1866_1 : hol.term (type_3 B A) => term_27 B (y_2 : hol.term (type_0 B) => term_28 A (x_3 : hol.term (type_2 A) => term_29 B y_2 (term_30 B A __1866_1 (term_0 A x_3)))).

def term_32 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => __1866_1 : hol.term (type_3 B A) => term_31 A B __1866_1.

(; Constant Function.surjective ;)

def Function_2Esurjective : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => term_32 B A.

(; dict ;)

thm thm_15 : B : hol.type -> A : hol.type -> hol.proof (hol.eq (type_13 B A) (Function_2Esurjective (type_0 B) (type_2 A)) (term_32 B A)) :=
  B : hol.type => A : hol.type => hol.REFL (type_13 B A) (Function_2Esurjective (type_0 B) (type_2 A)).

def term_33 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => Function_2Esurjective (type_0 B) (type_2 A).

def term_34 : B : hol.type -> A : hol.type -> hol.term (type_13 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_3 B A) => term_9 (term_33 B A (term_20 B A f_1)) (term_27 B (y_2 : hol.term (type_0 B) => term_28 A (x_3 : hol.term (type_2 A) => term_29 B y_2 (term_20 B A f_1 (term_0 A x_3))))).

(; dict ;)

thm thm_16 : B : hol.type -> A : hol.type -> __1866_1 : hol.term (type_3 B A) -> hol.proof (term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1)) :=
  B : hol.type => A : hol.type => __1866_1 : hol.term (type_3 B A) => hol.TRANS type_5 (term_33 B A (term_30 B A __1866_1)) (term_32 B A (term_30 B A __1866_1)) (term_31 A B __1866_1) (hol.APP_THM (type_3 B A) type_5 (term_33 B A) (term_32 B A) (term_30 B A __1866_1) (term_30 B A __1866_1) (thm_15 B A) (hol.REFL (type_3 B A) (term_30 B A __1866_1))) (hol.BETA_CONV (type_3 B A) type_5 (__1866_2 : hol.term (type_3 B A) => term_31 A B __1866_2) (term_30 B A __1866_1)).

(; Theorem: |- (Data.Bool.! \lambda f. ((= (Function.surjective f)) (Data.Bool.! \lambda y. (Data.Bool.? \lambda x. ((= y) (f x)))))) ;)

(; thm ;)

thm thm_17 : B : hol.type -> A : hol.type -> hol.proof (term_26 B A (term_34 B A)) :=
  B : hol.type => A : hol.type => hol.EQ_MP (hol.eq (type_13 B A) (__1866_1 : hol.term (type_3 B A) => term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1)) (__1866_1 : hol.term (type_3 B A) => term_23)) (term_26 B A (term_34 B A)) ((B : hol.type => A : hol.type => P_1 : hol.term (type_13 B A) => thm_9 B A P_1) (type_0 B) (type_2 A) (term_34 B A)) (hol.ABS_THM (type_3 B A) type_5 (__1866_1 : hol.term (type_3 B A) => term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1)) (__1866_1 : hol.term (type_3 B A) => term_23) (__1866_1 : hol.term (type_3 B A) => hol.EQ_MP (term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1)) (term_9 (term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1)) term_23) ((t_1 : hol.term type_5 => thm_12 t_1) (term_9 (term_33 B A (term_30 B A __1866_1)) (term_31 A B __1866_1))) (thm_16 B A __1866_1))).

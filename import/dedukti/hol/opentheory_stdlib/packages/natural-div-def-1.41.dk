
(; This file was generated by Holide. ;)

#NAME natural_2Ddiv_2Ddef_2D1_2E41.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

(; Constant natural-div-def-1.41 ;)

natural_2Ddiv_2Ddef_2D1_2E41 : A : hol.type -> hol.term A.

def term_0 : hol.term type_2 :=
  natural_2Ddiv_2Ddef_2D1_2E41 type_2.

(; Constant Number.Natural.even ;)

def Number_2ENatural_2Eeven : hol.term type_2 :=
  term_0.

def term_1 : hol.term type_2 :=
  Number_2ENatural_2Eeven.

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term A.

def term_2 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_3 : hol.term type_1 :=
  term_1 term_2.

(; axiom ;)

thm_0 : hol.proof term_3.

(; Theorem: |- (Number.Natural.even Number.Natural.zero) ;)

def type_3 : hol.type :=
  hol.arr type_1 type_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term A.

def term_4 : hol.term type_3 :=
  Data_2EBool_2E_7E type_3.

(; Constant Number.Natural.odd ;)

def Number_2ENatural_2Eodd : hol.term type_2 :=
  term_0.

def term_5 : hol.term type_2 :=
  Number_2ENatural_2Eodd.

def term_6 : hol.term type_1 :=
  term_4 (term_5 term_2).

(; axiom ;)

thm_1 : hol.proof term_6.

(; Theorem: |- (Data.Bool.~ (Number.Natural.odd Number.Natural.zero)) ;)

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_7 : hol.term (hol.arr type_2 type_1) :=
  Data_2EBool_2E_21 (hol.arr type_2 type_1).

def type_4 : hol.type :=
  hol.arr type_1 type_3.

def term_8 : hol.term type_4 :=
  hol.eq type_1.

def type_5 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term A.

def term_9 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_10 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => Number_2ENatural_2Esuc type_5 (term_9 n_1).

def term_11 : hol.term type_1 :=
  term_7 (n_1 : hol.term type_0 => term_8 (term_1 (term_10 n_1)) (term_4 (term_1 (term_9 n_1)))).

(; axiom ;)

thm_2 : hol.proof term_11.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.even (Number.Natural.suc n))) (Data.Bool.~ (Number.Natural.even n)))) ;)

def term_12 : hol.term type_1 :=
  term_7 (n_1 : hol.term type_0 => term_8 (term_5 (term_10 n_1)) (term_4 (term_5 (term_9 n_1)))).

(; axiom ;)

thm_3 : hol.proof term_12.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Number.Natural.odd (Number.Natural.suc n))) (Data.Bool.~ (Number.Natural.odd n)))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term A.

def type_6 : hol.type :=
  hol.arr type_0 type_2.

def term_13 : hol.term type_6 :=
  hol.eq type_0.

def term_14 : n_1 : hol.term type_0 -> hol.term type_3 :=
  n_1 : hol.term type_0 => Data_2EBool_2E_3D_3D_3E type_4 (term_4 (term_13 (term_9 n_1) term_2)).

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term A.

def type_7 : hol.type :=
  hol.arr type_0 type_5.

def term_15 : hol.term type_7 :=
  natural_2Ddiv_2Ddef_2D1_2E41 type_7.

(; Constant Number.Natural.mod ;)

def Number_2ENatural_2Emod : hol.term type_7 :=
  term_15.

def term_16 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_17 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => Number_2ENatural_2Emod (term_16 m_2) (term_9 n_1).

def term_18 : hol.term type_1 :=
  term_7 (m_1 : hol.term type_0 => term_7 (n_2 : hol.term type_0 => term_14 n_2 (Number_2ENatural_2E_3C type_6 (term_17 n_2 m_1) (term_9 n_2)))).

(; axiom ;)

thm_4 : hol.proof term_18.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> (Data.Bool.~ ((= n) Number.Natural.zero))) ((Number.Natural.< ((Number.Natural.mod m) n)) n)))) ;)

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term A.

(; Constant Number.Natural.* ;)

Number_2ENatural_2E_2A : A : hol.type -> hol.term A.

(; Constant Number.Natural.div ;)

def Number_2ENatural_2Ediv : hol.term type_7 :=
  term_15.

def term_19 : hol.term type_1 :=
  term_7 (m_1 : hol.term type_0 => term_7 (n_2 : hol.term type_0 => term_14 n_2 (term_13 (Number_2ENatural_2E_2B type_7 (Number_2ENatural_2E_2A type_7 (Number_2ENatural_2Ediv (term_16 m_1) (term_9 n_2)) (term_9 n_2)) (term_17 n_2 m_1)) (term_16 m_1)))).

(; axiom ;)

thm_5 : hol.proof term_19.

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> (Data.Bool.~ ((= n) Number.Natural.zero))) ((= ((Number.Natural.+ ((Number.Natural.* ((Number.Natural.div m) n)) n)) ((Number.Natural.mod m) n))) m)))) ;)


(; This file was generated by Holide. ;)

#NAME list_2Ddest_2Dthm_2D1_2E16.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

Data_2EList_2Elist : hol.type -> hol.type.

def type_1 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_2 : hol.type :=
  hol.bool.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) type_2.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (hol.arr (type_3 A) type_2) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) type_2).

def type_4 : hol.type :=
  hol.arr type_2 type_2.

def type_5 : hol.type :=
  hol.arr type_2 type_4.

(; Constant Data.List.null ;)

Data_2EList_2Enull : A : hol.type -> hol.term (type_0 A).

def term_1 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => l_1 : hol.term (type_1 A) => l_1.

def term_2 : A : hol.type -> l_1 : hol.term (type_1 A) -> hol.term type_2 :=
  A : hol.type => l_1 : hol.term (type_1 A) => Data_2EList_2Enull (type_3 A) (term_1 A l_1).

def term_3 : A : hol.type -> hol.term (hol.arr (type_1 A) (type_3 A)) :=
  A : hol.type => hol.eq (type_1 A).

(; Constant Data.List.[] ;)

Data_2EList_2E_5B_5D : A : hol.type -> hol.term (type_0 A).

def term_4 : A : hol.type -> hol.term (type_1 A) :=
  A : hol.type => Data_2EList_2E_5B_5D (type_1 A).

def term_5 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => hol.eq type_2 (term_2 A l_1) (term_3 A (term_1 A l_1) (term_4 A))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_5 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= (Data.List.null l)) ((= l) Data.List.[]))) ;)

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_1 A).

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) (type_6 A).

(; Constant Data.List.case.[].:: ;)

Data_2EList_2Ecase_2E_5B_5D_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_6 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Data_2EList_2E_3A_3A (type_7 A).

def term_7 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => term_3 A (Data_2EList_2Ecase_2E_5B_5D_2E_3A_3A (hol.arr (type_1 A) (hol.arr (type_7 A) (type_6 A))) (term_4 A) (term_6 A) (term_1 A l_1)) (term_1 A l_1)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_7 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= (((Data.List.case.[].:: Data.List.[]) Data.List.::) l)) l)) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.head ;)

Data_2EList_2Ehead : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.tail ;)

Data_2EList_2Etail : A : hol.type -> hol.term (type_0 A).

def term_8 : A : hol.type -> hol.term type_2 :=
  A : hol.type => term_0 A (l_1 : hol.term (type_1 A) => Data_2EBool_2E_3D_3D_3E type_5 (Data_2EBool_2E_7E type_4 (term_2 A l_1)) (term_3 A (term_6 A (Data_2EList_2Ehead (hol.arr (type_1 A) (type_0 A)) (term_1 A l_1)) (Data_2EList_2Etail (type_6 A) (term_1 A l_1))) (term_1 A l_1))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_8 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((Data.Bool.==> (Data.Bool.~ (Data.List.null l))) ((= ((Data.List.:: (Data.List.head l)) (Data.List.tail l))) l))) ;)

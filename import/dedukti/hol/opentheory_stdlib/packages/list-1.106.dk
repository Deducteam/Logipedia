
(; This file was generated by Holide. ;)

#NAME list_2D1_2E106.

def type_0 : hol.type :=
  hol.bool.

def type_1 : hol.type :=
  hol.arr type_0 type_0.

def type_2 : hol.type -> hol.type :=
  A : hol.type => A.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) (type_2 A).

def type_4 : hol.type :=
  hol.arr type_0 type_1.

def term_0 : hol.term type_4 :=
  hol.eq type_0.

(; Constant list-1.106 ;)

list_2D1_2E106 : A : hol.type -> hol.term (type_2 A).

def term_1 : hol.term type_0 :=
  list_2D1_2E106 type_0.

def term_2 : A : hol.type -> x_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => x_1 : hol.term (type_2 A) => x_1.

def term_3 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => x_1 : hol.term (type_2 A) => term_2 A x_1.

def term_4 : A : hol.type -> hol.term type_1 :=
  A : hol.type => (y_1 : hol.term (type_3 A) => term_0 term_1) (term_3 A).

(; dict ;)

thm thm_0 : A : hol.type -> hol.proof (hol.eq type_1 (term_4 A) (term_4 A)) :=
  A : hol.type => hol.REFL type_1 (term_4 A).

(; dict ;)

thm thm_1 : hol.proof (term_0 term_1 term_1) :=
  hol.REFL type_0 term_1.

Data_2EList_2Elist : hol.type -> hol.type.

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr type_0 (Data_2EList_2Elist (type_2 A))).

(; Constant _ ;)

__ : A : hol.type -> hol.term (hol.arr (Data_2EList_2Elist (type_2 A)) type_0).


(; This file was generated by Holide. ;)

#NAME set_2Dsize_2D1_2E58.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type :=
  hol.arr type_0 type_1.

def type_3 : hol.type :=
  hol.arr type_0 type_2.

def term_0 : hol.term type_3 :=
  hol.eq type_0.

def type_4 : hol.type -> hol.type :=
  A : hol.type => A.

Set_2Eset : hol.type -> hol.type.

def type_5 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_4 A).

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_0.

(; Constant set-size-1.58 ;)

set_2Dsize_2D1_2E58 : A : hol.type -> hol.term (type_4 A).

(; Constant Set.size ;)

def Set_2Esize : A : hol.type -> hol.term (type_6 A) :=
  A : hol.type => set_2Dsize_2D1_2E58 (type_6 A).

def term_1 : A : hol.type -> hol.term (type_6 A) :=
  A : hol.type => Set_2Esize (type_4 A).

(; Constant Set.{} ;)

Set_2E_7B_7D : A : hol.type -> hol.term (type_4 A).

def term_2 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Set_2E_7B_7D (type_5 A).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term (type_4 A).

def term_3 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_4 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 (term_1 A (term_2 A)) term_3.

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_4 A).

(; Theorem: |- ((= (Set.size Set.{})) Number.Natural.zero) ;)

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_2.

(; Constant Set.hasSize ;)

def Set_2EhasSize : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => set_2Dsize_2D1_2E58 (type_7 A).

def type_8 : hol.type :=
  Set_2Eset type_1.

(; Constant Set.universe ;)

Set_2Euniverse : A : hol.type -> hol.term (type_4 A).

def type_9 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.bit0 ;)

Number_2ENatural_2Ebit0 : A : hol.type -> hol.term (type_4 A).

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term (type_4 A).

def term_5 : hol.term type_0 :=
  Number_2ENatural_2Ebit1 type_9 term_3.

def term_6 : hol.term type_0 :=
  Number_2ENatural_2Ebit0 type_9 term_5.

def term_7 : hol.term type_1 :=
  Set_2EhasSize type_1 (Set_2Euniverse type_8) term_6.

(; axiom ;)

thm_1 : hol.proof term_7.

(; Theorem: |- ((Set.hasSize Set.universe) (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) ;)

(; Constant Set.fold ;)

Set_2Efold : A : hol.type -> hol.term (type_4 A).

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_4 A).

def term_8 : hol.term type_9 :=
  Number_2ENatural_2Esuc type_9.

def term_9 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_10 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => term_8 (term_9 n_1).

def term_11 : A : hol.type -> hol.term type_1 :=
  A : hol.type => hol.eq (type_6 A) (term_1 A) (Set_2Efold (hol.arr (hol.arr (type_4 A) type_9) (hol.arr type_0 (type_6 A))) (x_1 : hol.term (type_4 A) => n_2 : hol.term type_0 => term_10 n_2) term_3).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- ((= Set.size) ((Set.fold \lambda x. \lambda n. (Number.Natural.suc n)) Number.Natural.zero)) ;)

def type_10 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_1.

def type_11 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_10 A) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_4 A).

def term_12 : A : hol.type -> hol.term (type_11 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_11 A).

def term_13 : A : hol.type -> hol.term (type_7 A) :=
  A : hol.type => Set_2EhasSize (type_4 A).

(; Constant Set.insert ;)

Set_2Einsert : A : hol.type -> hol.term (type_4 A).

def term_14 : A : hol.type -> hol.term (hol.arr (type_4 A) (hol.arr (type_5 A) (type_5 A))) :=
  A : hol.type => Set_2Einsert (hol.arr (type_4 A) (hol.arr (type_5 A) (type_5 A))).

def term_15 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => x_1.

def term_16 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (hol.arr (type_5 A) (type_5 A)) :=
  A : hol.type => x_1 : hol.term (type_4 A) => term_14 A (term_15 A x_1).

def term_17 : A : hol.type -> x_1 : hol.term (type_4 A) -> hol.term (type_5 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => term_16 A x_1 (term_2 A).

def term_18 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_12 A (x_1 : hol.term (type_4 A) => term_13 A (term_17 A x_1) term_5).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_18 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Set.hasSize ((Set.insert x) Set.{})) (Number.Natural.bit1 Number.Natural.zero))) ;)

def type_12 : hol.type :=
  hol.arr type_1 type_1.

def type_13 : hol.type :=
  hol.arr type_1 type_12.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_4 A).

def term_19 : hol.term type_13 :=
  Data_2EBool_2E_3D_3D_3E type_13.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_4 A).

def term_20 : hol.term type_13 :=
  Data_2EBool_2E_2F_5C type_13.

def type_14 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_1.

(; Constant Set.finite ;)

Set_2Efinite : A : hol.type -> hol.term (type_4 A).

def term_21 : A : hol.type -> hol.term (type_14 A) :=
  A : hol.type => Set_2Efinite (type_14 A).

def term_22 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Set_2Euniverse (type_5 A).

def type_15 : hol.type -> hol.type :=
  B : hol.type => B.

def type_16 : hol.type -> hol.type :=
  B : hol.type => Set_2Eset (type_15 B).

def type_17 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_16 B) type_1.

def term_23 : B : hol.type -> hol.term (type_17 B) :=
  B : hol.type => Set_2Efinite (type_17 B).

def term_24 : B : hol.type -> hol.term (type_16 B) :=
  B : hol.type => Set_2Euniverse (type_16 B).

def term_25 : B : hol.type -> A : hol.type -> hol.term type_12 :=
  B : hol.type => A : hol.type => term_19 (term_20 (term_21 A (term_22 A)) (term_23 B (term_24 B))).

def type_18 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_15 B).

def type_19 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_18 B A).

def term_26 : B : hol.type -> A : hol.type -> hol.term (type_19 B A) :=
  B : hol.type => A : hol.type => Set_2Euniverse (type_19 B A).

def term_27 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 B A (Set_2Efinite (hol.arr (type_19 B A) type_1) (term_26 B A)).

(; axiom ;)

thm_4 : B : hol.type -> A : hol.type -> hol.proof (term_27 B A).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite Set.universe)) (Set.finite Set.universe))) (Set.finite Set.universe)) ;)

def term_28 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_12 A (x_1 : hol.term (type_4 A) => term_0 (term_1 A (term_17 A x_1)) term_5).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_28 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((= (Set.size ((Set.insert x) Set.{}))) (Number.Natural.bit1 Number.Natural.zero))) ;)

def type_20 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_14 A) type_1.

def term_29 : A : hol.type -> hol.term (type_20 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_20 A).

def term_30 : hol.term type_13 :=
  hol.eq type_1.

def term_31 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => s_1.

def term_32 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_21 A (term_31 A s_1).

def term_33 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_13 A (term_31 A s_1).

def term_34 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_1 A (term_31 A s_1).

def term_35 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_30 (term_32 A s_1) (term_33 A s_1 (term_34 A s_1))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_35 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= (Set.finite s)) ((Set.hasSize s) (Set.size s)))) ;)

def type_21 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) (type_14 A).

def term_36 : A : hol.type -> hol.term (type_21 A) :=
  A : hol.type => hol.eq (type_5 A).

def term_37 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_14 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_36 A (term_31 A s_1).

def term_38 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_37 A s_1 (term_2 A).

def term_39 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_30 (term_33 A s_1 term_3) (term_38 A s_1)).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_39 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Set.hasSize s) Number.Natural.zero)) ((= s) Set.{}))) ;)

def type_22 : hol.type :=
  hol.arr type_2 type_1.

def term_40 : hol.term type_22 :=
  Data_2EBool_2E_21 type_22.

def term_41 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_33 A s_2 (term_9 n_1).

def term_42 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_19 (term_41 A n_1 s_2).

def term_43 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_0 (term_34 A s_1).

def term_44 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_43 A s_2 (term_9 n_1).

def term_45 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_42 A n_2 s_1 (term_44 A n_2 s_1))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_45 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) ((= (Set.size s)) n)))) ;)

def term_46 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_19 (term_32 A s_1).

def term_47 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_46 A s_1 (term_30 (term_43 A s_1 term_3) (term_38 A s_1))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (term_47 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= ((= (Set.size s)) Number.Natural.zero)) ((= s) Set.{})))) ;)

def type_23 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_18 B A) type_1.

def type_24 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_23 B A) type_1.

def term_48 : B : hol.type -> A : hol.type -> hol.term (type_24 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (type_24 B A).

(; Constant Number.Natural.<= ;)

Number_2ENatural_2E_3C_3D : A : hol.type -> hol.term (type_4 A).

def term_49 : hol.term type_3 :=
  Number_2ENatural_2E_3C_3D type_3.

def term_50 : B : hol.type -> hol.term (hol.arr (type_16 B) type_0) :=
  B : hol.type => Set_2Esize (type_15 B).

(; Constant Set.image ;)

Set_2Eimage : A : hol.type -> hol.term (type_4 A).

def term_51 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_18 B A) -> hol.term (type_18 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_18 B A) => f_1.

def term_52 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_18 B A) -> hol.term (hol.arr (type_5 A) (type_16 B)) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_18 B A) => Set_2Eimage (hol.arr (type_18 B A) (hol.arr (type_5 A) (type_16 B))) (term_51 B A f_1).

def term_53 : B : hol.type -> A : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_18 B A) -> hol.term (type_16 B) :=
  B : hol.type => A : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_18 B A) => term_52 B A f_2 (term_31 A s_1).

def term_54 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_18 B A) -> hol.term type_0 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_18 B A) => term_50 B (term_53 B A s_1 f_2).

def term_55 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_46 A s_2 (term_49 (term_54 A B s_2 f_1) (term_34 A s_2)))).

(; axiom ;)

thm_10 : B : hol.type -> A : hol.type -> hol.proof (term_55 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= (Set.size ((Set.image f) s))) (Set.size s))))) ;)

def type_25 : hol.type :=
  Set_2Eset type_0.

def term_56 : hol.term (hol.arr type_25 type_2) :=
  Set_2EhasSize type_0.

(; Constant Set.fromPredicate ;)

Set_2EfromPredicate : A : hol.type -> hol.term (type_4 A).

def term_57 : hol.term (hol.arr type_2 type_25) :=
  Set_2EfromPredicate (hol.arr type_2 type_25).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_4 A).

def term_58 : hol.term type_22 :=
  Data_2EBool_2E_3F type_22.

def term_59 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_60 : m_1 : hol.term type_0 -> v_2 : hol.term type_0 -> hol.term type_12 :=
  m_1 : hol.term type_0 => v_2 : hol.term type_0 => term_20 (term_0 v_2 (term_59 m_1)).

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_4 A).

def term_61 : hol.term type_3 :=
  Number_2ENatural_2E_3C type_3.

def term_62 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> hol.term type_1 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => term_61 (term_59 m_2) (term_9 n_1).

def term_63 : n_1 : hol.term type_0 -> hol.term type_25 :=
  n_1 : hol.term type_0 => term_57 (v_2 : hol.term type_0 => term_58 (m_3 : hol.term type_0 => term_60 m_3 v_2 (term_62 n_1 m_3))).

def term_64 : hol.term type_1 :=
  term_40 (n_1 : hol.term type_0 => term_56 (term_63 n_1) (term_9 n_1)).

(; axiom ;)

thm_11 : hol.proof term_64.

(; Theorem: |- (Data.Bool.! \lambda n. ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.< m) n))))) n)) ;)

def term_65 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_30 (term_41 A n_1 s_2).

def term_66 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_20 (term_32 A s_1).

def term_67 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_65 A n_2 s_1 (term_66 A s_1 (term_44 A n_2 s_1)))).

(; axiom ;)

thm_12 : A : hol.type -> hol.proof (term_67 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) n)) ((Data.Bool./\ (Set.finite s)) ((= (Set.size s)) n))))) ;)

def term_68 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_19 B A) type_0) :=
  B : hol.type => A : hol.type => Set_2Esize (type_18 B A).

def type_26 : hol.type :=
  hol.arr type_0 type_9.

(; Constant Number.Natural.^ ;)

Number_2ENatural_2E_5E : A : hol.type -> hol.term (type_4 A).

def term_69 : hol.term type_26 :=
  Number_2ENatural_2E_5E type_26.

def term_70 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_25 B A (term_0 (term_68 B A (term_26 B A)) (term_69 (term_50 B (term_24 B)) (term_1 A (term_22 A)))).

(; axiom ;)

thm_13 : B : hol.type -> A : hol.type -> hol.proof (term_70 B A).

(; Theorem: |- ((Data.Bool.==> ((Data.Bool./\ (Set.finite Set.universe)) (Set.finite Set.universe))) ((= (Set.size Set.universe)) ((Number.Natural.^ (Set.size Set.universe)) (Set.size Set.universe)))) ;)

def term_71 : hol.term (hol.arr type_25 type_0) :=
  Set_2Esize type_0.

def term_72 : hol.term type_1 :=
  term_40 (n_1 : hol.term type_0 => term_0 (term_71 (term_63 n_1)) (term_9 n_1)).

(; axiom ;)

thm_14 : hol.proof term_72.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.< m) n)))))) n)) ;)

(; Constant Set.properSubset ;)

Set_2EproperSubset : A : hol.type -> hol.term (type_4 A).

def term_73 : A : hol.type -> a_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => a_1 : hol.term (type_5 A) => a_1.

def term_74 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => b_1 : hol.term (type_5 A) => b_1.

def term_75 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_21 A (term_74 A b_1).

def term_76 : A : hol.type -> a_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => a_1 : hol.term (type_5 A) => term_1 A (term_73 A a_1).

def term_77 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_1 A (term_74 A b_1).

def term_78 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (a_1 : hol.term (type_5 A) => term_29 A (b_2 : hol.term (type_5 A) => term_19 (term_20 (Set_2EproperSubset (type_21 A) (term_73 A a_1) (term_74 A b_2)) (term_75 A b_2)) (term_61 (term_76 A a_1) (term_77 A b_2)))).

(; axiom ;)

thm_15 : A : hol.type -> hol.proof (term_78 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ ((Set.properSubset a) b)) (Set.finite b))) ((Number.Natural.< (Set.size a)) (Set.size b))))) ;)

(; Constant Set.subset ;)

Set_2Esubset : A : hol.type -> hol.term (type_4 A).

def term_79 : A : hol.type -> hol.term (type_21 A) :=
  A : hol.type => Set_2Esubset (type_21 A).

def term_80 : A : hol.type -> b_1 : hol.term (type_5 A) -> a_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => b_1 : hol.term (type_5 A) => a_2 : hol.term (type_5 A) => term_20 (term_79 A (term_73 A a_2) (term_74 A b_1)).

def term_81 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (a_1 : hol.term (type_5 A) => term_29 A (b_2 : hol.term (type_5 A) => term_19 (term_80 A b_2 a_1 (term_75 A b_2)) (term_49 (term_76 A a_1) (term_77 A b_2)))).

(; axiom ;)

thm_16 : A : hol.type -> hol.proof (term_81 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset a) b)) (Set.finite b))) ((Number.Natural.<= (Set.size a)) (Set.size b))))) ;)

def term_82 : B : hol.type -> hol.term (hol.arr (type_16 B) type_2) :=
  B : hol.type => Set_2EhasSize (type_15 B).

def term_83 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_19 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2EhasSize (type_18 B A).

def term_84 : m_1 : hol.term type_0 -> n_2 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => n_2 : hol.term type_0 => term_69 (term_9 n_2) (term_59 m_1).

def term_85 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_40 (m_1 : hol.term type_0 => term_40 (n_2 : hol.term type_0 => term_19 (term_20 (term_13 A (term_22 A) (term_59 m_1)) (term_82 B (term_24 B) (term_9 n_2))) (term_83 B A (term_26 B A) (term_84 m_1 n_2)))).

(; axiom ;)

thm_17 : B : hol.type -> A : hol.type -> hol.proof (term_85 B A).

(; Theorem: |- (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize Set.universe) m)) ((Set.hasSize Set.universe) n))) ((Set.hasSize Set.universe) ((Number.Natural.^ n) m))))) ;)

def term_86 : n_1 : hol.term type_0 -> hol.term type_25 :=
  n_1 : hol.term type_0 => term_57 (v_2 : hol.term type_0 => term_58 (m_3 : hol.term type_0 => term_60 m_3 v_2 (term_49 (term_59 m_3) (term_9 n_1)))).

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_4 A).

def term_87 : hol.term type_26 :=
  Number_2ENatural_2E_2B type_26.

def term_88 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => term_87 (term_9 n_1) term_5.

def term_89 : hol.term type_1 :=
  term_40 (n_1 : hol.term type_0 => term_56 (term_86 n_1) (term_88 n_1)).

(; axiom ;)

thm_18 : hol.proof term_89.

(; Theorem: |- (Data.Bool.! \lambda n. ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.<= m) n))))) ((Number.Natural.+ n) (Number.Natural.bit1 Number.Natural.zero)))) ;)

def term_90 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_49 (term_34 A s_1).

def term_91 : A : hol.type -> hol.term (type_11 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_11 A).

def term_92 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_14 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_79 A (term_31 A s_1).

def term_93 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => a_1 : hol.term (type_4 A) => a_1.

def term_94 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (hol.arr (type_5 A) (type_5 A)) :=
  A : hol.type => a_1 : hol.term (type_4 A) => term_14 A (term_93 A a_1).

def term_95 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_30 (term_66 A s_1 (term_90 A s_1 term_5)) (term_91 A (a_2 : hol.term (type_4 A) => term_92 A s_1 (term_94 A a_2 (term_2 A))))).

(; axiom ;)

thm_19 : A : hol.type -> hol.proof (term_95 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((= ((Data.Bool./\ (Set.finite s)) ((Number.Natural.<= (Set.size s)) (Number.Natural.bit1 Number.Natural.zero)))) (Data.Bool.? \lambda a. ((Set.subset s) ((Set.insert a) Set.{}))))) ;)

def term_96 : hol.term type_1 :=
  term_40 (n_1 : hol.term type_0 => term_0 (term_71 (term_86 n_1)) (term_88 n_1)).

(; axiom ;)

thm_20 : hol.proof term_96.

(; Theorem: |- (Data.Bool.! \lambda n. ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda m. ((Data.Bool./\ ((= v) m)) ((Number.Natural.<= m) n)))))) ((Number.Natural.+ n) (Number.Natural.bit1 Number.Natural.zero)))) ;)

def term_97 : B : hol.type -> hol.term (hol.arr (type_17 B) type_1) :=
  B : hol.type => Data_2EBool_2E_21 (hol.arr (type_17 B) type_1).

def term_98 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => t_1.

def term_99 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_21 A (term_98 A t_1).

def term_100 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_20 (term_99 A t_1).

def type_27 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_16 B) (type_17 B).

def term_101 : B : hol.type -> hol.term (type_27 B) :=
  B : hol.type => Set_2Esubset (type_27 B).

def term_102 : B : hol.type -> s_1 : hol.term (type_16 B) -> hol.term (type_16 B) :=
  B : hol.type => s_1 : hol.term (type_16 B) => s_1.

def term_103 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_1 A (term_98 A t_1).

def term_104 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_97 B (s_2 : hol.term (type_16 B) => term_29 A (t_3 : hol.term (type_5 A) => term_19 (term_100 A t_3 (term_101 B (term_102 B s_2) (term_52 B A f_1 (term_98 A t_3)))) (term_49 (term_50 B (term_102 B s_2)) (term_103 A t_3))))).

(; axiom ;)

thm_21 : B : hol.type -> A : hol.type -> hol.proof (term_104 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) ((Set.image f) t)))) ((Number.Natural.<= (Set.size s)) (Set.size t)))))) ;)

def term_105 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_19 (term_66 A s_2 (term_99 A t_1)).

def type_28 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) (hol.arr (type_5 A) (type_5 A)).

(; Constant Set.union ;)

Set_2Eunion : A : hol.type -> hol.term (type_4 A).

def term_106 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => Set_2Eunion (type_28 A) (term_31 A s_2) (term_98 A t_1).

def term_107 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_1 A (term_106 A t_1 s_2).

def term_108 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_9 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_87 (term_34 A s_1).

def term_109 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_108 A s_2 (term_103 A t_1).

def term_110 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_105 A t_2 s_1 (term_49 (term_107 A t_2 s_1) (term_109 A t_2 s_1)))).

(; axiom ;)

thm_22 : A : hol.type -> hol.proof (term_110 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((Number.Natural.<= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_111 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_92 A s_2 (term_98 A t_1).

def term_112 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_19 (term_100 A t_2 (term_111 A t_2 s_1)) (term_30 (term_43 A s_1 (term_103 A t_2)) (term_37 A s_1 (term_98 A t_2))))).

(; axiom ;)

thm_23 : A : hol.type -> hol.proof (term_112 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite t)) ((Set.subset s) t))) ((= ((= (Set.size s)) (Set.size t))) ((= s) t))))) ;)

def term_113 : A : hol.type -> b_1 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => b_1 : hol.term (type_5 A) => term_20 (term_75 A b_1).

def term_114 : A : hol.type -> b_1 : hol.term (type_5 A) -> a_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => b_1 : hol.term (type_5 A) => a_2 : hol.term (type_5 A) => term_36 A (term_73 A a_2) (term_74 A b_1).

def term_115 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (a_1 : hol.term (type_5 A) => term_29 A (b_2 : hol.term (type_5 A) => term_19 (term_113 A b_2 (term_80 A b_2 a_1 (term_0 (term_76 A a_1) (term_77 A b_2)))) (term_114 A b_2 a_1))).

(; axiom ;)

thm_24 : A : hol.type -> hol.proof (term_115 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite b)) ((Data.Bool./\ ((Set.subset a) b)) ((= (Set.size a)) (Set.size b))))) ((= a) b)))) ;)

def term_116 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (a_1 : hol.term (type_5 A) => term_29 A (b_2 : hol.term (type_5 A) => term_19 (term_113 A b_2 (term_80 A b_2 a_1 (term_49 (term_77 A b_2) (term_76 A a_1)))) (term_114 A b_2 a_1))).

(; axiom ;)

thm_25 : A : hol.type -> hol.proof (term_116 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((Data.Bool.==> ((Data.Bool./\ (Set.finite b)) ((Data.Bool./\ ((Set.subset a) b)) ((Number.Natural.<= (Set.size b)) (Set.size a))))) ((= a) b)))) ;)

def term_117 : B : hol.type -> t_1 : hol.term (type_16 B) -> hol.term (type_16 B) :=
  B : hol.type => t_1 : hol.term (type_16 B) => t_1.

def term_118 : B : hol.type -> t_1 : hol.term (type_16 B) -> hol.term type_1 :=
  B : hol.type => t_1 : hol.term (type_16 B) => term_23 B (term_117 B t_1).

def term_119 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_19 (term_66 A s_2 (term_118 B t_1)).

Data_2EPair_2E_2A : hol.type -> hol.type -> hol.type.

def type_29 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Data_2EPair_2E_2A (type_4 A) (type_15 B).

def type_30 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => Set_2Eset (type_29 B A).

def term_120 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_30 B A) type_0) :=
  B : hol.type => A : hol.type => Set_2Esize (type_29 B A).

(; Constant Set.cross ;)

Set_2Ecross : A : hol.type -> hol.term (type_4 A).

def term_121 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term (type_30 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => Set_2Ecross (hol.arr (type_5 A) (hol.arr (type_16 B) (type_30 B A))) (term_31 A s_2) (term_117 B t_1).

(; Constant Number.Natural.* ;)

Number_2ENatural_2E_2A : A : hol.type -> hol.term (type_4 A).

def term_122 : hol.term type_26 :=
  Number_2ENatural_2E_2A type_26.

def term_123 : B : hol.type -> t_1 : hol.term (type_16 B) -> hol.term type_0 :=
  B : hol.type => t_1 : hol.term (type_16 B) => term_50 B (term_117 B t_1).

def term_124 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_122 (term_34 A s_2) (term_123 B t_1).

def term_125 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_119 B A t_2 s_1 (term_0 (term_120 B A (term_121 B A t_2 s_1)) (term_124 B A t_2 s_1)))).

(; axiom ;)

thm_26 : B : hol.type -> A : hol.type -> hol.proof (term_125 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.cross s) t))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

def term_126 : n_1 : hol.term type_0 -> hol.term type_2 :=
  n_1 : hol.term type_0 => term_49 (term_9 n_1).

def term_127 : A : hol.type -> s_1 : hol.term (type_5 A) -> n_2 : hol.term type_0 -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => n_2 : hol.term type_0 => term_126 n_2 (term_34 A s_1).

def term_128 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_46 A s_2 (term_127 A s_2 n_1).

def term_129 : A : hol.type -> hol.term (type_20 A) :=
  A : hol.type => Data_2EBool_2E_3F (type_20 A).

def term_130 : A : hol.type -> t_1 : hol.term (type_5 A) -> hol.term (type_14 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => term_79 A (term_98 A t_1).

def term_131 : A : hol.type -> s_1 : hol.term (type_5 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => t_2 : hol.term (type_5 A) => term_130 A t_2 (term_31 A s_1).

def term_132 : A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_5 A) => term_13 A (term_98 A t_2) (term_9 n_1).

def term_133 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_129 A (t_3 : hol.term (type_5 A) => term_20 (term_131 A s_2 t_3) (term_132 A n_1 t_3)).

def term_134 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_40 (n_1 : hol.term type_0 => term_29 A (s_2 : hol.term (type_5 A) => term_30 (term_128 A n_1 s_2) (term_133 A n_1 s_2))).

(; axiom ;)

thm_27 : A : hol.type -> hol.proof (term_134 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda s. ((= ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

def term_135 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_19 (term_66 A s_1 (term_127 A s_1 n_2)) (term_133 A n_2 s_1))).

(; axiom ;)

thm_28 : A : hol.type -> hol.proof (term_135 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

def term_136 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_19 (term_128 A n_2 s_1) (term_133 A n_2 s_1))).

(; axiom ;)

thm_29 : A : hol.type -> hol.proof (term_136 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool.==> (Set.finite s)) ((Number.Natural.<= n) (Set.size s)))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset t) s)) ((Set.hasSize t) n)))))) ;)

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_4 A).

(; Constant Set.member ;)

Set_2Emember : A : hol.type -> hol.term (type_4 A).

def term_137 : A : hol.type -> hol.term (hol.arr (type_4 A) (type_14 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_4 A) (type_14 A)).

def term_138 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_137 A (term_15 A x_2) (term_31 A s_1).

def term_139 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_26 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => Data_2EBool_2Econd (hol.arr type_1 type_26) (term_138 A s_1 x_2).

def term_140 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_12 A (x_1 : hol.term (type_4 A) => term_29 A (s_2 : hol.term (type_5 A) => term_46 A s_2 (term_0 (term_1 A (term_16 A x_1 (term_31 A s_2))) (term_139 A s_2 x_1 (term_34 A s_2) (term_8 (term_34 A s_2)))))).

(; axiom ;)

thm_30 : A : hol.type -> hol.proof (term_140 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size ((Set.insert x) s))) (((Data.Bool.cond ((Set.member x) s)) (Set.size s)) (Number.Natural.suc (Set.size s))))))) ;)

(; Constant Set.difference ;)

Set_2Edifference : A : hol.type -> hol.term (type_4 A).

def term_141 : A : hol.type -> hol.term (type_28 A) :=
  A : hol.type => Set_2Edifference (type_28 A).

def term_142 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_141 A (term_31 A s_2) (term_98 A t_1).

(; Constant Number.Natural.- ;)

Number_2ENatural_2E_2D : A : hol.type -> hol.term (type_4 A).

def term_143 : hol.term type_26 :=
  Number_2ENatural_2E_2D type_26.

def term_144 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_9 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_143 (term_34 A s_1).

def term_145 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_19 (term_66 A s_1 (term_131 A s_1 t_2)) (term_0 (term_1 A (term_142 A t_2 s_1)) (term_144 A s_1 (term_103 A t_2))))).

(; axiom ;)

thm_31 : A : hol.type -> hol.proof (term_145 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Set.subset t) s))) ((= (Set.size ((Set.difference s) t))) ((Number.Natural.- (Set.size s)) (Set.size t)))))) ;)

def term_146 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_2 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_0 (term_107 A t_1 s_2).

def term_147 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_105 A t_2 s_1 (term_146 A t_2 s_1 (term_108 A s_1 (term_1 A (term_141 A (term_98 A t_2) (term_31 A s_1))))))).

(; axiom ;)

thm_32 : A : hol.type -> hol.proof (term_147 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size ((Set.difference t) s))))))) ;)

def term_148 : A : hol.type -> m_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => m_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_20 (term_33 A s_2 (term_59 m_1)).

def term_149 : B : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_16 B) -> hol.term type_1 :=
  B : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_16 B) => term_82 B (term_117 B t_2) (term_9 n_1).

def term_150 : B : hol.type -> A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_16 B) -> m_3 : hol.term type_0 -> s_4 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_16 B) => m_3 : hol.term type_0 => s_4 : hol.term (type_5 A) => term_19 (term_148 A m_3 s_4 (term_149 B n_1 t_2)).

def term_151 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_30 B A) type_2) :=
  B : hol.type => A : hol.type => Set_2EhasSize (type_29 B A).

def term_152 : n_1 : hol.term type_0 -> m_2 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => m_2 : hol.term type_0 => term_122 (term_59 m_2) (term_9 n_1).

def term_153 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_150 B A n_4 t_2 m_3 s_1 (term_151 B A (term_121 B A t_2 s_1) (term_152 n_4 m_3)))))).

(; axiom ;)

thm_33 : B : hol.type -> A : hol.type -> hol.proof (term_153 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize ((Set.cross s) t)) ((Number.Natural.* m) n))))))) ;)

(; Constant Set.delete ;)

Set_2Edelete : A : hol.type -> hol.term (type_4 A).

def term_154 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (hol.arr (type_4 A) (type_5 A)) :=
  A : hol.type => s_1 : hol.term (type_5 A) => Set_2Edelete (hol.arr (type_5 A) (hol.arr (type_4 A) (type_5 A))) (term_31 A s_1).

def term_155 : A : hol.type -> x_1 : hol.term (type_4 A) -> s_2 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => s_2 : hol.term (type_5 A) => term_154 A s_2 (term_15 A x_1).

def term_156 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_12 A (x_1 : hol.term (type_4 A) => term_29 A (s_2 : hol.term (type_5 A) => term_46 A s_2 (term_0 (term_1 A (term_155 A x_1 s_2)) (term_139 A s_2 x_1 (term_144 A s_2 term_5) (term_34 A s_2))))).

(; axiom ;)

thm_34 : A : hol.type -> hol.proof (term_156 A).

(; Theorem: |- (Data.Bool.! \lambda x. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size ((Set.delete s) x))) (((Data.Bool.cond ((Set.member x) s)) ((Number.Natural.- (Set.size s)) (Number.Natural.bit1 Number.Natural.zero))) (Set.size s)))))) ;)

def type_31 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_5 A).

def term_157 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term (type_31 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => Set_2EfromPredicate (hol.arr (type_14 A) (type_31 A)) (v_2 : hol.term (type_5 A) => term_129 A (t_3 : hol.term (type_5 A) => term_20 (term_36 A v_2 (term_98 A t_3)) (term_131 A s_1 t_3))).

def term_158 : hol.term type_9 :=
  term_69 term_6.

def term_159 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_46 A s_1 (term_0 (Set_2Esize (type_5 A) (term_157 A s_1)) (term_158 (term_34 A s_1)))).

(; axiom ;)

thm_35 : A : hol.type -> hol.proof (term_159 A).

(; Theorem: |- (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s)))))) ((Number.Natural.^ (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) (Set.size s))))) ;)

def term_160 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_42 A n_2 s_1 (Set_2EhasSize (type_5 A) (term_157 A s_1) (term_158 (term_9 n_2))))).

(; axiom ;)

thm_36 : A : hol.type -> hol.proof (term_160 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda t. ((Data.Bool./\ ((= v) t)) ((Set.subset t) s))))) ((Number.Natural.^ (Number.Natural.bit0 (Number.Natural.bit1 Number.Natural.zero))) n))))) ;)

def term_161 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_146 A t_1 s_2 (term_109 A t_1 s_2).

(; Constant Set.disjoint ;)

Set_2Edisjoint : A : hol.type -> hol.term (type_4 A).

def term_162 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => Set_2Edisjoint (type_21 A) (term_31 A s_2) (term_98 A t_1).

def term_163 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_105 A t_2 s_1 (term_30 (term_161 A t_2 s_1) (term_162 A t_2 s_1)))).

(; axiom ;)

thm_37 : A : hol.type -> hol.proof (term_163 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))) ((Set.disjoint s) t))))) ;)

def term_164 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_19 (term_66 A s_1 (term_100 A t_2 (term_162 A t_2 s_1))) (term_161 A t_2 s_1))).

(; axiom ;)

thm_38 : A : hol.type -> hol.proof (term_164 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Set.disjoint s) t)))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_165 : A : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => term_30 (term_33 A s_2 (term_10 n_1)).

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_4 A).

def term_166 : hol.term type_12 :=
  Data_2EBool_2E_7E type_12.

def term_167 : A : hol.type -> s_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => term_166 (term_38 A s_1).

def term_168 : A : hol.type -> a_1 : hol.term (type_4 A) -> hol.term (type_14 A) :=
  A : hol.type => a_1 : hol.term (type_4 A) => term_137 A (term_93 A a_1).

def term_169 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_165 A n_2 s_1 (term_20 (term_167 A s_1) (term_12 A (a_3 : hol.term (type_4 A) => term_19 (term_168 A a_3 (term_31 A s_1)) (term_13 A (term_154 A s_1 (term_93 A a_3)) (term_9 n_2))))))).

(; axiom ;)

thm_39 : A : hol.type -> hol.proof (term_169 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) (Number.Natural.suc n))) ((Data.Bool./\ (Data.Bool.~ ((= s) Set.{}))) (Data.Bool.! \lambda a. ((Data.Bool.==> ((Set.member a) s)) ((Set.hasSize ((Set.delete s) a)) n))))))) ;)

(; Constant Set.intersect ;)

Set_2Eintersect : A : hol.type -> hol.term (type_4 A).

def term_170 : A : hol.type -> t_1 : hol.term (type_5 A) -> s_2 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => t_1 : hol.term (type_5 A) => s_2 : hol.term (type_5 A) => term_1 A (Set_2Eintersect (type_28 A) (term_31 A s_2) (term_98 A t_1)).

def term_171 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_105 A t_2 s_1 (term_146 A t_2 s_1 (term_143 (term_109 A t_2 s_1) (term_170 A t_2 s_1))))).

(; axiom ;)

thm_40 : A : hol.type -> hol.proof (term_171 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size ((Set.union s) t))) ((Number.Natural.- ((Number.Natural.+ (Set.size s)) (Set.size t))) (Set.size ((Set.intersect s) t))))))) ;)

def term_172 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_105 A t_2 s_1 (term_0 (term_87 (term_107 A t_2 s_1) (term_170 A t_2 s_1)) (term_109 A t_2 s_1)))).

(; axiom ;)

thm_41 : A : hol.type -> hol.proof (term_172 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= ((Number.Natural.+ (Set.size ((Set.union s) t))) (Set.size ((Set.intersect s) t)))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) ;)

def term_173 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_19 (term_66 A s_1 (term_100 A t_2 (term_61 (term_107 A t_2 s_1) (term_109 A t_2 s_1)))) (term_166 (term_162 A t_2 s_1)))).

(; axiom ;)

thm_42 : A : hol.type -> hol.proof (term_173 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.< (Set.size ((Set.union s) t))) ((Number.Natural.+ (Set.size s)) (Set.size t)))))) (Data.Bool.~ ((Set.disjoint s) t))))) ;)

def term_174 : A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_5 A) -> hol.term type_12 :=
  A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_5 A) => term_20 (term_132 A n_1 t_2).

def term_175 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_165 A n_2 s_1 (term_91 A (a_3 : hol.term (type_4 A) => term_129 A (t_4 : hol.term (type_5 A) => term_174 A n_2 t_4 (term_20 (term_166 (term_168 A a_3 (term_98 A t_4))) (term_37 A s_1 (term_94 A a_3 (term_98 A t_4))))))))).

(; axiom ;)

thm_43 : A : hol.type -> hol.proof (term_175 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((= ((Set.hasSize s) (Number.Natural.suc n))) (Data.Bool.? \lambda a. (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.hasSize t) n)) ((Data.Bool./\ (Data.Bool.~ ((Set.member a) t))) ((= s) ((Set.insert a) t))))))))) ;)

def term_176 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_19 (term_148 A m_3 s_1 (term_174 A n_4 t_2 (term_162 A t_2 s_1))) (term_13 A (term_106 A t_2 s_1) (term_87 (term_59 m_3) (term_9 n_4))))))).

(; axiom ;)

thm_44 : A : hol.type -> hol.proof (term_176 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ ((Set.hasSize t) n)) ((Set.disjoint s) t)))) ((Set.hasSize ((Set.union s) t)) ((Number.Natural.+ m) n))))))) ;)

def term_177 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_19 (term_148 A m_3 s_1 (term_174 A n_4 t_2 (term_131 A s_1 t_2))) (term_13 A (term_142 A t_2 s_1) (term_143 (term_59 m_3) (term_9 n_4))))))).

(; axiom ;)

thm_45 : A : hol.type -> hol.proof (term_177 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ ((Set.hasSize t) n)) ((Set.subset t) s)))) ((Set.hasSize ((Set.difference s) t)) ((Number.Natural.- m) n))))))) ;)

def term_178 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term (type_5 A) :=
  A : hol.type => u_1 : hol.term (type_5 A) => u_1.

def term_179 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => u_1 : hol.term (type_5 A) => term_21 A (term_178 A u_1).

def term_180 : A : hol.type -> u_1 : hol.term (type_5 A) -> hol.term type_0 :=
  A : hol.type => u_1 : hol.term (type_5 A) => term_1 A (term_178 A u_1).

def term_181 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_29 A (t_2 : hol.term (type_5 A) => term_29 A (u_3 : hol.term (type_5 A) => term_19 (term_20 (term_179 A u_3) (term_20 (term_162 A t_2 s_1) (term_36 A (term_106 A t_2 s_1) (term_178 A u_3)))) (term_0 (term_109 A t_2 s_1) (term_180 A u_3))))).

(; axiom ;)

thm_46 : A : hol.type -> hol.proof (term_181 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ (Set.finite u)) ((Data.Bool./\ ((Set.disjoint s) t)) ((= ((Set.union s) t)) u)))) ((= ((Number.Natural.+ (Set.size s)) (Set.size t))) (Set.size u)))))) ;)

def type_32 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) (type_4 A).

def term_182 : A : hol.type -> hol.term (hol.arr (hol.arr (type_32 A) type_1) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_32 A) type_1) type_1).

def term_183 : A : hol.type -> f_1 : hol.term (type_32 A) -> hol.term (type_32 A) :=
  A : hol.type => f_1 : hol.term (type_32 A) => f_1.

def term_184 : A : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_32 A) -> hol.term (type_5 A) :=
  A : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_32 A) => Set_2Eimage (hol.arr (type_32 A) (hol.arr (type_5 A) (type_5 A))) (term_183 A f_2) (term_31 A s_1).

def term_185 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_12 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_20 (term_138 A s_1 x_2).

def term_186 : A : hol.type -> y_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => y_1 : hol.term (type_4 A) => y_1.

def term_187 : A : hol.type -> s_1 : hol.term (type_5 A) -> y_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => y_2 : hol.term (type_4 A) => term_137 A (term_186 A y_2) (term_31 A s_1).

def term_188 : A : hol.type -> s_1 : hol.term (type_5 A) -> y_2 : hol.term (type_4 A) -> hol.term type_12 :=
  A : hol.type => s_1 : hol.term (type_5 A) => y_2 : hol.term (type_4 A) => term_20 (term_187 A s_1 y_2).

def term_189 : A : hol.type -> hol.term (hol.arr (type_4 A) (type_10 A)) :=
  A : hol.type => hol.eq (type_4 A).

def term_190 : A : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_32 A) -> hol.term (type_10 A) :=
  A : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_32 A) => term_189 A (term_183 A f_2 (term_15 A x_1)).

def term_191 : A : hol.type -> y_1 : hol.term (type_4 A) -> x_2 : hol.term (type_4 A) -> hol.term type_1 :=
  A : hol.type => y_1 : hol.term (type_4 A) => x_2 : hol.term (type_4 A) => term_189 A (term_15 A x_2) (term_186 A y_1).

def term_192 : A : hol.type -> f_1 : hol.term (type_32 A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => f_1 : hol.term (type_32 A) => s_2 : hol.term (type_5 A) => term_12 A (x_3 : hol.term (type_4 A) => term_12 A (y_4 : hol.term (type_4 A) => term_19 (term_185 A s_2 x_3 (term_188 A s_2 y_4 (term_190 A x_3 f_1 (term_183 A f_1 (term_186 A y_4))))) (term_191 A y_4 x_3))).

def term_193 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_182 A (f_2 : hol.term (type_32 A) => term_19 (term_66 A s_1 (term_36 A (term_184 A s_1 f_2) (term_31 A s_1))) (term_192 A f_2 s_1))).

(; axiom ;)

thm_47 : A : hol.type -> hol.proof (term_193 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((= ((Set.image f) s)) s))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))) ;)

def type_33 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_29 B A) type_1.

def term_194 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_33 B A) (type_30 B A)) :=
  B : hol.type => A : hol.type => Set_2EfromPredicate (hol.arr (type_33 B A) (type_30 B A)).

def type_34 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_15 B) type_1.

def type_35 : hol.type -> hol.type :=
  B : hol.type => hol.arr (type_34 B) type_1.

def term_195 : B : hol.type -> hol.term (type_35 B) :=
  B : hol.type => Data_2EBool_2E_3F (type_35 B).

(; Constant Data.Pair., ;)

Data_2EPair_2E_2C : A : hol.type -> hol.term (type_4 A).

def term_196 : B : hol.type -> y_1 : hol.term (type_15 B) -> hol.term (type_15 B) :=
  B : hol.type => y_1 : hol.term (type_15 B) => y_1.

def term_197 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_15 B) -> x_2 : hol.term (type_4 A) -> v_3 : hol.term (type_29 B A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_15 B) => x_2 : hol.term (type_4 A) => v_3 : hol.term (type_29 B A) => term_20 (hol.eq (type_29 B A) v_3 (Data_2EPair_2E_2C (hol.arr (type_4 A) (hol.arr (type_15 B) (type_29 B A))) (term_15 A x_2) (term_196 B y_1))).

def term_198 : B : hol.type -> hol.term (hol.arr (type_15 B) (type_17 B)) :=
  B : hol.type => Set_2Emember (hol.arr (type_15 B) (type_17 B)).

def term_199 : B : hol.type -> y_1 : hol.term (type_15 B) -> hol.term (type_17 B) :=
  B : hol.type => y_1 : hol.term (type_15 B) => term_198 B (term_196 B y_1).

def term_200 : B : hol.type -> t_1 : hol.term (type_16 B) -> y_2 : hol.term (type_15 B) -> hol.term type_1 :=
  B : hol.type => t_1 : hol.term (type_16 B) => y_2 : hol.term (type_15 B) => term_199 B y_2 (term_117 B t_1).

def term_201 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term (type_30 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_194 B A (v_3 : hol.term (type_29 B A) => term_91 A (x_4 : hol.term (type_4 A) => term_195 B (y_5 : hol.term (type_15 B) => term_197 B A y_5 x_4 v_3 (term_185 A s_2 x_4 (term_200 B t_1 y_5))))).

def term_202 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_119 B A t_2 s_1 (term_0 (term_120 B A (term_201 B A t_2 s_1)) (term_124 B A t_2 s_1)))).

(; axiom ;)

thm_48 : B : hol.type -> A : hol.type -> hol.proof (term_202 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t)))))))) ((Number.Natural.* (Set.size s)) (Set.size t)))))) ;)

def type_36 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_0 (type_4 A).

def term_203 : A : hol.type -> m_1 : hol.term type_0 -> f_2 : hol.term (type_36 A) -> hol.term (type_4 A) :=
  A : hol.type => m_1 : hol.term type_0 => f_2 : hol.term (type_36 A) => f_2 (term_59 m_1).

def term_204 : A : hol.type -> s_1 : hol.term (type_5 A) -> x_2 : hol.term (type_4 A) -> hol.term type_12 :=
  A : hol.type => s_1 : hol.term (type_5 A) => x_2 : hol.term (type_4 A) => term_19 (term_138 A s_1 x_2).

(; Constant Data.Bool.?! ;)

Data_2EBool_2E_3F_21 : A : hol.type -> hol.term (type_4 A).

def term_205 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_40 (n_2 : hol.term type_0 => term_42 A n_2 s_1 (Data_2EBool_2E_3F (hol.arr (hol.arr (type_36 A) type_1) type_1) (f_3 : hol.term (type_36 A) => term_20 (term_40 (m_4 : hol.term type_0 => term_19 (term_62 n_2 m_4) (term_137 A (term_203 A m_4 f_3) (term_31 A s_1)))) (term_12 A (x_4 : hol.term (type_4 A) => term_204 A s_1 x_4 (Data_2EBool_2E_3F_21 type_22 (m_5 : hol.term type_0 => term_20 (term_62 n_2 m_5) (term_189 A (term_203 A m_5 f_3) (term_15 A x_4)))))))))).

(; axiom ;)

thm_49 : A : hol.type -> hol.proof (term_205 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Set.hasSize s) n)) (Data.Bool.? \lambda f. ((Data.Bool./\ (Data.Bool.! \lambda m. ((Data.Bool.==> ((Number.Natural.< m) n)) ((Set.member (f m)) s)))) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) (Data.Bool.?! \lambda m. ((Data.Bool./\ ((Number.Natural.< m) n)) ((= (f m)) x)))))))))) ;)

def term_206 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> f_2 : hol.term (type_18 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => f_2 : hol.term (type_18 B A) => term_0 (term_54 A B s_1 f_2) (term_34 A s_1).

def term_207 : B : hol.type -> hol.term (hol.arr (type_15 B) (type_34 B)) :=
  B : hol.type => hol.eq (type_15 B).

def term_208 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_18 B A) -> hol.term (type_15 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_18 B A) => term_51 B A f_2 (term_15 A x_1).

def term_209 : A : hol.type -> B : hol.type -> x_1 : hol.term (type_4 A) -> f_2 : hol.term (type_18 B A) -> hol.term (type_34 B) :=
  A : hol.type => B : hol.type => x_1 : hol.term (type_4 A) => f_2 : hol.term (type_18 B A) => term_207 B (term_208 B A x_1 f_2).

def term_210 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_18 B A) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_18 B A) => s_2 : hol.term (type_5 A) => term_12 A (x_3 : hol.term (type_4 A) => term_12 A (y_4 : hol.term (type_4 A) => term_19 (term_185 A s_2 x_3 (term_188 A s_2 y_4 (term_209 A B x_3 f_1 (term_51 B A f_1 (term_186 A y_4))))) (term_191 A y_4 x_3))).

def term_211 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_46 A s_2 (term_30 (term_206 A B s_2 f_1) (term_210 B A f_1 s_2)))).

(; axiom ;)

thm_50 : B : hol.type -> A : hol.type -> hol.proof (term_211 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) ((= ((= (Set.size ((Set.image f) s))) (Set.size s))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_212 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_18 B A) -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_18 B A) => s_2 : hol.term (type_5 A) => term_20 (term_210 B A f_1 s_2).

def term_213 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_19 (term_212 B A f_1 s_2 (term_32 A s_2)) (term_206 A B s_2 f_1))).

(; axiom ;)

thm_51 : B : hol.type -> A : hol.type -> hol.proof (term_213 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) (Set.finite s))) ((= (Set.size ((Set.image f) s))) (Set.size s))))) ;)

def term_214 : A : hol.type -> p_1 : hol.term (type_14 A) -> hol.term (type_14 A) :=
  A : hol.type => p_1 : hol.term (type_14 A) => p_1.

def term_215 : A : hol.type -> s_1 : hol.term (type_5 A) -> p_2 : hol.term (type_14 A) -> hol.term type_1 :=
  A : hol.type => s_1 : hol.term (type_5 A) => p_2 : hol.term (type_14 A) => term_214 A p_2 (term_31 A s_1).

def term_216 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_20 A) type_1) (p_1 : hol.term (type_14 A) => term_19 (term_20 (term_214 A p_1 (term_2 A)) (term_29 A (s_2 : hol.term (type_5 A) => term_19 (term_66 A s_2 (term_167 A s_2)) (term_91 A (x_3 : hol.term (type_4 A) => term_185 A s_2 x_3 (term_19 (term_214 A p_1 (term_155 A x_3 s_2)) (term_215 A s_2 p_1))))))) (term_29 A (s_2 : hol.term (type_5 A) => term_46 A s_2 (term_215 A s_2 p_1)))).

(; axiom ;)

thm_52 : A : hol.type -> hol.proof (term_216 A).

(; Theorem: |- (Data.Bool.! \lambda p. ((Data.Bool.==> ((Data.Bool./\ (p Set.{})) (Data.Bool.! \lambda s. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Data.Bool.~ ((= s) Set.{})))) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool.==> (p ((Set.delete s) x))) (p s)))))))) (Data.Bool.! \lambda s. ((Data.Bool.==> (Set.finite s)) (p s))))) ;)

def term_217 : A : hol.type -> B : hol.type -> n_1 : hol.term type_0 -> s_2 : hol.term (type_5 A) -> f_3 : hol.term (type_18 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => n_1 : hol.term type_0 => s_2 : hol.term (type_5 A) => f_3 : hol.term (type_18 B A) => term_82 B (term_53 B A s_2 f_3) (term_9 n_1).

def term_218 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_40 (n_3 : hol.term type_0 => term_19 (term_210 B A f_1 s_2) (term_30 (term_217 A B n_3 s_2 f_1) (term_41 A n_3 s_2))))).

(; axiom ;)

thm_53 : B : hol.type -> A : hol.type -> hol.proof (term_218 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ((= ((Set.hasSize ((Set.image f) s)) n)) ((Set.hasSize s) n)))))) ;)

def term_219 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_40 (n_3 : hol.term type_0 => term_19 (term_212 B A f_1 s_2 (term_41 A n_3 s_2)) (term_217 A B n_3 s_2 f_1)))).

(; axiom ;)

thm_54 : B : hol.type -> A : hol.type -> hol.proof (term_219 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))) ((Set.hasSize s) n))) ((Set.hasSize ((Set.image f) s)) n))))) ;)

def term_220 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_150 B A n_4 t_2 m_3 s_1 (term_151 B A (term_201 B A t_2 s_1) (term_152 n_4 m_3)))))).

(; axiom ;)

thm_55 : B : hol.type -> A : hol.type -> hol.proof (term_220 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) t))))))) ((Number.Natural.* m) n))))))) ;)

def term_221 : A : hol.type -> u_1 : hol.term (type_5 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => u_1 : hol.term (type_5 A) => t_2 : hol.term (type_5 A) => term_130 A t_2 (term_178 A u_1).

def term_222 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_40 (n_1 : hol.term type_0 => term_29 A (s_2 : hol.term (type_5 A) => term_29 A (u_3 : hol.term (type_5 A) => term_19 (term_20 (term_92 A s_2 (term_178 A u_3)) (term_66 A s_2 (term_20 (term_90 A s_2 (term_9 n_1)) (term_19 (term_179 A u_3) (term_126 n_1 (term_180 A u_3)))))) (term_129 A (t_4 : hol.term (type_5 A) => term_20 (term_111 A t_4 s_2) (term_20 (term_221 A u_3 t_4) (term_132 A n_1 t_4))))))).

(; axiom ;)

thm_56 : A : hol.type -> hol.proof (term_222 A).

(; Theorem: |- (Data.Bool.! \lambda n. (Data.Bool.! \lambda s. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ ((Set.subset s) u)) ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ ((Number.Natural.<= (Set.size s)) n)) ((Data.Bool.==> (Set.finite u)) ((Number.Natural.<= n) (Set.size u))))))) (Data.Bool.? \lambda t. ((Data.Bool./\ ((Set.subset s) t)) ((Data.Bool./\ ((Set.subset t) u)) ((Set.hasSize t) n)))))))) ;)

def term_223 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_16 B) -> x_2 : hol.term (type_4 A) -> f_3 : hol.term (type_18 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_16 B) => x_2 : hol.term (type_4 A) => f_3 : hol.term (type_18 B A) => term_198 B (term_208 B A x_2 f_3) (term_117 B t_1).

def term_224 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> f_2 : hol.term (type_18 B A) -> s_3 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => f_2 : hol.term (type_18 B A) => s_3 : hol.term (type_5 A) => term_20 (term_12 A (x_4 : hol.term (type_4 A) => term_204 A s_3 x_4 (term_223 A B t_1 x_4 f_2))).

def term_225 : B : hol.type -> hol.term (type_35 B) :=
  B : hol.type => Data_2EBool_2E_21 (type_35 B).

def term_226 : B : hol.type -> t_1 : hol.term (type_16 B) -> y_2 : hol.term (type_15 B) -> hol.term type_12 :=
  B : hol.type => t_1 : hol.term (type_16 B) => y_2 : hol.term (type_15 B) => term_19 (term_200 B t_1 y_2).

def term_227 : B : hol.type -> A : hol.type -> y_1 : hol.term (type_15 B) -> f_2 : hol.term (type_18 B A) -> s_3 : hol.term (type_5 A) -> hol.term (type_10 A) :=
  B : hol.type => A : hol.type => y_1 : hol.term (type_15 B) => f_2 : hol.term (type_18 B A) => s_3 : hol.term (type_5 A) => x_4 : hol.term (type_4 A) => term_185 A s_3 x_4 (term_209 A B x_4 f_2 (term_196 B y_1)).

def term_228 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_48 B A (f_1 : hol.term (type_18 B A) => term_29 A (s_2 : hol.term (type_5 A) => term_97 B (t_3 : hol.term (type_16 B) => term_19 (term_66 A s_2 (term_224 B A t_3 f_1 s_2 (term_225 B (y_4 : hol.term (type_15 B) => term_226 B t_3 y_4 (Data_2EBool_2E_3F_21 (type_11 A) (term_227 B A y_4 f_1 s_2)))))) (term_0 (term_123 B t_3) (term_34 A s_2))))).

(; axiom ;)

thm_57 : B : hol.type -> A : hol.type -> hol.proof (term_228 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.?! \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))))) ((= (Set.size t)) (Set.size s)))))) ;)

def term_229 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_43 A s_2 (term_123 B t_1).

def term_230 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_20 (term_229 B A t_1 s_2).

def term_231 : B : hol.type -> hol.term (type_27 B) :=
  B : hol.type => hol.eq (type_16 B).

def term_232 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_48 B A (f_3 : hol.term (type_18 B A) => term_19 (term_66 A s_1 (term_230 B A t_2 s_1 (term_231 B (term_53 B A s_1 f_3) (term_117 B t_2)))) (term_210 B A f_3 s_1)))).

(; axiom ;)

thm_58 : B : hol.type -> A : hol.type -> hol.proof (term_232 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ ((= (Set.size s)) (Set.size t))) ((= ((Set.image f) s)) t)))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_233 : B : hol.type -> t_1 : hol.term (type_16 B) -> hol.term type_12 :=
  B : hol.type => t_1 : hol.term (type_16 B) => term_20 (term_118 B t_1).

def term_234 : B : hol.type -> A : hol.type -> hol.term (type_24 B A) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_3F (type_24 B A).

def term_235 : A : hol.type -> B : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> f_3 : hol.term (type_18 B A) -> hol.term type_1 :=
  A : hol.type => B : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => f_3 : hol.term (type_18 B A) => term_101 B (term_53 B A s_2 f_3) (term_117 B t_1).

def term_236 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_19 (term_66 A s_1 (term_233 B t_2 (term_90 A s_1 (term_123 B t_2)))) (term_234 B A (f_3 : hol.term (type_18 B A) => term_20 (term_235 A B t_2 s_1 f_3) (term_210 B A f_3 s_1))))).

(; axiom ;)

thm_59 : B : hol.type -> A : hol.type -> hol.proof (term_236 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.<= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. ((Data.Bool./\ ((Set.subset ((Set.image f) s)) t)) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

def type_37 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_4 A) (type_16 B).

def term_237 : B : hol.type -> A : hol.type -> hol.term (hol.arr (hol.arr (type_37 B A) type_1) type_1) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_37 B A) type_1) type_1).

def term_238 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_37 B A) -> hol.term (type_37 B A) :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_37 B A) => t_1.

def term_239 : B : hol.type -> A : hol.type -> x_1 : hol.term (type_4 A) -> t_2 : hol.term (type_37 B A) -> hol.term (type_16 B) :=
  B : hol.type => A : hol.type => x_1 : hol.term (type_4 A) => t_2 : hol.term (type_37 B A) => term_238 B A t_2 (term_15 A x_1).

def type_38 : hol.type -> hol.type :=
  B : hol.type => Set_2Eset (type_16 B).

(; Constant Set.bigUnion ;)

Set_2EbigUnion : A : hol.type -> hol.term (type_4 A).

def term_240 : A : hol.type -> B : hol.type -> s_1 : hol.term (type_5 A) -> t_2 : hol.term (type_37 B A) -> hol.term (type_16 B) :=
  A : hol.type => B : hol.type => s_1 : hol.term (type_5 A) => t_2 : hol.term (type_37 B A) => Set_2EbigUnion (hol.arr (type_38 B) (type_16 B)) (Set_2EfromPredicate (hol.arr (type_17 B) (type_38 B)) (v_3 : hol.term (type_16 B) => term_91 A (x_4 : hol.term (type_4 A) => term_20 (term_231 B v_3 (term_239 B A x_4 t_2)) (term_138 A s_1 x_4)))).

def term_241 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_237 B A (t_2 : hol.term (type_37 B A) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_19 (term_148 A m_3 s_1 (term_12 A (x_5 : hol.term (type_4 A) => term_204 A s_1 x_5 (term_20 (term_23 B (term_239 B A x_5 t_2)) (term_49 (term_50 B (term_239 B A x_5 t_2)) (term_9 n_4)))))) (term_49 (term_50 B (term_240 A B s_1 t_2)) (term_152 n_4 m_3)))))).

(; axiom ;)

thm_60 : B : hol.type -> A : hol.type -> hol.proof (term_241 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ (Set.finite (t x))) ((Number.Natural.<= (Set.size (t x))) n)))))) ((Number.Natural.<= (Set.size (Set.bigUnion (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) (t x))) ((Set.member x) s))))))) ((Number.Natural.* m) n))))))) ;)

def term_242 : B : hol.type -> A : hol.type -> n_1 : hol.term type_0 -> t_2 : hol.term (type_37 B A) -> s_3 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => n_1 : hol.term type_0 => t_2 : hol.term (type_37 B A) => s_3 : hol.term (type_5 A) => term_12 A (x_4 : hol.term (type_4 A) => term_204 A s_3 x_4 (term_82 B (term_239 B A x_4 t_2) (term_9 n_1))).

def term_243 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_237 B A (t_2 : hol.term (type_37 B A) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_19 (term_148 A m_3 s_1 (term_242 B A n_4 t_2 s_1)) (term_151 B A (term_194 B A (v_5 : hol.term (type_29 B A) => term_91 A (x_6 : hol.term (type_4 A) => term_195 B (y_7 : hol.term (type_15 B) => term_197 B A y_7 x_6 v_5 (term_185 A s_1 x_6 (term_199 B y_7 (term_239 B A x_6 t_2))))))) (term_152 n_4 m_3)))))).

(; axiom ;)

thm_61 : B : hol.type -> A : hol.type -> hol.proof (term_243 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.hasSize (t x)) n))))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. (Data.Bool.? \lambda y. ((Data.Bool./\ ((= v) ((Data.Pair., x) y))) ((Data.Bool./\ ((Set.member x) s)) ((Set.member y) (t x)))))))) ((Number.Natural.* m) n))))))) ;)

def type_39 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_31 A) type_1.

def term_244 : A : hol.type -> hol.term (hol.arr (type_5 A) (type_39 A)) :=
  A : hol.type => Set_2Emember (hol.arr (type_5 A) (type_39 A)).

def term_245 : A : hol.type -> f_1 : hol.term (type_31 A) -> hol.term (type_31 A) :=
  A : hol.type => f_1 : hol.term (type_31 A) => f_1.

def term_246 : A : hol.type -> f_1 : hol.term (type_31 A) -> t_2 : hol.term (type_5 A) -> hol.term type_1 :=
  A : hol.type => f_1 : hol.term (type_31 A) => t_2 : hol.term (type_5 A) => term_244 A (term_98 A t_2) (term_245 A f_1).

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_4 A).

def term_247 : hol.term type_13 :=
  Data_2EBool_2E_5C_2F type_13.

def term_248 : A : hol.type -> f_1 : hol.term (type_31 A) -> hol.term (type_5 A) :=
  A : hol.type => f_1 : hol.term (type_31 A) => Set_2EbigUnion (hol.arr (type_31 A) (type_5 A)) (term_245 A f_1).

def term_249 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_39 A) type_1) (f_1 : hol.term (type_31 A) => term_40 (n_2 : hol.term type_0 => term_19 (term_20 (term_29 A (t_3 : hol.term (type_5 A) => term_29 A (u_4 : hol.term (type_5 A) => term_19 (term_20 (term_246 A f_1 t_3) (term_244 A (term_178 A u_4) (term_245 A f_1))) (term_247 (term_221 A u_4 t_3) (term_79 A (term_178 A u_4) (term_98 A t_3)))))) (term_29 A (t_3 : hol.term (type_5 A) => term_19 (term_246 A f_1 t_3) (term_100 A t_3 (term_49 (term_103 A t_3) (term_9 n_2)))))) (term_20 (term_21 A (term_248 A f_1)) (term_49 (term_1 A (term_248 A f_1)) (term_9 n_2))))).

(; axiom ;)

thm_62 : A : hol.type -> hol.proof (term_249 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda t. (Data.Bool.! \lambda u. ((Data.Bool.==> ((Data.Bool./\ ((Set.member t) f)) ((Set.member u) f))) ((Data.Bool.\/ ((Set.subset t) u)) ((Set.subset u) t)))))) (Data.Bool.! \lambda t. ((Data.Bool.==> ((Set.member t) f)) ((Data.Bool./\ (Set.finite t)) ((Number.Natural.<= (Set.size t)) n)))))) ((Data.Bool./\ (Set.finite (Set.bigUnion f))) ((Number.Natural.<= (Set.size (Set.bigUnion f))) n))))) ;)

def term_250 : B : hol.type -> A : hol.type -> d_1 : hol.term (type_15 B) -> t_2 : hol.term (type_16 B) -> s_3 : hol.term (type_5 A) -> hol.term (type_19 B A) :=
  B : hol.type => A : hol.type => d_1 : hol.term (type_15 B) => t_2 : hol.term (type_16 B) => s_3 : hol.term (type_5 A) => Set_2EfromPredicate (hol.arr (type_23 B A) (type_19 B A)) (v_4 : hol.term (type_18 B A) => term_234 B A (f_5 : hol.term (type_18 B A) => term_20 (hol.eq (type_18 B A) v_4 (term_51 B A f_5)) (term_224 B A t_2 f_5 s_3 (term_12 A (x_6 : hol.term (type_4 A) => term_19 (term_166 (term_138 A s_3 x_6)) (term_209 A B x_6 f_5 d_1)))))).

def term_251 : A : hol.type -> B : hol.type -> hol.term type_1 :=
  A : hol.type => B : hol.type => term_225 B (d_1 : hol.term (type_15 B) => term_29 A (s_2 : hol.term (type_5 A) => term_97 B (t_3 : hol.term (type_16 B) => term_119 B A t_3 s_2 (term_0 (term_68 B A (term_250 B A d_1 t_3 s_2)) (term_69 (term_123 B t_3) (term_34 A s_2)))))).

(; axiom ;)

thm_63 : A : hol.type -> B : hol.type -> hol.proof (term_251 A B).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) (Set.finite t))) ((= (Set.size (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d))))))))) ((Number.Natural.^ (Set.size t)) (Set.size s))))))) ;)

def term_252 : A : hol.type -> B : hol.type -> hol.term type_1 :=
  A : hol.type => B : hol.type => term_225 B (d_1 : hol.term (type_15 B) => term_29 A (s_2 : hol.term (type_5 A) => term_97 B (t_3 : hol.term (type_16 B) => term_40 (m_4 : hol.term type_0 => term_40 (n_5 : hol.term type_0 => term_150 B A n_5 t_3 m_4 s_2 (term_83 B A (term_250 B A d_1 t_3 s_2) (term_84 m_4 n_5))))))).

(; axiom ;)

thm_64 : A : hol.type -> B : hol.type -> hol.proof (term_252 A B).

(; Theorem: |- (Data.Bool.! \lambda d. (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Set.hasSize t) n))) ((Set.hasSize (Set.fromPredicate \lambda v. (Data.Bool.? \lambda f. ((Data.Bool./\ ((= v) f)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) (Data.Bool.! \lambda x. ((Data.Bool.==> (Data.Bool.~ ((Set.member x) s))) ((= (f x)) d)))))))) ((Number.Natural.^ n) m)))))))) ;)

def type_40 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (type_15 B) (type_4 A).

def type_41 : hol.type -> hol.type -> hol.type :=
  A : hol.type => B : hol.type => hol.arr (hol.arr (type_40 A B) type_1) type_1.

def term_253 : A : hol.type -> B : hol.type -> hol.term (type_41 A B) :=
  A : hol.type => B : hol.type => Data_2EBool_2E_21 (type_41 A B).

def term_254 : A : hol.type -> B : hol.type -> g_1 : hol.term (type_40 A B) -> hol.term (type_40 A B) :=
  A : hol.type => B : hol.type => g_1 : hol.term (type_40 A B) => g_1.

def term_255 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_40 A B) -> t_2 : hol.term (type_16 B) -> f_3 : hol.term (type_18 B A) -> s_4 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_40 A B) => t_2 : hol.term (type_16 B) => f_3 : hol.term (type_18 B A) => s_4 : hol.term (type_5 A) => term_20 (term_12 A (x_5 : hol.term (type_4 A) => term_204 A s_4 x_5 (term_20 (term_223 A B t_2 x_5 f_3) (term_189 A (term_254 A B g_1 (term_208 B A x_5 f_3)) (term_15 A x_5))))).

def term_256 : A : hol.type -> B : hol.type -> y_1 : hol.term (type_15 B) -> g_2 : hol.term (type_40 A B) -> hol.term (type_4 A) :=
  A : hol.type => B : hol.type => y_1 : hol.term (type_15 B) => g_2 : hol.term (type_40 A B) => term_254 A B g_2 (term_196 B y_1).

def term_257 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_18 B A) -> s_2 : hol.term (type_5 A) -> g_3 : hol.term (type_40 A B) -> t_4 : hol.term (type_16 B) -> hol.term type_1 :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_18 B A) => s_2 : hol.term (type_5 A) => g_3 : hol.term (type_40 A B) => t_4 : hol.term (type_16 B) => term_225 B (y_5 : hol.term (type_15 B) => term_226 B t_4 y_5 (term_20 (term_137 A (term_256 A B y_5 g_3) (term_31 A s_2)) (term_207 B (term_51 B A f_1 (term_256 A B y_5 g_3)) (term_196 B y_5)))).

def term_258 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_48 B A (f_3 : hol.term (type_18 B A) => term_253 A B (g_4 : hol.term (type_40 A B) => term_40 (n_5 : hol.term type_0 => term_19 (term_255 B A g_4 t_2 f_3 s_1 (term_20 (term_257 A B f_3 s_1 g_4 t_2) (term_41 A n_5 s_1))) (term_149 B n_5 t_2)))))).

(; axiom ;)

thm_65 : B : hol.type -> A : hol.type -> hol.proof (term_258 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))) ((Set.hasSize s) n)))) ((Set.hasSize t) n))))))) ;)

def term_259 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_40 A B) -> t_2 : hol.term (type_16 B) -> f_3 : hol.term (type_18 B A) -> s_4 : hol.term (type_5 A) -> hol.term type_1 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_40 A B) => t_2 : hol.term (type_16 B) => f_3 : hol.term (type_18 B A) => s_4 : hol.term (type_5 A) => term_255 B A g_1 t_2 f_3 s_4 (term_257 A B f_3 s_4 g_1 t_2).

def term_260 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_48 B A (f_3 : hol.term (type_18 B A) => term_253 A B (g_4 : hol.term (type_40 A B) => term_19 (term_259 B A g_4 t_2 f_3 s_1) (term_40 (n_5 : hol.term type_0 => term_65 A n_5 s_1 (term_149 B n_5 t_2))))))).

(; axiom ;)

thm_66 : B : hol.type -> A : hol.type -> hol.proof (term_260 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))) (Data.Bool.! \lambda n. ((= ((Set.hasSize s) n)) ((Set.hasSize t) n)))))))) ;)

def term_261 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_182 A (f_2 : hol.term (type_32 A) => term_19 (term_66 A s_1 (term_79 A (term_184 A s_1 f_2) (term_31 A s_1))) (term_30 (term_12 A (y_3 : hol.term (type_4 A) => term_19 (term_187 A s_1 y_3) (term_91 A (x_4 : hol.term (type_4 A) => term_185 A s_1 x_4 (term_190 A x_4 f_2 (term_186 A y_3)))))) (term_192 A f_2 s_1)))).

(; axiom ;)

thm_67 : A : hol.type -> hol.proof (term_261 A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Set.subset ((Set.image f) s)) s))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) s)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))) ;)

def term_262 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_48 B A (f_3 : hol.term (type_18 B A) => term_253 A B (g_4 : hol.term (type_40 A B) => term_19 (term_20 (term_247 (term_32 A s_1) (term_118 B t_2)) (term_259 B A g_4 t_2 f_3 s_1)) (term_229 B A t_2 s_1))))).

(; axiom ;)

thm_68 : B : hol.type -> A : hol.type -> hol.proof (term_262 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> ((Data.Bool./\ ((Data.Bool.\/ (Set.finite s)) (Set.finite t))) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y))))))) ((= (Set.size s)) (Set.size t))))))) ;)

def term_263 : B : hol.type -> A : hol.type -> t_1 : hol.term (type_16 B) -> s_2 : hol.term (type_5 A) -> hol.term type_12 :=
  B : hol.type => A : hol.type => t_1 : hol.term (type_16 B) => s_2 : hol.term (type_5 A) => term_19 (term_66 A s_2 (term_233 B t_1 (term_229 B A t_1 s_2))).

def term_264 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_263 B A t_2 s_1 (term_234 B A (f_3 : hol.term (type_18 B A) => Data_2EBool_2E_3F (type_41 A B) (g_4 : hol.term (type_40 A B) => term_259 B A g_4 t_2 f_3 s_1))))).

(; axiom ;)

thm_69 : B : hol.type -> A : hol.type -> hol.proof (term_264 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. (Data.Bool.? \lambda g. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Data.Bool./\ ((Set.member (f x)) t)) ((= (g (f x))) x))))) (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) ((Data.Bool./\ ((Set.member (g y)) s)) ((= (f (g y))) y)))))))))) ;)

def term_265 : A : hol.type -> B : hol.type -> f_1 : hol.term (type_18 B A) -> s_2 : hol.term (type_5 A) -> t_3 : hol.term (type_16 B) -> hol.term type_1 :=
  A : hol.type => B : hol.type => f_1 : hol.term (type_18 B A) => s_2 : hol.term (type_5 A) => t_3 : hol.term (type_16 B) => term_225 B (y_4 : hol.term (type_15 B) => term_226 B t_3 y_4 (term_91 A (term_227 B A y_4 f_1 s_2))).

def term_266 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_48 B A (f_3 : hol.term (type_18 B A) => term_19 (term_66 A s_1 (term_233 B t_2 (term_230 B A t_2 s_1 (term_235 A B t_2 s_1 f_3)))) (term_30 (term_265 A B f_3 s_1 t_2) (term_210 B A f_3 s_1))))).

(; axiom ;)

thm_70 : B : hol.type -> A : hol.type -> hol.proof (term_266 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda f. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((Data.Bool./\ ((= (Set.size s)) (Set.size t))) ((Set.subset ((Set.image f) s)) t))))) ((= (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y))))))))) ;)

def term_267 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_237 B A (t_2 : hol.term (type_37 B A) => term_40 (m_3 : hol.term type_0 => term_40 (n_4 : hol.term type_0 => term_19 (term_148 A m_3 s_1 (term_20 (term_242 B A n_4 t_2 s_1) (term_12 A (x_5 : hol.term (type_4 A) => term_12 A (y_6 : hol.term (type_4 A) => term_19 (term_185 A s_1 x_5 (term_188 A s_1 y_6 (term_166 (term_191 A y_6 x_5)))) (Set_2Edisjoint (type_27 B) (term_239 B A x_5 t_2) (term_238 B A t_2 (term_186 A y_6)))))))) (term_82 B (term_240 A B s_1 t_2) (term_152 n_4 m_3)))))).

(; axiom ;)

thm_71 : B : hol.type -> A : hol.type -> hol.proof (term_267 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Data.Bool./\ ((Set.hasSize s) m)) ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.hasSize (t x)) n)))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) (Data.Bool.~ ((= x) y))))) ((Set.disjoint (t x)) (t y)))))))) ((Set.hasSize (Set.bigUnion (Set.fromPredicate \lambda v. (Data.Bool.? \lambda x. ((Data.Bool./\ ((= v) (t x))) ((Set.member x) s)))))) ((Number.Natural.* m) n))))))) ;)

def term_268 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => term_29 A (s_1 : hol.term (type_5 A) => term_97 B (t_2 : hol.term (type_16 B) => term_263 B A t_2 s_1 (term_234 B A (f_3 : hol.term (type_18 B A) => term_224 B A t_2 f_3 s_1 (term_20 (term_265 A B f_3 s_1 t_2) (term_210 B A f_3 s_1)))))).

(; axiom ;)

thm_72 : B : hol.type -> A : hol.type -> hol.proof (term_268 B A).

(; Theorem: |- (Data.Bool.! \lambda s. (Data.Bool.! \lambda t. ((Data.Bool.==> ((Data.Bool./\ (Set.finite s)) ((Data.Bool./\ (Set.finite t)) ((= (Set.size s)) (Set.size t))))) (Data.Bool.? \lambda f. ((Data.Bool./\ (Data.Bool.! \lambda x. ((Data.Bool.==> ((Set.member x) s)) ((Set.member (f x)) t)))) ((Data.Bool./\ (Data.Bool.! \lambda y. ((Data.Bool.==> ((Set.member y) t)) (Data.Bool.? \lambda x. ((Data.Bool./\ ((Set.member x) s)) ((= (f x)) y)))))) (Data.Bool.! \lambda x. (Data.Bool.! \lambda y. ((Data.Bool.==> ((Data.Bool./\ ((Set.member x) s)) ((Data.Bool./\ ((Set.member y) s)) ((= (f x)) (f y))))) ((= x) y)))))))))) ;)

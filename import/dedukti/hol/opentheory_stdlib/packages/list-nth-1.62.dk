
(; This file was generated by Holide. ;)

#NAME list_2Dnth_2D1_2E62.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_1.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_3 A).

Data_2EList_2Elist : hol.type -> hol.type.

def type_4 : hol.type -> hol.type :=
  A : hol.type => Data_2EList_2Elist (type_0 A).

def type_5 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) type_1.

def term_1 : A : hol.type -> hol.term (hol.arr (type_5 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_5 A) type_1).

def term_2 : A : hol.type -> hol.term (hol.arr (type_0 A) (type_2 A)) :=
  A : hol.type => hol.eq (type_0 A).

Number_2ENatural_2Enatural : hol.type.

def type_6 : hol.type :=
  Number_2ENatural_2Enatural.

def type_7 : hol.type -> hol.type :=
  A : hol.type => hol.arr type_6 (type_0 A).

def type_8 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_4 A) (type_7 A).

(; Constant list-nth-1.62 ;)

list_2Dnth_2D1_2E62 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.nth ;)

def Data_2EList_2Enth : A : hol.type -> hol.term (type_8 A) :=
  A : hol.type => list_2Dnth_2D1_2E62 (type_8 A).

def term_3 : A : hol.type -> hol.term (type_8 A) :=
  A : hol.type => Data_2EList_2Enth (type_0 A).

(; Constant Data.List.:: ;)

Data_2EList_2E_3A_3A : A : hol.type -> hol.term (type_0 A).

def term_4 : A : hol.type -> h_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => h_1 : hol.term (type_0 A) => h_1.

def term_5 : A : hol.type -> t_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => t_1 : hol.term (type_4 A) => t_1.

def term_6 : A : hol.type -> t_1 : hol.term (type_4 A) -> h_2 : hol.term (type_0 A) -> hol.term (type_7 A) :=
  A : hol.type => t_1 : hol.term (type_4 A) => h_2 : hol.term (type_0 A) => term_3 A (Data_2EList_2E_3A_3A (hol.arr (type_0 A) (hol.arr (type_4 A) (type_4 A))) (term_4 A h_2) (term_5 A t_1)).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term (type_0 A).

def term_7 : hol.term type_6 :=
  Number_2ENatural_2Ezero type_6.

def term_8 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 A (h_1 : hol.term (type_0 A) => term_1 A (t_2 : hol.term (type_4 A) => term_2 A (term_6 A t_2 h_1 term_7) (term_4 A h_1))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_8 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. ((= ((Data.List.nth ((Data.List.:: h) t)) Number.Natural.zero)) h))) ;)

def type_9 : hol.type :=
  hol.arr type_1 type_1.

def type_10 : hol.type :=
  hol.arr type_1 type_9.

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_9 : hol.term type_10 :=
  Data_2EBool_2E_3D_3D_3E type_10.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.null ;)

Data_2EList_2Enull : A : hol.type -> hol.term (type_0 A).

def term_10 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => l_1 : hol.term (type_4 A) => l_1.

def term_11 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term (type_7 A) :=
  A : hol.type => l_1 : hol.term (type_4 A) => term_3 A (term_10 A l_1).

def type_11 : hol.type :=
  hol.arr type_6 type_6.

def type_12 : hol.type :=
  hol.arr type_6 type_11.

(; Constant Number.Natural.- ;)

Number_2ENatural_2E_2D : A : hol.type -> hol.term (type_0 A).

def term_12 : hol.term type_12 :=
  Number_2ENatural_2E_2D type_12.

(; Constant Data.List.length ;)

Data_2EList_2Elength : A : hol.type -> hol.term (type_0 A).

def term_13 : A : hol.type -> hol.term (hol.arr (type_4 A) type_6) :=
  A : hol.type => Data_2EList_2Elength (hol.arr (type_4 A) type_6).

def term_14 : A : hol.type -> l_1 : hol.term (type_4 A) -> hol.term type_6 :=
  A : hol.type => l_1 : hol.term (type_4 A) => term_13 A (term_10 A l_1).

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.last ;)

Data_2EList_2Elast : A : hol.type -> hol.term (type_0 A).

def term_15 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (l_1 : hol.term (type_4 A) => term_9 (Data_2EBool_2E_7E type_9 (Data_2EList_2Enull (type_5 A) (term_10 A l_1))) (term_2 A (term_11 A l_1 (term_12 (term_14 A l_1) (Number_2ENatural_2Ebit1 type_11 term_7))) (Data_2EList_2Elast (hol.arr (type_4 A) (type_0 A)) (term_10 A l_1)))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_15 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((Data.Bool.==> (Data.Bool.~ (Data.List.null l))) ((= ((Data.List.nth l) ((Number.Natural.- (Data.List.length l)) (Number.Natural.bit1 Number.Natural.zero)))) (Data.List.last l)))) ;)

def term_16 : A : hol.type -> hol.term (hol.arr (type_3 A) type_1) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) type_1).

def term_17 : hol.term type_10 :=
  hol.eq type_1.

def type_13 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) (type_5 A).

(; Constant Data.List.all ;)

Data_2EList_2Eall : A : hol.type -> hol.term (type_0 A).

def term_18 : A : hol.type -> p_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => p_1 : hol.term (type_2 A) => p_1.

def type_14 : hol.type :=
  hol.arr type_6 type_1.

def type_15 : hol.type :=
  hol.arr type_14 type_1.

def term_19 : hol.term type_15 :=
  Data_2EBool_2E_21 type_15.

def type_16 : hol.type :=
  hol.arr type_6 type_14.

(; Constant Number.Natural.< ;)

Number_2ENatural_2E_3C : A : hol.type -> hol.term (type_0 A).

def term_20 : hol.term type_16 :=
  Number_2ENatural_2E_3C type_16.

def term_21 : i_1 : hol.term type_6 -> hol.term type_6 :=
  i_1 : hol.term type_6 => i_1.

def term_22 : i_1 : hol.term type_6 -> hol.term type_14 :=
  i_1 : hol.term type_6 => term_20 (term_21 i_1).

def term_23 : A : hol.type -> l_1 : hol.term (type_4 A) -> i_2 : hol.term type_6 -> hol.term type_1 :=
  A : hol.type => l_1 : hol.term (type_4 A) => i_2 : hol.term type_6 => term_22 i_2 (term_14 A l_1).

def term_24 : A : hol.type -> l_1 : hol.term (type_4 A) -> i_2 : hol.term type_6 -> hol.term type_9 :=
  A : hol.type => l_1 : hol.term (type_4 A) => i_2 : hol.term type_6 => term_9 (term_23 A l_1 i_2).

def term_25 : A : hol.type -> i_1 : hol.term type_6 -> l_2 : hol.term (type_4 A) -> hol.term (type_0 A) :=
  A : hol.type => i_1 : hol.term type_6 => l_2 : hol.term (type_4 A) => term_11 A l_2 (term_21 i_1).

def term_26 : A : hol.type -> i_1 : hol.term type_6 -> l_2 : hol.term (type_4 A) -> p_3 : hol.term (type_2 A) -> hol.term type_1 :=
  A : hol.type => i_1 : hol.term type_6 => l_2 : hol.term (type_4 A) => p_3 : hol.term (type_2 A) => term_18 A p_3 (term_25 A i_1 l_2).

def term_27 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_16 A (p_1 : hol.term (type_2 A) => term_1 A (l_2 : hol.term (type_4 A) => term_17 (Data_2EList_2Eall (type_13 A) (term_18 A p_1) (term_10 A l_2)) (term_19 (i_3 : hol.term type_6 => term_24 A l_2 i_3 (term_26 A i_3 l_2 p_1))))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_27 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= ((Data.List.all p) l)) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Number.Natural.< i) (Data.List.length l))) (p ((Data.List.nth l) i))))))) ;)

(; Constant Data.List.any ;)

Data_2EList_2Eany : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_28 : hol.term type_15 :=
  Data_2EBool_2E_3F type_15.

(; Constant Data.Bool./\ ;)

Data_2EBool_2E_2F_5C : A : hol.type -> hol.term (type_0 A).

def term_29 : hol.term type_10 :=
  Data_2EBool_2E_2F_5C type_10.

def term_30 : A : hol.type -> l_1 : hol.term (type_4 A) -> i_2 : hol.term type_6 -> hol.term type_9 :=
  A : hol.type => l_1 : hol.term (type_4 A) => i_2 : hol.term type_6 => term_29 (term_23 A l_1 i_2).

def term_31 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_16 A (p_1 : hol.term (type_2 A) => term_1 A (l_2 : hol.term (type_4 A) => term_17 (Data_2EList_2Eany (type_13 A) (term_18 A p_1) (term_10 A l_2)) (term_28 (i_3 : hol.term type_6 => term_30 A l_2 i_3 (term_26 A i_3 l_2 p_1))))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_31 A).

(; Theorem: |- (Data.Bool.! \lambda p. (Data.Bool.! \lambda l. ((= ((Data.List.any p) l)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((Number.Natural.< i) (Data.List.length l))) (p ((Data.List.nth l) i))))))) ;)

(; Constant Data.List.member ;)

Data_2EList_2Emember : A : hol.type -> hol.term (type_0 A).

def term_32 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_33 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (l_1 : hol.term (type_4 A) => term_0 A (x_2 : hol.term (type_0 A) => term_17 (Data_2EList_2Emember (hol.arr (type_0 A) (type_5 A)) (term_32 A x_2) (term_10 A l_1)) (term_28 (i_3 : hol.term type_6 => term_30 A l_1 i_3 (term_2 A (term_32 A x_2) (term_25 A i_3 l_1)))))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_33 A).

(; Theorem: |- (Data.Bool.! \lambda l. (Data.Bool.! \lambda x. ((= ((Data.List.member x) l)) (Data.Bool.? \lambda i. ((Data.Bool./\ ((Number.Natural.< i) (Data.List.length l))) ((= x) ((Data.List.nth l) i))))))) ;)

Set_2Eset : hol.type -> hol.type.

def type_17 : hol.type -> hol.type :=
  A : hol.type => Set_2Eset (type_0 A).

(; Constant Data.List.toSet ;)

Data_2EList_2EtoSet : A : hol.type -> hol.term (type_0 A).

def type_18 : hol.type :=
  Set_2Eset type_6.

(; Constant Set.image ;)

Set_2Eimage : A : hol.type -> hol.term (type_0 A).

(; Constant Set.fromPredicate ;)

Set_2EfromPredicate : A : hol.type -> hol.term (type_0 A).

def term_34 : hol.term type_16 :=
  hol.eq type_6.

def term_35 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (l_1 : hol.term (type_4 A) => hol.eq (type_17 A) (Data_2EList_2EtoSet (hol.arr (type_4 A) (type_17 A)) (term_10 A l_1)) (Set_2Eimage (hol.arr (type_7 A) (hol.arr type_18 (type_17 A))) (term_11 A l_1) (Set_2EfromPredicate (hol.arr type_14 type_18) (v_2 : hol.term type_6 => term_28 (i_3 : hol.term type_6 => term_29 (term_34 v_2 (term_21 i_3)) (term_23 A l_1 i_3)))))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_35 A).

(; Theorem: |- (Data.Bool.! \lambda l. ((= (Data.List.toSet l)) ((Set.image (Data.List.nth l)) (Set.fromPredicate \lambda v. (Data.Bool.? \lambda i. ((Data.Bool./\ ((= v) i)) ((Number.Natural.< i) (Data.List.length l)))))))) ;)

def term_36 : n_1 : hol.term type_6 -> hol.term type_6 :=
  n_1 : hol.term type_6 => n_1.

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_0 A).

def term_37 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 A (h_1 : hol.term (type_0 A) => term_1 A (t_2 : hol.term (type_4 A) => term_19 (n_3 : hol.term type_6 => term_9 (term_20 (term_36 n_3) (term_13 A (term_5 A t_2))) (term_2 A (term_6 A t_2 h_1 (Number_2ENatural_2Esuc type_11 (term_36 n_3))) (term_3 A (term_5 A t_2) (term_36 n_3)))))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_37 A).

(; Theorem: |- (Data.Bool.! \lambda h. (Data.Bool.! \lambda t. (Data.Bool.! \lambda n. ((Data.Bool.==> ((Number.Natural.< n) (Data.List.length t))) ((= ((Data.List.nth ((Data.List.:: h) t)) (Number.Natural.suc n))) ((Data.List.nth t) n)))))) ;)

def type_19 : hol.type -> hol.type :=
  B : hol.type => B.

def type_20 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_19 B).

def type_21 : hol.type -> hol.type :=
  B : hol.type => Data_2EList_2Elist (type_19 B).

(; Constant Data.List.map ;)

Data_2EList_2Emap : A : hol.type -> hol.term (type_0 A).

def term_38 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_20 B A) -> hol.term (type_20 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_20 B A) => f_1.

def term_39 : B : hol.type -> A : hol.type -> hol.term type_1 :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (hol.arr (type_20 B A) type_1) type_1) (f_1 : hol.term (type_20 B A) => term_1 A (l_2 : hol.term (type_4 A) => term_19 (i_3 : hol.term type_6 => term_24 A l_2 i_3 (hol.eq (type_19 B) (Data_2EList_2Enth (type_19 B) (Data_2EList_2Emap (hol.arr (type_20 B A) (hol.arr (type_4 A) (type_21 B))) (term_38 B A f_1) (term_10 A l_2)) (term_21 i_3)) (term_38 B A f_1 (term_25 A i_3 l_2)))))).

(; axiom ;)

thm_7 : B : hol.type -> A : hol.type -> hol.proof (term_39 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda l. (Data.Bool.! \lambda i. ((Data.Bool.==> ((Number.Natural.< i) (Data.List.length l))) ((= ((Data.List.nth ((Data.List.map f) l)) i)) (f ((Data.List.nth l) i))))))) ;)

def term_40 : A : hol.type -> l1_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => l1_1 : hol.term (type_4 A) => l1_1.

def term_41 : A : hol.type -> l1_1 : hol.term (type_4 A) -> hol.term type_6 :=
  A : hol.type => l1_1 : hol.term (type_4 A) => term_13 A (term_40 A l1_1).

def term_42 : A : hol.type -> l2_1 : hol.term (type_4 A) -> hol.term (type_4 A) :=
  A : hol.type => l2_1 : hol.term (type_4 A) => l2_1.

def term_43 : A : hol.type -> l2_1 : hol.term (type_4 A) -> hol.term type_6 :=
  A : hol.type => l2_1 : hol.term (type_4 A) => term_13 A (term_42 A l2_1).

def term_44 : A : hol.type -> l1_1 : hol.term (type_4 A) -> hol.term (type_7 A) :=
  A : hol.type => l1_1 : hol.term (type_4 A) => term_3 A (term_40 A l1_1).

def term_45 : A : hol.type -> l2_1 : hol.term (type_4 A) -> hol.term (type_7 A) :=
  A : hol.type => l2_1 : hol.term (type_4 A) => term_3 A (term_42 A l2_1).

def term_46 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (l1_1 : hol.term (type_4 A) => term_1 A (l2_2 : hol.term (type_4 A) => term_9 (term_29 (term_34 (term_41 A l1_1) (term_43 A l2_2)) (term_19 (i_3 : hol.term type_6 => term_9 (term_22 i_3 (term_41 A l1_1)) (term_2 A (term_44 A l1_1 (term_21 i_3)) (term_45 A l2_2 (term_21 i_3)))))) (hol.eq (type_4 A) (term_40 A l1_1) (term_42 A l2_2)))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_46 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. ((Data.Bool.==> ((Data.Bool./\ ((= (Data.List.length l1)) (Data.List.length l2))) (Data.Bool.! \lambda i. ((Data.Bool.==> ((Number.Natural.< i) (Data.List.length l1))) ((= ((Data.List.nth l1) i)) ((Data.List.nth l2) i)))))) ((= l1) l2)))) ;)

def term_47 : k_1 : hol.term type_6 -> hol.term type_6 :=
  k_1 : hol.term type_6 => k_1.

def term_48 : k_1 : hol.term type_6 -> hol.term type_14 :=
  k_1 : hol.term type_6 => term_20 (term_47 k_1).

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_0 A).

(; Constant Data.List.@ ;)

Data_2EList_2E_40 : A : hol.type -> hol.term (type_0 A).

(; Constant Data.Bool.cond ;)

Data_2EBool_2Econd : A : hol.type -> hol.term (type_0 A).

def term_49 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_1 A (l1_1 : hol.term (type_4 A) => term_1 A (l2_2 : hol.term (type_4 A) => term_19 (k_3 : hol.term type_6 => term_9 (term_48 k_3 (Number_2ENatural_2E_2B type_12 (term_41 A l1_1) (term_43 A l2_2))) (term_2 A (term_3 A (Data_2EList_2E_40 (hol.arr (type_4 A) (hol.arr (type_4 A) (type_4 A))) (term_40 A l1_1) (term_42 A l2_2)) (term_47 k_3)) (Data_2EBool_2Econd (hol.arr type_1 (hol.arr (type_0 A) (hol.arr (type_0 A) (type_0 A)))) (term_48 k_3 (term_41 A l1_1)) (term_44 A l1_1 (term_47 k_3)) (term_45 A l2_2 (term_12 (term_47 k_3) (term_41 A l1_1)))))))).

(; axiom ;)

thm_9 : A : hol.type -> hol.proof (term_49 A).

(; Theorem: |- (Data.Bool.! \lambda l1. (Data.Bool.! \lambda l2. (Data.Bool.! \lambda k. ((Data.Bool.==> ((Number.Natural.< k) ((Number.Natural.+ (Data.List.length l1)) (Data.List.length l2)))) ((= ((Data.List.nth ((Data.List.@ l1) l2)) k)) (((Data.Bool.cond ((Number.Natural.< k) (Data.List.length l1))) ((Data.List.nth l1) k)) ((Data.List.nth l2) ((Number.Natural.- k) (Data.List.length l1))))))))) ;)

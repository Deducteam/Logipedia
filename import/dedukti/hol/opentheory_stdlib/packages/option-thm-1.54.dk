
(; This file was generated by Holide. ;)

#NAME option_2Dthm_2D1_2E54.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type :=
  hol.bool.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_0 A) type_1.

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) type_1.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : A : hol.type -> hol.term (type_3 A) :=
  A : hol.type => Data_2EBool_2E_21 (type_3 A).

def type_4 : hol.type :=
  hol.arr type_1 type_1.

(; Constant Data.Bool.~ ;)

Data_2EBool_2E_7E : A : hol.type -> hol.term (type_0 A).

Data_2EOption_2Eoption : hol.type -> hol.type.

def type_5 : hol.type -> hol.type :=
  A : hol.type => Data_2EOption_2Eoption (type_0 A).

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_5 A) type_1.

def term_1 : A : hol.type -> hol.term (hol.arr (type_5 A) (type_6 A)) :=
  A : hol.type => hol.eq (type_5 A).

(; Constant Data.Option.some ;)

Data_2EOption_2Esome : A : hol.type -> hol.term (type_0 A).

def term_2 : A : hol.type -> hol.term (hol.arr (type_0 A) (type_5 A)) :=
  A : hol.type => Data_2EOption_2Esome (hol.arr (type_0 A) (type_5 A)).

def term_3 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => a_1.

def term_4 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_5 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => term_2 A (term_3 A a_1).

def term_5 : A : hol.type -> a_1 : hol.term (type_0 A) -> hol.term (type_6 A) :=
  A : hol.type => a_1 : hol.term (type_0 A) => term_1 A (term_4 A a_1).

(; Constant Data.Option.none ;)

Data_2EOption_2Enone : A : hol.type -> hol.term (type_0 A).

def term_6 : A : hol.type -> hol.term (type_5 A) :=
  A : hol.type => Data_2EOption_2Enone (type_5 A).

def term_7 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 A (a_1 : hol.term (type_0 A) => Data_2EBool_2E_7E type_4 (term_5 A a_1 (term_6 A))).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_7 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.~ ((= (Data.Option.some a)) Data.Option.none))) ;)

def type_7 : hol.type :=
  hol.arr type_1 type_4.

(; Constant Data.Bool.\/ ;)

Data_2EBool_2E_5C_2F : A : hol.type -> hol.term (type_0 A).

def term_8 : A : hol.type -> x_1 : hol.term (type_5 A) -> hol.term (type_6 A) :=
  A : hol.type => x_1 : hol.term (type_5 A) => term_1 A x_1.

(; Constant Data.Bool.? ;)

Data_2EBool_2E_3F : A : hol.type -> hol.term (type_0 A).

def term_9 : A : hol.type -> hol.term type_1 :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 A) type_1) (x_1 : hol.term (type_5 A) => Data_2EBool_2E_5C_2F type_7 (term_8 A x_1 (term_6 A)) (Data_2EBool_2E_3F (type_3 A) (a_2 : hol.term (type_0 A) => term_8 A x_1 (term_4 A a_2)))).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_9 A).

(; Theorem: |- (Data.Bool.! \lambda x. ((Data.Bool.\/ ((= x) Data.Option.none)) (Data.Bool.? \lambda a. ((= x) (Data.Option.some a))))) ;)

def term_10 : A : hol.type -> b_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => b_1 : hol.term (type_0 A) => b_1.

def term_11 : A : hol.type -> hol.term type_1 :=
  A : hol.type => term_0 A (a_1 : hol.term (type_0 A) => term_0 A (b_2 : hol.term (type_0 A) => hol.eq type_1 (term_5 A a_1 (term_2 A (term_10 A b_2))) (hol.eq (type_0 A) (term_3 A a_1) (term_10 A b_2)))).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- (Data.Bool.! \lambda a. (Data.Bool.! \lambda b. ((= ((= (Data.Option.some a)) (Data.Option.some b))) ((= a) b)))) ;)

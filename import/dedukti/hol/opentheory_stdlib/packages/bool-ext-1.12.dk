
(; This file was generated by Holide. ;)

#NAME bool_2Dext_2D1_2E12.

def type_0 : hol.type -> hol.type :=
  A : hol.type => A.

def type_1 : hol.type -> hol.type :=
  B : hol.type => B.

def type_2 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_0 A) (type_1 B).

def type_3 : hol.type :=
  hol.bool.

def type_4 : hol.type -> hol.type -> hol.type :=
  B : hol.type => A : hol.type => hol.arr (type_2 B A) type_3.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term (type_0 A).

def term_0 : B : hol.type -> A : hol.type -> hol.term (hol.arr (type_4 B A) type_3) :=
  B : hol.type => A : hol.type => Data_2EBool_2E_21 (hol.arr (type_4 B A) type_3).

def type_5 : hol.type :=
  hol.arr type_3 (hol.arr type_3 type_3).

def term_1 : B : hol.type -> A : hol.type -> f_1 : hol.term (type_2 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => f_1 : hol.term (type_2 B A) => f_1.

def term_2 : A : hol.type -> x_1 : hol.term (type_0 A) -> hol.term (type_0 A) :=
  A : hol.type => x_1 : hol.term (type_0 A) => x_1.

def term_3 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_2 B A) -> hol.term (type_2 B A) :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_2 B A) => g_1.

def term_4 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_2 B A) -> f_2 : hol.term (type_2 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_2 B A) => f_2 : hol.term (type_2 B A) => Data_2EBool_2E_21 (hol.arr (hol.arr (type_0 A) type_3) type_3) (x_3 : hol.term (type_0 A) => hol.eq (type_1 B) (term_1 B A f_2 (term_2 A x_3)) (term_3 B A g_1 (term_2 A x_3))).

def term_5 : B : hol.type -> A : hol.type -> g_1 : hol.term (type_2 B A) -> f_2 : hol.term (type_2 B A) -> hol.term type_3 :=
  B : hol.type => A : hol.type => g_1 : hol.term (type_2 B A) => f_2 : hol.term (type_2 B A) => hol.eq (type_2 B A) (term_1 B A f_2) (term_3 B A g_1).

def term_6 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_0 B A (f_1 : hol.term (type_2 B A) => term_0 B A (g_2 : hol.term (type_2 B A) => hol.eq type_3 (term_4 B A g_2 f_1) (term_5 B A g_2 f_1))).

(; axiom ;)

thm_0 : B : hol.type -> A : hol.type -> hol.proof (term_6 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((= (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)

(; Constant Data.Bool.==> ;)

Data_2EBool_2E_3D_3D_3E : A : hol.type -> hol.term (type_0 A).

def term_7 : B : hol.type -> A : hol.type -> hol.term type_3 :=
  B : hol.type => A : hol.type => term_0 B A (f_1 : hol.term (type_2 B A) => term_0 B A (g_2 : hol.term (type_2 B A) => Data_2EBool_2E_3D_3D_3E type_5 (term_4 B A g_2 f_1) (term_5 B A g_2 f_1))).

(; axiom ;)

thm_1 : B : hol.type -> A : hol.type -> hol.proof (term_7 B A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda g. ((Data.Bool.==> (Data.Bool.! \lambda x. ((= (f x)) (g x)))) ((= f) g)))) ;)


(; This file was generated by Holide. ;)

#NAME natural_2Dfunpow_2D1_2E17.

Number_2ENatural_2Enatural : hol.type.

def type_0 : hol.type :=
  Number_2ENatural_2Enatural.

(; Constant Data.Bool.! ;)

Data_2EBool_2E_21 : A : hol.type -> hol.term A.

def term_0 : hol.term (hol.arr (hol.arr type_0 hol.bool) hol.bool) :=
  Data_2EBool_2E_21 (hol.arr (hol.arr type_0 hol.bool) hol.bool).

def type_1 : hol.type -> hol.type :=
  A : hol.type => A.

def type_2 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) (type_1 A).

def type_3 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) hol.bool.

def term_1 : A : hol.type -> hol.term (hol.arr (type_2 A) (type_3 A)) :=
  A : hol.type => hol.eq (type_2 A).

def type_4 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_2 A) (hol.arr type_0 (type_2 A)).

(; Constant natural-funpow-1.17 ;)

natural_2Dfunpow_2D1_2E17 : A : hol.type -> hol.term (type_1 A).

(; Constant Function.^ ;)

def Function_2E_5E : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => natural_2Dfunpow_2D1_2E17 (type_4 A).

def term_2 : A : hol.type -> hol.term (type_4 A) :=
  A : hol.type => Function_2E_5E (type_1 A).

(; Constant Function.id ;)

Function_2Eid : A : hol.type -> hol.term (type_1 A).

def term_3 : A : hol.type -> hol.term (type_2 A) :=
  A : hol.type => Function_2Eid (type_2 A).

def term_4 : n_1 : hol.term type_0 -> hol.term type_0 :=
  n_1 : hol.term type_0 => n_1.

def term_5 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_0 (n_1 : hol.term type_0 => term_1 A (term_2 A (term_3 A) (term_4 n_1)) (term_3 A)).

(; axiom ;)

thm_0 : A : hol.type -> hol.proof (term_5 A).

(; Theorem: |- (Data.Bool.! \lambda n. ((= ((Function.^ Function.id) n)) Function.id)) ;)

def term_6 : A : hol.type -> hol.term (hol.arr (type_3 A) hol.bool) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_3 A) hol.bool).

def term_7 : A : hol.type -> f_1 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => f_1 : hol.term (type_2 A) => f_1.

def term_8 : A : hol.type -> f_1 : hol.term (type_2 A) -> hol.term (hol.arr type_0 (type_2 A)) :=
  A : hol.type => f_1 : hol.term (type_2 A) => term_2 A (term_7 A f_1).

(; Constant Number.Natural.zero ;)

Number_2ENatural_2Ezero : A : hol.type -> hol.term (type_1 A).

def term_9 : hol.term type_0 :=
  Number_2ENatural_2Ezero type_0.

def term_10 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_1 A (term_8 A f_1 term_9) (term_3 A)).

(; axiom ;)

thm_1 : A : hol.type -> hol.proof (term_10 A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Function.^ f) Number.Natural.zero)) Function.id)) ;)

def type_5 : hol.type :=
  hol.arr type_0 type_0.

(; Constant Number.Natural.bit1 ;)

Number_2ENatural_2Ebit1 : A : hol.type -> hol.term (type_1 A).

def term_11 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_1 A (term_8 A f_1 (Number_2ENatural_2Ebit1 type_5 term_9)) (term_7 A f_1)).

(; axiom ;)

thm_2 : A : hol.type -> hol.proof (term_11 A).

(; Theorem: |- (Data.Bool.! \lambda f. ((= ((Function.^ f) (Number.Natural.bit1 Number.Natural.zero))) f)) ;)

(; Constant Number.Natural.suc ;)

Number_2ENatural_2Esuc : A : hol.type -> hol.term (type_1 A).

def term_12 : A : hol.type -> n_1 : hol.term type_0 -> f_2 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => n_1 : hol.term type_0 => f_2 : hol.term (type_2 A) => term_8 A f_2 (Number_2ENatural_2Esuc type_5 (term_4 n_1)).

def term_13 : A : hol.type -> n_1 : hol.term type_0 -> f_2 : hol.term (type_2 A) -> hol.term (type_3 A) :=
  A : hol.type => n_1 : hol.term type_0 => f_2 : hol.term (type_2 A) => term_1 A (term_12 A n_1 f_2).

(; Constant Function.o ;)

Function_2Eo : A : hol.type -> hol.term (type_1 A).

def term_14 : A : hol.type -> hol.term (hol.arr (type_2 A) (hol.arr (type_2 A) (type_2 A))) :=
  A : hol.type => Function_2Eo (hol.arr (type_2 A) (hol.arr (type_2 A) (type_2 A))).

def term_15 : A : hol.type -> n_1 : hol.term type_0 -> f_2 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => n_1 : hol.term type_0 => f_2 : hol.term (type_2 A) => term_8 A f_2 (term_4 n_1).

def term_16 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (n_2 : hol.term type_0 => term_13 A n_2 f_1 (term_14 A (term_7 A f_1) (term_15 A n_2 f_1)))).

(; axiom ;)

thm_3 : A : hol.type -> hol.proof (term_16 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. ((= ((Function.^ f) (Number.Natural.suc n))) ((Function.o f) ((Function.^ f) n))))) ;)

def term_17 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (n_2 : hol.term type_0 => term_13 A n_2 f_1 (term_14 A (term_15 A n_2 f_1) (term_7 A f_1)))).

(; axiom ;)

thm_4 : A : hol.type -> hol.proof (term_17 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. ((= ((Function.^ f) (Number.Natural.suc n))) ((Function.o ((Function.^ f) n)) f)))) ;)

def type_6 : hol.type -> hol.type :=
  A : hol.type => hol.arr (type_1 A) hol.bool.

def term_18 : A : hol.type -> hol.term (hol.arr (type_6 A) hol.bool) :=
  A : hol.type => Data_2EBool_2E_21 (hol.arr (type_6 A) hol.bool).

def term_19 : A : hol.type -> x_1 : hol.term (type_1 A) -> hol.term (type_1 A) :=
  A : hol.type => x_1 : hol.term (type_1 A) => x_1.

def term_20 : A : hol.type -> x_1 : hol.term (type_1 A) -> n_2 : hol.term type_0 -> f_3 : hol.term (type_2 A) -> hol.term (type_6 A) :=
  A : hol.type => x_1 : hol.term (type_1 A) => n_2 : hol.term type_0 => f_3 : hol.term (type_2 A) => hol.eq (type_1 A) (term_12 A n_2 f_3 (term_19 A x_1)).

def term_21 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (n_2 : hol.term type_0 => term_18 A (x_3 : hol.term (type_1 A) => term_20 A x_3 n_2 f_1 (term_7 A f_1 (term_15 A n_2 f_1 (term_19 A x_3)))))).

(; axiom ;)

thm_5 : A : hol.type -> hol.proof (term_21 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. (Data.Bool.! \lambda x. ((= (((Function.^ f) (Number.Natural.suc n)) x)) (f (((Function.^ f) n) x)))))) ;)

def term_22 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (n_2 : hol.term type_0 => term_18 A (x_3 : hol.term (type_1 A) => term_20 A x_3 n_2 f_1 (term_15 A n_2 f_1 (term_7 A f_1 (term_19 A x_3)))))).

(; axiom ;)

thm_6 : A : hol.type -> hol.proof (term_22 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda n. (Data.Bool.! \lambda x. ((= (((Function.^ f) (Number.Natural.suc n)) x)) (((Function.^ f) n) (f x)))))) ;)

def type_7 : hol.type :=
  hol.arr type_0 type_5.

(; Constant Number.Natural.* ;)

Number_2ENatural_2E_2A : A : hol.type -> hol.term (type_1 A).

def term_23 : m_1 : hol.term type_0 -> hol.term type_0 :=
  m_1 : hol.term type_0 => m_1.

def term_24 : A : hol.type -> m_1 : hol.term type_0 -> f_2 : hol.term (type_2 A) -> hol.term (type_2 A) :=
  A : hol.type => m_1 : hol.term type_0 => f_2 : hol.term (type_2 A) => term_8 A f_2 (term_23 m_1).

def term_25 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (m_2 : hol.term type_0 => term_0 (n_3 : hol.term type_0 => term_1 A (term_8 A f_1 (Number_2ENatural_2E_2A type_7 (term_23 m_2) (term_4 n_3))) (term_2 A (term_24 A m_2 f_1) (term_4 n_3))))).

(; axiom ;)

thm_7 : A : hol.type -> hol.proof (term_25 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Function.^ f) ((Number.Natural.* m) n))) ((Function.^ ((Function.^ f) m)) n))))) ;)

(; Constant Number.Natural.+ ;)

Number_2ENatural_2E_2B : A : hol.type -> hol.term (type_1 A).

def term_26 : A : hol.type -> hol.term hol.bool :=
  A : hol.type => term_6 A (f_1 : hol.term (type_2 A) => term_0 (m_2 : hol.term type_0 => term_0 (n_3 : hol.term type_0 => term_1 A (term_8 A f_1 (Number_2ENatural_2E_2B type_7 (term_23 m_2) (term_4 n_3))) (term_14 A (term_24 A m_2 f_1) (term_15 A n_3 f_1))))).

(; axiom ;)

thm_8 : A : hol.type -> hol.proof (term_26 A).

(; Theorem: |- (Data.Bool.! \lambda f. (Data.Bool.! \lambda m. (Data.Bool.! \lambda n. ((= ((Function.^ f) ((Number.Natural.+ m) n))) ((Function.o ((Function.^ f) m)) ((Function.^ f) n)))))) ;)

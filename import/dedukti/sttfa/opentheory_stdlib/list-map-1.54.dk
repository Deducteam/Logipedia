
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) (type_1 A).


def type_3 : sttfa.type := sttfa.bool.


def type_4 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_5 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_4 B).


def type_6 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Data_2EList_2Elist (type_4 B).


def type_7 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_1 A) (type_6 B).


def type_8 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_5 B A) (type_7 B A).


list_2Dmap_2D1_2E54 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Data_2EList_2Emap :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_8 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => list_2Dmap_2D1_2E54 (type_8 B A).


def type_9 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (type_0 A).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_9 x) (type_2 x))))
  :=
  A:sttfa.type => Data_2EList_2Emap (type_0 A) (type_0 A).


Function_2Eid :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_3))
  :=
  A:sttfa.type =>
  leibniz.eq (type_2 A) (term_0 A (Function_2Eid (type_9 A))) (Function_2Eid (
                                                                 type_2 A)).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_1 x)).


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (sttfa.arrow (
                                                                    type_5 x x0) type_3) type_3))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_5 B A) type_3) type_3).


def type_10 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_6 B) type_3.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_10 x))))
  :=
  B:sttfa.type => leibniz.eq (type_6 B).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_8 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Data_2EList_2Emap (type_4 B) (type_0 A).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x x0) (
                                                       type_5 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_5 B A))) => f_1.


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x x0) (
                                                       type_7 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_5 B A))) => term_4 B A (term_5 B A f_1).


Data_2EList_2E_5B_5D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_1 x)))
  :=
  A:sttfa.type => Data_2EList_2E_5B_5D (type_1 A).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_6 x)))
  :=
  B:sttfa.type => Data_2EList_2E_5B_5D (type_6 B).


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_3 B (term_6 B A f_1 (term_7 A)) (term_8 B)).


thm_1 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_9 x x0))).


def type_11 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) type_3.


def type_12 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_11 A) type_3.


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_12 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_12 A).


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_11 x))))
  :=
  A:sttfa.type => leibniz.eq (type_1 A).


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l_1:(sttfa.etap (sttfa.p (type_1 A))) => l_1.


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_3))
  :=
  A:sttfa.type =>
  term_10 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
             term_11 A (term_0 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                                  term_12 A x_2) (term_13 A l_1)) (term_13 A l_1)).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_14 x)).


def type_13 : sttfa.type := sttfa.arrow type_3 (sttfa.arrow type_3 type_3).


def term_15 : sttfa.etap (sttfa.p type_13) := leibniz.eq type_3.


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x0) (
                                                       sttfa.arrow (type_5 x x0) (
                                                         type_6 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_6 B A f_2 (term_13 A l_1).


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         term_15 (Data_2EList_2Enull (type_10 B) (term_16 B A l_2 f_1)) (
                           Data_2EList_2Enull (type_11 A) (term_13 A l_2)))).


thm_3 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_17 x x0))).


Number_2ENatural_2Enatural : sttfa.type.


def type_14 : sttfa.type := Number_2ENatural_2Enatural.


Data_2EList_2Elength :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         leibniz.eq type_14 (Data_2EList_2Elength (sttfa.arrow (
                                                                    type_6 B) type_14) (
                                               term_16 B A l_2 f_1)) (
                           Data_2EList_2Elength (sttfa.arrow (type_1 A) type_14) (
                             term_13 A l_2)))).


thm_4 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_18 x x0))).


Set_2Eset : sttfa.type -> sttfa.type.


def type_15 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Set_2Eset (type_4 B).


Data_2EList_2EtoSet :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def type_16 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Set_2Eset (type_0 A).


Set_2Eimage :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         leibniz.eq (type_15 B) (Data_2EList_2EtoSet (
                                                   sttfa.arrow (type_6 B) (
                                                     type_15 B)) (term_16 B A l_2 f_1)) (
                           Set_2Eimage (sttfa.arrow (type_5 B A) (sttfa.arrow (
                                                                    type_16 A) (
                                                                    type_15 B))) (
                             term_5 B A f_1) (Data_2EList_2EtoSet (sttfa.arrow (
                                                                    type_1 A) (
                                                                    type_16 A)) (
                                                term_13 A l_2))))).


thm_5 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_19 x x0))).


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x) (
                                                       sttfa.arrow (type_5 x0 x) (
                                                         type_10 x0))))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_3 B (term_16 B A l_1 f_2).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         term_15 (term_20 A B l_2 f_1 (term_8 B)) (term_11 A (
                                                                    term_13 A l_2) (
                                                                    term_7 A)))).


thm_6 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_21 x x0))).


def type_17 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => B:sttfa.type => sttfa.arrow (type_4 B) C.


def term_22 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (sttfa.arrow (
                                                                    type_17 x x0) type_3) type_3))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_17 C B) type_3) type_3).


def type_18 :
  sttfa.type -> sttfa.type
  :=
  C:sttfa.type => Data_2EList_2Elist C.


def type_19 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => A:sttfa.type => sttfa.arrow (type_1 A) (type_18 C).


def type_20 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => B:sttfa.type => sttfa.arrow (type_6 B) (type_18 C).


Function_2Eo :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_23 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_17 x x0) (
                                                       type_17 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_17 C B))) => f_1.


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_17 x x0) (
                                                       type_20 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_17 C B))) =>
  Data_2EList_2Emap C (type_4 B) (term_23 C B f_1).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x x0) (
                                                       type_5 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => g_1:(sttfa.etap (sttfa.p (type_5 B A))) => g_1.


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x x0) (
                                                       type_7 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  g_1:(sttfa.etap (sttfa.p (type_5 B A))) => term_4 B A (term_25 B A g_1).


def type_21 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) C.


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_5 x x1) (
                                                                    sttfa.arrow (
                                                                    type_17 x0 x) (
                                                                    type_19 x0 x1)))))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  g_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
  f_2:(sttfa.etap (sttfa.p (type_17 C B))) =>
  Data_2EList_2Emap C (type_0 A) (Function_2Eo (sttfa.arrow (type_17 C B) (
                                                  sttfa.arrow (type_5 B A) (
                                                    type_21 C A))) (term_23 C B f_2) (
                                    term_25 B A g_1)).


def term_28 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_3))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  term_22 C B (f_1:(sttfa.etap (sttfa.p (type_17 C B))) =>
               term_2 B A (g_2:(sttfa.etap (sttfa.p (type_5 B A))) =>
                           leibniz.eq (type_19 C A) (Function_2Eo (sttfa.arrow (
                                                                    type_20 C B) (
                                                                    sttfa.arrow (
                                                                    type_7 B A) (
                                                                    type_19 C A))) (
                                                       term_24 C B f_1) (
                                                       term_26 B A g_2)) (
                             term_27 B C A g_2 f_1))).


thm_7 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_28 x x0 x1)))).


def term_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x0) (
                                                       sttfa.arrow (type_5 x x0) (
                                                         type_6 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  g_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_26 B A g_2 (term_13 A l_1).


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_3))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  term_22 C B (f_1:(sttfa.etap (sttfa.p (type_17 C B))) =>
               term_2 B A (g_2:(sttfa.etap (sttfa.p (type_5 B A))) =>
                           term_10 A (l_3:
                                      (sttfa.etap (sttfa.p (type_1 A))) =>
                                      leibniz.eq (type_18 C) (term_27 B C A g_2 f_1 (
                                                                term_13 A l_3)) (
                                        term_24 C B f_1 (term_29 B A l_3 g_2))))).


thm_8 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_30 x x0 x1)))).


def type_22 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_4 B) type_3.


def type_23 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_22 B) type_3.


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_23 x) type_3)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_23 B) type_3).


def type_24 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_22 B) (type_10 B).


Data_2EList_2Eall :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_22 x) (type_22 x))))
  :=
  B:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_22 B))) => p_1.


def type_25 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_3.


def type_26 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_25 A) (type_11 A).


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_26 x)))
  :=
  A:sttfa.type => Data_2EList_2Eall (type_26 A).


def term_34 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x0 x) (
                                                       sttfa.arrow (type_22 x0) (
                                                         type_25 x))))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
  p_2:(sttfa.etap (sttfa.p (type_22 B))) =>
  Function_2Eo (sttfa.arrow (type_22 B) (sttfa.arrow (type_5 B A) (type_25 A))) (
    term_32 B p_2) (term_5 B A f_1).


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  term_31 B (p_1:(sttfa.etap (sttfa.p (type_22 B))) =>
             term_2 B A (f_2:(sttfa.etap (sttfa.p (type_5 B A))) =>
                         term_10 A (l_3:(sttfa.etap (sttfa.p (type_1 A))) =>
                                    term_15 (Data_2EList_2Eall (type_24 B) (
                                               term_32 B p_1) (term_16 B A l_3 f_2)) (
                                      term_33 A (term_34 A B f_2 p_1) (
                                        term_13 A l_3))))).


thm_9 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_35 x x0))).


Data_2EList_2Eany :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_36 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  term_31 B (p_1:(sttfa.etap (sttfa.p (type_22 B))) =>
             term_2 B A (f_2:(sttfa.etap (sttfa.p (type_5 B A))) =>
                         term_10 A (l_3:(sttfa.etap (sttfa.p (type_1 A))) =>
                                    term_15 (Data_2EList_2Eany (type_24 B) (
                                               term_32 B p_1) (term_16 B A l_3 f_2)) (
                                      Data_2EList_2Eany (type_26 A) (
                                        term_34 A B f_2 p_1) (term_13 A l_3))))).


thm_10 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_36 x x0))).


def type_27 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_25 A) type_3.


def term_37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_27 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_27 A).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_0 A))) => h_1.


def term_39 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => t_1:(sttfa.etap (sttfa.p (type_1 A))) => t_1.


def term_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_37 A (h_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                         term_10 A (t_3:(sttfa.etap (sttfa.p (type_1 A))) =>
                                    term_3 B (term_6 B A f_1 (Data_2EList_2E_3A_3A (
                                                                sttfa.arrow (
                                                                  type_0 A) (
                                                                  type_2 A)) (
                                                                term_38 A h_2) (
                                                                term_39 A t_3))) (
                                      Data_2EList_2E_3A_3A (sttfa.arrow (
                                                              type_4 B) (
                                                              sttfa.arrow (
                                                                type_6 B) (
                                                                type_6 B))) (
                                        term_5 B A f_1 (term_38 A h_2)) (
                                        term_6 B A f_1 (term_39 A t_3)))))).


thm_11 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_40 x x0))).


Data_2EList_2E_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_41 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l1_1:(sttfa.etap (sttfa.p (type_1 A))) => l1_1.


def term_42 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l2_1:(sttfa.etap (sttfa.p (type_1 A))) => l2_1.


def term_43 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x0) (
                                                       sttfa.arrow (type_5 x x0) (
                                                         type_6 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_6 B A f_2 (term_41 A l1_1).


def term_44 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x0) (
                                                       sttfa.arrow (type_5 x x0) (
                                                         type_6 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_6 B A f_2 (term_42 A l2_1).


def term_45 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l1_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         term_10 A (l2_3:(sttfa.etap (sttfa.p (type_1 A))) =>
                                    term_3 B (term_6 B A f_1 (Data_2EList_2E_40 (
                                                                sttfa.arrow (
                                                                  type_1 A) (
                                                                  type_2 A)) (
                                                                term_41 A l1_2) (
                                                                term_42 A l2_3))) (
                                      Data_2EList_2E_40 (sttfa.arrow (
                                                           type_6 B) (
                                                           sttfa.arrow (
                                                             type_6 B) (
                                                             type_6 B))) (
                                        term_43 B A l1_2 f_1) (term_44 B A l2_3 f_1))))).


thm_12 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_45 x x0))).


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_46 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_23 x)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (type_23 B).


def term_47 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_27 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_3F (type_27 A).


def term_48 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_22 x))))
  :=
  B:sttfa.type => leibniz.eq (type_4 B).


def term_49 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_5 x x0) (
                                                         type_4 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_5 B A f_2 (term_12 A x_1).


def term_50 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x) (
                                                       sttfa.arrow (type_5 x0 x) (
                                                         type_22 x0))))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_5 B A))) => term_48 B (term_49 B A x_1 f_2).


def term_51 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  B:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_4 B))) => y_1.


def term_52 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_15 (Data_2EBool_2E_21 (sttfa.arrow (type_10 B) type_3) (
                         ys_2:(sttfa.etap (sttfa.p (type_6 B))) =>
                         Data_2EBool_2E_3F (type_12 A) (xs_3:
                                                        (sttfa.etap (
                                                           sttfa.p (type_1 A))) =>
                                                        term_3 B (term_6 B A f_1 xs_3) ys_2))) (
                term_46 B (y_2:(sttfa.etap (sttfa.p (type_4 B))) =>
                           term_47 A (x_3:
                                      (sttfa.etap (sttfa.p (type_0 A))) =>
                                      term_50 A B x_3 f_1 (term_51 B y_2))))).


thm_13 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_52 x x0))).


Data_2EList_2Emember :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_53 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_10 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                         term_46 B (y_3:(sttfa.etap (sttfa.p (type_4 B))) =>
                                    term_15 (Data_2EList_2Emember (sttfa.arrow (
                                                                    type_4 B) (
                                                                    type_10 B)) (
                                               term_51 B y_3) (term_16 B A l_2 f_1)) (
                                      term_47 A (x_4:
                                                 (sttfa.etap (sttfa.p (
                                                                type_0 A))) =>
                                                 Data_2EBool_2E_2F_5C type_13 (
                                                   term_48 B (term_51 B y_3) (
                                                     term_49 B A x_4 f_1)) (
                                                   Data_2EList_2Emember (
                                                     sttfa.arrow (type_0 A) (
                                                       type_11 A)) (term_12 A x_4) (
                                                     term_13 A l_2))))))).


thm_14 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_53 x x0))).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_54 :
  sttfa.etap (sttfa.p type_13)
  :=
  Data_2EBool_2E_3D_3D_3E type_13.


def term_55 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_2 B A (g_2:(sttfa.etap (sttfa.p (type_5 B A))) =>
                          term_10 A (l_3:(sttfa.etap (sttfa.p (type_1 A))) =>
                                     term_54 (term_33 A (x_4:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_0 A))) =>
                                                         term_50 A B x_4 f_1 (
                                                           term_25 B A g_2 (
                                                             term_12 A x_4))) (
                                                term_13 A l_3)) (term_20 A B l_3 f_1 (
                                                                   term_29 B A l_3 g_2))))).


thm_15 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_55 x x0))).


def term_56 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_0 A))) => y_1.


def term_57 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_2 B A (f_1:(sttfa.etap (sttfa.p (type_5 B A))) =>
              term_15 (term_10 A (l1_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                                  term_10 A (l2_3:
                                             (sttfa.etap (sttfa.p (type_1 A))) =>
                                             term_54 (term_3 B (term_43 B A l1_2 f_1) (
                                                        term_44 B A l2_3 f_1)) (
                                               term_11 A (term_41 A l1_2) (
                                                 term_42 A l2_3))))) (
                term_37 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                           term_37 A (y_3:
                                      (sttfa.etap (sttfa.p (type_0 A))) =>
                                      term_54 (term_50 A B x_2 f_1 (term_5 B A f_1 (
                                                                    term_56 A y_3))) (
                                        leibniz.eq (type_0 A) (term_12 A x_2) (
                                          term_56 A y_3)))))).


thm_16 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_57 x x0))).



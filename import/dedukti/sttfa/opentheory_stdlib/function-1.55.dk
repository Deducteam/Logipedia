
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (type_0 A).


def type_2 : sttfa.type := sttfa.bool.


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow (
                                                                type_1 x) type_2))))
  :=
  A:sttfa.type => leibniz.eq (type_1 A).


function_2D1_2E55 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Function_2Eid :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_1 x)))
  :=
  A:sttfa.type => function_2D1_2E55 (type_1 A).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_1 x)))
  :=
  A:sttfa.type => Function_2Eid (type_0 A).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (term_1 A) (x_1:(sttfa.etap (sttfa.p (type_0 A))) => term_2 A x_1).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_3 x)).


def type_3 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_4 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type =>
  A:sttfa.type => sttfa.arrow (type_0 A) (sttfa.arrow (type_3 B) (type_0 A)).


def Function_2Econst :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_4 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => function_2D1_2E55 (type_4 B A).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_4 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Function_2Econst (type_3 B) (type_0 A).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  leibniz.eq (type_4 B A) (term_4 B A) (x_1:
                                        (sttfa.etap (sttfa.p (type_0 A))) =>
                                        y_2:
                                        (sttfa.etap (sttfa.p (type_3 B))) =>
                                        term_2 A x_1).


thm_1 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_5 x x0))).


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_2.


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_5 A) type_2.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_6 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_6 A).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_5 x))))
  :=
  A:sttfa.type => leibniz.eq (type_0 A).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_6 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_7 A (term_1 A (term_2 A x_1)) (term_2 A x_1)).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_8 x)).


def type_7 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_3 B).


def type_8 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_7 B A).


def type_9 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_8 B A) (type_7 B A).


def Function_2ECombinator_2Ew :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_9 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => function_2D1_2E55 (type_9 B A).


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_9 x x0))))
  :=
  B:sttfa.type =>
  A:sttfa.type => Function_2ECombinator_2Ew (type_3 B) (type_0 A).


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_8 x x0) (
                                                       type_8 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_8 B A))) => f_1.


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_8 x x0) (
                                                         type_3 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_8 B A))) =>
  term_10 B A f_2 (term_2 A x_1) (term_2 A x_1).


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  leibniz.eq (type_9 B A) (term_9 B A) (f_1:
                                        (sttfa.etap (sttfa.p (type_8 B A))) =>
                                        x_2:
                                        (sttfa.etap (sttfa.p (type_0 A))) =>
                                        term_11 B A x_2 f_1).


thm_3 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_12 x x0))).


def type_10 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_7 B A) type_2.


def type_11 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_10 B A) type_2.


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_11 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Data_2EBool_2E_21 (type_11 B A).


def type_12 : sttfa.type -> sttfa.type := C:sttfa.type => C.


def type_13 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => B:sttfa.type => sttfa.arrow (type_3 B) (type_12 C).


def type_14 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_13 C B).


def type_15 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_12 C).


def type_16 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  sttfa.arrow (type_14 C B A) (sttfa.arrow (type_7 B A) (type_15 C A)).


def Function_2ECombinator_2Es :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_16 x x0 x1)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => A:sttfa.type => function_2D1_2E55 (type_16 C B A).


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (x_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_0 A (Function_2ECombinator_2Es (type_0 A) (type_3 B) (
                           type_0 A) (term_4 B A) x_1) (term_1 A)).


thm_4 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_14 x x0))).


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x x0) (
                                                       type_10 x x0)))))
  :=
  B:sttfa.type => A:sttfa.type => leibniz.eq (type_7 B A).


def type_17 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  sttfa.arrow (type_13 C B) (sttfa.arrow (type_7 B A) (type_15 C A)).


def Function_2Eo :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_17 x x0 x1)))))
  :=
  A:sttfa.type =>
  C:sttfa.type => B:sttfa.type => function_2D1_2E55 (type_17 A C B).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x x0) (
                                                       type_7 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_7 B A))) => f_1.


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_15 B A (Function_2Eo (type_0 A) (type_3 B) (type_0 A) (
                              term_16 B A f_1) (term_1 A)) (term_16 B A f_1)).


thm_5 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_17 x x0))).


def type_18 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_3 B) (type_3 B).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_15 B A (Function_2Eo (type_0 A) (type_3 B) (type_3 B) (
                              Function_2Eid (type_3 B)) (term_16 B A f_1)) (
                 term_16 B A f_1)).


thm_6 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_18 x x0))).


def type_19 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_14 C B A) type_2.


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_19 x x0 x1) type_2)))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_19 C B A) type_2).


def type_20 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  A:sttfa.type => B:sttfa.type => sttfa.arrow (type_3 B) (type_15 C A).


def type_21 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_14 C B A) (type_20 C A B).


def Function_2Eflip :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_21 x x0 x1)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => A:sttfa.type => function_2D1_2E55 (type_21 C B A).


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_21 x x0 x1)))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => Function_2Eflip (type_12 C) (type_3 B) (type_0 A).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_14 x x0 x1) (
                                                                    type_14 x x0 x1))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_14 C B A))) => f_1.


def term_22 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_14 x x0 x1) (
                                                                    type_20 x x1 x0))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_14 C B A))) =>
  term_20 C B A (term_21 C B A f_1).


def term_23 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_19 C B A (f_1:(sttfa.etap (sttfa.p (type_14 C B A))) =>
                 leibniz.eq (type_14 C B A) (Function_2Eflip (type_12 C) (
                                               type_0 A) (type_3 B) (
                                               term_22 C B A f_1)) (term_21 C B A f_1)).


thm_7 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_23 x x0 x1)))).


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_17 x x0 x1)))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type => Function_2Eo (type_0 A) (type_12 C) (type_3 B).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_13 x x0) (
                                                       type_13 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_13 C B))) => f_1.


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x x0) (
                                                       type_7 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => g_1:(sttfa.etap (sttfa.p (type_7 B A))) => g_1.


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_7 x x0) (
                                                         type_3 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  g_2:(sttfa.etap (sttfa.p (type_7 B A))) => term_26 B A g_2 (term_2 A x_1).


def term_28 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_0 x) (
                                                                    sttfa.arrow (
                                                                    type_7 x1 x) (
                                                                    sttfa.arrow (
                                                                    type_13 x0 x1) (
                                                                    type_12 x0))))))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  g_2:(sttfa.etap (sttfa.p (type_7 B A))) =>
  f_3:(sttfa.etap (sttfa.p (type_13 C B))) =>
  term_25 C B f_3 (term_27 B A x_1 g_2).


def term_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  leibniz.eq (type_17 A C B) (term_24 A C B) (f_1:
                                              (sttfa.etap (sttfa.p (type_13 C B))) =>
                                              g_2:
                                              (sttfa.etap (sttfa.p (type_7 B A))) =>
                                              x_3:
                                              (sttfa.etap (sttfa.p (type_0 A))) =>
                                              term_28 A C B x_3 g_2 f_1).


thm_8 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_29 x x0 x1)))).


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_0 A))) => y_1.


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  B:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_3 B))) => x_1.


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_3 x0) (
                                                                    sttfa.arrow (
                                                                    type_0 x1) (
                                                                    sttfa.arrow (
                                                                    type_14 x x0 x1) (
                                                                    type_12 x))))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_3 B))) =>
  y_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_3:(sttfa.etap (sttfa.p (type_14 C B A))) =>
  term_21 C B A f_3 (term_30 A y_2) (term_31 B x_1).


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  leibniz.eq (type_21 C B A) (term_20 C B A) (f_1:
                                              (sttfa.etap (sttfa.p (type_14 C B A))) =>
                                              x_2:
                                              (sttfa.etap (sttfa.p (type_3 B))) =>
                                              y_3:
                                              (sttfa.etap (sttfa.p (type_0 A))) =>
                                              term_32 C B A x_2 y_3 f_1).


thm_9 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_33 x x0 x1)))).


def term_34 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (type_16 x x0 x1)))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => Function_2ECombinator_2Es (type_12 C) (type_3 B) (type_0 A).


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_7 x0 x1) (
                                                                    sttfa.arrow (
                                                                    type_0 x1) (
                                                                    sttfa.arrow (
                                                                    type_14 x x0 x1) (
                                                                    type_12 x))))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  g_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_3:(sttfa.etap (sttfa.p (type_14 C B A))) =>
  term_21 C B A f_3 (term_2 A x_2) (term_27 B A x_2 g_1).


def term_36 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  leibniz.eq (type_16 C B A) (term_34 C B A) (f_1:
                                              (sttfa.etap (sttfa.p (type_14 C B A))) =>
                                              g_2:
                                              (sttfa.etap (sttfa.p (type_7 B A))) =>
                                              x_3:
                                              (sttfa.etap (sttfa.p (type_0 A))) =>
                                              term_35 C B A g_2 x_3 f_1).


thm_10 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_36 x x0 x1)))).


def type_22 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_3 B) type_2.


def type_23 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_22 B) type_2.


def term_37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_23 x)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (type_23 B).


def term_38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  B:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_3 B))) => y_1.


def term_39 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_6 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_37 B (y_2:(sttfa.etap (sttfa.p (type_3 B))) =>
                       term_7 A (term_4 B A (term_2 A x_1) (term_38 B y_2)) (
                         term_2 A x_1))).


thm_11 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_39 x x0))).


def term_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_22 x))))
  :=
  B:sttfa.type => leibniz.eq (type_3 B).


def term_41 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_8 B A) type_2) type_2) (
    f_1:(sttfa.etap (sttfa.p (type_8 B A))) =>
    term_6 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
              term_40 B (term_9 B A (term_10 B A f_1) (term_2 A x_2)) (
                term_11 B A x_2 f_1))).


thm_12 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_41 x x0))).


def type_24 : sttfa.type := sttfa.arrow type_2 (sttfa.arrow type_2 type_2).


def term_42 : sttfa.etap (sttfa.p type_24) := leibniz.eq type_2.


def term_43 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_10 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => function_2D1_2E55 (type_10 B A).


def Function_2Esurjective :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_10 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => term_43 B A.


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_44 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_6 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_3F (type_6 A).


def term_45 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_7 x x0) (
                                                         type_3 x))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_7 B A))) => term_16 B A f_2 (term_2 A x_1).


def term_46 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_42 (Function_2Esurjective (type_3 B) (type_0 A) (
                          term_16 B A f_1)) (term_37 B (y_2:
                                                        (sttfa.etap (
                                                           sttfa.p (type_3 B))) =>
                                                        term_44 A (x_3:
                                                                   (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                   term_40 B (
                                                                    term_38 B y_2) (
                                                                    term_45 B A x_3 f_1))))).


thm_13 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_46 x x0))).


def type_25 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type => sttfa.arrow (sttfa.arrow (type_13 C B) type_2) type_2.


def term_47 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_25 x x0))))
  :=
  C:sttfa.type => B:sttfa.type => Data_2EBool_2E_21 (type_25 C B).


def term_48 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_12 x) (sttfa.arrow (
                                                                 type_12 x) type_2))))
  :=
  C:sttfa.type => leibniz.eq (type_12 C).


def term_49 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  term_47 C B (f_1:(sttfa.etap (sttfa.p (type_13 C B))) =>
               term_13 B A (g_2:(sttfa.etap (sttfa.p (type_7 B A))) =>
                            term_6 A (x_3:
                                      (sttfa.etap (sttfa.p (type_0 A))) =>
                                      term_48 C (term_24 A C B (term_25 C B f_1) (
                                                   term_26 B A g_2) (
                                                   term_2 A x_3)) (term_28 A C B x_3 g_2 f_1)))).


thm_14 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_49 x x0 x1)))).


def term_50 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_19 C B A (f_1:(sttfa.etap (sttfa.p (type_14 C B A))) =>
                 term_37 B (x_2:(sttfa.etap (sttfa.p (type_3 B))) =>
                            term_6 A (y_3:
                                      (sttfa.etap (sttfa.p (type_0 A))) =>
                                      term_48 C (term_22 C B A f_1 (term_31 B x_2) (
                                                   term_30 A y_3)) (term_32 C B A x_2 y_3 f_1)))).


thm_15 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_50 x x0 x1)))).


def term_51 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_19 C B A (f_1:(sttfa.etap (sttfa.p (type_14 C B A))) =>
                 term_13 B A (g_2:(sttfa.etap (sttfa.p (type_7 B A))) =>
                              term_6 A (x_3:
                                        (sttfa.etap (sttfa.p (type_0 A))) =>
                                        term_48 C (term_34 C B A (term_21 C B A f_1) (
                                                     term_26 B A g_2) (
                                                     term_2 A x_3)) (
                                          term_35 C B A g_2 x_3 f_1)))).


thm_16 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_51 x x0 x1)))).


def type_26 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  D:sttfa.type => C:sttfa.type => sttfa.arrow (type_12 C) D.


def term_52 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (sttfa.arrow (
                                                                    type_26 x x0) type_2) type_2))))
  :=
  D:sttfa.type =>
  C:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_26 D C) type_2) type_2).


def type_27 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  D:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) D.


def term_53 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_27 x x0) (
                                                       sttfa.arrow (type_27 x x0) type_2)))))
  :=
  D:sttfa.type => A:sttfa.type => leibniz.eq (type_27 D A).


def term_54 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_26 x x0) (
                                                       type_26 x x0)))))
  :=
  D:sttfa.type =>
  C:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_26 D C))) => f_1.


def term_55 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_13 x x0) (
                                                       type_13 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => g_1:(sttfa.etap (sttfa.p (type_13 C B))) => g_1.


def term_56 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x x0) (
                                                       type_7 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_7 B A))) => h_1.


def term_57 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_7 x1 x) (
                                                                    sttfa.arrow (
                                                                    type_13 x0 x1) (
                                                                    type_15 x0 x)))))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  h_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
  term_24 A C B (term_55 C B g_2) (term_56 B A h_1).


def term_58 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.forallK (
                                                             x2:sttfa.type =>
                                                             sttfa.p (
                                                               sttfa.arrow (
                                                                 type_7 x x0) (
                                                                 sttfa.arrow (
                                                                   type_13 x2 x) (
                                                                   sttfa.arrow (
                                                                    type_26 x1 x2) (
                                                                    type_27 x1 x0)))))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  D:sttfa.type =>
  C:sttfa.type =>
  h_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
  f_3:(sttfa.etap (sttfa.p (type_26 D C))) =>
  Function_2Eo (type_0 A) D (type_12 C) (term_54 D C f_3) (term_57 A C B h_1 g_2).


def type_28 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  D:sttfa.type => B:sttfa.type => sttfa.arrow (type_3 B) D.


def term_59 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.forallK (
                                                             x2:sttfa.type =>
                                                             sttfa.p (
                                                               sttfa.arrow (
                                                                 type_7 x2 x0) (
                                                                 sttfa.arrow (
                                                                   type_13 x x2) (
                                                                   sttfa.arrow (
                                                                    type_26 x1 x) (
                                                                    type_27 x1 x0)))))))))
  :=
  C:sttfa.type =>
  A:sttfa.type =>
  D:sttfa.type =>
  B:sttfa.type =>
  h_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
  f_3:(sttfa.etap (sttfa.p (type_26 D C))) =>
  Function_2Eo (type_0 A) D (type_3 B) (Function_2Eo (type_3 B) D (type_12 C) (
                                          term_54 D C f_3) (term_55 C B g_2)) (
    term_56 B A h_1).


def term_60 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.forallK (
                                                             x2:sttfa.type =>
                                                             sttfa.p type_2)))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  D:sttfa.type =>
  C:sttfa.type =>
  term_52 D C (f_1:(sttfa.etap (sttfa.p (type_26 D C))) =>
               term_47 C B (g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
                            term_13 B A (h_3:
                                         (sttfa.etap (sttfa.p (type_7 B A))) =>
                                         term_53 D A (term_58 B A D C h_3 g_2 f_1) (
                                           term_59 C A D B h_3 g_2 f_1)))).


thm_17 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          sttfa.forallP (
                                                            x2:sttfa.type =>
                                                            term_60 x x0 x1 x2))))).


def term_61 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.forallK (
                                                             x2:sttfa.type =>
                                                             sttfa.p type_2)))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  D:sttfa.type =>
  C:sttfa.type =>
  term_52 D C (f_1:(sttfa.etap (sttfa.p (type_26 D C))) =>
               term_47 C B (g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
                            term_13 B A (h_3:
                                         (sttfa.etap (sttfa.p (type_7 B A))) =>
                                         term_53 D A (term_59 C A D B h_3 g_2 f_1) (
                                           term_58 B A D C h_3 g_2 f_1)))).


thm_18 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          sttfa.forallP (
                                                            x2:sttfa.type =>
                                                            term_61 x x0 x1 x2))))).


def Function_2Einjective :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_10 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => term_43 B A.


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_62 :
  sttfa.etap (sttfa.p type_24)
  :=
  Data_2EBool_2E_3D_3D_3E type_24.


def term_63 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x1_1:(sttfa.etap (sttfa.p (type_0 A))) => x1_1.


def term_64 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x2_1:(sttfa.etap (sttfa.p (type_0 A))) => x2_1.


def term_65 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_42 (Function_2Einjective (type_3 B) (type_0 A) (term_16 B A f_1)) (
                 term_6 A (x1_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                           term_6 A (x2_3:
                                     (sttfa.etap (sttfa.p (type_0 A))) =>
                                     term_62 (term_40 B (term_16 B A f_1 (
                                                           term_63 A x1_2)) (
                                                term_16 B A f_1 (term_64 A x2_3))) (
                                       term_7 A (term_63 A x1_2) (term_64 A x2_3)))))).


thm_19 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_65 x x0))).


def type_29 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => A:sttfa.type => sttfa.arrow (type_15 C A) type_2.


def term_66 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_29 x x0) type_2))))
  :=
  C:sttfa.type =>
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_29 C A) type_2).


def term_67 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_23 x)))
  :=
  B:sttfa.type => Data_2EBool_2E_3F (type_23 B).


def term_68 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_15 x x0) (
                                                       type_15 x x0)))))
  :=
  C:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_15 C A))) => f_1.


def term_69 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_15 x x0) (
                                                         type_12 x))))))
  :=
  C:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_15 C A))) => term_68 C A f_2 (term_2 A x_1).


def term_70 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_0 x) (
                                                                    sttfa.arrow (
                                                                    type_15 x0 x) (
                                                                    sttfa.arrow (
                                                                    type_13 x0 x1) type_2)))))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  B:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_15 C A))) =>
  g_3:(sttfa.etap (sttfa.p (type_13 C B))) =>
  term_67 B (y_4:(sttfa.etap (sttfa.p (type_3 B))) =>
             term_48 C (term_55 C B g_3 (term_38 B y_4)) (term_69 C A x_1 f_2)).


def term_71 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_11 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Data_2EBool_2E_3F (type_11 B A).


def term_72 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_15 x x0) (
                                                       type_29 x x0)))))
  :=
  C:sttfa.type =>
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_15 C A))) =>
  leibniz.eq (type_15 C A) (term_68 C A f_1).


def term_73 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_66 C A (f_1:(sttfa.etap (sttfa.p (type_15 C A))) =>
               term_47 C B (g_2:(sttfa.etap (sttfa.p (type_13 C B))) =>
                            term_42 (term_6 A (x_3:
                                               (sttfa.etap (sttfa.p (
                                                              type_0 A))) =>
                                               term_70 A C B x_3 f_1 g_2)) (
                              term_71 B A (h_3:
                                           (sttfa.etap (sttfa.p (type_7 B A))) =>
                                           term_72 C A f_1 (term_57 A C B h_3 g_2))))).


thm_20 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_73 x x0 x1)))).


def term_74 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x0 x) (
                                                       sttfa.arrow type_2 type_2)))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  term_42 (term_37 B (y_2:(sttfa.etap (sttfa.p (type_3 B))) =>
                      term_44 A (x_3:(sttfa.etap (sttfa.p (type_0 A))) =>
                                 term_40 B (term_45 B A x_3 f_1) (term_38 B y_2)))).


def term_75 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_23 x) type_2)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_23 B) type_2).


def term_76 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_22 x) (type_22 x))))
  :=
  B:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_22 B))) => p_1.


def term_77 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x x0) (
                                                       sttfa.arrow (type_22 x) (
                                                         type_5 x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
  p_2:(sttfa.etap (sttfa.p (type_22 B))) =>
  x_3:(sttfa.etap (sttfa.p (type_0 A))) =>
  term_76 B p_2 (term_45 B A x_3 f_1).


def term_78 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_22 x) (type_22 x))))
  :=
  B:sttfa.type =>
  p_1:(sttfa.etap (sttfa.p (type_22 B))) =>
  y_2:(sttfa.etap (sttfa.p (type_3 B))) => term_76 B p_1 (term_38 B y_2).


def term_79 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_74 A B f_1 (term_75 B (p_2:
                                           (sttfa.etap (sttfa.p (type_22 B))) =>
                                           term_42 (term_6 A (term_77 B A f_1 p_2)) (
                                             term_37 B (term_78 B p_2))))).


thm_21 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_79 x x0))).


def term_80 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_13 B A (f_1:(sttfa.etap (sttfa.p (type_7 B A))) =>
               term_74 A B f_1 (term_75 B (p_2:
                                           (sttfa.etap (sttfa.p (type_22 B))) =>
                                           term_42 (term_44 A (term_77 B A f_1 p_2)) (
                                             term_67 B (term_78 B p_2))))).


thm_22 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_80 x x0))).


def term_81 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x) (
                                                       sttfa.arrow (type_0 x) (
                                                         sttfa.arrow (
                                                           type_7 x0 x) type_2))))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  g_3:(sttfa.etap (sttfa.p (type_7 B A))) =>
  term_40 B (term_27 B A x_2 g_3) (term_26 B A g_3 (term_30 A y_1)).


def term_82 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x) (
                                                       sttfa.arrow (type_15 x0 x) (
                                                         sttfa.arrow (
                                                           type_12 x0) type_2))))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_2:(sttfa.etap (sttfa.p (type_15 C A))) => term_48 C (term_69 C A x_1 f_2).


def term_83 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x) (
                                                       sttfa.arrow (type_0 x) (
                                                         sttfa.arrow (
                                                           type_15 x0 x) type_2))))))
  :=
  A:sttfa.type =>
  C:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  f_3:(sttfa.etap (sttfa.p (type_15 C A))) =>
  term_82 A C x_2 f_3 (term_68 C A f_3 (term_30 A y_1)).


def term_84 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_25 x x0))))
  :=
  C:sttfa.type => B:sttfa.type => Data_2EBool_2E_3F (type_25 C B).


def term_85 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_13 x x0) (
                                                       type_13 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_13 C B))) => h_1.


def term_86 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_66 C A (f_1:(sttfa.etap (sttfa.p (type_15 C A))) =>
               term_13 B A (g_2:(sttfa.etap (sttfa.p (type_7 B A))) =>
                            term_42 (term_6 A (x_3:
                                               (sttfa.etap (sttfa.p (
                                                              type_0 A))) =>
                                               term_6 A (y_4:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_0 A))) =>
                                                         term_62 (term_81 A B y_4 x_3 g_2) (
                                                           term_83 A C y_4 x_3 f_1)))) (
                              term_84 C B (h_3:
                                           (sttfa.etap (sttfa.p (type_13 C B))) =>
                                           term_72 C A f_1 (term_24 A C B (
                                                              term_85 C B h_3) (
                                                              term_26 B A g_2)))))).


thm_23 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_86 x x0 x1)))).


def term_87 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) type_2)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_6 A) type_2).


def term_88 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) (type_5 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_5 A))) => p_1.


def term_89 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow (
                                                                type_5 x) type_2))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  p_2:(sttfa.etap (sttfa.p (type_5 A))) => term_88 A p_2 (term_2 A x_1).


def term_90 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow (
                                                                type_5 x) (
                                                                sttfa.arrow type_2 type_2)))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  p_2:(sttfa.etap (sttfa.p (type_5 A))) => term_62 (term_89 A x_1 p_2).


def term_91 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_87 A (p_1:(sttfa.etap (sttfa.p (type_5 A))) =>
             term_66 C A (f_2:(sttfa.etap (sttfa.p (type_15 C A))) =>
                          term_47 C B (g_3:
                                       (sttfa.etap (sttfa.p (type_13 C B))) =>
                                       term_42 (term_6 A (x_4:
                                                          (sttfa.etap (
                                                             sttfa.p (
                                                               type_0 A))) =>
                                                          term_90 A x_4 p_1 (
                                                            term_70 A C B x_4 f_2 g_3))) (
                                         term_71 B A (h_4:
                                                      (sttfa.etap (sttfa.p (
                                                                    type_7 B A))) =>
                                                      term_6 A (x_5:
                                                                (sttfa.etap (
                                                                   sttfa.p (
                                                                    type_0 A))) =>
                                                                term_90 A x_5 p_1 (
                                                                  term_82 A C x_5 f_2 (
                                                                    term_55 C B g_3 (
                                                                    term_56 B A h_4 (
                                                                    term_2 A x_5)))))))))).


thm_24 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_91 x x0 x1)))).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_92 : sttfa.etap (sttfa.p type_24) := Data_2EBool_2E_2F_5C type_24.


def term_93 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_2))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_87 A (p_1:(sttfa.etap (sttfa.p (type_5 A))) =>
             term_66 C A (f_2:(sttfa.etap (sttfa.p (type_15 C A))) =>
                          term_13 B A (g_3:
                                       (sttfa.etap (sttfa.p (type_7 B A))) =>
                                       term_42 (term_6 A (x_4:
                                                          (sttfa.etap (
                                                             sttfa.p (
                                                               type_0 A))) =>
                                                          term_6 A (y_5:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                    term_62 (
                                                                    term_92 (
                                                                    term_89 A x_4 p_1) (
                                                                    term_92 (
                                                                    term_88 A p_1 (
                                                                    term_30 A y_5)) (
                                                                    term_81 A B y_5 x_4 g_3))) (
                                                                    term_83 A C y_5 x_4 f_2)))) (
                                         term_84 C B (h_4:
                                                      (sttfa.etap (sttfa.p (
                                                                    type_13 C B))) =>
                                                      term_6 A (x_5:
                                                                (sttfa.etap (
                                                                   sttfa.p (
                                                                    type_0 A))) =>
                                                                term_90 A x_5 p_1 (
                                                                  term_82 A C x_5 f_2 (
                                                                    term_85 C B h_4 (
                                                                    term_27 B A x_5 g_3))))))))).


thm_25 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_93 x x0 x1)))).




def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


Set_2Eset : sttfa.type -> sttfa.type.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Set_2Eset (type_0 A).


def type_2 : sttfa.type := sttfa.bool.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) type_2.


set_2Dfinite_2Ddef_2D1_2E37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_3 x)))
  :=
  A:sttfa.type => set_2Dfinite_2Ddef_2D1_2E37 (type_3 A).


def Set_2Efinite :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_3 x)))
  :=
  A:sttfa.type => term_0 A.


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_3 x)))
  :=
  A:sttfa.type => Set_2Efinite (type_0 A).


Set_2E_7B_7D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_1 x)))
  :=
  A:sttfa.type => Set_2E_7B_7D (type_1 A).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type => term_1 A (term_2 A).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_3 x)).


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) type_2.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_4 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_4 A).


def type_5 : sttfa.type := sttfa.arrow type_2 type_2.


def type_6 : sttfa.type := sttfa.arrow type_2 type_5.


def term_5 : sttfa.etap (sttfa.p type_6) := leibniz.eq type_2.


def Set_2Einfinite :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_3 x)))
  :=
  A:sttfa.type => term_0 A.


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => s_1:(sttfa.etap (sttfa.p (type_1 A))) => s_1.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_2)))
  :=
  A:sttfa.type =>
  s_1:(sttfa.etap (sttfa.p (type_1 A))) => term_1 A (term_6 A s_1).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_4 A (s_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_5 (Set_2Einfinite (type_0 A) (term_6 A s_1)) (Data_2EBool_2E_7E type_5 (
                                                                 term_7 A s_1))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_8 x)).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (sttfa.arrow (type_0 A) type_2) type_2.


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_7 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_7 A).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_10 : sttfa.etap (sttfa.p type_6) := Data_2EBool_2E_3D_3D_3E type_6.


Set_2Einsert :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow (
                                                                type_0 x) (
                                                                type_1 x)))))
  :=
  A:sttfa.type =>
  s_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  Set_2Einsert (sttfa.arrow (type_0 A) (sttfa.arrow (type_1 A) (type_1 A))) x_2 (
    term_6 A s_1).


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_9 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_4 A (s_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                      term_10 (term_7 A s_2) (term_1 A (term_11 A s_2 x_1)))).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_12 x)).


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => a_1:(sttfa.etap (sttfa.p (type_1 A))) => a_1.


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_2)))
  :=
  A:sttfa.type =>
  a_1:(sttfa.etap (sttfa.p (type_1 A))) => term_1 A (term_13 A a_1).


Data_2EBool_2E_5C_2F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_3 x))))
  :=
  A:sttfa.type =>
  a_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  leibniz.eq (type_1 A) (term_13 A a_1).


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_16 : sttfa.etap (sttfa.p type_6) := Data_2EBool_2E_2F_5C type_6.


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_4 A (a_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_5 (term_14 A a_1) (Data_2EBool_2E_5C_2F type_6 (term_15 A a_1 (
                                                                   term_2 A)) (
                                      Data_2EBool_2E_3F (type_7 A) (x_2:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                    Data_2EBool_2E_3F (
                                                                    type_4 A) (
                                                                    s_3:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_1 A))) =>
                                                                    term_16 (
                                                                    term_15 A a_1 (
                                                                    term_11 A s_3 x_2)) (
                                                                    term_7 A s_3)))))).


thm_3 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_17 x)).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_3 A))) => p_1.


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_4 A) type_2) (p_1:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_3 A))) =>
                                                     term_10 (term_16 (
                                                                term_18 A p_1 (
                                                                  term_2 A)) (
                                                                term_9 A (
                                                                  x_2:
                                                                  (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                  term_4 A (
                                                                    s_3:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_1 A))) =>
                                                                    term_10 (
                                                                    term_18 A p_1 (
                                                                    term_6 A s_3)) (
                                                                    term_18 A p_1 (
                                                                    term_11 A s_3 x_2)))))) (
                                                       term_4 A (a_2:
                                                                 (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_1 A))) =>
                                                                 term_10 (
                                                                   term_14 A a_2) (
                                                                   term_18 A p_1 (
                                                                    term_13 A a_2))))).


thm_4 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_19 x)).



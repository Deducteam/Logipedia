
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type := sttfa.bool.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_2 A) type_1.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_2 x) (type_2 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_2 A))) => p_1.


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_3 A) type_1) (p_1:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_2 A))) =>
                                                     Data_2EBool_2E_21 (
                                                       type_3 A) (x_2:
                                                                  (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                  Data_2EBool_2E_3D_3D_3E (
                                                                    sttfa.arrow type_1 (
                                                                    sttfa.arrow type_1 type_1)) (
                                                                    term_0 A p_1 x_2) (
                                                                    term_0 A p_1 (
                                                                    sttfa_hol_axioms.select (
                                                                    type_0 A) (
                                                                    term_0 A p_1))))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_1 x)).



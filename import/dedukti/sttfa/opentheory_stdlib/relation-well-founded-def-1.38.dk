
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type := sttfa.bool.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (type_2 A).


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) type_1.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def type_5 : sttfa.type := sttfa.arrow type_1 type_1.


def type_6 : sttfa.type := sttfa.arrow type_1 type_5.


relation_2Dwell_2Dfounded_2Ddef_2D1_2E38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Relation_2EwellFounded :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_4 x)))
  :=
  A:sttfa.type => relation_2Dwell_2Dfounded_2Ddef_2D1_2E38 (type_4 A).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => r_1:(sttfa.etap (sttfa.p (type_3 A))) => r_1.


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_2 A) type_1.


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 : sttfa.etap (sttfa.p type_6) := Data_2EBool_2E_3D_3D_3E type_6.


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_7 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_3F (type_7 A).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_2 x) (type_2 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_2 A))) => p_1.


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow (
                                                                type_2 x) type_1))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  p_2:(sttfa.etap (sttfa.p (type_2 A))) => term_3 A p_2 (term_4 A x_1).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_0 A))) => y_1.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_4 A) type_1) (r_1:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_3 A))) =>
                                                     leibniz.eq type_1 (
                                                       Relation_2EwellFounded (
                                                         type_0 A) (term_0 A r_1)) (
                                                       Data_2EBool_2E_21 (
                                                         sttfa.arrow (
                                                           type_7 A) type_1) (
                                                         p_2:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_2 A))) =>
                                                         term_1 (term_2 A (
                                                                   x_3:
                                                                   (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                   term_5 A x_3 p_2)) (
                                                           term_2 A (
                                                             x_3:
                                                             (sttfa.etap (
                                                                sttfa.p (
                                                                  type_0 A))) =>
                                                             Data_2EBool_2E_2F_5C type_6 (
                                                               term_5 A x_3 p_2) (
                                                               Data_2EBool_2E_21 (
                                                                 type_7 A) (
                                                                 y_4:
                                                                 (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                 term_1 (
                                                                   term_0 A r_1 (
                                                                    term_6 A y_4) (
                                                                    term_4 A x_3)) (
                                                                   Data_2EBool_2E_7E type_5 (
                                                                    term_3 A p_2 (
                                                                    term_6 A y_4)))))))))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_7 x)).



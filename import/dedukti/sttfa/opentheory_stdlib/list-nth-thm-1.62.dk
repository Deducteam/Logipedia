
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_2 : sttfa.type := sttfa.bool.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) type_2.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_2)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_3 A) type_2).


def type_4 : sttfa.type := sttfa.arrow type_2 type_2.


def type_5 : sttfa.type := sttfa.arrow type_2 type_4.


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 : sttfa.etap (sttfa.p type_5) := Data_2EBool_2E_3D_3D_3E type_5.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l_1:(sttfa.etap (sttfa.p (type_1 A))) => l_1.


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_2.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_6 x))))
  :=
  A:sttfa.type => leibniz.eq (type_0 A).


Number_2ENatural_2Enatural : sttfa.type.


def type_7 : sttfa.type := Number_2ENatural_2Enatural.


def type_8 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow type_7 (type_0 A).


Data_2EList_2Enth :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_8 x))))
  :=
  A:sttfa.type => Data_2EList_2Enth (sttfa.arrow (type_1 A) (type_8 A)).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_8 x))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) => term_4 A (term_2 A l_1).


def type_9 : sttfa.type := sttfa.arrow type_7 type_7.


def type_10 : sttfa.type := sttfa.arrow type_7 type_9.


Number_2ENatural_2E_2D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 : sttfa.etap (sttfa.p type_10) := Number_2ENatural_2E_2D type_10.


Data_2EList_2Elength :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_7)))
  :=
  A:sttfa.type => Data_2EList_2Elength (sttfa.arrow (type_1 A) type_7).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_7)))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) => term_7 A (term_2 A l_1).


Number_2ENatural_2Ebit1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Number_2ENatural_2Ezero :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Elast :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_1 (Data_2EBool_2E_7E type_4 (Data_2EList_2Enull (type_3 A) (
                                                term_2 A l_1))) (term_3 A (
                                                                   term_5 A l_1 (
                                                                    term_6 (
                                                                    term_8 A l_1) (
                                                                    Number_2ENatural_2Ebit1 type_9 (
                                                                    Number_2ENatural_2Ezero type_7)))) (
                                                                   Data_2EList_2Elast (
                                                                    sttfa.arrow (
                                                                    type_1 A) (
                                                                    type_0 A)) (
                                                                    term_2 A l_1)))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_9 x)).


def type_11 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_6 A) type_2.


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_11 x) type_2)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_11 A) type_2).


def term_11 : sttfa.etap (sttfa.p type_5) := leibniz.eq type_2.


def type_12 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_6 A) (type_3 A).


Data_2EList_2Eall :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_6 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_6 A))) => p_1.


def type_13 : sttfa.type := sttfa.arrow type_7 type_2.


def type_14 : sttfa.type := sttfa.arrow type_13 type_2.


def term_13 : sttfa.etap (sttfa.p type_14) := Data_2EBool_2E_21 type_14.


def type_15 : sttfa.type := sttfa.arrow type_7 type_13.


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_14 : sttfa.etap (sttfa.p type_15) := Number_2ENatural_2E_3C type_15.


def term_15 :
  sttfa.etap (sttfa.p (sttfa.arrow type_7 type_7))
  :=
  i_1:(sttfa.etap (sttfa.p type_7)) => i_1.


def term_16 :
  sttfa.etap (sttfa.p (sttfa.arrow type_7 type_13))
  :=
  i_1:(sttfa.etap (sttfa.p type_7)) => term_14 (term_15 i_1).


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow type_7 type_2))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  i_2:(sttfa.etap (sttfa.p type_7)) => term_16 i_2 (term_8 A l_1).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow type_7 type_4))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  i_2:(sttfa.etap (sttfa.p type_7)) => term_1 (term_17 A l_1 i_2).


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_7 (sttfa.arrow (
                                                            type_1 x) (
                                                            type_0 x)))))
  :=
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_7)) =>
  l_2:(sttfa.etap (sttfa.p (type_1 A))) => term_5 A l_2 (term_15 i_1).


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_7 (sttfa.arrow (
                                                            type_1 x) (
                                                            sttfa.arrow (
                                                              type_6 x) type_2)))))
  :=
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_7)) =>
  l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
  p_3:(sttfa.etap (sttfa.p (type_6 A))) => term_12 A p_3 (term_19 A i_1 l_2).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_10 A (p_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_0 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                       term_11 (Data_2EList_2Eall (type_12 A) (term_12 A p_1) (
                                  term_2 A l_2)) (term_13 (i_3:
                                                           (sttfa.etap (
                                                              sttfa.p type_7)) =>
                                                           term_18 A l_2 i_3 (
                                                             term_20 A i_3 l_2 p_1))))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_21 x)).


Data_2EList_2Eany :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_22 : sttfa.etap (sttfa.p type_14) := Data_2EBool_2E_3F type_14.


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_23 : sttfa.etap (sttfa.p type_5) := Data_2EBool_2E_2F_5C type_5.


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow type_7 type_4))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  i_2:(sttfa.etap (sttfa.p type_7)) => term_23 (term_17 A l_1 i_2).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_10 A (p_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_0 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                       term_11 (Data_2EList_2Eany (type_12 A) (term_12 A p_1) (
                                  term_2 A l_2)) (term_22 (i_3:
                                                           (sttfa.etap (
                                                              sttfa.p type_7)) =>
                                                           term_24 A l_2 i_3 (
                                                             term_20 A i_3 l_2 p_1))))).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_25 x)).


Data_2EList_2Emember :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            Data_2EBool_2E_21 (type_11 A) (x_2:
                                           (sttfa.etap (sttfa.p (type_0 A))) =>
                                           term_11 (Data_2EList_2Emember (
                                                      sttfa.arrow (type_0 A) (
                                                        type_3 A)) (term_26 A x_2) (
                                                      term_2 A l_1)) (
                                             term_22 (i_3:
                                                      (sttfa.etap (sttfa.p type_7)) =>
                                                      term_24 A l_1 i_3 (
                                                        term_3 A (term_26 A x_2) (
                                                          term_19 A i_3 l_1)))))).


thm_3 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_27 x)).


Set_2Eset : sttfa.type -> sttfa.type.


def type_16 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Set_2Eset (type_0 A).


Data_2EList_2EtoSet :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def type_17 : sttfa.type := Set_2Eset type_7.


Set_2Eimage :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Set_2EfromPredicate :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_28 : sttfa.etap (sttfa.p type_15) := leibniz.eq type_7.


def term_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            leibniz.eq (type_16 A) (Data_2EList_2EtoSet (sttfa.arrow (
                                                           type_1 A) (
                                                           type_16 A)) (
                                      term_2 A l_1)) (Set_2Eimage (sttfa.arrow (
                                                                    type_8 A) (
                                                                    sttfa.arrow type_17 (
                                                                    type_16 A))) (
                                                        term_5 A l_1) (
                                                        Set_2EfromPredicate (
                                                          sttfa.arrow type_13 type_17) (
                                                          v_2:
                                                          (sttfa.etap (
                                                             sttfa.p type_7)) =>
                                                          term_22 (i_3:
                                                                   (sttfa.etap (
                                                                    sttfa.p type_7)) =>
                                                                   term_23 (
                                                                    term_28 v_2 (
                                                                    term_15 i_3)) (
                                                                    term_17 A l_1 i_3)))))).


thm_4 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_29 x)).


def type_18 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_19 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_18 B).


def type_20 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Data_2EList_2Elist (type_18 B).


Data_2EList_2Emap :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_19 x x0) (
                                                       type_19 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_19 B A))) => f_1.


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_2)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_19 B A) type_2) type_2) (
    f_1:(sttfa.etap (sttfa.p (type_19 B A))) =>
    term_0 A (l_2:(sttfa.etap (sttfa.p (type_1 A))) =>
              term_13 (i_3:(sttfa.etap (sttfa.p type_7)) =>
                       term_18 A l_2 i_3 (leibniz.eq (type_18 B) (Data_2EList_2Enth (
                                                                    sttfa.arrow (
                                                                    type_20 B) (
                                                                    sttfa.arrow type_7 (
                                                                    type_18 B))) (
                                                                    Data_2EList_2Emap (
                                                                    sttfa.arrow (
                                                                    type_19 B A) (
                                                                    sttfa.arrow (
                                                                    type_1 A) (
                                                                    type_20 B))) (
                                                                    term_30 B A f_1) (
                                                                    term_2 A l_2)) (
                                                                    term_15 i_3)) (
                                            term_30 B A f_1 (term_19 A i_3 l_2)))))).


thm_5 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_31 x x0))).


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l1_1:(sttfa.etap (sttfa.p (type_1 A))) => l1_1.


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_7)))
  :=
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_1 A))) => term_7 A (term_32 A l1_1).


def term_34 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l2_1:(sttfa.etap (sttfa.p (type_1 A))) => l2_1.


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_7)))
  :=
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_1 A))) => term_7 A (term_34 A l2_1).


def term_36 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_8 x))))
  :=
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_1 A))) => term_4 A (term_32 A l1_1).


def term_37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_8 x))))
  :=
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_1 A))) => term_4 A (term_34 A l2_1).


def term_38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l1_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_0 A (l2_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                      term_1 (term_23 (term_28 (term_33 A l1_1) (term_35 A l2_2)) (
                                term_13 (i_3:(sttfa.etap (sttfa.p type_7)) =>
                                         term_1 (term_16 i_3 (term_33 A l1_1)) (
                                           term_3 A (term_36 A l1_1 (
                                                       term_15 i_3)) (
                                             term_37 A l2_2 (term_15 i_3)))))) (
                        leibniz.eq (type_1 A) (term_32 A l1_1) (term_34 A l2_2)))).


thm_6 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_38 x)).


def term_39 :
  sttfa.etap (sttfa.p (sttfa.arrow type_7 type_7))
  :=
  k_1:(sttfa.etap (sttfa.p type_7)) => k_1.


def term_40 :
  sttfa.etap (sttfa.p (sttfa.arrow type_7 type_13))
  :=
  k_1:(sttfa.etap (sttfa.p type_7)) => term_14 (term_39 k_1).


Number_2ENatural_2E_2B :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2E_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2Econd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_41 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l1_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_0 A (l2_2:(sttfa.etap (sttfa.p (type_1 A))) =>
                      term_13 (k_3:(sttfa.etap (sttfa.p type_7)) =>
                               term_1 (term_40 k_3 (Number_2ENatural_2E_2B type_10 (
                                                      term_33 A l1_1) (
                                                      term_35 A l2_2))) (
                                 term_3 A (term_4 A (Data_2EList_2E_40 (
                                                       sttfa.arrow (type_1 A) (
                                                         sttfa.arrow (
                                                           type_1 A) (
                                                           type_1 A))) (
                                                       term_32 A l1_1) (
                                                       term_34 A l2_2)) (
                                             term_39 k_3)) (Data_2EBool_2Econd (
                                                              sttfa.arrow type_2 (
                                                                sttfa.arrow (
                                                                  type_0 A) (
                                                                  sttfa.arrow (
                                                                    type_0 A) (
                                                                    type_0 A)))) (
                                                              term_40 k_3 (
                                                                term_33 A l1_1)) (
                                                              term_36 A l1_1 (
                                                                term_39 k_3)) (
                                                              term_37 A l2_2 (
                                                                term_6 (
                                                                  term_39 k_3) (
                                                                  term_33 A l1_1)))))))).


thm_7 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_41 x)).




def type_0 : sttfa.type := sttfa.bool.


def type_1 : sttfa.type := sttfa.arrow type_0 type_0.


def type_2 : sttfa.type := sttfa.arrow type_0 type_1.


def term_0 : sttfa.etap (sttfa.p type_2) := leibniz.eq type_0.


bool_2Ddef_2D1_2E11 : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_1 : sttfa.etap (sttfa.p type_0) := bool_2Ddef_2D1_2E11 type_0.


def Data_2EBool_2EF : sttfa.etap (sttfa.p type_0) := term_1.


def term_2 : sttfa.etap (sttfa.p type_0) := Data_2EBool_2EF.


def type_3 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) type_0.


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_4 A) type_0.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => bool_2Ddef_2D1_2E11 (type_5 A).


def Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => term_3 A.


def type_6 : sttfa.type := sttfa.arrow type_1 type_0.


def term_4 : sttfa.etap (sttfa.p type_6) := Data_2EBool_2E_21 type_0.


def term_5 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  p_1:(sttfa.etap (sttfa.p type_0)) => p_1.


def term_6 :
  sttfa.etap (sttfa.p type_1)
  :=
  p_1:(sttfa.etap (sttfa.p type_0)) => term_5 p_1.


def term_7 : sttfa.etap (sttfa.p type_0) := term_0 term_2 (term_4 term_6).


thm_0 : sttfa.eps term_7.


def term_8 :
  sttfa.etap (sttfa.p (sttfa.arrow type_1 type_6))
  :=
  leibniz.eq type_1.


def Data_2EBool_2E_7E :
  sttfa.etap (sttfa.p type_1)
  :=
  bool_2Ddef_2D1_2E11 type_1.


def term_9 : sttfa.etap (sttfa.p type_2) := bool_2Ddef_2D1_2E11 type_2.


def Data_2EBool_2E_3D_3D_3E : sttfa.etap (sttfa.p type_2) := term_9.


def term_10 : sttfa.etap (sttfa.p type_2) := Data_2EBool_2E_3D_3D_3E.


def term_11 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_1))
  :=
  p_1:(sttfa.etap (sttfa.p type_0)) => term_10 (term_5 p_1).


def term_12 :
  sttfa.etap (sttfa.p type_0)
  :=
  term_8 Data_2EBool_2E_7E (p_1:(sttfa.etap (sttfa.p type_0)) =>
                            term_11 p_1 term_2).


thm_1 : sttfa.eps term_12.


def Data_2EBool_2ET : sttfa.etap (sttfa.p type_0) := term_1.


def term_13 : sttfa.etap (sttfa.p type_0) := Data_2EBool_2ET.


def term_14 :
  sttfa.etap (sttfa.p type_0)
  :=
  term_0 term_13 (term_8 term_6 term_6).


thm_2 : sttfa.eps term_14.


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) (sttfa.arrow (
                                                                type_5 x) type_0))))
  :=
  A:sttfa.type => leibniz.eq (type_5 A).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_3 A).


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_4 A))) => p_1.


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_0))
  :=
  A:sttfa.type =>
  term_15 A (term_16 A) (p_1:(sttfa.etap (sttfa.p (type_4 A))) =>
                         leibniz.eq (type_4 A) (term_17 A p_1) (x_2:
                                                                (sttfa.etap (
                                                                   sttfa.p (
                                                                    type_3 A))) =>
                                                                term_13)).


thm_3 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_18 x)).


def type_7 : sttfa.type := sttfa.arrow type_2 type_0.


def term_19 :
  sttfa.etap (sttfa.p (sttfa.arrow type_2 type_7))
  :=
  leibniz.eq type_2.


def Data_2EBool_2E_2F_5C : sttfa.etap (sttfa.p type_2) := term_9.


def term_20 : sttfa.etap (sttfa.p type_2) := Data_2EBool_2E_2F_5C.


def term_21 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  q_1:(sttfa.etap (sttfa.p type_0)) => q_1.


def term_22 :
  sttfa.etap (sttfa.p type_0)
  :=
  term_19 term_10 (p_1:(sttfa.etap (sttfa.p type_0)) =>
                   q_2:(sttfa.etap (sttfa.p type_0)) =>
                   term_0 (term_20 (term_5 p_1) (term_21 q_2)) (term_5 p_1)).


thm_4 : sttfa.eps term_22.


def term_23 :
  sttfa.etap (sttfa.p (sttfa.arrow type_2 type_2))
  :=
  f_1:(sttfa.etap (sttfa.p type_2)) => f_1.


def term_24 :
  sttfa.etap (sttfa.p type_0)
  :=
  term_19 term_20 (p_1:(sttfa.etap (sttfa.p type_0)) =>
                   q_2:(sttfa.etap (sttfa.p type_0)) =>
                   leibniz.eq type_7 (f_3:(sttfa.etap (sttfa.p type_2)) =>
                                      term_23 f_3 (term_5 p_1) (term_21 q_2)) (
                     f_3:(sttfa.etap (sttfa.p type_2)) =>
                     term_23 f_3 term_13 term_13)).


thm_5 : sttfa.eps term_24.


def Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => term_3 A.


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_3F (type_3 A).


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_3 A))) => x_1.


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (sttfa.arrow (
                                                                type_4 x) type_0))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_3 A))) =>
  p_2:(sttfa.etap (sttfa.p (type_4 A))) => term_17 A p_2 (term_26 A x_1).


def term_28 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_0))
  :=
  A:sttfa.type =>
  term_15 A (term_25 A) (p_1:(sttfa.etap (sttfa.p (type_4 A))) =>
                         term_4 (q_2:(sttfa.etap (sttfa.p type_0)) =>
                                 term_10 (term_16 A (x_3:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_3 A))) =>
                                                     term_10 (term_27 A x_3 p_1) (
                                                       term_21 q_2))) (
                                   term_21 q_2))).


thm_6 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_28 x)).


def Data_2EBool_2E_5C_2F : sttfa.etap (sttfa.p type_2) := term_9.


def term_29 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  r_1:(sttfa.etap (sttfa.p type_0)) => r_1.


def term_30 :
  sttfa.etap (sttfa.p type_0)
  :=
  term_19 Data_2EBool_2E_5C_2F (p_1:(sttfa.etap (sttfa.p type_0)) =>
                                q_2:(sttfa.etap (sttfa.p type_0)) =>
                                term_4 (r_3:(sttfa.etap (sttfa.p type_0)) =>
                                        term_10 (term_11 p_1 (term_29 r_3)) (
                                          term_10 (term_10 (term_21 q_2) (
                                                     term_29 r_3)) (term_29 r_3)))).


thm_7 : sttfa.eps term_30.


def Data_2EBool_2E_3F_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => term_3 A.


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_3 A))) => y_1.


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_4 x))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_3 A))) =>
  leibniz.eq (type_3 A) (term_26 A x_1).


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_0))
  :=
  A:sttfa.type =>
  term_15 A (Data_2EBool_2E_3F_21 (type_3 A)) (p_1:
                                               (sttfa.etap (sttfa.p (
                                                              type_4 A))) =>
                                               term_20 (term_25 A (term_17 A p_1)) (
                                                 term_16 A (x_2:
                                                            (sttfa.etap (
                                                               sttfa.p (
                                                                 type_3 A))) =>
                                                            term_16 A (
                                                              y_3:
                                                              (sttfa.etap (
                                                                 sttfa.p (
                                                                   type_3 A))) =>
                                                              term_10 (
                                                                term_20 (
                                                                  term_27 A x_2 p_1) (
                                                                  term_17 A p_1 (
                                                                    term_31 A y_3))) (
                                                                term_32 A x_2 (
                                                                  term_31 A y_3)))))).


thm_8 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_33 x)).


def type_8 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type =>
  sttfa.arrow type_0 (sttfa.arrow (type_3 A) (sttfa.arrow (type_3 A) (
                                                type_3 A))).


def Data_2EBool_2Econd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_8 x)))
  :=
  A:sttfa.type => bool_2Ddef_2D1_2E11 (type_8 A).


def term_34 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_1))
  :=
  t_1:(sttfa.etap (sttfa.p type_0)) => term_0 t_1.


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_0))
  :=
  A:sttfa.type =>
  leibniz.eq (type_8 A) (Data_2EBool_2Econd (type_3 A)) (t_1:
                                                         (sttfa.etap (
                                                            sttfa.p type_0)) =>
                                                         t1_2:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_3 A))) =>
                                                         t2_3:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_3 A))) =>
                                                         sttfa_hol_axioms.select (
                                                           type_3 A) (
                                                           x_4:
                                                           (sttfa.etap (
                                                              sttfa.p (
                                                                type_3 A))) =>
                                                           term_20 (term_10 (
                                                                    term_34 t_1 term_13) (
                                                                    term_32 A x_4 t1_2)) (
                                                             term_10 (
                                                               term_34 t_1 term_2) (
                                                               term_32 A x_4 t2_3)))).


thm_9 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_35 x)).



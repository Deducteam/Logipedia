
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (type_0 A).


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) sttfa.bool.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_2 x) sttfa.bool)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_2 A) sttfa.bool).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_2 x))))
  :=
  A:sttfa.type => leibniz.eq (type_1 A).


Number_2ENatural_2Enatural : sttfa.type.


def type_3 : sttfa.type := Number_2ENatural_2Enatural.


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) (sttfa.arrow type_3 (type_1 A)).


natural_2Dfunpow_2Ddef_2D1_2E18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Function_2E_5E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_4 x)))
  :=
  A:sttfa.type => natural_2Dfunpow_2Ddef_2D1_2E18 (type_4 A).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_1 A))) => f_1.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow type_3 (
                                                                type_1 x)))))
  :=
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  Function_2E_5E (type_0 A) (term_2 A f_1).


Number_2ENatural_2Ezero :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Function_2Eid :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p sttfa.bool))
  :=
  A:sttfa.type =>
  term_0 A (f_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_1 A (term_3 A f_1 (Number_2ENatural_2Ezero type_3)) (
              Function_2Eid (type_1 A))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_4 x)).


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_5 :
  sttfa.etap (sttfa.p (sttfa.arrow type_3 type_3))
  :=
  n_1:(sttfa.etap (sttfa.p type_3)) => n_1.


Function_2Eo :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p sttfa.bool))
  :=
  A:sttfa.type =>
  term_0 A (f_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow type_3 sttfa.bool) sttfa.bool) (
              n_2:(sttfa.etap (sttfa.p type_3)) =>
              term_1 A (term_3 A f_1 (Number_2ENatural_2Esuc (sttfa.arrow type_3 type_3) (
                                        term_5 n_2))) (Function_2Eo (
                                                         sttfa.arrow (
                                                           type_1 A) (
                                                           sttfa.arrow (
                                                             type_1 A) (
                                                             type_1 A))) (
                                                         term_2 A f_1) (
                                                         term_3 A f_1 (
                                                           term_5 n_2))))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_6 x)).



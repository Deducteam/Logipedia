
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type -> sttfa.type := B:sttfa.type => B.


Data_2ESum_2E_2B : sttfa.type -> sttfa.type -> sttfa.type.


def type_2 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => Data_2ESum_2E_2B (type_0 A) (type_1 B).


def type_3 : sttfa.type := sttfa.bool.


def type_4 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_2 B A) type_3.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_4 x x0) type_3))))
  :=
  B:sttfa.type =>
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_4 B A) type_3).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_4 x x0)))))
  :=
  B:sttfa.type => A:sttfa.type => leibniz.eq (type_2 B A).


def type_5 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_2 B A).


def type_6 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  A:sttfa.type => B:sttfa.type => sttfa.arrow (type_1 B) (type_2 B A).


Data_2ESum_2Ecase_2Eleft_2Eright :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2ESum_2Eleft :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_5 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Data_2ESum_2Eleft (type_5 B A).


Data_2ESum_2Eright :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_6 x x0))))
  :=
  A:sttfa.type => B:sttfa.type => Data_2ESum_2Eright (type_6 A B).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_2 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_2 B A))) => x_1.


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_0 B A (x_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
              term_1 B A (Data_2ESum_2Ecase_2Eleft_2Eright (sttfa.arrow (
                                                              type_5 B A) (
                                                              sttfa.arrow (
                                                                type_6 A B) (
                                                                sttfa.arrow (
                                                                  type_2 B A) (
                                                                  type_2 B A)))) (
                            term_2 B A) (term_3 A B) (term_4 B A x_1)) (
                term_4 B A x_1)).


thm_0 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_5 x x0))).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_3.


def type_8 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_7 A) type_3.


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_8 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_8 A).


def type_9 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_1 B) type_3.


def type_10 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_9 B) type_3.


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_10 x)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (type_10 B).


def type_11 : sttfa.type := sttfa.arrow type_3 type_3.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => a_1:(sttfa.etap (sttfa.p (type_0 A))) => a_1.


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       type_2 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  a_1:(sttfa.etap (sttfa.p (type_0 A))) => term_2 B A (term_8 A a_1).


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       type_4 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  a_1:(sttfa.etap (sttfa.p (type_0 A))) => term_1 B A (term_9 B A a_1).


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  B:sttfa.type => b_1:(sttfa.etap (sttfa.p (type_1 B))) => b_1.


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x0) (
                                                       type_2 x0 x)))))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  b_1:(sttfa.etap (sttfa.p (type_1 B))) => term_3 A B (term_11 B b_1).


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_6 A (a_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_7 B (b_2:(sttfa.etap (sttfa.p (type_1 B))) =>
                      Data_2EBool_2E_7E type_11 (term_10 B A a_1 (term_12 A B b_2)))).


thm_1 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_13 x x0))).


def type_12 : sttfa.type := sttfa.arrow type_3 type_11.


def term_14 : sttfa.etap (sttfa.p type_12) := leibniz.eq type_3.


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => b_1:(sttfa.etap (sttfa.p (type_0 A))) => b_1.


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_6 A (a_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 A (b_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                      term_14 (term_10 B A a_1 (term_2 B A (term_15 A b_2))) (
                        leibniz.eq (type_0 A) (term_8 A a_1) (term_15 A b_2)))).


thm_2 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_16 x x0))).


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  B:sttfa.type => a_1:(sttfa.etap (sttfa.p (type_1 B))) => a_1.


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  A:sttfa.type =>
  B:sttfa.type =>
  term_7 B (a_1:(sttfa.etap (sttfa.p (type_1 B))) =>
            term_7 B (b_2:(sttfa.etap (sttfa.p (type_1 B))) =>
                      term_14 (term_1 B A (term_3 A B (term_17 B a_1)) (
                                 term_12 A B b_2)) (leibniz.eq (type_1 B) (
                                                      term_17 B a_1) (
                                                      term_11 B b_2)))).


thm_3 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_18 x x0))).


Data_2EBool_2E_5C_2F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_4 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_2 B A))) => term_1 B A (term_4 B A x_1).


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_0 B A (x_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
              Data_2EBool_2E_5C_2F type_12 (Data_2EBool_2E_3F (type_8 A) (
                                              a_2:
                                              (sttfa.etap (sttfa.p (type_0 A))) =>
                                              term_19 B A x_1 (term_9 B A a_2))) (
                Data_2EBool_2E_3F (type_10 B) (b_2:
                                               (sttfa.etap (sttfa.p (
                                                              type_1 B))) =>
                                               term_19 B A x_1 (term_12 A B b_2)))).


thm_4 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_20 x x0))).


def type_13 : sttfa.type -> sttfa.type := C:sttfa.type => C.


def type_14 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_13 C).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (sttfa.arrow (
                                                                    type_14 x x0) type_3) type_3))))
  :=
  C:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_14 C A) type_3) type_3).


def type_15 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type => B:sttfa.type => sttfa.arrow (type_1 B) (type_13 C).


def term_22 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (sttfa.arrow (
                                                                    type_15 x x0) type_3) type_3))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_15 C B) type_3) type_3).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_23 :
  sttfa.etap (sttfa.p type_12)
  :=
  Data_2EBool_2E_3D_3D_3E type_12.


Data_2ESum_2EisLeft :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_14 x x0) (
                                                       type_14 x x0)))))
  :=
  C:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_14 C A))) => f_1.


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_15 x x0) (
                                                       type_15 x x0)))))
  :=
  C:sttfa.type =>
  B:sttfa.type => g_1:(sttfa.etap (sttfa.p (type_15 C B))) => g_1.


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_2 x x0) (
                                                                    sttfa.arrow (
                                                                    type_15 x1 x) (
                                                                    sttfa.arrow (
                                                                    type_14 x1 x0) (
                                                                    sttfa.arrow (
                                                                    type_13 x1) type_3))))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  C:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
  g_2:(sttfa.etap (sttfa.p (type_15 C B))) =>
  f_3:(sttfa.etap (sttfa.p (type_14 C A))) =>
  leibniz.eq (type_13 C) (Data_2ESum_2Ecase_2Eleft_2Eright (sttfa.arrow (
                                                              type_14 C A) (
                                                              sttfa.arrow (
                                                                type_15 C B) (
                                                                sttfa.arrow (
                                                                  type_2 B A) (
                                                                  type_13 C)))) (
                            term_24 C A f_3) (term_25 C B g_2) (term_4 B A x_1)).


Data_2ESum_2EdestLeft :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_3))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_21 C A (f_1:(sttfa.etap (sttfa.p (type_14 C A))) =>
               term_22 C B (g_2:(sttfa.etap (sttfa.p (type_15 C B))) =>
                            term_0 B A (x_3:
                                        (sttfa.etap (sttfa.p (type_2 B A))) =>
                                        term_23 (Data_2ESum_2EisLeft (
                                                   type_4 B A) (term_4 B A x_3)) (
                                          term_26 B A C x_3 g_2 f_1 (
                                            term_24 C A f_1 (Data_2ESum_2EdestLeft (
                                                               sttfa.arrow (
                                                                 type_2 B A) (
                                                                 type_0 A)) (
                                                               term_4 B A x_3))))))).


thm_5 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_27 x x0 x1)))).


Data_2ESum_2EisRight :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2ESum_2EdestRight :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_28 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_3))))
  :=
  B:sttfa.type =>
  C:sttfa.type =>
  A:sttfa.type =>
  term_21 C A (f_1:(sttfa.etap (sttfa.p (type_14 C A))) =>
               term_22 C B (g_2:(sttfa.etap (sttfa.p (type_15 C B))) =>
                            term_0 B A (x_3:
                                        (sttfa.etap (sttfa.p (type_2 B A))) =>
                                        term_23 (Data_2ESum_2EisRight (
                                                   type_4 B A) (term_4 B A x_3)) (
                                          term_26 B A C x_3 g_2 f_1 (
                                            term_25 C B g_2 (Data_2ESum_2EdestRight (
                                                               sttfa.arrow (
                                                                 type_2 B A) (
                                                                 type_1 B)) (
                                                               term_4 B A x_3))))))).


thm_6 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_28 x x0 x1)))).



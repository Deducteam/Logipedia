
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_2 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_1 B).


def type_3 : sttfa.type := sttfa.bool.


def type_4 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_2 B A) type_3.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_4 x x0) type_3))))
  :=
  B:sttfa.type =>
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_4 B A) type_3).


def type_5 : sttfa.type := sttfa.arrow type_3 (sttfa.arrow type_3 type_3).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_2 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_2 B A))) => f_1.


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_2 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => g_1:(sttfa.etap (sttfa.p (type_2 B A))) => g_1.


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       sttfa.arrow (type_2 x x0) type_3)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  g_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
  f_2:(sttfa.etap (sttfa.p (type_2 B A))) =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_0 A) type_3) type_3) (
    x_3:(sttfa.etap (sttfa.p (type_0 A))) =>
    leibniz.eq (type_1 B) (term_1 B A f_2 (term_2 A x_3)) (term_3 B A g_1 (
                                                             term_2 A x_3))).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       sttfa.arrow (type_2 x x0) type_3)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  g_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
  f_2:(sttfa.etap (sttfa.p (type_2 B A))) =>
  leibniz.eq (type_2 B A) (term_1 B A f_2) (term_3 B A g_1).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_0 B A (f_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
              term_0 B A (g_2:(sttfa.etap (sttfa.p (type_2 B A))) =>
                          leibniz.eq type_3 (term_4 B A g_2 f_1) (term_5 B A g_2 f_1))).


thm_0 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_6 x x0))).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_3)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_0 B A (f_1:(sttfa.etap (sttfa.p (type_2 B A))) =>
              term_0 B A (g_2:(sttfa.etap (sttfa.p (type_2 B A))) =>
                          Data_2EBool_2E_3D_3D_3E type_5 (term_4 B A g_2 f_1) (
                            term_5 B A g_2 f_1))).


thm_1 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_7 x x0))).



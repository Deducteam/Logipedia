
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type := sttfa.bool.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_2 A) type_1.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_3 x)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (type_3 A).


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_4 A) type_1.


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) type_1)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_5 A) type_1).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_2 x))))
  :=
  A:sttfa.type => leibniz.eq (type_0 A).


Number_2ENatural_2Enatural : sttfa.type.


def type_6 : sttfa.type := Number_2ENatural_2Enatural.


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow type_6 (type_0 A).


def type_8 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_4 A) (type_7 A).


list_2Dnth_2D1_2E62 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Data_2EList_2Enth :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_8 x)))
  :=
  A:sttfa.type => list_2Dnth_2D1_2E62 (type_8 A).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_8 x)))
  :=
  A:sttfa.type => Data_2EList_2Enth (type_0 A).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_0 A))) => h_1.


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => t_1:(sttfa.etap (sttfa.p (type_4 A))) => t_1.


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (sttfa.arrow (
                                                                type_0 x) (
                                                                type_7 x)))))
  :=
  A:sttfa.type =>
  t_1:(sttfa.etap (sttfa.p (type_4 A))) =>
  h_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  term_3 A (Data_2EList_2E_3A_3A (sttfa.arrow (type_0 A) (sttfa.arrow (
                                                            type_4 A) (
                                                            type_4 A))) (
              term_4 A h_2) (term_5 A t_1)).


Number_2ENatural_2Ezero :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 : sttfa.etap (sttfa.p type_6) := Number_2ENatural_2Ezero type_6.


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (h_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_1 A (t_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                      term_2 A (term_6 A t_2 h_1 term_7) (term_4 A h_1))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_8 x)).


def type_9 : sttfa.type := sttfa.arrow type_1 type_1.


def type_10 : sttfa.type := sttfa.arrow type_1 type_9.


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_9 : sttfa.etap (sttfa.p type_10) := Data_2EBool_2E_3D_3D_3E type_10.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => l_1:(sttfa.etap (sttfa.p (type_4 A))) => l_1.


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_7 x))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_4 A))) => term_3 A (term_10 A l_1).


def type_11 : sttfa.type := sttfa.arrow type_6 type_6.


def type_12 : sttfa.type := sttfa.arrow type_6 type_11.


Number_2ENatural_2E_2D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_12 : sttfa.etap (sttfa.p type_12) := Number_2ENatural_2E_2D type_12.


Data_2EList_2Elength :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_6)))
  :=
  A:sttfa.type => Data_2EList_2Elength (sttfa.arrow (type_4 A) type_6).


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_6)))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_4 A))) => term_13 A (term_10 A l_1).


Number_2ENatural_2Ebit1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Elast :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_1 A (l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
            term_9 (Data_2EBool_2E_7E type_9 (Data_2EList_2Enull (type_5 A) (
                                                term_10 A l_1))) (term_2 A (
                                                                    term_11 A l_1 (
                                                                    term_12 (
                                                                    term_14 A l_1) (
                                                                    Number_2ENatural_2Ebit1 type_11 term_7))) (
                                                                    Data_2EList_2Elast (
                                                                    sttfa.arrow (
                                                                    type_4 A) (
                                                                    type_0 A)) (
                                                                    term_10 A l_1)))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_15 x)).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_1)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_3 A) type_1).


def term_17 : sttfa.etap (sttfa.p type_10) := leibniz.eq type_1.


def type_13 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_2 A) (type_5 A).


Data_2EList_2Eall :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_2 x) (type_2 x))))
  :=
  A:sttfa.type => p_1:(sttfa.etap (sttfa.p (type_2 A))) => p_1.


def type_14 : sttfa.type := sttfa.arrow type_6 type_1.


def type_15 : sttfa.type := sttfa.arrow type_14 type_1.


def term_19 : sttfa.etap (sttfa.p type_15) := Data_2EBool_2E_21 type_15.


def type_16 : sttfa.type := sttfa.arrow type_6 type_14.


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_20 : sttfa.etap (sttfa.p type_16) := Number_2ENatural_2E_3C type_16.


def term_21 :
  sttfa.etap (sttfa.p (sttfa.arrow type_6 type_6))
  :=
  i_1:(sttfa.etap (sttfa.p type_6)) => i_1.


def term_22 :
  sttfa.etap (sttfa.p (sttfa.arrow type_6 type_14))
  :=
  i_1:(sttfa.etap (sttfa.p type_6)) => term_20 (term_21 i_1).


def term_23 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (sttfa.arrow type_6 type_1))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
  i_2:(sttfa.etap (sttfa.p type_6)) => term_22 i_2 (term_14 A l_1).


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (sttfa.arrow type_6 type_9))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
  i_2:(sttfa.etap (sttfa.p type_6)) => term_9 (term_23 A l_1 i_2).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_6 (sttfa.arrow (
                                                            type_4 x) (
                                                            type_0 x)))))
  :=
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_6)) =>
  l_2:(sttfa.etap (sttfa.p (type_4 A))) => term_11 A l_2 (term_21 i_1).


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_6 (sttfa.arrow (
                                                            type_4 x) (
                                                            sttfa.arrow (
                                                              type_2 x) type_1)))))
  :=
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_6)) =>
  l_2:(sttfa.etap (sttfa.p (type_4 A))) =>
  p_3:(sttfa.etap (sttfa.p (type_2 A))) => term_18 A p_3 (term_25 A i_1 l_2).


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_16 A (p_1:(sttfa.etap (sttfa.p (type_2 A))) =>
             term_1 A (l_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                       term_17 (Data_2EList_2Eall (type_13 A) (term_18 A p_1) (
                                  term_10 A l_2)) (term_19 (i_3:
                                                            (sttfa.etap (
                                                               sttfa.p type_6)) =>
                                                            term_24 A l_2 i_3 (
                                                              term_26 A i_3 l_2 p_1))))).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_27 x)).


Data_2EList_2Eany :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_28 : sttfa.etap (sttfa.p type_15) := Data_2EBool_2E_3F type_15.


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_29 : sttfa.etap (sttfa.p type_10) := Data_2EBool_2E_2F_5C type_10.


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (sttfa.arrow type_6 type_9))))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
  i_2:(sttfa.etap (sttfa.p type_6)) => term_29 (term_23 A l_1 i_2).


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_16 A (p_1:(sttfa.etap (sttfa.p (type_2 A))) =>
             term_1 A (l_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                       term_17 (Data_2EList_2Eany (type_13 A) (term_18 A p_1) (
                                  term_10 A l_2)) (term_28 (i_3:
                                                            (sttfa.etap (
                                                               sttfa.p type_6)) =>
                                                            term_30 A l_2 i_3 (
                                                              term_26 A i_3 l_2 p_1))))).


thm_3 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_31 x)).


Data_2EList_2Emember :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_1 A (l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
            term_0 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                      term_17 (Data_2EList_2Emember (sttfa.arrow (type_0 A) (
                                                       type_5 A)) (term_32 A x_2) (
                                 term_10 A l_1)) (term_28 (i_3:
                                                           (sttfa.etap (
                                                              sttfa.p type_6)) =>
                                                           term_30 A l_1 i_3 (
                                                             term_2 A (
                                                               term_32 A x_2) (
                                                               term_25 A i_3 l_1)))))).


thm_4 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_33 x)).


Set_2Eset : sttfa.type -> sttfa.type.


def type_17 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Set_2Eset (type_0 A).


Data_2EList_2EtoSet :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def type_18 : sttfa.type := Set_2Eset type_6.


Set_2Eimage :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Set_2EfromPredicate :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_34 : sttfa.etap (sttfa.p type_16) := leibniz.eq type_6.


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_1 A (l_1:(sttfa.etap (sttfa.p (type_4 A))) =>
            leibniz.eq (type_17 A) (Data_2EList_2EtoSet (sttfa.arrow (
                                                           type_4 A) (
                                                           type_17 A)) (
                                      term_10 A l_1)) (Set_2Eimage (sttfa.arrow (
                                                                    type_7 A) (
                                                                    sttfa.arrow type_18 (
                                                                    type_17 A))) (
                                                         term_11 A l_1) (
                                                         Set_2EfromPredicate (
                                                           sttfa.arrow type_14 type_18) (
                                                           v_2:
                                                           (sttfa.etap (
                                                              sttfa.p type_6)) =>
                                                           term_28 (i_3:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p type_6)) =>
                                                                    term_29 (
                                                                    term_34 v_2 (
                                                                    term_21 i_3)) (
                                                                    term_23 A l_1 i_3)))))).


thm_5 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_35 x)).


def term_36 :
  sttfa.etap (sttfa.p (sttfa.arrow type_6 type_6))
  :=
  n_1:(sttfa.etap (sttfa.p type_6)) => n_1.


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (h_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_1 A (t_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                      term_19 (n_3:(sttfa.etap (sttfa.p type_6)) =>
                               term_9 (term_20 (term_36 n_3) (term_13 A (
                                                                term_5 A t_2))) (
                                 term_2 A (term_6 A t_2 h_1 (Number_2ENatural_2Esuc type_11 (
                                                               term_36 n_3))) (
                                   term_3 A (term_5 A t_2) (term_36 n_3)))))).


thm_6 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_37 x)).


def type_19 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_20 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_19 B).


def type_21 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Data_2EList_2Elist (type_19 B).


Data_2EList_2Emap :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_20 x x0) (
                                                       type_20 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_20 B A))) => f_1.


def term_39 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_1)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_20 B A) type_1) type_1) (
    f_1:(sttfa.etap (sttfa.p (type_20 B A))) =>
    term_1 A (l_2:(sttfa.etap (sttfa.p (type_4 A))) =>
              term_19 (i_3:(sttfa.etap (sttfa.p type_6)) =>
                       term_24 A l_2 i_3 (leibniz.eq (type_19 B) (Data_2EList_2Enth (
                                                                    type_19 B) (
                                                                    Data_2EList_2Emap (
                                                                    sttfa.arrow (
                                                                    type_20 B A) (
                                                                    sttfa.arrow (
                                                                    type_4 A) (
                                                                    type_21 B))) (
                                                                    term_38 B A f_1) (
                                                                    term_10 A l_2)) (
                                                                    term_21 i_3)) (
                                            term_38 B A f_1 (term_25 A i_3 l_2)))))).


thm_7 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_39 x x0))).


def term_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => l1_1:(sttfa.etap (sttfa.p (type_4 A))) => l1_1.


def term_41 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_6)))
  :=
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_4 A))) => term_13 A (term_40 A l1_1).


def term_42 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => l2_1:(sttfa.etap (sttfa.p (type_4 A))) => l2_1.


def term_43 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_6)))
  :=
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_4 A))) => term_13 A (term_42 A l2_1).


def term_44 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_7 x))))
  :=
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_4 A))) => term_3 A (term_40 A l1_1).


def term_45 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_7 x))))
  :=
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_4 A))) => term_3 A (term_42 A l2_1).


def term_46 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_1 A (l1_1:(sttfa.etap (sttfa.p (type_4 A))) =>
            term_1 A (l2_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                      term_9 (term_29 (term_34 (term_41 A l1_1) (term_43 A l2_2)) (
                                term_19 (i_3:(sttfa.etap (sttfa.p type_6)) =>
                                         term_9 (term_22 i_3 (term_41 A l1_1)) (
                                           term_2 A (term_44 A l1_1 (
                                                       term_21 i_3)) (
                                             term_45 A l2_2 (term_21 i_3)))))) (
                        leibniz.eq (type_4 A) (term_40 A l1_1) (term_42 A l2_2)))).


thm_8 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_46 x)).


def term_47 :
  sttfa.etap (sttfa.p (sttfa.arrow type_6 type_6))
  :=
  k_1:(sttfa.etap (sttfa.p type_6)) => k_1.


def term_48 :
  sttfa.etap (sttfa.p (sttfa.arrow type_6 type_14))
  :=
  k_1:(sttfa.etap (sttfa.p type_6)) => term_20 (term_47 k_1).


Number_2ENatural_2E_2B :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2E_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2Econd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_49 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_1 A (l1_1:(sttfa.etap (sttfa.p (type_4 A))) =>
            term_1 A (l2_2:(sttfa.etap (sttfa.p (type_4 A))) =>
                      term_19 (k_3:(sttfa.etap (sttfa.p type_6)) =>
                               term_9 (term_48 k_3 (Number_2ENatural_2E_2B type_12 (
                                                      term_41 A l1_1) (
                                                      term_43 A l2_2))) (
                                 term_2 A (term_3 A (Data_2EList_2E_40 (
                                                       sttfa.arrow (type_4 A) (
                                                         sttfa.arrow (
                                                           type_4 A) (
                                                           type_4 A))) (
                                                       term_40 A l1_1) (
                                                       term_42 A l2_2)) (
                                             term_47 k_3)) (Data_2EBool_2Econd (
                                                              sttfa.arrow type_1 (
                                                                sttfa.arrow (
                                                                  type_0 A) (
                                                                  sttfa.arrow (
                                                                    type_0 A) (
                                                                    type_0 A)))) (
                                                              term_48 k_3 (
                                                                term_41 A l1_1)) (
                                                              term_44 A l1_1 (
                                                                term_47 k_3)) (
                                                              term_45 A l2_2 (
                                                                term_12 (
                                                                  term_47 k_3) (
                                                                  term_41 A l1_1)))))))).


thm_9 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_49 x)).



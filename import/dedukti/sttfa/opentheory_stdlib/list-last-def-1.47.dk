
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type := sttfa.bool.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) type_1.


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) (type_0 A).


list_2Dlast_2Ddef_2D1_2E47 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Data_2EList_2Elast :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => list_2Dlast_2Ddef_2D1_2E47 (type_5 A).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x)))
  :=
  A:sttfa.type => Data_2EList_2Elast (type_0 A).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_0 A))) => h_1.


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => t_1:(sttfa.etap (sttfa.p (type_3 A))) => t_1.


Data_2EBool_2Econd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_2 A) type_1) (h_1:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_0 A))) =>
                                                     Data_2EBool_2E_21 (
                                                       sttfa.arrow (type_4 A) type_1) (
                                                       t_2:
                                                       (sttfa.etap (sttfa.p (
                                                                    type_3 A))) =>
                                                       leibniz.eq (type_0 A) (
                                                         term_0 A (Data_2EList_2E_3A_3A (
                                                                    sttfa.arrow (
                                                                    type_0 A) (
                                                                    sttfa.arrow (
                                                                    type_3 A) (
                                                                    type_3 A))) (
                                                                    term_1 A h_1) (
                                                                    term_2 A t_2))) (
                                                         Data_2EBool_2Econd (
                                                           sttfa.arrow type_1 (
                                                             sttfa.arrow (
                                                               type_0 A) (
                                                               sttfa.arrow (
                                                                 type_0 A) (
                                                                 type_0 A)))) (
                                                           Data_2EList_2Enull (
                                                             type_4 A) (
                                                             term_2 A t_2)) (
                                                           term_1 A h_1) (
                                                           term_0 A (
                                                             term_2 A t_2))))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_3 x)).




def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type -> sttfa.type := B:sttfa.type => B.


Data_2EPair_2E_2A : sttfa.type -> sttfa.type -> sttfa.type.


def type_2 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => Data_2EPair_2E_2A (type_0 A) (type_1 B).


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_3 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => Data_2EList_2Elist (type_2 B A).


def type_4 : sttfa.type := sttfa.bool.


def type_5 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_3 B A) type_4.


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_5 x x0)))))
  :=
  B:sttfa.type => A:sttfa.type => leibniz.eq (type_3 B A).


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Data_2EList_2Elist (type_1 B).


Data_2EList_2Ezip :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_6 x0) (
                                                       sttfa.arrow (type_7 x) (
                                                         type_3 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EList_2Ezip (sttfa.arrow (type_6 A) (sttfa.arrow (type_7 B) (
                                               type_3 B A))).


Data_2EList_2E_5B_5D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_6 x)))
  :=
  A:sttfa.type => Data_2EList_2E_5B_5D (type_6 A).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_7 x)))
  :=
  B:sttfa.type => Data_2EList_2E_5B_5D (type_7 B).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (type_3 x x0))))
  :=
  B:sttfa.type => A:sttfa.type => Data_2EList_2E_5B_5D (type_3 B A).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type => term_0 B A (term_1 B A (term_2 A) (term_3 B)) (term_4 B A).


thm_0 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_5 x x0))).


def type_8 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => Data_2EPair_2E_2A (type_6 A) (type_7 B).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_8 x x0) (
                                                       sttfa.arrow (type_8 x x0) type_4)))))
  :=
  B:sttfa.type => A:sttfa.type => leibniz.eq (type_8 B A).


Data_2EList_2Eunzip :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_8 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => Data_2EList_2Eunzip (sttfa.arrow (type_3 B A) (type_8 B A)).


Data_2EPair_2E_2C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_6 x0) (
                                                       sttfa.arrow (type_7 x) (
                                                         type_8 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EPair_2E_2C (sttfa.arrow (type_6 A) (sttfa.arrow (type_7 B) (
                                               type_8 B A))).


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       type_8 x x0)))))
  :=
  B:sttfa.type => A:sttfa.type => term_8 B A (term_2 A).


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_6 B A (term_7 B A (term_4 B A)) (term_9 B A (term_3 B)).


thm_1 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_10 x x0))).


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_5 x x0) type_4))))
  :=
  B:sttfa.type =>
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_5 B A) type_4).


def term_12 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_3 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => l_1:(sttfa.etap (sttfa.p (type_3 B A))) => l_1.


def term_13 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       sttfa.arrow (type_8 x x0) type_4)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
  term_6 B A (term_7 B A (term_12 B A l_1)).


def type_9 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_2 B A) (type_0 A).


Data_2EList_2Emap :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EPair_2Efst :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_6 x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EList_2Emap (sttfa.arrow (type_9 B A) (sttfa.arrow (type_3 B A) (
                                                 type_6 A))) (Data_2EPair_2Efst (
                                                                type_9 B A)).


def type_10 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_2 B A) (type_1 B).


Data_2EPair_2Esnd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_7 x)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EList_2Emap (sttfa.arrow (type_10 B A) (sttfa.arrow (type_3 B A) (
                                                  type_7 B))) (Data_2EPair_2Esnd (
                                                                 type_10 B A)).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_11 B A (l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
               term_13 B A l_1 (term_8 B A (term_14 B A (term_12 B A l_1)) (
                                  term_15 B A (term_12 B A l_1)))).


thm_2 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_16 x x0))).


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (sttfa.arrow (type_0 x) type_4) type_4)))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_0 A) type_4) type_4).


def term_18 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (sttfa.arrow (type_1 x) type_4) type_4)))
  :=
  B:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_1 B) type_4) type_4).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow (
                                                                type_6 x) (
                                                                type_6 x)))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  Data_2EList_2E_3A_3A (sttfa.arrow (type_0 A) (sttfa.arrow (type_6 A) (
                                                  type_6 A))) (term_19 A x_1).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_6 x))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) => term_20 A x_1 (term_2 A).


def term_22 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  B:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_1 B))) => y_1.


def term_23 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (sttfa.arrow (
                                                                type_7 x) (
                                                                type_7 x)))))
  :=
  B:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_1 B))) =>
  Data_2EList_2E_3A_3A (sttfa.arrow (type_1 B) (sttfa.arrow (type_7 B) (
                                                  type_7 B))) (term_22 B y_1).


def term_24 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_7 x))))
  :=
  B:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_1 B))) => term_23 B y_1 (term_3 B).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       sttfa.arrow (type_3 x x0) (
                                                         type_3 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EList_2E_3A_3A (sttfa.arrow (type_2 B A) (sttfa.arrow (type_3 B A) (
                                                    type_3 B A))).


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_0 x0) (
                                                       sttfa.arrow (type_1 x) (
                                                         type_2 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EPair_2E_2C (sttfa.arrow (type_0 A) (sttfa.arrow (type_1 B) (
                                               type_2 B A))).


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x) (
                                                       sttfa.arrow (type_0 x0) (
                                                         type_2 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_1 B))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
  term_26 B A (term_19 A x_2) (term_22 B y_1).


def term_28 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_1 x) (
                                                       sttfa.arrow (type_0 x0) (
                                                         sttfa.arrow (
                                                           type_3 x x0) (
                                                           type_3 x x0)))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  y_1:(sttfa.etap (sttfa.p (type_1 B))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) => term_25 B A (term_27 B A y_1 x_2).


def term_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_17 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
             term_18 B (y_2:(sttfa.etap (sttfa.p (type_1 B))) =>
                        term_0 B A (term_1 B A (term_21 A x_1) (term_24 B y_2)) (
                          term_28 B A y_2 x_1 (term_4 B A)))).


thm_3 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_29 x x0))).


def type_11 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_6 A) type_4.


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_11 x) type_4)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_11 A) type_4).


def type_12 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => sttfa.arrow (type_7 B) type_4.


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_12 x) type_4)))
  :=
  B:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_12 B) type_4).


def type_13 : sttfa.type := sttfa.arrow type_4 (sttfa.arrow type_4 type_4).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_32 :
  sttfa.etap (sttfa.p type_13)
  :=
  Data_2EBool_2E_3D_3D_3E type_13.


Number_2ENatural_2Enatural : sttfa.type.


def type_14 : sttfa.type := Number_2ENatural_2Enatural.


def type_15 : sttfa.type := sttfa.arrow type_14 type_4.


def type_16 : sttfa.type := sttfa.arrow type_14 type_15.


def term_33 : sttfa.etap (sttfa.p type_16) := leibniz.eq type_14.


Data_2EList_2Elength :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_34 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) type_14)))
  :=
  A:sttfa.type => Data_2EList_2Elength (sttfa.arrow (type_6 A) type_14).


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_6 x))))
  :=
  A:sttfa.type => xs_1:(sttfa.etap (sttfa.p (type_6 A))) => xs_1.


def term_36 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) type_14)))
  :=
  B:sttfa.type => Data_2EList_2Elength (sttfa.arrow (type_7 B) type_14).


def term_37 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_7 x))))
  :=
  B:sttfa.type => ys_1:(sttfa.etap (sttfa.p (type_7 B))) => ys_1.


def term_38 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) type_4)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  ys_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  xs_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_33 (term_34 A (term_35 A xs_2)) (term_36 B (term_37 B ys_1)).


def term_39 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) (
                                                         sttfa.arrow type_4 type_4))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  ys_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  xs_2:(sttfa.etap (sttfa.p (type_6 A))) => term_32 (term_38 B A ys_1 xs_2).


def term_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_11 x))))
  :=
  A:sttfa.type => leibniz.eq (type_6 A).


def term_41 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) (
                                                         type_3 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  ys_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  xs_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_1 B A (term_35 A xs_2) (term_37 B ys_1).


def term_42 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_30 A (xs_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_31 B (ys_2:(sttfa.etap (sttfa.p (type_7 B))) =>
                        term_39 B A ys_2 xs_1 (term_40 A (term_14 B A (
                                                            term_41 B A ys_2 xs_1)) (
                                                 term_35 A xs_1)))).


thm_4 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_42 x x0))).


def term_43 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_12 x))))
  :=
  B:sttfa.type => leibniz.eq (type_7 B).


def term_44 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_30 A (xs_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_31 B (ys_2:(sttfa.etap (sttfa.p (type_7 B))) =>
                        term_39 B A ys_2 xs_1 (term_43 B (term_15 B A (
                                                            term_41 B A ys_2 xs_1)) (
                                                 term_37 B ys_2)))).


thm_5 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_44 x x0))).


def term_45 : sttfa.etap (sttfa.p type_13) := leibniz.eq type_4.


def term_46 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_6 x0) (
                                                       sttfa.arrow (type_7 x) (
                                                         type_8 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  xs_1:(sttfa.etap (sttfa.p (type_6 A))) => term_8 B A (term_35 A xs_1).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_47 : sttfa.etap (sttfa.p type_13) := Data_2EBool_2E_2F_5C type_13.


def term_48 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_5 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_3 B A))) => term_0 B A (term_12 B A l_1).


def term_49 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       sttfa.arrow type_4 type_4)))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
  term_47 (term_48 B A l_1 (term_4 B A)).


def term_50 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_11 B A (l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
               term_30 A (xs_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                          term_45 (term_13 B A l_1 (term_46 B A xs_2 (
                                                      term_3 B))) (term_49 B A l_1 (
                                                                    term_40 A (
                                                                    term_35 A xs_2) (
                                                                    term_2 A))))).


thm_6 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_50 x x0))).


def term_51 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_11 B A (l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
               term_31 B (ys_2:(sttfa.etap (sttfa.p (type_7 B))) =>
                          term_45 (term_13 B A l_1 (term_9 B A (term_37 B ys_2))) (
                            term_49 B A l_1 (term_43 B (term_37 B ys_2) (
                                               term_3 B))))).


thm_7 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_51 x x0))).


def type_17 : sttfa.type -> sttfa.type := C:sttfa.type => C.


def type_18 :
  sttfa.type -> sttfa.type -> sttfa.type -> sttfa.type
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => sttfa.arrow (type_0 A) (sttfa.arrow (type_1 B) (type_17 C)).


def term_52 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    sttfa.arrow (
                                                                    type_18 x x0 x1) type_4) type_4)))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_18 C B A) type_4) type_4).


def type_19 :
  sttfa.type -> sttfa.type
  :=
  C:sttfa.type => Data_2EList_2Elist (type_17 C).


def term_53 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_19 x) (sttfa.arrow (
                                                                 type_19 x) type_4))))
  :=
  C:sttfa.type => leibniz.eq (type_19 C).


Data_2EList_2EzipWith :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_54 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_18 x x0 x1) (
                                                                    type_18 x x0 x1))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_18 C B A))) => f_1.


def term_55 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_18 x x0 x1) (
                                                                    sttfa.arrow (
                                                                    type_6 x1) (
                                                                    sttfa.arrow (
                                                                    type_7 x0) (
                                                                    type_19 x))))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  f_1:(sttfa.etap (sttfa.p (type_18 C B A))) =>
  Data_2EList_2EzipWith (sttfa.arrow (type_18 C B A) (sttfa.arrow (type_6 A) (
                                                        sttfa.arrow (
                                                          type_7 B) (
                                                          type_19 C)))) (
    term_54 C B A f_1).


def term_56 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_4))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_52 C B A (f_1:(sttfa.etap (sttfa.p (type_18 C B A))) =>
                 term_17 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
                            term_18 B (y_3:
                                       (sttfa.etap (sttfa.p (type_1 B))) =>
                                       term_53 C (term_55 C B A f_1 (
                                                    term_21 A x_2) (term_24 B y_3)) (
                                         Data_2EList_2E_3A_3A (sttfa.arrow (
                                                                 type_17 C) (
                                                                 sttfa.arrow (
                                                                   type_19 C) (
                                                                   type_19 C))) (
                                           term_54 C B A f_1 (term_19 A x_2) (
                                             term_22 B y_3)) (Data_2EList_2E_5B_5D (
                                                                type_19 C)))))).


thm_8 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_56 x x0 x1)))).


def term_57 :
  sttfa.etap (sttfa.p (sttfa.arrow type_15 type_4))
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_15 type_4).


def term_58 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_6 x))))
  :=
  A:sttfa.type => l1_1:(sttfa.etap (sttfa.p (type_6 A))) => l1_1.


def term_59 :
  sttfa.etap (sttfa.p (sttfa.arrow type_14 type_14))
  :=
  n_1:(sttfa.etap (sttfa.p type_14)) => n_1.


def term_60 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_14 (sttfa.arrow (
                                                             type_6 x) (
                                                             sttfa.arrow type_4 type_4)))))
  :=
  A:sttfa.type =>
  n_1:(sttfa.etap (sttfa.p type_14)) =>
  l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_47 (term_33 (term_34 A (term_58 A l1_2)) (term_59 n_1)).


def term_61 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_7 x))))
  :=
  B:sttfa.type => l2_1:(sttfa.etap (sttfa.p (type_7 B))) => l2_1.


def term_62 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_14 (sttfa.arrow (
                                                             type_7 x) type_4))))
  :=
  B:sttfa.type =>
  n_1:(sttfa.etap (sttfa.p type_14)) =>
  l2_2:(sttfa.etap (sttfa.p (type_7 B))) =>
  term_33 (term_36 B (term_61 B l2_2)) (term_59 n_1).


def term_63 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow type_14 (
                                                         sttfa.arrow (
                                                           type_6 x0) (
                                                           sttfa.arrow type_4 type_4)))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  n_2:(sttfa.etap (sttfa.p type_14)) =>
  l1_3:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_32 (term_60 A n_2 l1_3 (term_62 B n_2 l2_1)).


def term_64 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) (
                                                         type_3 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_1 B A (term_58 A l1_2) (term_61 B l2_1).


def term_65 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_30 A (l1_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_31 B (l2_2:(sttfa.etap (sttfa.p (type_7 B))) =>
                        term_57 (n_3:(sttfa.etap (sttfa.p type_14)) =>
                                 term_63 B A l2_2 n_3 l1_1 (term_33 (
                                                              Data_2EList_2Elength (
                                                                sttfa.arrow (
                                                                  type_3 B A) type_14) (
                                                                term_64 B A l2_2 l1_1)) (
                                                              term_59 n_3))))).


thm_9 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_65 x x0))).


def term_66 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) (
                                                         type_8 x x0))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  ys_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  xs_2:(sttfa.etap (sttfa.p (type_6 A))) => term_46 B A xs_2 (term_37 B ys_1).


def term_67 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_11 B A (l_1:(sttfa.etap (sttfa.p (type_3 B A))) =>
               term_30 A (xs_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                          term_31 B (ys_3:
                                     (sttfa.etap (sttfa.p (type_7 B))) =>
                                     term_45 (term_13 B A l_1 (term_66 B A ys_3 xs_2)) (
                                       term_47 (term_38 B A ys_3 xs_2) (
                                         term_48 B A l_1 (term_41 B A ys_3 xs_2)))))).


thm_10 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_67 x x0))).


def term_68 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p (sttfa.arrow (
                                                                    type_7 x0) (
                                                                    sttfa.arrow (
                                                                    type_6 x1) (
                                                                    sttfa.arrow (
                                                                    type_18 x x0 x1) (
                                                                    type_19 x))))))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  f_3:(sttfa.etap (sttfa.p (type_18 C B A))) =>
  term_55 C B A f_3 (term_58 A l1_2) (term_61 B l2_1).


def term_69 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_4))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_52 C B A (f_1:(sttfa.etap (sttfa.p (type_18 C B A))) =>
                 term_30 A (l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                            term_31 B (l2_3:
                                       (sttfa.etap (sttfa.p (type_7 B))) =>
                                       term_57 (n_4:
                                                (sttfa.etap (sttfa.p type_14)) =>
                                                term_63 B A l2_3 n_4 l1_2 (
                                                  term_33 (Data_2EList_2Elength (
                                                             sttfa.arrow (
                                                               type_19 C) type_14) (
                                                             term_68 C B A l2_3 l1_2 f_1)) (
                                                    term_59 n_4)))))).


thm_11 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_69 x x0 x1)))).


def term_70 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (sttfa.arrow (
                                                                type_0 x) (
                                                                type_6 x)))))
  :=
  A:sttfa.type =>
  xs_1:(sttfa.etap (sttfa.p (type_6 A))) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) => term_20 A x_2 (term_35 A xs_1).


def term_71 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (sttfa.arrow (
                                                                type_1 x) (
                                                                type_7 x)))))
  :=
  B:sttfa.type =>
  ys_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  y_2:(sttfa.etap (sttfa.p (type_1 B))) => term_23 B y_2 (term_37 B ys_1).


def term_72 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_17 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
             term_18 B (y_2:(sttfa.etap (sttfa.p (type_1 B))) =>
                        term_30 A (xs_3:(sttfa.etap (sttfa.p (type_6 A))) =>
                                   term_31 B (ys_4:
                                              (sttfa.etap (sttfa.p (type_7 B))) =>
                                              term_39 B A ys_4 xs_3 (
                                                term_0 B A (term_1 B A (
                                                              term_70 A xs_3 x_1) (
                                                              term_71 B ys_4 y_2)) (
                                                  term_28 B A y_2 x_1 (
                                                    term_41 B A ys_4 xs_3))))))).


thm_12 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_72 x x0))).


def term_73 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_6 x))))
  :=
  A:sttfa.type => x1_1:(sttfa.etap (sttfa.p (type_6 A))) => x1_1.


def term_74 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_7 x))))
  :=
  B:sttfa.type => y1_1:(sttfa.etap (sttfa.p (type_7 B))) => y1_1.


def term_75 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (type_6 x))))
  :=
  A:sttfa.type => x2_1:(sttfa.etap (sttfa.p (type_6 A))) => x2_1.


def term_76 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_7 x))))
  :=
  B:sttfa.type => y2_1:(sttfa.etap (sttfa.p (type_7 B))) => y2_1.


def term_77 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_7 x) (
                                                       sttfa.arrow (type_6 x0) (
                                                         sttfa.arrow (
                                                           type_7 x) (
                                                           sttfa.arrow (
                                                             type_6 x0) (
                                                             sttfa.arrow type_4 type_4))))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  y2_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  x2_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  y1_3:(sttfa.etap (sttfa.p (type_7 B))) =>
  x1_4:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_32 (term_47 (term_33 (term_34 A (term_73 A x1_4)) (term_36 B (
                                                            term_74 B y1_3))) (
             term_33 (term_34 A (term_75 A x2_2)) (term_36 B (term_76 B y2_1)))).


Data_2EList_2E_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_78 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) (sttfa.arrow (
                                                                type_6 x) (
                                                                type_6 x)))))
  :=
  A:sttfa.type =>
  x2_1:(sttfa.etap (sttfa.p (type_6 A))) =>
  x1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  Data_2EList_2E_40 (sttfa.arrow (type_6 A) (sttfa.arrow (type_6 A) (
                                               type_6 A))) (term_73 A x1_2) (
    term_75 A x2_1).


def term_79 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (sttfa.arrow (
                                                                type_7 x) (
                                                                type_7 x)))))
  :=
  B:sttfa.type =>
  y2_1:(sttfa.etap (sttfa.p (type_7 B))) =>
  y1_2:(sttfa.etap (sttfa.p (type_7 B))) =>
  Data_2EList_2E_40 (sttfa.arrow (type_7 B) (sttfa.arrow (type_7 B) (
                                               type_7 B))) (term_74 B y1_2) (
    term_76 B y2_1).


def term_80 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_30 A (x1_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_30 A (x2_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                        term_31 B (y1_3:(sttfa.etap (sttfa.p (type_7 B))) =>
                                   term_31 B (y2_4:
                                              (sttfa.etap (sttfa.p (type_7 B))) =>
                                              term_77 B A y2_4 x2_2 y1_3 x1_1 (
                                                term_0 B A (term_1 B A (
                                                              term_78 A x2_2 x1_1) (
                                                              term_79 B y2_4 y1_3)) (
                                                  Data_2EList_2E_40 (
                                                    sttfa.arrow (type_3 B A) (
                                                      sttfa.arrow (type_3 B A) (
                                                        type_3 B A))) (
                                                    term_1 B A (term_73 A x1_1) (
                                                      term_74 B y1_3)) (
                                                    term_1 B A (term_75 A x2_2) (
                                                      term_76 B y2_4)))))))).


thm_13 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_80 x x0))).


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_81 :
  sttfa.etap (sttfa.p (sttfa.arrow type_14 type_14))
  :=
  i_1:(sttfa.etap (sttfa.p type_14)) => i_1.


def term_82 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow type_14 (
                                                       sttfa.arrow (type_7 x) (
                                                         sttfa.arrow type_14 (
                                                           sttfa.arrow (
                                                             type_6 x0) (
                                                             sttfa.arrow type_4 type_4))))))))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_14)) =>
  l2_2:(sttfa.etap (sttfa.p (type_7 B))) =>
  n_3:(sttfa.etap (sttfa.p type_14)) =>
  l1_4:(sttfa.etap (sttfa.p (type_6 A))) =>
  term_32 (term_60 A n_3 l1_4 (term_47 (term_62 B n_3 l2_2) (Number_2ENatural_2E_3C type_16 (
                                                               term_81 i_1) (
                                                               term_59 n_3)))).


def type_20 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_2 B A) type_4.


def term_83 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_20 x x0)))))
  :=
  B:sttfa.type => A:sttfa.type => leibniz.eq (type_2 B A).


Data_2EList_2Enth :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_84 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_14 (sttfa.arrow (
                                                             type_6 x) (
                                                             type_0 x)))))
  :=
  A:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_14)) =>
  l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  Data_2EList_2Enth (sttfa.arrow (type_6 A) (sttfa.arrow type_14 (type_0 A))) (
    term_58 A l1_2) (term_81 i_1).


def term_85 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_14 (sttfa.arrow (
                                                             type_7 x) (
                                                             type_1 x)))))
  :=
  B:sttfa.type =>
  i_1:(sttfa.etap (sttfa.p type_14)) =>
  l2_2:(sttfa.etap (sttfa.p (type_7 B))) =>
  Data_2EList_2Enth (sttfa.arrow (type_7 B) (sttfa.arrow type_14 (type_1 B))) (
    term_61 B l2_2) (term_81 i_1).


def term_86 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  term_30 A (l1_1:(sttfa.etap (sttfa.p (type_6 A))) =>
             term_31 B (l2_2:(sttfa.etap (sttfa.p (type_7 B))) =>
                        term_57 (n_3:(sttfa.etap (sttfa.p type_14)) =>
                                 term_57 (i_4:
                                          (sttfa.etap (sttfa.p type_14)) =>
                                          term_82 B A i_4 l2_2 n_3 l1_1 (
                                            term_83 B A (Data_2EList_2Enth (
                                                           sttfa.arrow (
                                                             type_3 B A) (
                                                             sttfa.arrow type_14 (
                                                               type_2 B A))) (
                                                           term_64 B A l2_2 l1_1) (
                                                           term_81 i_4)) (
                                              term_26 B A (term_84 A i_4 l1_1) (
                                                term_85 B i_4 l2_2))))))).


thm_14 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_86 x x0))).


def term_87 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_2 x x0) (
                                                       type_2 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => h_1:(sttfa.etap (sttfa.p (type_2 B A))) => h_1.


def term_88 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_3 x x0) (
                                                       type_3 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => t_1:(sttfa.etap (sttfa.p (type_3 B A))) => t_1.


def term_89 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_4)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_20 B A) type_4) (h_1:
                                                        (sttfa.etap (
                                                           sttfa.p (type_2 B A))) =>
                                                        term_17 A (x_2:
                                                                   (sttfa.etap (
                                                                    sttfa.p (
                                                                    type_0 A))) =>
                                                                   term_18 B (
                                                                    y_3:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_1 B))) =>
                                                                    term_11 B A (
                                                                    t_4:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_3 B A))) =>
                                                                    term_30 A (
                                                                    xs_5:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_6 A))) =>
                                                                    term_31 B (
                                                                    ys_6:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p (
                                                                    type_7 B))) =>
                                                                    term_45 (
                                                                    term_6 B A (
                                                                    term_7 B A (
                                                                    term_25 B A (
                                                                    term_87 B A h_1) (
                                                                    term_88 B A t_4))) (
                                                                    term_8 B A (
                                                                    term_70 A xs_5 x_2) (
                                                                    term_71 B ys_6 y_3))) (
                                                                    term_47 (
                                                                    term_83 B A (
                                                                    term_87 B A h_1) (
                                                                    term_27 B A y_3 x_2)) (
                                                                    term_6 B A (
                                                                    term_7 B A (
                                                                    term_88 B A t_4)) (
                                                                    term_66 B A ys_6 xs_5))))))))).


thm_15 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_89 x x0))).


def term_90 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_4))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_52 C B A (f_1:(sttfa.etap (sttfa.p (type_18 C B A))) =>
                 term_30 A (l1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                            term_31 B (l2_3:
                                       (sttfa.etap (sttfa.p (type_7 B))) =>
                                       term_57 (n_4:
                                                (sttfa.etap (sttfa.p type_14)) =>
                                                term_57 (i_5:
                                                         (sttfa.etap (
                                                            sttfa.p type_14)) =>
                                                         term_82 B A i_5 l2_3 n_4 l1_2 (
                                                           leibniz.eq (
                                                             type_17 C) (
                                                             Data_2EList_2Enth (
                                                               sttfa.arrow (
                                                                 type_19 C) (
                                                                 sttfa.arrow type_14 (
                                                                   type_17 C))) (
                                                               term_68 C B A l2_3 l1_2 f_1) (
                                                               term_81 i_5)) (
                                                             term_54 C B A f_1 (
                                                               term_84 A i_5 l1_2) (
                                                               term_85 B i_5 l2_3)))))))).


thm_16 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_90 x x0 x1)))).


def term_91 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.forallK (x1:sttfa.type =>
                                                           sttfa.p type_4))))
  :=
  C:sttfa.type =>
  B:sttfa.type =>
  A:sttfa.type =>
  term_52 C B A (f_1:(sttfa.etap (sttfa.p (type_18 C B A))) =>
                 term_30 A (x1_2:(sttfa.etap (sttfa.p (type_6 A))) =>
                            term_30 A (x2_3:
                                       (sttfa.etap (sttfa.p (type_6 A))) =>
                                       term_31 B (y1_4:
                                                  (sttfa.etap (sttfa.p (
                                                                 type_7 B))) =>
                                                  term_31 B (y2_5:
                                                             (sttfa.etap (
                                                                sttfa.p (
                                                                  type_7 B))) =>
                                                             term_77 B A y2_5 x2_3 y1_4 x1_2 (
                                                               term_53 C (
                                                                 term_55 C B A f_1 (
                                                                   term_78 A x2_3 x1_2) (
                                                                   term_79 B y2_5 y1_4)) (
                                                                 Data_2EList_2E_40 (
                                                                   sttfa.arrow (
                                                                    type_19 C) (
                                                                    sttfa.arrow (
                                                                    type_19 C) (
                                                                    type_19 C))) (
                                                                   term_55 C B A f_1 (
                                                                    term_73 A x1_2) (
                                                                    term_74 B y1_4)) (
                                                                   term_55 C B A f_1 (
                                                                    term_75 A x2_3) (
                                                                    term_76 B y2_5))))))))).


thm_17 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type =>
                                           sttfa.forallP (x1:sttfa.type =>
                                                          term_91 x x0 x1)))).



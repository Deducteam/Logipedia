
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


Data_2EUnit_2Eunit : sttfa.type.


def type_1 : sttfa.type := Data_2EUnit_2Eunit.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


def type_3 : sttfa.type := sttfa.bool.


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_2 A) type_3.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_3)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_4 A) type_3).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_3))
  :=
  A:sttfa.type =>
  term_0 A (f_1:(sttfa.etap (sttfa.p (type_2 A))) =>
            term_0 A (g_2:(sttfa.etap (sttfa.p (type_2 A))) =>
                      leibniz.eq (type_2 A) f_1 g_2)).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_1 x)).


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_3.


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) type_3)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_5 A) type_3).


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow type_1 (type_0 A).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (sttfa.arrow (type_6 A) type_3) type_3.


Data_2EBool_2E_3F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EUnit_2E_28_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_3 : sttfa.etap (sttfa.p type_1) := Data_2EUnit_2E_28_29 type_1.


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow (
                                                                type_6 x) type_3))))
  :=
  A:sttfa.type =>
  e_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  fn_2:(sttfa.etap (sttfa.p (type_6 A))) =>
  leibniz.eq (type_0 A) (fn_2 term_3) e_1.


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_3))
  :=
  A:sttfa.type =>
  term_2 A (e_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            Data_2EBool_2E_3F (type_7 A) (term_4 A e_1)).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_5 x)).


Data_2EBool_2E_3F_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_3))
  :=
  A:sttfa.type =>
  term_2 A (e_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            Data_2EBool_2E_3F_21 (type_7 A) (term_4 A e_1)).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_6 x)).


def type_8 : sttfa.type := sttfa.arrow type_1 type_3.


def type_9 : sttfa.type := sttfa.arrow type_8 type_3.


def term_7 :
  sttfa.etap (sttfa.p (sttfa.arrow type_9 type_3))
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_9 type_3).


def type_10 : sttfa.type := sttfa.arrow type_3 (sttfa.arrow type_3 type_3).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_8 :
  sttfa.etap (sttfa.p (sttfa.arrow type_8 type_8))
  :=
  p_1:(sttfa.etap (sttfa.p type_8)) => p_1.


def term_9 :
  sttfa.etap (sttfa.p (sttfa.arrow type_8 type_3))
  :=
  p_1:(sttfa.etap (sttfa.p type_8)) => term_8 p_1 term_3.


def term_10 :
  sttfa.etap (sttfa.p (sttfa.arrow type_8 type_8))
  :=
  p_1:(sttfa.etap (sttfa.p type_8)) =>
  x_2:(sttfa.etap (sttfa.p type_1)) => term_8 p_1 x_2.


def term_11 :
  sttfa.etap (sttfa.p (sttfa.arrow type_8 type_3))
  :=
  p_1:(sttfa.etap (sttfa.p type_8)) => Data_2EBool_2E_21 type_9 (term_10 p_1).


def term_12 :
  sttfa.etap (sttfa.p type_3)
  :=
  term_7 (p_1:(sttfa.etap (sttfa.p type_8)) =>
          Data_2EBool_2E_3D_3D_3E type_10 (term_9 p_1) (term_11 p_1)).


thm_3 : sttfa.eps term_12.


def term_13 : sttfa.etap (sttfa.p type_10) := leibniz.eq type_3.


def term_14 :
  sttfa.etap (sttfa.p type_3)
  :=
  term_7 (p_1:(sttfa.etap (sttfa.p type_8)) =>
          term_13 (term_11 p_1) (term_9 p_1)).


thm_4 : sttfa.eps term_14.


def term_15 :
  sttfa.etap (sttfa.p type_3)
  :=
  term_7 (p_1:(sttfa.etap (sttfa.p type_8)) =>
          term_13 (Data_2EBool_2E_3F type_9 (term_10 p_1)) (term_9 p_1)).


thm_5 : sttfa.eps term_15.



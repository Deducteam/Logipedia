
Number_2ENatural_2Enatural : sttfa.type.


def type_0 : sttfa.type := Number_2ENatural_2Enatural.


def type_1 : sttfa.type := sttfa.bool.


def type_2 : sttfa.type := sttfa.arrow type_0 type_1.


Data_2EBool_2E_21 : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_0 :
  sttfa.etap (sttfa.p (sttfa.arrow type_2 type_1))
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_2 type_1).


def term_1 :
  sttfa.etap (sttfa.p (sttfa.arrow type_1 (sttfa.arrow type_1 type_1)))
  :=
  leibniz.eq type_1.


def type_3 : sttfa.type := sttfa.arrow type_0 type_2.


relation_2Dnatural_2Ddef_2D1_2E26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def Number_2ENatural_2EisSuc :
  sttfa.etap (sttfa.p type_3)
  :=
  relation_2Dnatural_2Ddef_2D1_2E26 type_3.


def term_2 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  m_1:(sttfa.etap (sttfa.p type_0)) => m_1.


def term_3 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) => n_1.


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_4 :
  sttfa.etap (sttfa.p type_1)
  :=
  term_0 (m_1:(sttfa.etap (sttfa.p type_0)) =>
          term_0 (n_2:(sttfa.etap (sttfa.p type_0)) =>
                  term_1 (Number_2ENatural_2EisSuc (term_2 m_1) (term_3 n_2)) (
                    leibniz.eq type_0 (Number_2ENatural_2Esuc (sttfa.arrow type_0 type_0) (
                                         term_2 m_1)) (term_3 n_2)))).


thm_0 : sttfa.eps term_4.


def type_4 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_5 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_4 A) type_0.


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_4 A) type_1.


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_6 x) type_1)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_6 A) type_1).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_5 A) (sttfa.arrow (type_4 A) (type_6 A)).


def Relation_2Emeasure :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_7 x)))
  :=
  A:sttfa.type => relation_2Dnatural_2Ddef_2D1_2E26 (type_7 A).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) (type_5 x))))
  :=
  A:sttfa.type => m_1:(sttfa.etap (sttfa.p (type_5 A))) => m_1.


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_4 A))) => x_1.


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) (type_4 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_4 A))) => y_1.


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_4 x))).


def term_9 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_5 A) type_1) type_1) (
    m_1:(sttfa.etap (sttfa.p (type_5 A))) =>
    term_5 A (x_2:(sttfa.etap (sttfa.p (type_4 A))) =>
              term_5 A (y_3:(sttfa.etap (sttfa.p (type_4 A))) =>
                        term_1 (Relation_2Emeasure (type_4 A) (term_6 A m_1) (
                                  term_7 A x_2) (term_8 A y_3)) (Number_2ENatural_2E_3C type_3 (
                                                                   term_6 A m_1 (
                                                                    term_7 A x_2)) (
                                                                   term_6 A m_1 (
                                                                    term_8 A y_3)))))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_9 x)).



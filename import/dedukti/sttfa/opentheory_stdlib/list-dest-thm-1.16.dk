
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_1 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_2 : sttfa.type := sttfa.bool.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) type_2.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_2)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_3 A) type_2).


def type_4 : sttfa.type := sttfa.arrow type_2 type_2.


def type_5 : sttfa.type := sttfa.arrow type_2 type_4.


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_1 x))))
  :=
  A:sttfa.type => l_1:(sttfa.etap (sttfa.p (type_1 A))) => l_1.


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) type_2)))
  :=
  A:sttfa.type =>
  l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
  Data_2EList_2Enull (type_3 A) (term_1 A l_1).


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_1 x) (type_3 x))))
  :=
  A:sttfa.type => leibniz.eq (type_1 A).


Data_2EList_2E_5B_5D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_1 x)))
  :=
  A:sttfa.type => Data_2EList_2E_5B_5D (type_1 A).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            leibniz.eq type_2 (term_2 A l_1) (term_3 A (term_1 A l_1) (
                                                term_4 A))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_5 x)).


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_1 A) (type_1 A).


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (type_6 A).


Data_2EList_2Ecase_2E_5B_5D_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_7 x)))
  :=
  A:sttfa.type => Data_2EList_2E_3A_3A (type_7 A).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            term_3 A (Data_2EList_2Ecase_2E_5B_5D_2E_3A_3A (sttfa.arrow (
                                                              type_1 A) (
                                                              sttfa.arrow (
                                                                type_7 A) (
                                                                type_6 A))) (
                        term_4 A) (term_6 A) (term_1 A l_1)) (term_1 A l_1)).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_7 x)).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Ehead :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2Etail :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_2))
  :=
  A:sttfa.type =>
  term_0 A (l_1:(sttfa.etap (sttfa.p (type_1 A))) =>
            Data_2EBool_2E_3D_3D_3E type_5 (Data_2EBool_2E_7E type_4 (
                                              term_2 A l_1)) (term_3 A (
                                                                term_6 A (
                                                                  Data_2EList_2Ehead (
                                                                    sttfa.arrow (
                                                                    type_1 A) (
                                                                    type_0 A)) (
                                                                    term_1 A l_1)) (
                                                                  Data_2EList_2Etail (
                                                                    type_6 A) (
                                                                    term_1 A l_1))) (
                                                                term_1 A l_1))).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_8 x)).



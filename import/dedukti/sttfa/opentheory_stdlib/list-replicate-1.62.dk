
def type_0 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_1 : sttfa.type := sttfa.bool.


def type_2 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) type_1.


Data_2EBool_2E_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_0 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_2 x) type_1)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_2 A) type_1).


Data_2EList_2Elist : sttfa.type -> sttfa.type.


def type_3 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Data_2EList_2Elist (type_0 A).


def type_4 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_3 A) type_1.


def term_1 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_4 x))))
  :=
  A:sttfa.type => leibniz.eq (type_3 A).


Number_2ENatural_2Enatural : sttfa.type.


def type_5 : sttfa.type := Number_2ENatural_2Enatural.


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_0 A) (sttfa.arrow type_5 (type_3 A)).


list_2Dreplicate_2D1_2E62 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def Data_2EList_2Ereplicate :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_6 x)))
  :=
  A:sttfa.type => list_2Dreplicate_2D1_2E62 (type_6 A).


def term_2 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => x_1:(sttfa.etap (sttfa.p (type_0 A))) => x_1.


def term_3 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (sttfa.arrow type_5 (
                                                                type_3 x)))))
  :=
  A:sttfa.type =>
  x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
  Data_2EList_2Ereplicate (type_0 A) (term_2 A x_1).


Number_2ENatural_2Ezero :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_4 : sttfa.etap (sttfa.p type_5) := Number_2ENatural_2Ezero type_5.


Data_2EList_2E_5B_5D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_1 A (term_3 A x_1 term_4) (Data_2EList_2E_5B_5D (type_3 A))).


thm_0 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_5 x)).


def type_7 : sttfa.type := sttfa.arrow type_5 type_1.


def term_6 :
  sttfa.etap (sttfa.p (sttfa.arrow type_7 type_1))
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_7 type_1).


def type_8 : sttfa.type := sttfa.arrow type_5 type_7.


def term_7 : sttfa.etap (sttfa.p type_8) := leibniz.eq type_5.


Data_2EList_2Elength :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_5)))
  :=
  A:sttfa.type => Data_2EList_2Elength (sttfa.arrow (type_3 A) type_5).


def term_9 :
  sttfa.etap (sttfa.p (sttfa.arrow type_5 type_5))
  :=
  n_1:(sttfa.etap (sttfa.p type_5)) => n_1.


def term_10 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow type_5 (sttfa.arrow (
                                                            type_0 x) (
                                                            type_3 x)))))
  :=
  A:sttfa.type =>
  n_1:(sttfa.etap (sttfa.p type_5)) =>
  x_2:(sttfa.etap (sttfa.p (type_0 A))) => term_3 A x_2 (term_9 n_1).


def term_11 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_7 (term_8 A (term_10 A n_2 x_1)) (term_9 n_2))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_11 x)).


def type_9 : sttfa.type := sttfa.arrow type_1 type_1.


def type_10 : sttfa.type := sttfa.arrow type_1 type_9.


def term_12 : sttfa.etap (sttfa.p type_10) := leibniz.eq type_1.


Data_2EList_2Enull :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_13 :
  sttfa.etap (sttfa.p (sttfa.arrow type_5 type_1))
  :=
  n_1:(sttfa.etap (sttfa.p type_5)) => term_7 (term_9 n_1) term_4.


def term_14 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_12 (Data_2EList_2Enull (type_4 A) (term_10 A n_2 x_1)) (
                      term_13 n_2))).


thm_2 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_14 x)).


def type_11 : sttfa.type := sttfa.arrow type_5 type_5.


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EList_2E_3A_3A :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_15 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_1 A (term_3 A x_1 (Number_2ENatural_2Esuc type_11 (
                                              term_9 n_2))) (Data_2EList_2E_3A_3A (
                                                               sttfa.arrow (
                                                                 type_0 A) (
                                                                 sttfa.arrow (
                                                                   type_3 A) (
                                                                   type_3 A))) (
                                                               term_2 A x_1) (
                                                               term_10 A n_2 x_1)))).


thm_3 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_15 x)).


def type_12 : sttfa.type -> sttfa.type := B:sttfa.type => B.


def type_13 :
  sttfa.type -> sttfa.type -> sttfa.type
  :=
  B:sttfa.type => A:sttfa.type => sttfa.arrow (type_0 A) (type_12 B).


def type_14 :
  sttfa.type -> sttfa.type
  :=
  B:sttfa.type => Data_2EList_2Elist (type_12 B).


Data_2EList_2Emap :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_16 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type =>
                                            sttfa.p (sttfa.arrow (type_13 x x0) (
                                                       type_13 x x0)))))
  :=
  B:sttfa.type =>
  A:sttfa.type => f_1:(sttfa.etap (sttfa.p (type_13 B A))) => f_1.


def term_17 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.forallK (x0:sttfa.type => sttfa.p type_1)))
  :=
  B:sttfa.type =>
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (sttfa.arrow (type_13 B A) type_1) type_1) (
    f_1:(sttfa.etap (sttfa.p (type_13 B A))) =>
    term_0 A (x_2:(sttfa.etap (sttfa.p (type_0 A))) =>
              term_6 (n_3:(sttfa.etap (sttfa.p type_5)) =>
                      leibniz.eq (type_14 B) (Data_2EList_2Emap (sttfa.arrow (
                                                                   type_13 B A) (
                                                                   sttfa.arrow (
                                                                    type_3 A) (
                                                                    type_14 B))) (
                                                term_16 B A f_1) (term_10 A n_3 x_2)) (
                        Data_2EList_2Ereplicate (type_12 B) (term_16 B A f_1 (
                                                               term_2 A x_2)) (
                          term_9 n_3))))).


thm_4 :
  sttfa.eps (sttfa.forallP (x:sttfa.type =>
                            sttfa.forallP (x0:sttfa.type => term_17 x x0))).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_18 :
  sttfa.etap (sttfa.p (sttfa.arrow type_5 type_5))
  :=
  i_1:(sttfa.etap (sttfa.p type_5)) => i_1.


def term_19 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_2 x))))
  :=
  A:sttfa.type => leibniz.eq (type_0 A).


Data_2EList_2Enth :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_20 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_6 (i_3:(sttfa.etap (sttfa.p type_5)) =>
                            Data_2EBool_2E_3D_3D_3E type_10 (Number_2ENatural_2E_3C type_8 (
                                                               term_18 i_3) (
                                                               term_9 n_2)) (
                              term_19 A (Data_2EList_2Enth (sttfa.arrow (
                                                              type_3 A) (
                                                              sttfa.arrow type_5 (
                                                                type_0 A))) (
                                           term_10 A n_2 x_1) (term_18 i_3)) (
                                term_2 A x_1))))).


thm_5 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_20 x)).


Set_2Eset : sttfa.type -> sttfa.type.


def type_15 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => Set_2Eset (type_0 A).


Data_2EList_2EtoSet :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Data_2EBool_2Econd :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


Set_2E_7B_7D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_15 x)))
  :=
  A:sttfa.type => Set_2E_7B_7D (type_15 A).


Set_2Einsert :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_22 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    leibniz.eq (type_15 A) (Data_2EList_2EtoSet (sttfa.arrow (
                                                                   type_3 A) (
                                                                   type_15 A)) (
                                              term_10 A n_2 x_1)) (Data_2EBool_2Econd (
                                                                    sttfa.arrow type_1 (
                                                                    sttfa.arrow (
                                                                    type_15 A) (
                                                                    sttfa.arrow (
                                                                    type_15 A) (
                                                                    type_15 A)))) (
                                                                    term_13 n_2) (
                                                                    term_21 A) (
                                                                    Set_2Einsert (
                                                                    sttfa.arrow (
                                                                    type_0 A) (
                                                                    sttfa.arrow (
                                                                    type_15 A) (
                                                                    type_15 A))) (
                                                                    term_2 A x_1) (
                                                                    term_21 A))))).


thm_6 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_22 x)).


Number_2ENatural_2E_2B :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_23 :
  sttfa.etap (sttfa.p (sttfa.arrow type_5 type_11))
  :=
  Number_2ENatural_2E_2B (sttfa.arrow type_5 type_11).


def term_24 :
  sttfa.etap (sttfa.p (sttfa.arrow type_5 type_5))
  :=
  m_1:(sttfa.etap (sttfa.p type_5)) => m_1.


Data_2EList_2E_40 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_25 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (sttfa.arrow (
                                                                type_3 x) (
                                                                type_3 x)))))
  :=
  A:sttfa.type =>
  Data_2EList_2E_40 (sttfa.arrow (type_3 A) (sttfa.arrow (type_3 A) (
                                               type_3 A))).


def term_26 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (m_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_6 (n_3:(sttfa.etap (sttfa.p type_5)) =>
                            term_1 A (term_3 A x_1 (term_23 (term_24 m_2) (
                                                      term_9 n_3))) (
                              term_25 A (term_3 A x_1 (term_24 m_2)) (
                                term_10 A n_3 x_1))))).


thm_7 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_26 x)).


Data_2EList_2Emember :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_27 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_0 x) (type_0 x))))
  :=
  A:sttfa.type => y_1:(sttfa.etap (sttfa.p (type_0 A))) => y_1.


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_28 : sttfa.etap (sttfa.p type_10) := Data_2EBool_2E_2F_5C type_10.


Data_2EBool_2E_7E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_0 x))).


def term_29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_0 A (y_3:(sttfa.etap (sttfa.p (type_0 A))) =>
                              term_12 (Data_2EList_2Emember (sttfa.arrow (
                                                               type_0 A) (
                                                               type_4 A)) (
                                         term_27 A y_3) (term_10 A n_2 x_1)) (
                                term_28 (term_19 A (term_27 A y_3) (term_2 A x_1)) (
                                  Data_2EBool_2E_7E type_9 (term_13 n_2)))))).


thm_8 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_29 x)).


def term_30 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_4 x) type_1)))
  :=
  A:sttfa.type => Data_2EBool_2E_21 (sttfa.arrow (type_4 A) type_1).


def term_31 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => l1_1:(sttfa.etap (sttfa.p (type_3 A))) => l1_1.


def term_32 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) (type_3 x))))
  :=
  A:sttfa.type => l2_1:(sttfa.etap (sttfa.p (type_3 A))) => l2_1.


def term_33 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_5)))
  :=
  A:sttfa.type =>
  l1_1:(sttfa.etap (sttfa.p (type_3 A))) => term_8 A (term_31 A l1_1).


def term_34 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_3 x) type_5)))
  :=
  A:sttfa.type =>
  l2_1:(sttfa.etap (sttfa.p (type_3 A))) => term_8 A (term_32 A l2_1).


def term_35 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  term_0 A (x_1:(sttfa.etap (sttfa.p (type_0 A))) =>
            term_6 (n_2:(sttfa.etap (sttfa.p type_5)) =>
                    term_30 A (l1_3:(sttfa.etap (sttfa.p (type_3 A))) =>
                               term_30 A (l2_4:
                                          (sttfa.etap (sttfa.p (type_3 A))) =>
                                          term_12 (term_1 A (term_25 A (
                                                               term_31 A l1_3) (
                                                               term_32 A l2_4)) (
                                                     term_10 A n_2 x_1)) (
                                            term_28 (term_1 A (term_3 A x_1 (
                                                                 term_33 A l1_3)) (
                                                       term_31 A l1_3)) (
                                              term_28 (term_1 A (term_3 A x_1 (
                                                                   term_34 A l2_4)) (
                                                         term_32 A l2_4)) (
                                                term_7 (term_23 (term_33 A l1_3) (
                                                          term_34 A l2_4)) (
                                                  term_9 n_2)))))))).


thm_9 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_35 x)).



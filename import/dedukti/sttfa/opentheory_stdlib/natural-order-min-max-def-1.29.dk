
Number_2ENatural_2Enatural : sttfa.type.


def type_0 : sttfa.type := Number_2ENatural_2Enatural.


def type_1 : sttfa.type := sttfa.bool.


def type_2 : sttfa.type := sttfa.arrow type_0 type_1.


def type_3 : sttfa.type := sttfa.arrow type_2 type_1.


Data_2EBool_2E_21 : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_0 : sttfa.etap (sttfa.p type_3) := Data_2EBool_2E_21 type_3.


def type_4 : sttfa.type := sttfa.arrow type_0 type_2.


def term_1 : sttfa.etap (sttfa.p type_4) := leibniz.eq type_0.


def type_5 : sttfa.type := sttfa.arrow type_0 (sttfa.arrow type_0 type_0).


natural_2Dorder_2Dmin_2Dmax_2Ddef_2D1_2E29 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_2 :
  sttfa.etap (sttfa.p type_5)
  :=
  natural_2Dorder_2Dmin_2Dmax_2Ddef_2D1_2E29 type_5.


def Number_2ENatural_2Emax : sttfa.etap (sttfa.p type_5) := term_2.


def term_3 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  m_1:(sttfa.etap (sttfa.p type_0)) => m_1.


def term_4 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) => n_1.


Data_2EBool_2Econd : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


Number_2ENatural_2E_3C_3D :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_5 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 (sttfa.arrow type_0 type_5)))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) =>
  m_2:(sttfa.etap (sttfa.p type_0)) =>
  Data_2EBool_2Econd (sttfa.arrow type_1 type_5) (Number_2ENatural_2E_3C_3D type_4 (
                                                    term_3 m_2) (term_4 n_1)).


def term_6 :
  sttfa.etap (sttfa.p type_1)
  :=
  term_0 (m_1:(sttfa.etap (sttfa.p type_0)) =>
          term_0 (n_2:(sttfa.etap (sttfa.p type_0)) =>
                  term_1 (Number_2ENatural_2Emax (term_3 m_1) (term_4 n_2)) (
                    term_5 n_2 m_1 (term_4 n_2) (term_3 m_1)))).


thm_0 : sttfa.eps term_6.


def Number_2ENatural_2Emin : sttfa.etap (sttfa.p type_5) := term_2.


def term_7 :
  sttfa.etap (sttfa.p type_1)
  :=
  term_0 (m_1:(sttfa.etap (sttfa.p type_0)) =>
          term_0 (n_2:(sttfa.etap (sttfa.p type_0)) =>
                  term_1 (Number_2ENatural_2Emin (term_3 m_1) (term_4 n_2)) (
                    term_5 n_2 m_1 (term_3 m_1) (term_4 n_2)))).


thm_1 : sttfa.eps term_7.


def type_6 : sttfa.type := sttfa.arrow type_1 type_1.


def type_7 : sttfa.type := sttfa.arrow type_1 type_6.


Data_2EBool_2E_3F : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_8 :
  sttfa.etap (sttfa.p (sttfa.arrow type_2 type_2))
  :=
  p_1:(sttfa.etap (sttfa.p type_2)) => p_1.


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def type_8 : sttfa.type := sttfa.arrow type_2 type_0.


def Number_2ENatural_2Eminimal :
  sttfa.etap (sttfa.p type_8)
  :=
  natural_2Dorder_2Dmin_2Dmax_2Ddef_2D1_2E29 type_8.


def term_9 :
  sttfa.etap (sttfa.p (sttfa.arrow type_2 type_0))
  :=
  p_1:(sttfa.etap (sttfa.p type_2)) =>
  Number_2ENatural_2Eminimal (term_8 p_1).


Data_2EBool_2E_3D_3D_3E :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


Number_2ENatural_2E_3C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


Data_2EBool_2E_7E : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_10 :
  sttfa.etap (sttfa.p type_1)
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_3 type_1) (p_1:
                                                 (sttfa.etap (sttfa.p type_2)) =>
                                                 leibniz.eq type_1 (Data_2EBool_2E_3F type_3 (
                                                                    n_2:
                                                                    (
                                                                    sttfa.etap (
                                                                    sttfa.p type_0)) =>
                                                                    term_8 p_1 (
                                                                    term_4 n_2))) (
                                                   Data_2EBool_2E_2F_5C type_7 (
                                                     term_8 p_1 (term_9 p_1)) (
                                                     term_0 (m_2:
                                                             (sttfa.etap (
                                                                sttfa.p type_0)) =>
                                                             Data_2EBool_2E_3D_3D_3E type_7 (
                                                               Number_2ENatural_2E_3C type_4 (
                                                                 term_3 m_2) (
                                                                 term_9 p_1)) (
                                                               Data_2EBool_2E_7E type_6 (
                                                                 term_8 p_1 (
                                                                   term_3 m_2))))))).


thm_2 : sttfa.eps term_10.




Number_2ENatural_2Enatural : sttfa.type.


def type_0 : sttfa.type := Number_2ENatural_2Enatural.


def type_1 : sttfa.type := sttfa.arrow type_0 sttfa.bool.


Data_2EBool_2E_21 : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def type_2 : sttfa.type := sttfa.arrow type_0 type_0.


natural_2Ddest_2Ddef_2D1_2E5 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def Number_2ENatural_2Epre :
  sttfa.etap (sttfa.p type_2)
  :=
  natural_2Ddest_2Ddef_2D1_2E5 type_2.


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_0 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) => n_1.


def term_1 :
  sttfa.etap (sttfa.p sttfa.bool)
  :=
  Data_2EBool_2E_21 (sttfa.arrow type_1 sttfa.bool) (n_1:
                                                     (sttfa.etap (sttfa.p type_0)) =>
                                                     leibniz.eq type_0 (
                                                       Number_2ENatural_2Epre (
                                                         Number_2ENatural_2Esuc type_2 (
                                                           term_0 n_1))) (
                                                       term_0 n_1)).


thm_0 : sttfa.eps term_1.



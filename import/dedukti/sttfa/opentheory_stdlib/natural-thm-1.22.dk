
Number_2ENatural_2Enatural : sttfa.type.


def type_0 : sttfa.type := Number_2ENatural_2Enatural.


def type_1 : sttfa.type := sttfa.bool.


def type_2 : sttfa.type := sttfa.arrow type_0 type_1.


def type_3 : sttfa.type := sttfa.arrow type_2 type_1.


Data_2EBool_2E_21 : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_0 : sttfa.etap (sttfa.p type_3) := Data_2EBool_2E_21 type_3.


def type_4 : sttfa.type := sttfa.arrow type_1 (sttfa.arrow type_1 type_1).


Data_2EBool_2E_5C_2F :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_1 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_2))
  :=
  m_1:(sttfa.etap (sttfa.p type_0)) => leibniz.eq type_0 m_1.


Number_2ENatural_2Ezero :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_2 : sttfa.etap (sttfa.p type_0) := Number_2ENatural_2Ezero type_0.


Data_2EBool_2E_3F : sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


Number_2ENatural_2Esuc :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p x)).


def term_3 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) => n_1.


def term_4 :
  sttfa.etap (sttfa.p (sttfa.arrow type_0 type_0))
  :=
  n_1:(sttfa.etap (sttfa.p type_0)) =>
  Number_2ENatural_2Esuc (sttfa.arrow type_0 type_0) (term_3 n_1).


def term_5 :
  sttfa.etap (sttfa.p type_1)
  :=
  term_0 (m_1:(sttfa.etap (sttfa.p type_0)) =>
          Data_2EBool_2E_5C_2F type_4 (term_1 m_1 term_2) (Data_2EBool_2E_3F type_3 (
                                                             n_2:
                                                             (sttfa.etap (
                                                                sttfa.p type_0)) =>
                                                             term_1 m_1 (
                                                               term_4 n_2)))).


thm_0 : sttfa.eps term_5.


def type_5 : sttfa.type -> sttfa.type := A:sttfa.type => A.


def type_6 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_5 A) type_1.


def type_7 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow type_0 (type_5 A).


def type_8 :
  sttfa.type -> sttfa.type
  :=
  A:sttfa.type => sttfa.arrow (type_5 A) (type_7 A).


Data_2EBool_2E_3F_21 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x))).


Data_2EBool_2E_2F_5C :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p (type_5 x))).


def term_6 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_5 x) (type_6 x))))
  :=
  A:sttfa.type => leibniz.eq (type_5 A).


def term_7 :
  sttfa.etap (sttfa.forallK (x:sttfa.type =>
                             sttfa.p (sttfa.arrow (type_7 x) (type_7 x))))
  :=
  A:sttfa.type => fn_1:(sttfa.etap (sttfa.p (type_7 A))) => fn_1.


def term_8 :
  sttfa.etap (sttfa.forallK (x:sttfa.type => sttfa.p type_1))
  :=
  A:sttfa.type =>
  Data_2EBool_2E_21 (sttfa.arrow (type_6 A) type_1) (e_1:
                                                     (sttfa.etap (sttfa.p (
                                                                    type_5 A))) =>
                                                     Data_2EBool_2E_21 (
                                                       sttfa.arrow (sttfa.arrow (
                                                                    type_8 A) type_1) type_1) (
                                                       f_2:
                                                       (sttfa.etap (sttfa.p (
                                                                    type_8 A))) =>
                                                       Data_2EBool_2E_3F_21 (
                                                         sttfa.arrow (
                                                           sttfa.arrow (
                                                             type_7 A) type_1) type_1) (
                                                         fn_3:
                                                         (sttfa.etap (
                                                            sttfa.p (
                                                              type_7 A))) =>
                                                         Data_2EBool_2E_2F_5C type_4 (
                                                           term_6 A (
                                                             term_7 A fn_3 term_2) e_1) (
                                                           term_0 (n_4:
                                                                   (sttfa.etap (
                                                                    sttfa.p type_0)) =>
                                                                   term_6 A (
                                                                    term_7 A fn_3 (
                                                                    term_4 n_4)) (
                                                                    f_2 (
                                                                    term_7 A fn_3 (
                                                                    term_3 n_4)) (
                                                                    term_3 n_4))))))).


thm_1 : sttfa.eps (sttfa.forallP (x:sttfa.type => term_8 x)).


